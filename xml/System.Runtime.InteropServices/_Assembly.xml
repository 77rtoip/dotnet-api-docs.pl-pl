<Type Name="_Assembly" FullName="System.Runtime.InteropServices._Assembly">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df84fbf4f1ac5642296790498938834ec7ffa626" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52239588" /></Metadata><TypeSignature Language="C#" Value="public interface _Assembly" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract _Assembly" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices._Assembly" />
  <TypeSignature Language="VB.NET" Value="Public Interface _Assembly" />
  <TypeSignature Language="C++ CLI" Value="public interface class _Assembly" />
  <TypeSignature Language="F#" Value="type _Assembly = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("17156360-2F1A-384A-BC52-FDE93C215C5B")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.Assembly))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("17156360-2f1a-384a-bc52-fde93c215c5b")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a3557-101">Udostępnia publiczne elementy członkowskie <see cref="T:System.Reflection.Assembly" /> klasy do kodu niezarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-101">Exposes the public members of the <see cref="T:System.Reflection.Assembly" /> class to unmanaged code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-102">Ten interfejs jest dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-102">This interface is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-103">Ten interfejs zachowuje vtable kolejności <xref:System.Reflection.Assembly?displayProperty=nameWithType> elementy członkowskie, które mogą być udostępniane przez niezarządzane obiekty COM klasy.</span><span class="sxs-lookup"><span data-stu-id="a3557-103">This interface preserves the vtable order of the <xref:System.Reflection.Assembly?displayProperty=nameWithType> class members that can be accessed by unmanaged COM objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.Assembly" />
  </Docs>
  <Members>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeBase : string" Usage="System.Runtime.InteropServices._Assembly.CodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3557-104">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Reflection.Assembly.CodeBase" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3557-104">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.CodeBase" /> property.</span></span></summary>
        <value><span data-ttu-id="a3557-105">Lokalizacja zestawu oryginalnie określony.</span><span class="sxs-lookup"><span data-stu-id="a3557-105">The location of the assembly as specified originally.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-106">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-106">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-107"><xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> Właściwości pobiera lokalizację zestawu początkowo określonych, na przykład w <xref:System.Reflection.AssemblyName> obiektu.</span><span class="sxs-lookup"><span data-stu-id="a3557-107">The <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> property gets the location of the assembly as specified originally, for example, in an <xref:System.Reflection.AssemblyName> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.CodeBase" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3557-108">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.Assembly.CreateInstance" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-108">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.CreateInstance" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-109">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-109">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-110"><xref:System.Reflection.Assembly.CreateInstance%2A> Metody zlokalizować typu z tego zestawu i Utwórz wystąpienie obiektu przy użyciu aktywatora systemu.</span><span class="sxs-lookup"><span data-stu-id="a3557-110">The <xref:System.Reflection.Assembly.CreateInstance%2A> methods locate a type from this assembly and create an instance of it using the system activator.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.CreateInstance" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string -&gt; obj" Usage="_Assembly.CreateInstance typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="a3557-111"><see cref="P:System.Type.FullName" /> Typu do zlokalizowania.</span><span class="sxs-lookup"><span data-stu-id="a3557-111">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <summary><span data-ttu-id="a3557-112">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.CreateInstance(System.String)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-112">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-113">Wystąpienie <see cref="T:System.Object" /> reprezentujący typ, za pomocą atrybutów kultury, argumenty, integratorów modeli i aktywacji, wartość <see langword="null" />, i <see cref="T:System.Reflection.BindingFlags" /> publicznego lub wystąpienia, lub <see langword="null" /> Jeśli <paramref name="typeName" /> nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="a3557-113">An instance of <see cref="T:System.Object" /> representing the type, with culture, arguments, binder, and activation attributes set to <see langword="null" />, and <see cref="T:System.Reflection.BindingFlags" /> set to Public or Instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-114">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-114">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-115"><xref:System.Reflection.Assembly.CreateInstance%2A> Metoda lokalizuje określonego typu z tego zestawu i tworzy jego wystąpienie przy użyciu aktywatora systemu, korzystania z wyszukiwania z uwzględnieniem wielkości liter.</span><span class="sxs-lookup"><span data-stu-id="a3557-115">The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.CreateInstance(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * bool -&gt; obj" Usage="_Assembly.CreateInstance (typeName, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="a3557-116"><see cref="P:System.Type.FullName" /> Typu do zlokalizowania.</span><span class="sxs-lookup"><span data-stu-id="a3557-116">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="a3557-117"><see langword="true" /> ignorowanie wielkości liter nazwy typu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-117"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a3557-118">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-118">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-119">Wystąpienie <see cref="T:System.Object" /> reprezentujący typ, za pomocą atrybutów kultury, argumenty, integratorów modeli i aktywacji, wartość <see langword="null" />, i <see cref="T:System.Reflection.BindingFlags" /> publicznego lub wystąpienia, lub <see langword="null" /> Jeśli <paramref name="typeName" /> nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="a3557-119">An instance of <see cref="T:System.Object" /> representing the type, with culture, arguments, binder, and activation attributes set to <see langword="null" />, and <see cref="T:System.Reflection.BindingFlags" /> set to Public or Instance, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-120">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-120">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-121"><xref:System.Reflection.Assembly.CreateInstance%2A> Metoda lokalizuje określonego typu z tego zestawu i tworzy wystąpienie klasy przy użyciu aktywatora systemu za pomocą opcjonalnych wyszukiwania uwzględniana wielkość liter.</span><span class="sxs-lookup"><span data-stu-id="a3557-121">The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="_Assembly.CreateInstance (typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="a3557-122"><see cref="P:System.Type.FullName" /> Typu do zlokalizowania.</span><span class="sxs-lookup"><span data-stu-id="a3557-122">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="a3557-123"><see langword="true" /> ignorowanie wielkości liter nazwy typu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-123"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="a3557-124">Maska bitów, która wpływa na to, jak jest prowadzone wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="a3557-124">A bitmask that affects how the search is conducted.</span></span> <span data-ttu-id="a3557-125">Wartość jest kombinacja flag bitowych z <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-125">The value is a combination of bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="binder"><span data-ttu-id="a3557-126">Typy obiektu, który umożliwia wiązanie, wymuszanie argumentów, wywoływania członków i pobieranie <see langword="MemberInfo" /> obiektów przy użyciu odbicia.</span><span class="sxs-lookup"><span data-stu-id="a3557-126">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span></span> <span data-ttu-id="a3557-127">Jeśli <paramref name="binder" /> jest <see langword="null" />, jest używany domyślny integrator.</span><span class="sxs-lookup"><span data-stu-id="a3557-127">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="a3557-128">Tablica typu <see langword="Object" /> zawierającą argumenty do przekazania do konstruktora.</span><span class="sxs-lookup"><span data-stu-id="a3557-128">An array of type <see langword="Object" /> containing the arguments to be passed to the constructor.</span></span> <span data-ttu-id="a3557-129">Ta tablica argumentów musi być zgodny z liczby, kolejności i wpisz parametry konstruktora do wywołania.</span><span class="sxs-lookup"><span data-stu-id="a3557-129">This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</span></span> <span data-ttu-id="a3557-130">W razie potrzeby konstruktora domyślnego <paramref name="args" /> musi być pustą tablicą lub <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-130">If the default constructor is desired, <paramref name="args" /> must be an empty array or <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="a3557-131">Wystąpienie <see langword="CultureInfo" /> używane do sterowania wymuszanie typów.</span><span class="sxs-lookup"><span data-stu-id="a3557-131">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="a3557-132">Jeśli jest to <see langword="null" />, <see langword="CultureInfo" /> dla bieżącego wątku jest używana.</span><span class="sxs-lookup"><span data-stu-id="a3557-132">If this is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span></span> <span data-ttu-id="a3557-133">(Jest to konieczne przekonwertować <see langword="String" /> reprezentujący 1000- <see langword="Double" /> wartość, na przykład, ponieważ 1000 jest reprezentowany w inny sposób przez różnych kultur.)</span><span class="sxs-lookup"><span data-stu-id="a3557-133">(This is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, for example, since 1000 is represented differently by different cultures.)</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="a3557-134">Tablica typu <see langword="Object" /> zawierające jeden lub więcej atrybutów aktywacji, które mogą brać udział w aktywacji.</span><span class="sxs-lookup"><span data-stu-id="a3557-134">An array of type <see langword="Object" /> containing one or more activation attributes that can participate in the activation.</span></span> <span data-ttu-id="a3557-135">Przykładem atrybutu aktywacji jest:</span><span class="sxs-lookup"><span data-stu-id="a3557-135">An example of an activation attribute is:</span></span> 
<span data-ttu-id="a3557-136">URLAttribute (http://hostname/appname/objectURI)</span><span class="sxs-lookup"><span data-stu-id="a3557-136">URLAttribute(http://hostname/appname/objectURI)</span></span></param>
        <summary><span data-ttu-id="a3557-137">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-137">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-138">Wystąpienie <see langword="Object" /> odpowiadającą typowi i odpowiadających określonym kryteriom lub <see langword="null" /> Jeśli <paramref name="typeName" /> nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="a3557-138">An instance of <see langword="Object" /> representing the type and matching the specified criteria, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-139">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-139">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-140"><xref:System.Reflection.Assembly.CreateInstance%2A> Metoda lokalizuje określonego typu z tego zestawu i tworzy jego wystąpienie, przy użyciu aktywatora systemu za pomocą opcjonalnych wyszukiwania uwzględniana wielkość liter i o określonej kultury, argumentów i atrybutów powiązania i aktywacji.</span><span class="sxs-lookup"><span data-stu-id="a3557-140">The <xref:System.Reflection.Assembly.CreateInstance%2A> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryPoint : System.Reflection.MethodInfo" Usage="System.Runtime.InteropServices._Assembly.EntryPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3557-141">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Reflection.Assembly.EntryPoint" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3557-141">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.EntryPoint" /> property.</span></span></summary>
        <value><span data-ttu-id="a3557-142">A <see cref="T:System.Reflection.MethodInfo" /> obiekt, który reprezentuje punkt wejścia tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-142">A <see cref="T:System.Reflection.MethodInfo" /> object that represents the entry point of this assembly.</span></span> <span data-ttu-id="a3557-143">Jeśli zostanie znaleziony żaden punkt wejścia (na przykład, zestaw jest biblioteki DLL), <see langword="null" /> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="a3557-143">If no entry point is found (for example, the assembly is a DLL), <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-144">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-144">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-145"><xref:System.Reflection.Assembly.EntryPoint%2A> Właściwości pobiera punkt wejścia tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-145">The <xref:System.Reflection.Assembly.EntryPoint%2A> property gets the entry point of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.EntryPoint" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool" Usage="_Assembly.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="a3557-146"><see cref="T:System.Object" /> Do porównania z bieżącym <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-146">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="a3557-147">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Object.Equals(System.Object)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-147">Provides COM objects with version-independent access to the <see cref="M:System.Object.Equals(System.Object)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-148"><see langword="true" /> Jeśli określony <see cref="T:System.Object" /> jest taki sam, jak bieżący <see cref="T:System.Object" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-148"><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-149">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-149">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-150"><xref:System.Object.Equals%2A> Metoda określa, czy określony <xref:System.Object> jest taki sam, jak bieżący <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="a3557-150">The <xref:System.Object.Equals%2A> method determines whether the specified <xref:System.Object> is equal to the current <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapedCodeBase : string" Usage="System.Runtime.InteropServices._Assembly.EscapedCodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3557-151">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Reflection.Assembly.EscapedCodeBase" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3557-151">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.EscapedCodeBase" /> property.</span></span></summary>
        <value><span data-ttu-id="a3557-152">Jednolity identyfikator (URI) ze znakami ucieczki.</span><span class="sxs-lookup"><span data-stu-id="a3557-152">A Uniform Resource Identifier (URI) with escape characters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-153">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-153">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-154"><xref:System.Reflection.Assembly.EscapedCodeBase%2A> Właściwości pobiera identyfikator URI, w tym znaki ucieczki, który reprezentuje bazy kodu.</span><span class="sxs-lookup"><span data-stu-id="a3557-154">The <xref:System.Reflection.Assembly.EscapedCodeBase%2A> property gets the URI, including escape characters, that represents the codebase.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.EscapedCodeBase" />
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence" Usage="System.Runtime.InteropServices._Assembly.Evidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3557-155">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Reflection.Assembly.Evidence" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3557-155">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.Evidence" /> property.</span></span></summary>
        <value><span data-ttu-id="a3557-156"><see cref="T:System.Security.Policy.Evidence" /> Obiektu dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-156">An <see cref="T:System.Security.Policy.Evidence" /> object for this assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-157">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-157">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-158"><xref:System.Reflection.Assembly.Evidence%2A> Właściwości pobiera dowodów dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-158">The <xref:System.Reflection.Assembly.Evidence%2A> property gets the evidence for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Runtime.InteropServices._Assembly.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3557-159">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Reflection.Assembly.FullName" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3557-159">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.FullName" /> property.</span></span></summary>
        <value><span data-ttu-id="a3557-160">Wyświetlana nazwa zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-160">The display name of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-161">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-161">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-162"><xref:System.Reflection.Assembly.FullName%2A> Właściwości pobiera nazwę wyświetlaną zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-162">The <xref:System.Reflection.Assembly.FullName%2A> property gets the display name of the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.FullName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3557-163">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.Assembly.GetCustomAttributes" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-163">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetCustomAttributes" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-164">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-164">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-165"><xref:System.Reflection.Assembly.GetCustomAttributes%2A> Metody uzyskania tego zestawu atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a3557-165">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> methods get the custom attributes for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetCustomAttributes" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]" Usage="_Assembly.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="a3557-166">Ten argument jest ignorowany dla obiektów typu <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-166">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span></span></param>
        <summary><span data-ttu-id="a3557-167">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-167">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-168">Tablica typu <see langword="Object" /> zawierający atrybuty niestandardowe dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-168">An array of type <see langword="Object" /> containing the custom attributes for this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-169">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-169">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-170"><xref:System.Reflection.Assembly.GetCustomAttributes%2A> Metoda pobiera wszystkie atrybuty niestandardowe dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-170">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method gets all the custom attributes for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]" Usage="_Assembly.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="a3557-171"><see cref="T:System.Type" /> Dla której mają zostać zwrócone atrybutów niestandardowych.</span><span class="sxs-lookup"><span data-stu-id="a3557-171">The <see cref="T:System.Type" /> for which the custom attributes are to be returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="a3557-172">Ten argument jest ignorowany dla obiektów typu <see cref="T:System.Reflection.Assembly" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-172">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span></span></param>
        <summary><span data-ttu-id="a3557-173">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-173">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-174">Tablica typu <see cref="T:System.Object" /> zawierający atrybuty niestandardowe dla tego zestawu, określony przez <paramref name="attributeType" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-174">An array of type <see cref="T:System.Object" /> containing the custom attributes for this assembly as specified by <paramref name="attributeType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-175">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-175">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-176"><xref:System.Reflection.Assembly.GetCustomAttributes%2A> Metoda pobiera wszystkie atrybuty niestandardowe dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-176">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method gets all the custom attributes for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetExportedTypes : unit -&gt; Type[]" Usage="_Assembly.GetExportedTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3557-177">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetExportedTypes" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3557-177">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetExportedTypes" /> property.</span></span></summary>
        <returns><span data-ttu-id="a3557-178">Tablica <see cref="T:System.Type" /> obiektów reprezentujących typy zdefiniowane w tym zestawie, które są widoczne poza zestawem.</span><span class="sxs-lookup"><span data-stu-id="a3557-178">An array of <see cref="T:System.Type" /> objects that represent the types defined in this assembly that are visible outside the assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-179">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-179">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-180"><xref:System.Reflection.Assembly.GetExportedTypes%2A> Właściwości pobiera wyeksportowanego typy zdefiniowane w tym zestawie, które są widoczne poza zestawem.</span><span class="sxs-lookup"><span data-stu-id="a3557-180">The <xref:System.Reflection.Assembly.GetExportedTypes%2A> property gets the exported types defined in this assembly that are visible outside the assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetExportedTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetFile : string -&gt; System.IO.FileStream" Usage="_Assembly.GetFile name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a3557-181">Nazwa określonego pliku.</span><span class="sxs-lookup"><span data-stu-id="a3557-181">The name of the specified file.</span></span> <span data-ttu-id="a3557-182">Nie należy dołączać ścieżkę do pliku.</span><span class="sxs-lookup"><span data-stu-id="a3557-182">Do not include the path to the file.</span></span></param>
        <summary><span data-ttu-id="a3557-183">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetFile(System.String)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-183">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFile(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-184">A <see cref="T:System.IO.FileStream" /> dla określonego pliku lub <see langword="null" /> Jeśli plik nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="a3557-184">A <see cref="T:System.IO.FileStream" /> for the specified file, or <see langword="null" /> if the file is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-185">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-185">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-186"><xref:System.Reflection.Assembly.GetFile%2A> Metoda pobiera <xref:System.IO.FileStream> dla określonego pliku w tabeli plików manifestu zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-186">The <xref:System.Reflection.Assembly.GetFile%2A> method gets a <xref:System.IO.FileStream> for the specified file in the file table of the manifest of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetFile(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3557-187">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.Assembly.GetFiles" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-187">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetFiles" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-188">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-188">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-189"><xref:System.Reflection.Assembly.GetFiles%2A> Metody pobrać pliki znajdujące się w tabeli plików manifestu zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-189">The <xref:System.Reflection.Assembly.GetFiles%2A> methods get the files in the file table of an assembly manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetFiles" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileStream[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles () As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles();" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : unit -&gt; System.IO.FileStream[]" Usage="_Assembly.GetFiles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3557-190">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetFiles" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-190">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFiles" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-191">Tablica <see cref="T:System.IO.FileStream" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="a3557-191">An array of <see cref="T:System.IO.FileStream" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-192">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-192">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-193"><xref:System.Reflection.Assembly.GetFiles%2A> Metoda pobiera pliki znajdujące się w tabeli plików manifestu zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-193">The <xref:System.Reflection.Assembly.GetFiles%2A> method gets the files in the file table of an assembly manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetFiles" />
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetFiles : bool -&gt; System.IO.FileStream[]" Usage="_Assembly.GetFiles getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="a3557-194"><see langword="true" /> w tym moduły zasobów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-194"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a3557-195">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-195">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-196">Tablica <see cref="T:System.IO.FileStream" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="a3557-196">An array of <see cref="T:System.IO.FileStream" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-197">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-197">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-198"><xref:System.Reflection.Assembly.GetFiles%2A> Metoda pobiera pliki znajdujące się w tabeli plików manifestu zestawu, określania, czy mają zostać dołączone moduły zasobów.</span><span class="sxs-lookup"><span data-stu-id="a3557-198">The <xref:System.Reflection.Assembly.GetFiles%2A> method gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="_Assembly.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3557-199">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Object.GetHashCode" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-199">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetHashCode" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-200">Wartość skrótu dla bieżącego <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-200">A hash code for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-201">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-201">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-202"><xref:System.Object.GetHashCode%2A> Metody służy jako funkcji wyznaczania wartości skrótu dla określonego typu.</span><span class="sxs-lookup"><span data-stu-id="a3557-202">The <xref:System.Object.GetHashCode%2A> method serves as a hash function for a particular type.</span></span> <span data-ttu-id="a3557-203"><xref:System.Object.GetHashCode%2A> nadaje się do użytku w mieszania algorytmów i struktur danych, takich jak Tabela skrótów.</span><span class="sxs-lookup"><span data-stu-id="a3557-203"><xref:System.Object.GetHashCode%2A> is suitable for use in hashing algorithms and data structures like a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLoadedModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3557-204">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.Assembly.GetLoadedModules" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-204">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetLoadedModules" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-205">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-205">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-206"><xref:System.Reflection.Assembly.GetLoadedModules%2A> Metody Pobierz wszystkie załadowane moduły, które są częścią tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-206">The <xref:System.Reflection.Assembly.GetLoadedModules%2A> methods get all the loaded modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetLoadedModules" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetLoadedModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules();" />
      <MemberSignature Language="F#" Value="abstract member GetLoadedModules : unit -&gt; System.Reflection.Module[]" Usage="_Assembly.GetLoadedModules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3557-207">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetLoadedModules" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-207">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetLoadedModules" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-208">Tablica modułów.</span><span class="sxs-lookup"><span data-stu-id="a3557-208">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-209">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-209">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-210"><xref:System.Reflection.Assembly.GetLoadedModules%2A> Metoda pobiera wszystkie załadowane moduły, które są częścią tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-210">The <xref:System.Reflection.Assembly.GetLoadedModules%2A> method gets all the loaded modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetLoadedModules" />
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetLoadedModules : bool -&gt; System.Reflection.Module[]" Usage="_Assembly.GetLoadedModules getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="a3557-211"><see langword="true" /> w tym moduły zasobów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-211"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a3557-212">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-212">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-213">Tablica modułów.</span><span class="sxs-lookup"><span data-stu-id="a3557-213">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-214">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-214">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-215"><xref:System.Reflection.Assembly.GetLoadedModules%2A> Metoda pobiera wszystkie załadowane moduły, które są częścią tego zestawu, określania, czy mają zostać dołączone moduły zasobów.</span><span class="sxs-lookup"><span data-stu-id="a3557-215">The <xref:System.Reflection.Assembly.GetLoadedModules%2A> method gets all the loaded modules that are part of this assembly, specifying whether to include resource modules.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceInfo : string -&gt; System.Reflection.ManifestResourceInfo" Usage="_Assembly.GetManifestResourceInfo resourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="a3557-216">Wielkość liter nazwy zasobu.</span><span class="sxs-lookup"><span data-stu-id="a3557-216">The case-sensitive name of the resource.</span></span></param>
        <summary><span data-ttu-id="a3557-217">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-217">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-218">A <see cref="T:System.Reflection.ManifestResourceInfo" /> obiektu wypełniane informacjami o topologii zasobu lub <see langword="null" /> Jeśli zasób nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="a3557-218">A <see cref="T:System.Reflection.ManifestResourceInfo" /> object populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-219">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-219">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-220"><xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> Metoda zwraca informacje na temat sposobu danego zasobu zostały utrwalone.</span><span class="sxs-lookup"><span data-stu-id="a3557-220">The <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> method returns information about how the given resource has been persisted.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceNames : unit -&gt; string[]" Usage="_Assembly.GetManifestResourceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3557-221">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-221">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-222">Tablica typu <see langword="String" /> zawierającą nazwy wszystkich zasobów.</span><span class="sxs-lookup"><span data-stu-id="a3557-222">An array of type <see langword="String" /> containing the names of all the resources.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-223">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-223">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-224"><xref:System.Reflection.Assembly.GetManifestResourceNames%2A> Metoda zwraca nazwy wszystkich zasobów, w tym zestawie.</span><span class="sxs-lookup"><span data-stu-id="a3557-224">The <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> method returns the names of all the resources in this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3557-225">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-225">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-226">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-226">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-227"><xref:System.Reflection.Assembly.GetManifestResourceStream%2A> Metody załadować określonego zasobu manifestu z tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-227">The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> methods load the specified manifest resource from this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceStream : string -&gt; System.IO.Stream" Usage="_Assembly.GetManifestResourceStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a3557-228">Wielkość liter nazwa manifestu żądanych zasobów.</span><span class="sxs-lookup"><span data-stu-id="a3557-228">The case-sensitive name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="a3557-229">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-229">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-230">A <see cref="T:System.IO.Stream" /> reprezentujący tego zasobu manifestu.</span><span class="sxs-lookup"><span data-stu-id="a3557-230">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-231">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-231">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-232"><xref:System.Reflection.Assembly.GetManifestResourceStream%2A> Metoda ładuje określonego zasobu manifestu z tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-232">The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method loads the specified manifest resource from this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetManifestResourceStream : Type * string -&gt; System.IO.Stream" Usage="_Assembly.GetManifestResourceStream (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a3557-233">Typ, w których przestrzeń nazw jest używana do określania zakresu nazwę zasobu manifestu.</span><span class="sxs-lookup"><span data-stu-id="a3557-233">The type whose namespace is used to scope the manifest resource name.</span></span></param>
        <param name="name"><span data-ttu-id="a3557-234">Wielkość liter nazwa manifestu żądanych zasobów.</span><span class="sxs-lookup"><span data-stu-id="a3557-234">The case-sensitive name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="a3557-235">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-235">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-236">A <see cref="T:System.IO.Stream" /> reprezentujący tego zasobu manifestu.</span><span class="sxs-lookup"><span data-stu-id="a3557-236">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-237">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-237">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-238"><xref:System.Reflection.Assembly.GetManifestResourceStream%2A> Metoda ładuje określonego zasobu manifestu w zakresie przestrzeni nazw określonego typu, w tym zestawie.</span><span class="sxs-lookup"><span data-stu-id="a3557-238">The <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetModule : string -&gt; System.Reflection.Module" Usage="_Assembly.GetModule name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a3557-239">Nazwa modułu żądanej.</span><span class="sxs-lookup"><span data-stu-id="a3557-239">The name of the module being requested.</span></span></param>
        <summary><span data-ttu-id="a3557-240">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetModule(System.String)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-240">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModule(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-241">Moduł zażądano, lub <see langword="null" /> Jeśli moduł nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="a3557-241">The module being requested, or <see langword="null" /> if the module is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-242">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-242">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-243"><xref:System.Reflection.Assembly.GetModule%2A> Metoda pobiera określonego modułu, w tym zestawie.</span><span class="sxs-lookup"><span data-stu-id="a3557-243">The <xref:System.Reflection.Assembly.GetModule%2A> method gets the specified module in this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetModule(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3557-244">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.Assembly.GetModules" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-244">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetModules" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-245">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-245">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-246"><xref:System.Reflection.Assembly.GetModules%2A> Metody Pobierz wszystkie moduły, które są częścią tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-246">The <xref:System.Reflection.Assembly.GetModules%2A> methods get all the modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetModules" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules();" />
      <MemberSignature Language="F#" Value="abstract member GetModules : unit -&gt; System.Reflection.Module[]" Usage="_Assembly.GetModules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3557-247">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetModules" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-247">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModules" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-248">Tablica modułów.</span><span class="sxs-lookup"><span data-stu-id="a3557-248">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-249">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-249">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-250"><xref:System.Reflection.Assembly.GetModules%2A> Metoda pobiera wszystkie moduły, które są częścią tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-250">The <xref:System.Reflection.Assembly.GetModules%2A> method gets all the modules that are part of this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetModules" />
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="abstract member GetModules : bool -&gt; System.Reflection.Module[]" Usage="_Assembly.GetModules getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="a3557-251"><see langword="true" /> w tym moduły zasobów; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-251"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a3557-252">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-252">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-253">Tablica modułów.</span><span class="sxs-lookup"><span data-stu-id="a3557-253">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-254">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-254">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-255"><xref:System.Reflection.Assembly.GetModules%2A> Metoda pobiera wszystkie moduły, które są częścią tego zestawu, określania, czy mają zostać dołączone moduły zasobów.</span><span class="sxs-lookup"><span data-stu-id="a3557-255">The <xref:System.Reflection.Assembly.GetModules%2A> method gets all the modules that are part of this assembly, specifying whether to include resource modules.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3557-256">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.Assembly.GetName" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-256">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetName" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-257">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-257">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-258"><xref:System.Reflection.Assembly.GetName%2A> Uzyskać metody <xref:System.Reflection.AssemblyName> dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-258">The <xref:System.Reflection.Assembly.GetName%2A> methods get an <xref:System.Reflection.AssemblyName> for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetName" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName GetName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName () As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::AssemblyName ^ GetName();" />
      <MemberSignature Language="F#" Value="abstract member GetName : unit -&gt; System.Reflection.AssemblyName" Usage="_Assembly.GetName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3557-259">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetName" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-259">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetName" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-260"><see cref="T:System.Reflection.AssemblyName" /> Dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-260">An <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-261">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-261">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-262"><xref:System.Reflection.Assembly.GetName%2A> Metoda pobiera <xref:System.Reflection.AssemblyName> dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-262">The <xref:System.Reflection.Assembly.GetName%2A> method gets an <xref:System.Reflection.AssemblyName> for this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetName" />
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberSignature Language="F#" Value="abstract member GetName : bool -&gt; System.Reflection.AssemblyName" Usage="_Assembly.GetName copiedName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName"><span data-ttu-id="a3557-263"><see langword="true" /> Aby ustawić <see cref="P:System.Reflection.Assembly.CodeBase" /> do lokalizacji zestawów po kopie w tle woluminów; <see langword="false" /> można ustawić <see cref="P:System.Reflection.Assembly.CodeBase" /> do oryginalnej lokalizacji.</span><span class="sxs-lookup"><span data-stu-id="a3557-263"><see langword="true" /> to set the <see cref="P:System.Reflection.Assembly.CodeBase" /> to the location of the assembly after it was shadow copied; <see langword="false" /> to set <see cref="P:System.Reflection.Assembly.CodeBase" /> to the original location.</span></span></param>
        <summary><span data-ttu-id="a3557-264">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetName(System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-264">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetName(System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-265"><see cref="T:System.Reflection.AssemblyName" /> Dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-265">An <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-266">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-266">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-267"><xref:System.Reflection.Assembly.GetName%2A> Metoda pobiera <xref:System.Reflection.AssemblyName> dla tego zestawu, określony przez ustawienie kodu `copiedName` parametru.</span><span class="sxs-lookup"><span data-stu-id="a3557-267">The <xref:System.Reflection.Assembly.GetName%2A> method gets an <xref:System.Reflection.AssemblyName> for this assembly, setting the codebase as specified by the `copiedName` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetName(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="_Assembly.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="a3557-268">Obiekt, który ma zostać wypełniony informacjami o serializacji.</span><span class="sxs-lookup"><span data-stu-id="a3557-268">The object to be populated with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="a3557-269">Kontekst docelowego serializacji.</span><span class="sxs-lookup"><span data-stu-id="a3557-269">The destination context of the serialization.</span></span></param>
        <summary><span data-ttu-id="a3557-270">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-270">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-271">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-271">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-272"><xref:System.Reflection.Assembly.GetObjectData%2A> Metoda pobiera informacje o serializacji wszystkie dane potrzebne do reinstantiate tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-272">The <xref:System.Reflection.Assembly.GetObjectData%2A> method gets serialization information with all of the data needed to reinstantiate this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a3557-273">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="a3557-273">requires full trust for the immediate caller.</span></span> <span data-ttu-id="a3557-274">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="a3557-274">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedAssemblies : unit -&gt; System.Reflection.AssemblyName[]" Usage="_Assembly.GetReferencedAssemblies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3557-275">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetReferencedAssemblies" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-275">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetReferencedAssemblies" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-276">Tablica typu <see cref="T:System.Reflection.AssemblyName" /> zawierający wszystkie zestawy, które są przywoływane przez ten zestaw.</span><span class="sxs-lookup"><span data-stu-id="a3557-276">An array of type <see cref="T:System.Reflection.AssemblyName" /> containing all the assemblies referenced by this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-277">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-277">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-278"><xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> Metoda pobiera <xref:System.Reflection.AssemblyName> obiektów dla wszystkich zestawów, które są przywoływane przez ten zestaw.</span><span class="sxs-lookup"><span data-stu-id="a3557-278">The <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> method gets the <xref:System.Reflection.AssemblyName> objects for all the assemblies referenced by this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetReferencedAssemblies" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3557-279">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-279">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-280">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-280">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-281"><xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> Metody pobieranie zestawu satelickiego.</span><span class="sxs-lookup"><span data-stu-id="a3557-281">The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> methods get the satellite assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteAssembly : System.Globalization.CultureInfo -&gt; System.Reflection.Assembly" Usage="_Assembly.GetSatelliteAssembly culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="a3557-282">Określonej kultury.</span><span class="sxs-lookup"><span data-stu-id="a3557-282">The specified culture.</span></span></param>
        <summary><span data-ttu-id="a3557-283">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-283">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-284">Zestawu satelickiego określony.</span><span class="sxs-lookup"><span data-stu-id="a3557-284">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-285">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-285">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-286"><xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> Metoda pobiera zestawu satelickiego dla określonej kultury.</span><span class="sxs-lookup"><span data-stu-id="a3557-286">The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> method gets the satellite assembly for the specified culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberSignature Language="F#" Value="abstract member GetSatelliteAssembly : System.Globalization.CultureInfo * Version -&gt; System.Reflection.Assembly" Usage="_Assembly.GetSatelliteAssembly (culture, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="a3557-287">Określonej kultury.</span><span class="sxs-lookup"><span data-stu-id="a3557-287">The specified culture.</span></span></param>
        <param name="version"><span data-ttu-id="a3557-288">Wersja zestawu satelickiego.</span><span class="sxs-lookup"><span data-stu-id="a3557-288">The version of the satellite assembly.</span></span></param>
        <summary><span data-ttu-id="a3557-289">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-289">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-290">Zestawu satelickiego określony.</span><span class="sxs-lookup"><span data-stu-id="a3557-290">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-291">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-291">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-292"><xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> Metoda pobiera określoną wersję zestawu satelickiego dla określonej kultury.</span><span class="sxs-lookup"><span data-stu-id="a3557-292">The <xref:System.Reflection.Assembly.GetSatelliteAssembly%2A> method gets the specified version of the satellite assembly for the specified culture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3557-293">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="Overload:System.Reflection.Assembly.GetType" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-293">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.GetType" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-294">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-294">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-295"><xref:System.Reflection.Assembly.GetType%2A> Uzyskać metody <xref:System.Type> obiekt, który reprezentuje określonego typu.</span><span class="sxs-lookup"><span data-stu-id="a3557-295">The <xref:System.Reflection.Assembly.GetType%2A> methods get the <xref:System.Type> object that represents the specified type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.GetType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType();" />
      <MemberSignature Language="F#" Value="abstract member GetType : unit -&gt; Type" Usage="_Assembly.GetType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3557-296">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Object.GetType" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-296">Provides COM objects with version-independent access to the <see cref="M:System.Object.GetType" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-297">Element <see cref="T:System.Type" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="a3557-297">A <see cref="T:System.Type" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-298">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-298">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-299"><xref:System.Object.GetType%2A> Metoda pobiera typ bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a3557-299">The <xref:System.Object.GetType%2A> method gets the type of the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetType" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string -&gt; Type" Usage="_Assembly.GetType name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a3557-300">Pełna nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="a3557-300">The full name of the type.</span></span></param>
        <summary><span data-ttu-id="a3557-301">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetType(System.String)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-301">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-302">A <see cref="T:System.Type" /> obiekt, który reprezentuje określoną klasę lub <see langword="null" /> Jeśli klasa nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="a3557-302">A <see cref="T:System.Type" /> object that represents the specified class, or <see langword="null" /> if the class is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-303">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-303">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-304"><xref:System.Reflection.Assembly.GetType%2A> Metoda pobiera <xref:System.Type> obiektu o określonej nazwie w wystąpieniu zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-304">The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string * bool -&gt; Type" Usage="_Assembly.GetType (name, throwOnError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a3557-305">Pełna nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="a3557-305">The full name of the type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="a3557-306"><see langword="true" /> Aby zgłosić wyjątek, jeśli typ nie zostanie odnaleziony; <see langword="false" /> do zwrócenia <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-306"><see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a3557-307">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-307">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-308">A <see cref="T:System.Type" /> obiekt, który reprezentuje określonej klasy.</span><span class="sxs-lookup"><span data-stu-id="a3557-308">A <see cref="T:System.Type" /> object that represents the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-309">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-309">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-310"><xref:System.Reflection.Assembly.GetType%2A> Metoda pobiera <xref:System.Type> obiektu o określonej nazwie w wystąpieniu zestawu i opcjonalnie zgłasza wyjątek, jeśli typ nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="a3557-310">The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance and optionally throws an exception if the type is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetType : string * bool * bool -&gt; Type" Usage="_Assembly.GetType (name, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a3557-311">Pełna nazwa typu.</span><span class="sxs-lookup"><span data-stu-id="a3557-311">The full name of the type.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="a3557-312"><see langword="true" /> Aby zgłosić wyjątek, jeśli typ nie zostanie odnaleziony; <see langword="false" /> do zwrócenia <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-312"><see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="a3557-313"><see langword="true" /> ignorowanie wielkości liter nazwy typu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-313"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a3557-314">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-314">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-315">A <see cref="T:System.Type" /> obiekt, który reprezentuje określonej klasy.</span><span class="sxs-lookup"><span data-stu-id="a3557-315">A <see cref="T:System.Type" /> object that represents the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-316">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-316">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-317"><xref:System.Reflection.Assembly.GetType%2A> Metoda pobiera <xref:System.Type> obiektu o określonej nazwie w wystąpieniu zestawu, z opcjami ignoruje wielkość liter i zostanie zgłoszony wyjątek, jeśli typ nie zostanie znaleziony.</span><span class="sxs-lookup"><span data-stu-id="a3557-317">The <xref:System.Reflection.Assembly.GetType%2A> method gets the <xref:System.Type> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberSignature Language="F#" Value="abstract member GetTypes : unit -&gt; Type[]" Usage="_Assembly.GetTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3557-318">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.GetTypes" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-318">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.GetTypes" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-319">Tablica typu <see cref="T:System.Type" /> zawierający obiekty, dla wszystkich typów, które są zdefiniowane w tym zestawie.</span><span class="sxs-lookup"><span data-stu-id="a3557-319">An array of type <see cref="T:System.Type" /> containing objects for all the types defined in this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-320">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-320">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-321"><xref:System.Reflection.Assembly.GetTypes%2A> Metoda pobiera typy zdefiniowane w tym zestawie.</span><span class="sxs-lookup"><span data-stu-id="a3557-321">The <xref:System.Reflection.Assembly.GetTypes%2A> method gets the types defined in this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetTypes" />
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GlobalAssemblyCache { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalAssemblyCache : bool" Usage="System.Runtime.InteropServices._Assembly.GlobalAssemblyCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3557-322">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Reflection.Assembly.GlobalAssemblyCache" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3557-322">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.GlobalAssemblyCache" /> property.</span></span></summary>
        <value><span data-ttu-id="a3557-323"><see langword="true" /> Jeśli zestaw został załadowany z pamięci podręcznej zestawów globalnych; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-323"><see langword="true" /> if the assembly was loaded from the global assembly cache; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-324">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-324">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-325"><xref:System.Reflection.Assembly.GlobalAssemblyCache%2A> Właściwości pobiera wartość wskazującą, czy zestaw został załadowany z pamięci podręcznej zestawów globalnych.</span><span class="sxs-lookup"><span data-stu-id="a3557-325">The <xref:System.Reflection.Assembly.GlobalAssemblyCache%2A> property gets a value indicating whether the assembly was loaded from the global assembly cache.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.GlobalAssemblyCache" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool" Usage="_Assembly.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="a3557-326"><see cref="T:System.Type" /> Atrybutu niestandardowego, który ma być sprawdzany dla tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-326">The <see cref="T:System.Type" /> of the custom attribute to be checked for this assembly.</span></span></param>
        <param name="inherit"><span data-ttu-id="a3557-327">Ten argument jest ignorowany w przypadku obiektów tego typu.</span><span class="sxs-lookup"><span data-stu-id="a3557-327">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="a3557-328">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-328">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-329"><see langword="true" /> Jeśli atrybut niestandardowy identyfikowane za pomocą określonego <see cref="T:System.Type" /> jest zdefiniowana; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a3557-329"><see langword="true" /> if a custom attribute identified by the specified <see cref="T:System.Type" /> is defined; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-330">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-330">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-331"><xref:System.Reflection.Assembly.IsDefined%2A> Metoda wskazuje, czy atrybut niestandardowy identyfikowane za pomocą określonego <xref:System.Type> jest zdefiniowana.</span><span class="sxs-lookup"><span data-stu-id="a3557-331">The <xref:System.Reflection.Assembly.IsDefined%2A> method indicates whether a custom attribute identified by the specified <xref:System.Type> is defined.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadModule">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a3557-332">Udostępnia obiekty COM niezależny od wersji dostęp do <see cref="Overload:System.Reflection.Assembly.LoadModule" /> elementów członkowskich.</span><span class="sxs-lookup"><span data-stu-id="a3557-332">Provides COM objects with version-independent access to the <see cref="Overload:System.Reflection.Assembly.LoadModule" /> members.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-333">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-333">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-334"><xref:System.Reflection.Assembly.LoadModule%2A> Członków załadować moduł wewnętrzny do tego zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-334">The <xref:System.Reflection.Assembly.LoadModule%2A> members load the module internal to this assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Reflection.Assembly.LoadModule" />
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule);" />
      <MemberSignature Language="F#" Value="abstract member LoadModule : string * byte[] -&gt; System.Reflection.Module" Usage="_Assembly.LoadModule (moduleName, rawModule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName"><span data-ttu-id="a3557-335">Nazwa modułu.</span><span class="sxs-lookup"><span data-stu-id="a3557-335">Name of the module.</span></span> <span data-ttu-id="a3557-336">Musi odpowiadać nazwa pliku, w tym zestawie manifeście.</span><span class="sxs-lookup"><span data-stu-id="a3557-336">Must correspond to a file name in this assembly's manifest.</span></span></param>
        <param name="rawModule"><span data-ttu-id="a3557-337">Tablica bajtów, która jest obrazem formacie coff, zawierające moduł emitowany lub zasobu.</span><span class="sxs-lookup"><span data-stu-id="a3557-337">A byte array that is a COFF-based image containing an emitted module, or a resource.</span></span></param>
        <summary><span data-ttu-id="a3557-338">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-338">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-339">Załadowanym Module.</span><span class="sxs-lookup"><span data-stu-id="a3557-339">The loaded Module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-340">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-340">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-341"><xref:System.Reflection.Assembly.LoadModule%2A> Metoda ładuje moduł wewnętrzny do tego zestawu za pomocą obrazu na podstawie wspólnej obiektu pliku formatu COFF zawierające moduł emitowany lub plik zasobów.</span><span class="sxs-lookup"><span data-stu-id="a3557-341">The <xref:System.Reflection.Assembly.LoadModule%2A> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte(), rawSymbolStore As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberSignature Language="F#" Value="abstract member LoadModule : string * byte[] * byte[] -&gt; System.Reflection.Module" Usage="_Assembly.LoadModule (moduleName, rawModule, rawSymbolStore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName"><span data-ttu-id="a3557-342">Nazwa modułu.</span><span class="sxs-lookup"><span data-stu-id="a3557-342">Name of the module.</span></span> <span data-ttu-id="a3557-343">Musi odpowiadać nazwa pliku, w tym zestawie manifeście.</span><span class="sxs-lookup"><span data-stu-id="a3557-343">Must correspond to a file name in this assembly's manifest.</span></span></param>
        <param name="rawModule"><span data-ttu-id="a3557-344">Tablica bajtów, która jest obrazem formacie coff, zawierające moduł emitowany lub zasobu.</span><span class="sxs-lookup"><span data-stu-id="a3557-344">A byte array that is a COFF-based image containing an emitted module, or a resource.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="a3557-345">Tablica bajtów zawierająca bajtów raw, reprezentujący symboli dla modułu.</span><span class="sxs-lookup"><span data-stu-id="a3557-345">A byte array containing the raw bytes representing the symbols for the module.</span></span> <span data-ttu-id="a3557-346">Musi być <see langword="null" /> Jeśli jest to plik zasobów.</span><span class="sxs-lookup"><span data-stu-id="a3557-346">Must be <see langword="null" /> if this is a resource file.</span></span></param>
        <summary><span data-ttu-id="a3557-347">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-347">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-348">Załadowanym module.</span><span class="sxs-lookup"><span data-stu-id="a3557-348">The loaded module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-349">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-349">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-350"><xref:System.Reflection.Assembly.LoadModule%2A> Metoda ładuje moduł wewnętrzny do tego zestawu za pomocą obrazu na podstawie wspólnej obiektu pliku formatu COFF zawierające moduł emitowany lub plik zasobów.</span><span class="sxs-lookup"><span data-stu-id="a3557-350">The <xref:System.Reflection.Assembly.LoadModule%2A> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file.</span></span> <span data-ttu-id="a3557-351">Bajtów raw, reprezentujący symboli dla modułu, również są ładowane.</span><span class="sxs-lookup"><span data-stu-id="a3557-351">The raw bytes representing the symbols for the module are also loaded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices._Assembly.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Location { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : string" Usage="System.Runtime.InteropServices._Assembly.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3557-352">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="P:System.Reflection.Assembly.Location" /> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a3557-352">Provides COM objects with version-independent access to the <see cref="P:System.Reflection.Assembly.Location" /> property.</span></span></summary>
        <value><span data-ttu-id="a3557-353">Lokalizację załadowanego pliku, który zawiera manifest.</span><span class="sxs-lookup"><span data-stu-id="a3557-353">The location of the loaded file that contains the manifest.</span></span> <span data-ttu-id="a3557-354">Jeśli załadowany plik został skopiowany w tle, lokalizacja jest plik po jego kopiowane w tle.</span><span class="sxs-lookup"><span data-stu-id="a3557-354">If the loaded file was shadow-copied, the location is that of the file after being shadow-copied.</span></span> <span data-ttu-id="a3557-355">Jeśli zestaw jest ładowany z tablicy bajtowej, takie jak czas za pomocą <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> przeciążenia metody, wartość zwracana jest pustym ciągiem ("").</span><span class="sxs-lookup"><span data-stu-id="a3557-355">If the assembly is loaded from a byte array, such as when using the <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> method overload, the value returned is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-356">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-356">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-357"><xref:System.Reflection.Assembly.Location%2A> Właściwości pobiera ścieżki lub Universal Naming Convention (UNC) lokalizację załadowanego pliku, który zawiera manifest.</span><span class="sxs-lookup"><span data-stu-id="a3557-357">The <xref:System.Reflection.Assembly.Location%2A> property gets the path or Universal Naming Convention (UNC) location of the loaded file that contains the manifest.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.Assembly.Location" />
      </Docs>
    </Member>
    <Member MemberName="ModuleResolve">
      <MemberSignature Language="C#" Value="event System.Reflection.ModuleResolveEventHandler ModuleResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Reflection.ModuleResolveEventHandler ModuleResolve" />
      <MemberSignature Language="DocId" Value="E:System.Runtime.InteropServices._Assembly.ModuleResolve" />
      <MemberSignature Language="VB.NET" Value="Event ModuleResolve As ModuleResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Reflection::ModuleResolveEventHandler ^ ModuleResolve;" />
      <MemberSignature Language="F#" Value="member this.ModuleResolve : System.Reflection.ModuleResolveEventHandler " Usage="member this.ModuleResolve : System.Reflection.ModuleResolveEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.ModuleResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a3557-358">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="E:System.Reflection.Assembly.ModuleResolve" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="a3557-358">Provides COM objects with version-independent access to the <see cref="E:System.Reflection.Assembly.ModuleResolve" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-359">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-359">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-360"><xref:System.Reflection.Assembly.ModuleResolve> Zdarzenie występuje, gdy moduł ładujący wspólnego języka środowiska uruchomieniowego klasy nie można rozpoznać odwołania do wewnętrznych modułu zestawu w normalny sposób.</span><span class="sxs-lookup"><span data-stu-id="a3557-360">The <xref:System.Reflection.Assembly.ModuleResolve> event occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="a3557-361">Wymaga pełnego zaufania do bezpośredniego obiektu wywołującego.</span><span class="sxs-lookup"><span data-stu-id="a3557-361">requires full trust for the immediate caller.</span></span> <span data-ttu-id="a3557-362">Ten element członkowski nie może być używany przez częściowo zaufany lub przejrzysty kod.</span><span class="sxs-lookup"><span data-stu-id="a3557-362">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="E:System.Reflection.Assembly.ModuleResolve" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices._Assembly.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string" Usage="_Assembly.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a3557-363">Zapewnia niezależny od wersji dostęp do obiektów COM <see cref="M:System.Reflection.Assembly.ToString" /> metody.</span><span class="sxs-lookup"><span data-stu-id="a3557-363">Provides COM objects with version-independent access to the <see cref="M:System.Reflection.Assembly.ToString" /> method.</span></span></summary>
        <returns><span data-ttu-id="a3557-364">Pełna nazwa zestawu lub nazwa klasy, jeśli nie można określić pełną nazwę zestawu.</span><span class="sxs-lookup"><span data-stu-id="a3557-364">The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a3557-365">Ta metoda umożliwia dostęp do klas zarządzanych z niezarządzanego kodu i nie powinna być wywoływana z kodu zarządzanego.</span><span class="sxs-lookup"><span data-stu-id="a3557-365">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span>  
  
 <span data-ttu-id="a3557-366"><xref:System.Reflection.Assembly.ToString%2A> Metoda zwraca pełną nazwę zestawu, nazywane również nazwę wyświetlaną.</span><span class="sxs-lookup"><span data-stu-id="a3557-366">The <xref:System.Reflection.Assembly.ToString%2A> method returns the full name of the assembly, also known as the display name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>
