<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a860e54877db0bc89d6b338d9efdd421ceeca392" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36659768" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="b72a9-101">Zawiera operatory matematyczne późnym wiązaniem, takich jak <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> i <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, która jest używana wewnętrznie przez kompilator Visual Basic.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b72a9-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-102">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-103">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-103">Required.</span>
          </span>
          <span data-ttu-id="b72a9-104">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-104">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-105">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-105">Required.</span>
          </span>
          <span data-ttu-id="b72a9-106">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-106">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-107">Reprezentuje Visual Basic operator dodawania (+).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-107">Represents the Visual Basic addition (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-108">Suma <paramref name="Left" /> i <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-108">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-109">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-109">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-110">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-110">Required.</span>
          </span>
          <span data-ttu-id="b72a9-111">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-111">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-112">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-112">Required.</span>
          </span>
          <span data-ttu-id="b72a9-113">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-113">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-114">Reprezentuje Visual Basic <see langword="And" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-114">Represents the Visual Basic <see langword="And" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-115">Dla <see langword="Boolean" /> operacji <see langword="True" /> Jeśli obie <paramref name="Left" /> i <paramref name="Right" /> obliczać <see langword="True" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-115">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="b72a9-116">Dla Operacje bitowe, 1, jeśli obie <paramref name="Left" /> i <paramref name="Right" /> oceny 1; w przeciwnym razie wartość 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-116">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-117">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-117">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-118">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-118">Required.</span>
          </span>
          <span data-ttu-id="b72a9-119">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-119">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-120">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-120">Required.</span>
          </span>
          <span data-ttu-id="b72a9-121">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-121">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-122">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-122">Required.</span>
          </span>
          <span data-ttu-id="b72a9-123">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-123">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-124">Reprezentuje operatory porównania języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-124">Represents Visual Basic comparison operators.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-125">
            <list type="table">
              <listheader>
                <term> Wartość </term>
                <description> warunku </description>
              </listheader>
              <item>
                <term> -1 </term>
                <description>
                  <paramref name="Left" /> jest mniejsza niż <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 0 </term>
                <description>
                  <paramref name="Left" /> i <paramref name="Right" /> są takie same.  </description>
              </item>
              <item>
                <term> 1 </term>
                <description>
                  <paramref name="Left" /> jest większa niż <paramref name="Right" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-125">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description>
                    <paramref name="Left" /> is less than <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description>
                    <paramref name="Left" /> and <paramref name="Right" /> are equal.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <paramref name="Left" /> is greater than <paramref name="Right" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-126">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-126">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-127">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-127">Required.</span>
          </span>
          <span data-ttu-id="b72a9-128">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-128">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-129">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-129">Required.</span>
          </span>
          <span data-ttu-id="b72a9-130">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-130">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-131">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-131">Required.</span>
          </span>
          <span data-ttu-id="b72a9-132">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-132">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-133">Reprezentuje Visual Basic operator równości (=).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-133">Represents the Visual Basic equal (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-134">
            <see langword="True" /> Jeśli <paramref name="Left" /> i <paramref name="Right" /> są równe; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-134">
              <see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-135">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-135">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-136">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-136">Required.</span>
          </span>
          <span data-ttu-id="b72a9-137">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-137">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-138">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-138">Required.</span>
          </span>
          <span data-ttu-id="b72a9-139">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-139">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-140">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-140">Required.</span>
          </span>
          <span data-ttu-id="b72a9-141">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-141">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-142">Reprezentuje większa Visual Basic-niż (&gt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-142">Represents the Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-143">
            <see langword="True" /> Jeśli <paramref name="Left" /> jest większa niż <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-143">
              <see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-144">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-144">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-145">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-145">Required.</span>
          </span>
          <span data-ttu-id="b72a9-146">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-146">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-147">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-147">Required.</span>
          </span>
          <span data-ttu-id="b72a9-148">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-148">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-149">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-149">Required.</span>
          </span>
          <span data-ttu-id="b72a9-150">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-150">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-151">Reprezentuje większa Visual Basic-niż lub równe do (&gt;=) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-151">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-152">
            <see langword="True" /> Jeśli <paramref name="Left" /> jest większa niż lub równa <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-152">
              <see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-153">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-153">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-154">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-154">Required.</span>
          </span>
          <span data-ttu-id="b72a9-155">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-155">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-156">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-156">Required.</span>
          </span>
          <span data-ttu-id="b72a9-157">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-157">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-158">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-158">Required.</span>
          </span>
          <span data-ttu-id="b72a9-159">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-159">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-160">Reprezentuje mniej Visual Basic-niż (&lt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-160">Represents the Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-161">
            <see langword="True" /> Jeśli <paramref name="Left" /> jest mniejsza niż <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-161">
              <see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-162">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-162">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-163">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-163">Required.</span>
          </span>
          <span data-ttu-id="b72a9-164">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-164">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-165">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-165">Required.</span>
          </span>
          <span data-ttu-id="b72a9-166">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-166">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-167">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-167">Required.</span>
          </span>
          <span data-ttu-id="b72a9-168">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-168">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-169">Reprezentuje mniej Visual Basic-niż lub równe do (&lt;=) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-169">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-170">
            <see langword="True" /> Jeśli <paramref name="Left" /> jest mniejsza niż lub równa <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-170">
              <see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-171">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-171">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-172">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-172">Required.</span>
          </span>
          <span data-ttu-id="b72a9-173">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-173">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-174">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-174">Required.</span>
          </span>
          <span data-ttu-id="b72a9-175">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-175">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-176">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-176">Required.</span>
          </span>
          <span data-ttu-id="b72a9-177">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-177">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-178">Reprezentuje Visual Basic — różne (&lt;&gt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-178">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-179">
            <see langword="True" /> Jeśli <paramref name="Left" /> nie jest równa <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-179">
              <see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-180">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-180">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-181">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-181">Required.</span>
          </span>
          <span data-ttu-id="b72a9-182">Wszelkie <see langword="String" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-182">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-183">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-183">Required.</span>
          </span>
          <span data-ttu-id="b72a9-184">Wszelkie <see langword="String" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-184">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-185">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-185">Required.</span>
          </span>
          <span data-ttu-id="b72a9-186">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-186">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-187">Przeprowadza porównanie ciągu tekst lub binarny, gdy dwa ciągi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-187">Performs binary or text string comparison when given two strings.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-188">
            <list type="table">
              <listheader>
                <term> Wartość </term>
                <description> warunku </description>
              </listheader>
              <item>
                <term> -1 </term>
                <description>
                  <paramref name="Left" /> jest mniejsza niż <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 0 </term>
                <description>
                  <paramref name="Left" /> jest równa <paramref name="Right" />.  </description>
              </item>
              <item>
                <term> 1 </term>
                <description>
                  <paramref name="Left" /> jest większa niż <paramref name="Right" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-188">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description>
                    <paramref name="Left" /> is less than <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description>
                    <paramref name="Left" /> is equal to <paramref name="Right" />.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <paramref name="Left" /> is greater than <paramref name="Right" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-189">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-189">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="b72a9-190">Operator równości Visual Basic służy do porównywania dwóch ciągów, przechodzą ciągi do <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> metody wraz z wartością `False` dla `TextCompare` argumentu.</span><span class="sxs-lookup"><span data-stu-id="b72a9-190">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="b72a9-191">Spowoduje to wykonanie porównania z uwzględnieniem wielkości liter, numer porządkowy lub oparte na bieżącej kultury, w zależności od wartości w instrukcji.</span><span class="sxs-lookup"><span data-stu-id="b72a9-191">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-192">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-192">Required.</span>
          </span>
          <span data-ttu-id="b72a9-193">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-193">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-194">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-194">Required.</span>
          </span>
          <span data-ttu-id="b72a9-195">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-195">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-196">Reprezentuje łączenia Visual Basic (&amp;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-196">Represents the Visual Basic concatenation (&amp;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-197">Ciąg reprezentujący połączenie <paramref name="Left" /> i <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-197">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-198">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-198">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-199">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-199">Required.</span>
          </span>
          <span data-ttu-id="b72a9-200">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-200">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-201">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-201">Required.</span>
          </span>
          <span data-ttu-id="b72a9-202">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-202">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-203">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-203">Required.</span>
          </span>
          <span data-ttu-id="b72a9-204">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-204">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-205">Reprezentuje Przeciążony operator równości (=) języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-205">Represents the overloaded Visual Basic equals (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-206">Wynik operatora równości przeciążona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-206">The result of the overloaded equals operator.</span>
          </span>
          <span data-ttu-id="b72a9-207">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-207">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-208">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-208">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-209">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-209">Required.</span>
          </span>
          <span data-ttu-id="b72a9-210">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-210">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-211">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-211">Required.</span>
          </span>
          <span data-ttu-id="b72a9-212">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-212">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-213">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-213">Required.</span>
          </span>
          <span data-ttu-id="b72a9-214">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-214">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-215">Reprezentuje przeciążone Visual Basic większa-niż (&gt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-215">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-216">Wynik przeciążone większa-niż operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-216">The result of the overloaded greater-than operator.</span>
          </span>
          <span data-ttu-id="b72a9-217">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-217">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-218">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-218">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-219">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-219">Required.</span>
          </span>
          <span data-ttu-id="b72a9-220">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-220">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-221">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-221">Required.</span>
          </span>
          <span data-ttu-id="b72a9-222">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-222">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-223">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-223">Required.</span>
          </span>
          <span data-ttu-id="b72a9-224">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-224">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-225">Reprezentuje przeciążone Visual Basic większa-niż lub równe do (&gt;=) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-225">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-226">Wynik przeciążone większa-niż lub operator równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-226">The result of the overloaded greater-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="b72a9-227">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-227">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-228">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-228">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-229">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-229">Required.</span>
          </span>
          <span data-ttu-id="b72a9-230">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-230">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-231">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-231">Required.</span>
          </span>
          <span data-ttu-id="b72a9-232">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-232">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-233">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-233">Required.</span>
          </span>
          <span data-ttu-id="b72a9-234">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-234">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-235">Reprezentuje mniej przeciążone Visual Basic-niż (&lt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-235">Represents the overloaded Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-236">Wynik przeciążone mniej-niż operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-236">The result of the overloaded less-than operator.</span>
          </span>
          <span data-ttu-id="b72a9-237">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-237">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-238">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-238">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-239">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-239">Required.</span>
          </span>
          <span data-ttu-id="b72a9-240">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-240">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-241">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-241">Required.</span>
          </span>
          <span data-ttu-id="b72a9-242">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-242">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-243">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-243">Required.</span>
          </span>
          <span data-ttu-id="b72a9-244">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-244">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-245">Reprezentuje mniej przeciążone Visual Basic — niż lub równe do (&lt;=) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-245">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-246">Wynik przeciążone mniej-niż lub operator równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-246">The result of the overloaded less-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="b72a9-247">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-247">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-248">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-248">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-249">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-249">Required.</span>
          </span>
          <span data-ttu-id="b72a9-250">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-250">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-251">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-251">Required.</span>
          </span>
          <span data-ttu-id="b72a9-252">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-252">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="b72a9-253">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-253">Required.</span>
          </span>
          <span data-ttu-id="b72a9-254">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-254">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-255">Reprezentuje przeciążone Visual Basic — różne (&lt;&gt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-255">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-256">Wynik Przeciążony operator równości nie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-256">The result of the overloaded not-equal operator.</span>
          </span>
          <span data-ttu-id="b72a9-257">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-257">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-258">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-258">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-259">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-259">Required.</span>
          </span>
          <span data-ttu-id="b72a9-260">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-260">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-261">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-261">Required.</span>
          </span>
          <span data-ttu-id="b72a9-262">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-262">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-263">Reprezentuje Visual Basic operator dzielenia (/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-263">Represents the Visual Basic division (/) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-264">Pełna iloraz <paramref name="Left" /> podzielona przez <paramref name="Right" />, w tym wszelkie pozostałe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-264">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-265">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-265">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-266">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-266">Required.</span>
          </span>
          <span data-ttu-id="b72a9-267">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-267">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-268">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-268">Required.</span>
          </span>
          <span data-ttu-id="b72a9-269">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-269">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-270">Reprezentuje operator wykładnik (^) języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-270">Represents the Visual Basic exponent (^) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-271">Wynik <paramref name="Left" /> podniesionej do potęgi równej <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-271">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-272">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-272">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" />
        <Parameter Name="Arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="vbOp">
          <span data-ttu-id="b72a9-273">Operator zdefiniowany przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-273">The user-defined operator.</span>
          </span>
        </param>
        <param name="Arguments">
          <span data-ttu-id="b72a9-274">Wartości argumentów, które zostaną przekazane do operatora zdefiniowanej przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-274">Argument values to pass to the user-defined operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-275">Wykonuje z późnym wiązaniem wersji ewaluacyjnej operatorem zdefiniowane przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-275">Executes a late-bound evaluation of a user-defined operator.</span>
          </span>
          <span data-ttu-id="b72a9-276">Ta metoda pomocnika nie jest przeznaczona do wywoływania bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-276">This helper method is not meant to be called directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-277">Wynik zwracany z operatorem zdefiniowanym przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-277">The result returned from the user-defined operator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-278">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-278">Required.</span>
          </span>
          <span data-ttu-id="b72a9-279">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-279">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-280">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-280">Required.</span>
          </span>
          <span data-ttu-id="b72a9-281">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-281">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-282">Reprezentuje dzielenie liczby całkowitej Visual Basic (\\) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-282">Represents the Visual Basic integer division (\\) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-283">Iloraz liczb całkowitych z <paramref name="Left" /> rozdzielonych <paramref name="Right" />, które odrzuca wszystkie pozostałe i zachowuje całkowitą część.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-283">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-284">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-284">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="b72a9-285">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-285">Required.</span>
          </span>
          <span data-ttu-id="b72a9-286">Całkowite wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-286">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="b72a9-287">Wzorca bitowego lekkie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-287">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="b72a9-288">Typ danych musi być typem całkowitym (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, lub <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-288">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="b72a9-289">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-289">Required.</span>
          </span>
          <span data-ttu-id="b72a9-290">Wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-290">Numeric expression.</span>
          </span>
          <span data-ttu-id="b72a9-291">Liczba bitów przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-291">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="b72a9-292">Typ danych musi być <see langword="Integer" /> lub rozszerzyć do <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-292">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-293">Reprezentuje Visual Basic arytmetyczne przesunięcie w lewo (&lt;&lt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-293">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-294">Całkowite wartość liczbowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-294">An integral numeric value.</span>
          </span>
          <span data-ttu-id="b72a9-295">Wynik przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-295">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="b72a9-296">Typ danych jest taki sam, jak te <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-296">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-297">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="b72a9-298">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-298">Required.</span>
          </span>
          <span data-ttu-id="b72a9-299">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-299">Any expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="b72a9-300">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-300">Required.</span>
          </span>
          <span data-ttu-id="b72a9-301">Wyrażenia ciągu zgodnych z Konwencją dopasowywanie do wzorca opisanego w operatora Like.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-301">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="b72a9-302">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-302">Required.</span>
          </span>
          <span data-ttu-id="b72a9-303">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> wartość, która określa, że operacja używany tekst lub binarny porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-303">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-304">Reprezentuje Visual Basic <see langword="Like" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-304">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-305">
            <see langword="True" /> Jeśli reprezentacja ciągu wartości <paramref name="Source" /> spełnia wzorzec, który jest zawarty w <paramref name="Pattern" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-305">
              <see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="b72a9-306">
            <see langword="True" /> Jeśli oba <paramref name="Source" /> i <paramref name="Pattern" /> są <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-306">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-307">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-307">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="b72a9-308">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-308">Required.</span>
          </span>
          <span data-ttu-id="b72a9-309">Wszelkie <see langword="String" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-309">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="b72a9-310">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-310">Required.</span>
          </span>
          <span data-ttu-id="b72a9-311">Wszelkie <see langword="String" /> wyrażeń zgodnych z opisanych w operatorze jak konwencje dopasowywanie do wzorca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-311">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="b72a9-312">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-312">Required.</span>
          </span>
          <span data-ttu-id="b72a9-313">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> wartość, która określa, że operacja używany tekst lub binarny porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-313">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-314">Reprezentuje Visual Basic <see langword="Like" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-314">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-315">
            <see langword="True" /> Jeśli wartość w <paramref name="Source" /> spełnia wzorzec, który jest zawarty w <paramref name="Pattern" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-315">
              <see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="b72a9-316">
            <see langword="True" /> Jeśli oba <paramref name="Source" /> i <paramref name="Pattern" /> są puste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-316">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-317">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-317">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-318">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-318">Required.</span>
          </span>
          <span data-ttu-id="b72a9-319">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-319">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-320">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-320">Required.</span>
          </span>
          <span data-ttu-id="b72a9-321">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-321">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-322">Reprezentuje Visual Basic <see langword="Mod" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-322">Represents the Visual Basic <see langword="Mod" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-323">Pozostałe po <paramref name="Left" /> przez <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-323">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-324">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-324">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-325">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-325">Required.</span>
          </span>
          <span data-ttu-id="b72a9-326">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-326">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-327">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-327">Required.</span>
          </span>
          <span data-ttu-id="b72a9-328">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-328">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-329">Reprezentuje Visual Basic mnożenia (\*) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-329">Represents the Visual Basic multiply (\*) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-330">Iloczyn <paramref name="Left" /> i <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-330">The product of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-331">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-331">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="b72a9-332">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-332">Required.</span>
          </span>
          <span data-ttu-id="b72a9-333">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-333">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-334">Reprezentuje jednoargumentowe języka Visual Basic minus (-) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-334">Represents the Visual Basic unary minus (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-335">Wartość ujemną <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-335">The negative value of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-336">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-336">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="b72a9-337">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-337">Required.</span>
          </span>
          <span data-ttu-id="b72a9-338">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-338">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-339">Reprezentuje Visual Basic <see langword="Not" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-339">Represents the Visual Basic <see langword="Not" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-340">Dla <see langword="Boolean" /> operacji <see langword="False" /> Jeśli <paramref name="Operand" /> jest <see langword="True" />; w przeciwnym razie <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-340">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="b72a9-341">Dla Operacje bitowe 1, gdy <paramref name="Operand" /> 0, a w przeciwnym razie 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-341">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-342">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-342">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-343">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-343">Required.</span>
          </span>
          <span data-ttu-id="b72a9-344">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-344">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-345">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-345">Required.</span>
          </span>
          <span data-ttu-id="b72a9-346">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-346">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-347">Reprezentuje Visual Basic <see langword="Or" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-347">Represents the Visual Basic <see langword="Or" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-348">Dla <see langword="Boolean" /> operacji <see langword="False" /> Jeśli obie <paramref name="Left" /> i <paramref name="Right" /> obliczać <see langword="False" />; w przeciwnym razie <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-348">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="b72a9-349">Dla Operacje bitowe, 0, jeśli obie <paramref name="Left" /> i <paramref name="Right" /> oceny 0; w przeciwnym razie wartość 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-349">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-350">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-350">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="b72a9-351">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-351">Required.</span>
          </span>
          <span data-ttu-id="b72a9-352">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-352">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-353">Reprezentuje Visual Basic operator jednoargumentowy plus (+).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-353">Represents the Visual Basic unary plus (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-354">Wartość <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-354">The value of <paramref name="Operand" />.</span>
          </span>
          <span data-ttu-id="b72a9-355">(Znak <paramref name="Operand" /> niezmieniona.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-355">(The sign of the <paramref name="Operand" /> is unchanged.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-356">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-356">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="b72a9-357">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-357">Required.</span>
          </span>
          <span data-ttu-id="b72a9-358">Całkowite wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-358">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="b72a9-359">Wzorca bitowego lekkie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-359">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="b72a9-360">Typ danych musi być typem całkowitym (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, lub <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-360">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="b72a9-361">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-361">Required.</span>
          </span>
          <span data-ttu-id="b72a9-362">Wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-362">Numeric expression.</span>
          </span>
          <span data-ttu-id="b72a9-363">Liczba bitów przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-363">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="b72a9-364">Typ danych musi być <see langword="Integer" /> lub rozszerzyć do <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-364">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-365">Reprezentuje Visual Basic arytmetyczne przesunięcie w prawo (&gt;&gt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-365">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-366">Całkowite wartość liczbowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-366">An integral numeric value.</span>
          </span>
          <span data-ttu-id="b72a9-367">Wynik przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-367">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="b72a9-368">Typ danych jest taki sam, jak te <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-368">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-369">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-369">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-370">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-370">Required.</span>
          </span>
          <span data-ttu-id="b72a9-371">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-371">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-372">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-372">Required.</span>
          </span>
          <span data-ttu-id="b72a9-373">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-373">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-374">Reprezentuje Visual Basic operator odejmowania (-).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-374">Represents the Visual Basic subtraction (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-375">Różnica między <paramref name="Left" /> i <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-375">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-376">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="b72a9-377">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-377">Required.</span>
          </span>
          <span data-ttu-id="b72a9-378">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-378">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="b72a9-379">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-379">Required.</span>
          </span>
          <span data-ttu-id="b72a9-380">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-380">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b72a9-381">Reprezentuje Visual Basic <see langword="Xor" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-381">Represents the Visual Basic <see langword="Xor" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b72a9-382">A <see langword="Boolean" /> lub wartość liczbowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-382">A <see langword="Boolean" /> or numeric value.</span>
          </span>
          <span data-ttu-id="b72a9-383">Aby uzyskać <see langword="Boolean" /> porównanie, wartość zwracana jest wykluczenie logiczne (wyłączne rozłączenie logiczne) z dwóch <see langword="Boolean" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-383">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          </span>
          <span data-ttu-id="b72a9-384">Dla Operacje bitowe (numeryczną) wartość zwracana jest wartość liczbową reprezentuje z bitowego wykluczenia dwa wzorce bit liczbowych (wyłączne z bitowego rozłączenia).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-384">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="b72a9-385">Aby uzyskać więcej informacji zobacz [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="b72a9-385">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b72a9-386">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="b72a9-386">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>