<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af2dd8a7ad836cfb8c02f81398f8f2b5a8c37ef5" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51319923" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6e30d-101">Zawiera operatory matematyczne z późnym wiązaniem, takich jak <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> i <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, której kompilator Visual Basic używa wewnętrznie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6e30d-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-102">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/operators/index.md">
      <span data-ttu-id="6e30d-103">Operatory (Visual Basic)</span>
      <span class="sxs-lookup">
        <span data-stu-id="6e30d-103">Operators (Visual Basic)</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-104">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-104">Required.</span>
          </span>
          <span data-ttu-id="6e30d-105">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-105">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-106">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-106">Required.</span>
          </span>
          <span data-ttu-id="6e30d-107">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-107">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-108">Reprezentuje operator dodawania (+) w języku Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-108">Represents the Visual Basic addition (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-109">Suma <paramref name="Left" /> i <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-109">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-110">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-110">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md">
          <span data-ttu-id="6e30d-111">+ — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-111">+ Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-112">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-112">Required.</span>
          </span>
          <span data-ttu-id="6e30d-113">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-113">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-114">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-114">Required.</span>
          </span>
          <span data-ttu-id="6e30d-115">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-115">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-116">Reprezentuje języka Visual Basic <see langword="And" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-116">Represents the Visual Basic <see langword="And" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-117">Dla <see langword="Boolean" /> operacji <see langword="True" /> Jeśli oba <paramref name="Left" /> i <paramref name="Right" /> zwrócić <see langword="True" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-117">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="6e30d-118">Dla operacji bitowej, 1, jeśli obie <paramref name="Left" /> i <paramref name="Right" /> oceny na 1; w przeciwnym razie 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-118">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-119">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md">
          <span data-ttu-id="6e30d-120">And — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-120">And Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-121">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-121">Required.</span>
          </span>
          <span data-ttu-id="6e30d-122">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-122">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-123">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-123">Required.</span>
          </span>
          <span data-ttu-id="6e30d-124">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-124">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-125">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-125">Required.</span>
          </span>
          <span data-ttu-id="6e30d-126">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-126">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-127">Reprezentuje operatory porównania języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-127">Represents Visual Basic comparison operators.</span>
          </span>
        </summary>
        <returns>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="6e30d-128">Wartość</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-128">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6e30d-129">Warunek</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-129">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="6e30d-130">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-130">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6e30d-131">
                  <paramref name="Left" /> jest mniejsza niż <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-131">
                    <paramref name="Left" /> is less than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="6e30d-132">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-132">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6e30d-133">
                  <paramref name="Left" /> i <paramref name="Right" /> są takie same.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-133">
                    <paramref name="Left" /> and <paramref name="Right" /> are equal.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="6e30d-134">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-134">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6e30d-135">
                  <paramref name="Left" /> jest większa niż <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-135">
                    <paramref name="Left" /> is greater than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-136">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="6e30d-137">Operatory porównania (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-137">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-138">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-138">Required.</span>
          </span>
          <span data-ttu-id="6e30d-139">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-139">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-140">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-140">Required.</span>
          </span>
          <span data-ttu-id="6e30d-141">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-141">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-142">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-142">Required.</span>
          </span>
          <span data-ttu-id="6e30d-143">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-143">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-144">Reprezentuje operator równości (=) języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-144">Represents the Visual Basic equal (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-145">
            <see langword="True" /> Jeśli <paramref name="Left" /> i <paramref name="Right" /> są równe; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-145">
              <see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-146">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="6e30d-147">Operatory porównania (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-147">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-148">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-148">Required.</span>
          </span>
          <span data-ttu-id="6e30d-149">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-149">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-150">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-150">Required.</span>
          </span>
          <span data-ttu-id="6e30d-151">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-151">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-152">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-152">Required.</span>
          </span>
          <span data-ttu-id="6e30d-153">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-153">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-154">Reprezentuje języka Visual Basic większą-niż (&gt;) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-154">Represents the Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-155">
            <see langword="True" /> Jeśli <paramref name="Left" /> jest większa niż <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-155">
              <see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-156">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-156">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="6e30d-157">Operatory porównania (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-157">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-158">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-158">Required.</span>
          </span>
          <span data-ttu-id="6e30d-159">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-159">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-160">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-160">Required.</span>
          </span>
          <span data-ttu-id="6e30d-161">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-161">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-162">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-162">Required.</span>
          </span>
          <span data-ttu-id="6e30d-163">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-163">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-164">Reprezentuje języka Visual Basic większą-niż lub równe do (&gt;=) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-164">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-165">
            <see langword="True" /> Jeśli <paramref name="Left" /> jest większa niż lub równa <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-165">
              <see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-166">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-166">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="6e30d-167">Operatory porównania (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-167">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-168">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-168">Required.</span>
          </span>
          <span data-ttu-id="6e30d-169">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-169">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-170">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-170">Required.</span>
          </span>
          <span data-ttu-id="6e30d-171">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-171">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-172">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-172">Required.</span>
          </span>
          <span data-ttu-id="6e30d-173">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-173">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-174">Reprezentuje języka Visual Basic mniej-niż (&lt;) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-174">Represents the Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-175">
            <see langword="True" /> Jeśli <paramref name="Left" /> jest mniejsza niż <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-175">
              <see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-176">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-176">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="6e30d-177">Operatory porównania (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-177">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-178">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-178">Required.</span>
          </span>
          <span data-ttu-id="6e30d-179">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-179">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-180">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-180">Required.</span>
          </span>
          <span data-ttu-id="6e30d-181">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-181">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-182">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-182">Required.</span>
          </span>
          <span data-ttu-id="6e30d-183">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-183">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-184">Reprezentuje języka Visual Basic mniej-niż lub równe do (&lt;=) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-184">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-185">
            <see langword="True" /> Jeśli <paramref name="Left" /> jest mniejsza niż lub równa <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-185">
              <see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-186">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-186">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="6e30d-187">Operatory porównania (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-187">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-188">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-188">Required.</span>
          </span>
          <span data-ttu-id="6e30d-189">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-189">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-190">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-190">Required.</span>
          </span>
          <span data-ttu-id="6e30d-191">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-191">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-192">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-192">Required.</span>
          </span>
          <span data-ttu-id="6e30d-193">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-193">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-194">Reprezentuje języka Visual Basic nie znaku równości (&lt;&gt;) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-194">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-195">
            <see langword="True" /> Jeśli <paramref name="Left" /> nie jest równa <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-195">
              <see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-196">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-196">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="6e30d-197">Operatory porównania (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-197">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-198">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-198">Required.</span>
          </span>
          <span data-ttu-id="6e30d-199">Wszelkie <see langword="String" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-199">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-200">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-200">Required.</span>
          </span>
          <span data-ttu-id="6e30d-201">Wszelkie <see langword="String" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-201">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-202">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-202">Required.</span>
          </span>
          <span data-ttu-id="6e30d-203">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-203">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-204">Wykonuje porównanie ciągu binarnej lub tekstowej, gdy dwa ciągi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-204">Performs binary or text string comparison when given two strings.</span>
          </span>
        </summary>
        <returns>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="6e30d-205">Wartość</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-205">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6e30d-206">Warunek</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-206">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="6e30d-207">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-207">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6e30d-208">
                  <paramref name="Left" /> jest mniejsza niż <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-208">
                    <paramref name="Left" /> is less than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="6e30d-209">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-209">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6e30d-210">
                  <paramref name="Left" /> jest równa <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-210">
                    <paramref name="Left" /> is equal to <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="6e30d-211">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-211">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="6e30d-212">
                  <paramref name="Left" /> jest większa niż <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="6e30d-212">
                    <paramref name="Left" /> is greater than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-213">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-213">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="6e30d-214">Gdy operator równości w języku Visual Basic służy do porównywania dwóch ciągów, przekazuje on ciągi, które <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> metoda wraz z wartością `False` dla `TextCompare` argumentu.</span><span class="sxs-lookup"><span data-stu-id="6e30d-214">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="6e30d-215">Spowoduje to wykonanie porównania uwzględniającego wielkość liter, numer porządkowy lub zależności od bieżącej kultury, w zależności od wartości w instrukcji.</span><span class="sxs-lookup"><span data-stu-id="6e30d-215">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md">
          <span data-ttu-id="6e30d-216">Operatory porównania (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-216">Comparison Operators (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-217">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-217">Required.</span>
          </span>
          <span data-ttu-id="6e30d-218">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-218">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-219">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-219">Required.</span>
          </span>
          <span data-ttu-id="6e30d-220">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-220">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-221">Reprezentuje łączenia języka Visual Basic (&amp;) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-221">Represents the Visual Basic concatenation (&amp;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-222">Ciąg reprezentujący łączenie <paramref name="Left" /> i <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-222">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-223">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-223">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md">
          <span data-ttu-id="6e30d-224">&amp; — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-224">&amp; Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-225">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-225">Required.</span>
          </span>
          <span data-ttu-id="6e30d-226">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-226">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-227">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-227">Required.</span>
          </span>
          <span data-ttu-id="6e30d-228">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-228">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-229">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-229">Required.</span>
          </span>
          <span data-ttu-id="6e30d-230">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-230">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-231">Reprezentuje przeciążonego operatora równości (=) w języku Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-231">Represents the overloaded Visual Basic equals (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-232">Wynik operatora equals przeciążona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-232">The result of the overloaded equals operator.</span>
          </span>
          <span data-ttu-id="6e30d-233">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-233">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-234">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-234">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md">
          <span data-ttu-id="6e30d-235">Procedury operatorów</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-235">Operator Procedures</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-236">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-236">Required.</span>
          </span>
          <span data-ttu-id="6e30d-237">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-237">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-238">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-238">Required.</span>
          </span>
          <span data-ttu-id="6e30d-239">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-239">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-240">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-240">Required.</span>
          </span>
          <span data-ttu-id="6e30d-241">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-241">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-242">Reprezentuje przeciążona Visual Basic większą-niż (&gt;) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-242">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-243">Wynik przeciążone większą-niż operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-243">The result of the overloaded greater-than operator.</span>
          </span>
          <span data-ttu-id="6e30d-244">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-244">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-245">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-245">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md">
          <span data-ttu-id="6e30d-246">Procedury operatorów</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-246">Operator Procedures</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-247">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-247">Required.</span>
          </span>
          <span data-ttu-id="6e30d-248">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-248">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-249">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-249">Required.</span>
          </span>
          <span data-ttu-id="6e30d-250">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-250">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-251">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-251">Required.</span>
          </span>
          <span data-ttu-id="6e30d-252">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-252">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-253">Reprezentuje przeciążona Visual Basic większą-niż lub równe do (&gt;=) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-253">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-254">Wynik przeciążone większą-niż lub operator równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-254">The result of the overloaded greater-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="6e30d-255">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-255">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-256">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-256">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md">
          <span data-ttu-id="6e30d-257">Procedury operatorów</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-257">Operator Procedures</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-258">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-258">Required.</span>
          </span>
          <span data-ttu-id="6e30d-259">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-259">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-260">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-260">Required.</span>
          </span>
          <span data-ttu-id="6e30d-261">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-261">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-262">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-262">Required.</span>
          </span>
          <span data-ttu-id="6e30d-263">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-263">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-264">Reprezentuje przeciążona języka Visual Basic mniej-niż (&lt;) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-264">Represents the overloaded Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-265">Wynik przeciążonej mniej-niż operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-265">The result of the overloaded less-than operator.</span>
          </span>
          <span data-ttu-id="6e30d-266">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-266">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-267">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-267">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md">
          <span data-ttu-id="6e30d-268">Procedury operatorów</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-268">Operator Procedures</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-269">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-269">Required.</span>
          </span>
          <span data-ttu-id="6e30d-270">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-270">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-271">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-271">Required.</span>
          </span>
          <span data-ttu-id="6e30d-272">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-272">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-273">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-273">Required.</span>
          </span>
          <span data-ttu-id="6e30d-274">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-274">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-275">Reprezentuje przeciążona języka Visual Basic mniej-niż lub równy (&lt;=) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-275">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-276">Wynik przeciążonej mniej-niż lub operator równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-276">The result of the overloaded less-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="6e30d-277">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-277">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-278">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-278">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md">
          <span data-ttu-id="6e30d-279">Procedury operatorów</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-279">Operator Procedures</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-280">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-280">Required.</span>
          </span>
          <span data-ttu-id="6e30d-281">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-281">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-282">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-282">Required.</span>
          </span>
          <span data-ttu-id="6e30d-283">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-283">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="6e30d-284">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-284">Required.</span>
          </span>
          <span data-ttu-id="6e30d-285">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-285">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-286">Reprezentuje przeciążona języka Visual Basic nie znaku równości (&lt;&gt;) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-286">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-287">Wynik Przeciążony operator nierówności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-287">The result of the overloaded not-equal operator.</span>
          </span>
          <span data-ttu-id="6e30d-288">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-288">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-289">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-289">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md">
          <span data-ttu-id="6e30d-290">Procedury operatorów</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-290">Operator Procedures</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-291">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-291">Required.</span>
          </span>
          <span data-ttu-id="6e30d-292">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-292">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-293">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-293">Required.</span>
          </span>
          <span data-ttu-id="6e30d-294">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-294">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-295">Reprezentuje operator dzielenia (/) języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-295">Represents the Visual Basic division (/) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-296">Pełne iloraz <paramref name="Left" /> podzielona przez <paramref name="Right" />, włączając wszelkie pozostałe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-296">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-297">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md">
          <span data-ttu-id="6e30d-298">/ — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-298">/ Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-299">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-299">Required.</span>
          </span>
          <span data-ttu-id="6e30d-300">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-300">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-301">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-301">Required.</span>
          </span>
          <span data-ttu-id="6e30d-302">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-302">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-303">Reprezentuje operatora potęgowania (^) języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-303">Represents the Visual Basic exponent (^) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-304">Wynik <paramref name="Left" /> podniesione do potęgi równej <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-304">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-305">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-305">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md">
          <span data-ttu-id="6e30d-306">^ — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-306">^ Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" />
        <Parameter Name="Arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="vbOp">
          <span data-ttu-id="6e30d-307">Operator zdefiniowany przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-307">The user-defined operator.</span>
          </span>
        </param>
        <param name="Arguments">
          <span data-ttu-id="6e30d-308">Wartości argumentów do przekazania do operatora zdefiniowanego przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-308">Argument values to pass to the user-defined operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-309">Wykonuje z późnym wiązaniem ocenę operatora zdefiniowanego przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-309">Executes a late-bound evaluation of a user-defined operator.</span>
          </span>
          <span data-ttu-id="6e30d-310">Ta metoda pomocnika nie jest przeznaczona do wywoływania bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-310">This helper method is not meant to be called directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-311">Wynik jest zwracany z operatora zdefiniowanego przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-311">The result returned from the user-defined operator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-312">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-312">Required.</span>
          </span>
          <span data-ttu-id="6e30d-313">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-313">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-314">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-314">Required.</span>
          </span>
          <span data-ttu-id="6e30d-315">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-315">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-316">Reprezentuje dzielenie liczby całkowitej języka Visual Basic (\\) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-316">Represents the Visual Basic integer division (\\) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-317">Iloraz liczb całkowitych z <paramref name="Left" /> podzielona przez <paramref name="Right" />, która odrzuca wszystkie pozostałe i zachowuje tylko część całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-317">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-318">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-318">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md">
          <span data-ttu-id="6e30d-319">\ — Operator</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-319">\ Operator</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="6e30d-320">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-320">Required.</span>
          </span>
          <span data-ttu-id="6e30d-321">Całkowite wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-321">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="6e30d-322">Wzorzec bitowy jest przesuwany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-322">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="6e30d-323">Typ danych musi być typem całkowitym (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, lub <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-323">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="6e30d-324">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-324">Required.</span>
          </span>
          <span data-ttu-id="6e30d-325">Wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-325">Numeric expression.</span>
          </span>
          <span data-ttu-id="6e30d-326">Liczba bitów do przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-326">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="6e30d-327">Typ danych musi być <see langword="Integer" /> lub mogą zostać poszerzone do <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-327">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-328">Reprezentuje języka Visual Basic arytmetyczne przesunięcie w lewo (&lt;&lt;) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-328">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-329">Całkowitą wartość liczbową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-329">An integral numeric value.</span>
          </span>
          <span data-ttu-id="6e30d-330">Wynik przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-330">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="6e30d-331">Typ danych jest taka sama jak w przypadku <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-331">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-332">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-332">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md">
          <span data-ttu-id="6e30d-333">&lt;&lt; — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-333">&lt;&lt; Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="6e30d-334">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-334">Required.</span>
          </span>
          <span data-ttu-id="6e30d-335">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-335">Any expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="6e30d-336">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-336">Required.</span>
          </span>
          <span data-ttu-id="6e30d-337">Wszystkie zgodne z konwencjami dopasowania do wzorca opisanego w takich jak Operator wyrażenia ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-337">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="6e30d-338">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-338">Required.</span>
          </span>
          <span data-ttu-id="6e30d-339">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> wartość, która określa, że operacja używają porównanie tekstowe lub binarne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-339">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-340">Reprezentuje języka Visual Basic <see langword="Like" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-340">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-341">
            <see langword="True" /> Jeśli ciąg reprezentujący wartość w <paramref name="Source" /> spełnia wzorzec, który jest zawarty w <paramref name="Pattern" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-341">
              <see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="6e30d-342">
            <see langword="True" /> Jeśli oba <paramref name="Source" /> i <paramref name="Pattern" /> są <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-342">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-343">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-343">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md">
          <span data-ttu-id="6e30d-344">Like — Operator</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-344">Like Operator</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="6e30d-345">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-345">Required.</span>
          </span>
          <span data-ttu-id="6e30d-346">Wszelkie <see langword="String" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-346">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="6e30d-347">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-347">Required.</span>
          </span>
          <span data-ttu-id="6e30d-348">Wszelkie <see langword="String" /> wyrażeń zgodnych z konwencjami dopasowania do wzorca opisanego w takich jak Operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-348">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="6e30d-349">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-349">Required.</span>
          </span>
          <span data-ttu-id="6e30d-350">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> wartość, która określa, że operacja używają porównanie tekstowe lub binarne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-350">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-351">Reprezentuje języka Visual Basic <see langword="Like" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-351">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-352">
            <see langword="True" /> Jeśli wartość w <paramref name="Source" /> spełnia wzorzec, który jest zawarty w <paramref name="Pattern" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-352">
              <see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="6e30d-353">
            <see langword="True" /> Jeśli oba <paramref name="Source" /> i <paramref name="Pattern" /> są puste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-353">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-354">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-354">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md">
          <span data-ttu-id="6e30d-355">Like — Operator</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-355">Like Operator</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-356">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-356">Required.</span>
          </span>
          <span data-ttu-id="6e30d-357">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-357">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-358">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-358">Required.</span>
          </span>
          <span data-ttu-id="6e30d-359">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-359">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-360">Reprezentuje języka Visual Basic <see langword="Mod" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-360">Represents the Visual Basic <see langword="Mod" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-361">Resztę po <paramref name="Left" /> jest dzielona przez <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-361">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-362">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-362">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md">
          <span data-ttu-id="6e30d-363">Mod — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-363">Mod Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-364">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-364">Required.</span>
          </span>
          <span data-ttu-id="6e30d-365">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-365">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-366">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-366">Required.</span>
          </span>
          <span data-ttu-id="6e30d-367">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-367">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-368">Reprezentuje języka Visual Basic należy pomnożyć — operator (\*).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-368">Represents the Visual Basic multiply (\*) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-369">Iloczyn <paramref name="Left" /> i <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-369">The product of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-370">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-370">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md">
          <span data-ttu-id="6e30d-371">\* Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-371">\* Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="6e30d-372">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-372">Required.</span>
          </span>
          <span data-ttu-id="6e30d-373">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-373">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-374">Reprezentuje minus (-) — operator jednoargumentowy języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-374">Represents the Visual Basic unary minus (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-375">Wartość ujemną <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-375">The negative value of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-376">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md">
          <span data-ttu-id="6e30d-377">- — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-377">- Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="6e30d-378">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-378">Required.</span>
          </span>
          <span data-ttu-id="6e30d-379">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-379">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-380">Reprezentuje języka Visual Basic <see langword="Not" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-380">Represents the Visual Basic <see langword="Not" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-381">Aby uzyskać <see langword="Boolean" /> operacji <see langword="False" /> Jeśli <paramref name="Operand" /> jest <see langword="True" />; w przeciwnym razie <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-381">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="6e30d-382">W przypadku operacji bitowej 1, jeśli <paramref name="Operand" /> jest 0; w przeciwnym razie 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-382">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-383">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-383">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md">
          <span data-ttu-id="6e30d-384">Not — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-384">Not Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-385">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-385">Required.</span>
          </span>
          <span data-ttu-id="6e30d-386">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-386">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-387">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-387">Required.</span>
          </span>
          <span data-ttu-id="6e30d-388">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-388">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-389">Reprezentuje języka Visual Basic <see langword="Or" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-389">Represents the Visual Basic <see langword="Or" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-390">Dla <see langword="Boolean" /> operacji <see langword="False" /> Jeśli oba <paramref name="Left" /> i <paramref name="Right" /> zwrócić <see langword="False" />; w przeciwnym razie <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-390">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="6e30d-391">W przypadku operacji bitowej 0, jeśli obie <paramref name="Left" /> i <paramref name="Right" /> obliczania do 0; w przeciwnym razie, 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-391">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-392">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-392">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md">
          <span data-ttu-id="6e30d-393">Or — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-393">Or Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="6e30d-394">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-394">Required.</span>
          </span>
          <span data-ttu-id="6e30d-395">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-395">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-396">Reprezentuje języka Visual Basic operator jednoargumentowy plus (+).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-396">Represents the Visual Basic unary plus (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-397">Wartość <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-397">The value of <paramref name="Operand" />.</span>
          </span>
          <span data-ttu-id="6e30d-398">(Znak <paramref name="Operand" /> nie ulega zmianie.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-398">(The sign of the <paramref name="Operand" /> is unchanged.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-399">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-399">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md">
          <span data-ttu-id="6e30d-400">+ — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-400">+ Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="6e30d-401">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-401">Required.</span>
          </span>
          <span data-ttu-id="6e30d-402">Całkowite wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-402">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="6e30d-403">Wzorzec bitowy jest przesuwany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-403">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="6e30d-404">Typ danych musi być typem całkowitym (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, lub <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-404">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="6e30d-405">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-405">Required.</span>
          </span>
          <span data-ttu-id="6e30d-406">Wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-406">Numeric expression.</span>
          </span>
          <span data-ttu-id="6e30d-407">Liczba bitów do przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-407">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="6e30d-408">Typ danych musi być <see langword="Integer" /> lub mogą zostać poszerzone do <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-408">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-409">Reprezentuje języka Visual Basic arytmetyczne przesunięcie w prawo (&gt;&gt;) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-409">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-410">Całkowitą wartość liczbową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-410">An integral numeric value.</span>
          </span>
          <span data-ttu-id="6e30d-411">Wynik przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-411">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="6e30d-412">Typ danych jest taka sama jak w przypadku <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-412">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-413">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-413">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md">
          <span data-ttu-id="6e30d-414">&gt;&gt; — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-414">&gt;&gt; Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-415">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-415">Required.</span>
          </span>
          <span data-ttu-id="6e30d-416">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-416">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-417">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-417">Required.</span>
          </span>
          <span data-ttu-id="6e30d-418">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-418">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-419">Reprezentuje operator odejmowania (-) języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-419">Represents the Visual Basic subtraction (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-420">Różnica między <paramref name="Left" /> i <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-420">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-421">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-421">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md">
          <span data-ttu-id="6e30d-422">- — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-422">- Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="6e30d-423">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-423">Required.</span>
          </span>
          <span data-ttu-id="6e30d-424">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-424">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="6e30d-425">Wymagana.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-425">Required.</span>
          </span>
          <span data-ttu-id="6e30d-426">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-426">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6e30d-427">Reprezentuje języka Visual Basic <see langword="Xor" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-427">Represents the Visual Basic <see langword="Xor" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6e30d-428">A <see langword="Boolean" /> lub wartość liczbową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-428">A <see langword="Boolean" /> or numeric value.</span>
          </span>
          <span data-ttu-id="6e30d-429">Aby uzyskać <see langword="Boolean" /> porównania, wartość zwracana jest wykluczenie logiczne (wyłączne rozłączenie logiczne) z dwóch <see langword="Boolean" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-429">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          </span>
          <span data-ttu-id="6e30d-430">Bitowe operacji (numeryczne) wartość zwracana jest wartość liczbową, która reprezentuje bitowe wykluczenie dwóch wzorców bitowych liczbowych (wyłączne bitowego rozłączenia).</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-430">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="6e30d-431">Aby uzyskać więcej informacji, zobacz <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor — Operator</see>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-431">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e30d-432">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="6e30d-432">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md">
          <span data-ttu-id="6e30d-433">Xor — Operator (Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="6e30d-433">Xor Operator (Visual Basic)</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>