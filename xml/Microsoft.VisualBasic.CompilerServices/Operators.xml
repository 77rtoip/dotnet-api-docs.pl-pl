<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9616e712f854a18d60700f2d87eb967f5295105a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69319531" /></Metadata><TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <TypeSignature Language="F#" Value="type Operators = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2fb12-101">Zapewnia opóźnione operatory matematyczne, takie jak <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> i <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, których kompilator Visual Basic używa wewnętrznie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-102">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <related type="Article" href="~/docs/visual-basic/language-reference/operators/index.md"><span data-ttu-id="2fb12-103">Operatory (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-103">Operators (Visual Basic)</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AddObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AddObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-104">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-104">Required.</span></span> <span data-ttu-id="2fb12-105">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-105">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-106">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-106">Required.</span></span> <span data-ttu-id="2fb12-107">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-107">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-108">Reprezentuje operator Visual Basic dodawania (+).</span><span class="sxs-lookup"><span data-stu-id="2fb12-108">Represents the Visual Basic addition (+) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-109">Suma <paramref name="Left" /> i <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-109">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-110">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-110">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="2fb12-111">+ — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-111">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member AndObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.AndObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-112">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-112">Required.</span></span> <span data-ttu-id="2fb12-113">Wyrażenie <see langword="Boolean" /> dowolne lub liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-113">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-114">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-114">Required.</span></span> <span data-ttu-id="2fb12-115">Wyrażenie <see langword="Boolean" /> dowolne lub liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-115">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-116">Reprezentuje operator Visual Basic <see langword="And" /> .</span><span class="sxs-lookup"><span data-stu-id="2fb12-116">Represents the Visual Basic <see langword="And" /> operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-117">W <see langword="Boolean" /> przypadku operacji <see langword="True" /> , jeśli <paramref name="Left" /> obie <paramref name="Right" /> i są <see langword="True" />oceniane do; <see langword="False" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-117">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="2fb12-118">W przypadku operacji bitowych 1, jeśli <paramref name="Left" /> oba <paramref name="Right" /> i są szacowane na 1; w przeciwnym razie 0.</span><span class="sxs-lookup"><span data-stu-id="2fb12-118">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-119">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-119">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/and-operator.md"><span data-ttu-id="2fb12-120">And — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-120">And Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObject : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObject (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Right" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="TextCompare" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-121">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-121">Required.</span></span> <span data-ttu-id="2fb12-122">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-122">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-123">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-123">Required.</span></span> <span data-ttu-id="2fb12-124">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-124">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-125">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-125">Required.</span></span> <span data-ttu-id="2fb12-126"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-126"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-127">Reprezentuje Visual Basic operatory porównania.</span><span class="sxs-lookup"><span data-stu-id="2fb12-127">Represents Visual Basic comparison operators.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="2fb12-128">Wartość</span><span class="sxs-lookup"><span data-stu-id="2fb12-128">Value</span></span> 
 </term>
              <description> <span data-ttu-id="2fb12-129">Warunek</span><span class="sxs-lookup"><span data-stu-id="2fb12-129">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="2fb12-130">-1</span><span class="sxs-lookup"><span data-stu-id="2fb12-130">-1</span></span> 
 </term>
              <description><span data-ttu-id="2fb12-131">
                <paramref name="Left" />jest mniejsze niż <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-131">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="2fb12-132">0</span><span class="sxs-lookup"><span data-stu-id="2fb12-132">0</span></span> 
 </term>
              <description><span data-ttu-id="2fb12-133">
                <paramref name="Left" />i <paramref name="Right" /> są równe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-133">
                <paramref name="Left" /> and <paramref name="Right" /> are equal.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="2fb12-134">1</span><span class="sxs-lookup"><span data-stu-id="2fb12-134">1</span></span> 
 </term>
              <description><span data-ttu-id="2fb12-135">
                <paramref name="Left" />jest większa niż <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-135">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-136">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-136">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="2fb12-137">Operatory porównania (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-137">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-138">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-138">Required.</span></span> <span data-ttu-id="2fb12-139">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-139">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-140">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-140">Required.</span></span> <span data-ttu-id="2fb12-141">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-141">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-142">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-142">Required.</span></span> <span data-ttu-id="2fb12-143"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-143"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-144">Reprezentuje operator Visual Basic równości (=).</span><span class="sxs-lookup"><span data-stu-id="2fb12-144">Represents the Visual Basic equal (=) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-145"><see langword="True" />Jeśli <paramref name="Left" /> i <paramref name="Right" /> sąrówne;<see langword="False" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-145"><see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-146">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="2fb12-147">Operatory porównania (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-147">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreater : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-148">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-148">Required.</span></span> <span data-ttu-id="2fb12-149">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-149">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-150">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-150">Required.</span></span> <span data-ttu-id="2fb12-151">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-151">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-152">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-152">Required.</span></span> <span data-ttu-id="2fb12-153"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-153"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-154">Reprezentuje operator Visual Basic większy niż (&gt;).</span><span class="sxs-lookup"><span data-stu-id="2fb12-154">Represents the Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-155"><see langword="True" />Jeśli <paramref name="Left" /> jest większa niż <paramref name="Right" />; w przeciwnym <see langword="False" />razie,.</span><span class="sxs-lookup"><span data-stu-id="2fb12-155"><see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-156">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-156">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="2fb12-157">Operatory porównania (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-157">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectGreaterEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-158">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-158">Required.</span></span> <span data-ttu-id="2fb12-159">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-159">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-160">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-160">Required.</span></span> <span data-ttu-id="2fb12-161">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-161">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-162">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-162">Required.</span></span> <span data-ttu-id="2fb12-163"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-163"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-164">Reprezentuje Visual Basic operator większości lub równości (&gt;=).</span><span class="sxs-lookup"><span data-stu-id="2fb12-164">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-165"><see langword="True" />Jeśli <paramref name="Left" /> jest większe lub <paramref name="Right" />równe; w przeciwnym razie, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-165"><see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-166">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-166">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="2fb12-167">Operatory porównania (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-167">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLess : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-168">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-168">Required.</span></span> <span data-ttu-id="2fb12-169">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-169">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-170">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-170">Required.</span></span> <span data-ttu-id="2fb12-171">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-171">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-172">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-172">Required.</span></span> <span data-ttu-id="2fb12-173"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-173"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-174">Reprezentuje operator Visual Basic mniejszej niż (&lt;).</span><span class="sxs-lookup"><span data-stu-id="2fb12-174">Represents the Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-175"><see langword="True" />Jeśli <paramref name="Left" /> jest mniejsza niż <paramref name="Right" />; w przeciwnym <see langword="False" />razie,.</span><span class="sxs-lookup"><span data-stu-id="2fb12-175"><see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-176">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-176">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="2fb12-177">Operatory porównania (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-177">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectLessEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-178">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-178">Required.</span></span> <span data-ttu-id="2fb12-179">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-179">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-180">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-180">Required.</span></span> <span data-ttu-id="2fb12-181">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-181">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-182">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-182">Required.</span></span> <span data-ttu-id="2fb12-183"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-183"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-184">Reprezentuje Visual Basic operator mniejszości lub równości (&lt;=).</span><span class="sxs-lookup"><span data-stu-id="2fb12-184">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-185"><see langword="True" />Jeśli <paramref name="Left" /> jest mniejsze lub <paramref name="Right" />równe; w przeciwnym razie, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-185"><see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-186">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-186">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="2fb12-187">Operatory porównania (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-187">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareObjectNotEqual : obj * obj * bool -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-188">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-188">Required.</span></span> <span data-ttu-id="2fb12-189">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-189">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-190">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-190">Required.</span></span> <span data-ttu-id="2fb12-191">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-191">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-192">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-192">Required.</span></span> <span data-ttu-id="2fb12-193"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-193"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-194">Reprezentuje operator Visual Basic nie równa się&lt;(&gt;).</span><span class="sxs-lookup"><span data-stu-id="2fb12-194">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-195"><see langword="True" />Jeśli <paramref name="Left" /> nie jest <paramref name="Right" />równe; w przeciwnym razie <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-195"><see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-196">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-196">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="2fb12-197">Operatory porównania (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-197">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member CompareString : string * string * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.Operators.CompareString (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-198">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-198">Required.</span></span> <span data-ttu-id="2fb12-199">Dowolne <see langword="String" /> wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-199">Any <see langword="String" /> expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-200">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-200">Required.</span></span> <span data-ttu-id="2fb12-201">Dowolne <see langword="String" /> wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-201">Any <see langword="String" /> expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-202">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-202">Required.</span></span> <span data-ttu-id="2fb12-203"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-203"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-204">Wykonuje porównanie ciągów binarnych lub tekstowych, gdy podawane są dwa ciągi.</span><span class="sxs-lookup"><span data-stu-id="2fb12-204">Performs binary or text string comparison when given two strings.</span></span></summary>
        <returns><list type="table">
            <listheader>
              <term> <span data-ttu-id="2fb12-205">Wartość</span><span class="sxs-lookup"><span data-stu-id="2fb12-205">Value</span></span> 
 </term>
              <description> <span data-ttu-id="2fb12-206">Warunek</span><span class="sxs-lookup"><span data-stu-id="2fb12-206">Condition</span></span> 
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="2fb12-207">-1</span><span class="sxs-lookup"><span data-stu-id="2fb12-207">-1</span></span> 
 </term>
              <description><span data-ttu-id="2fb12-208">
                <paramref name="Left" />jest mniejsze niż <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-208">
                <paramref name="Left" /> is less than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="2fb12-209">0</span><span class="sxs-lookup"><span data-stu-id="2fb12-209">0</span></span> 
 </term>
              <description><span data-ttu-id="2fb12-210">
                <paramref name="Left" />jest równe <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-210">
                <paramref name="Left" /> is equal to <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="2fb12-211">1</span><span class="sxs-lookup"><span data-stu-id="2fb12-211">1</span></span> 
 </term>
              <description><span data-ttu-id="2fb12-212">
                <paramref name="Left" />jest większa niż <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-212">
                <paramref name="Left" /> is greater than <paramref name="Right" />.</span></span>  
  
 </description>
            </item>
          </list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-213">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-213">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="2fb12-214">Gdy operator równości Visual Basic jest używany do porównywania dwóch ciągów, przekazuje ciągi do <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> metody oraz `False` wartość `TextCompare` argumentu.</span><span class="sxs-lookup"><span data-stu-id="2fb12-214">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="2fb12-215">Wykonuje to porównanie z uwzględnieniem wielkości liter, które jest porządkować lub w oparciu o bieżącą kulturę, w zależności od wartości instrukcji [Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md) .</span><span class="sxs-lookup"><span data-stu-id="2fb12-215">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the [Option Compare](~/docs/visual-basic/language-reference/statements/option-compare-statement.md) statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/comparison-operators.md"><span data-ttu-id="2fb12-216">Operatory porównania (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-216">Comparison Operators (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ConcatenateObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-217">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-217">Required.</span></span> <span data-ttu-id="2fb12-218">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-218">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-219">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-219">Required.</span></span> <span data-ttu-id="2fb12-220">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-220">Any expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-221">Reprezentuje operator łączenia Visual Basic (&amp;).</span><span class="sxs-lookup"><span data-stu-id="2fb12-221">Represents the Visual Basic concatenation (&amp;) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-222">Ciąg reprezentujący łączenie <paramref name="Left" /> i <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-222">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-223">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-223">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/concatenation-operator.md"><span data-ttu-id="2fb12-224">&amp;Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-224">&amp; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-225">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-225">Required.</span></span> <span data-ttu-id="2fb12-226">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-226">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-227">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-227">Required.</span></span> <span data-ttu-id="2fb12-228">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-228">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-229">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-229">Required.</span></span> <span data-ttu-id="2fb12-230"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-230"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-231">Reprezentuje przeciążony operator Visual Basic Equals (=).</span><span class="sxs-lookup"><span data-stu-id="2fb12-231">Represents the overloaded Visual Basic equals (=) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-232">Wynik przeciążonego operatora równości.</span><span class="sxs-lookup"><span data-stu-id="2fb12-232">The result of the overloaded equals operator.</span></span> <span data-ttu-id="2fb12-233"><see langword="False" />przeciążanie operatora nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-233"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-234">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-234">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="2fb12-235">Procedury operatorów</span><span class="sxs-lookup"><span data-stu-id="2fb12-235">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreater : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-236">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-236">Required.</span></span> <span data-ttu-id="2fb12-237">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-237">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-238">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-238">Required.</span></span> <span data-ttu-id="2fb12-239">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-239">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-240">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-240">Required.</span></span> <span data-ttu-id="2fb12-241"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-241"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-242">Reprezentuje przeciążony operator Visual Basic większy niż (&gt;).</span><span class="sxs-lookup"><span data-stu-id="2fb12-242">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-243">Wynik przeciążenia przeciążonego operatora wyższego niż.</span><span class="sxs-lookup"><span data-stu-id="2fb12-243">The result of the overloaded greater-than operator.</span></span> <span data-ttu-id="2fb12-244"><see langword="False" />przeciążanie operatora nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-244"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-245">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-245">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="2fb12-246">Procedury operatorów</span><span class="sxs-lookup"><span data-stu-id="2fb12-246">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectGreaterEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-247">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-247">Required.</span></span> <span data-ttu-id="2fb12-248">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-248">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-249">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-249">Required.</span></span> <span data-ttu-id="2fb12-250">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-250">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-251">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-251">Required.</span></span> <span data-ttu-id="2fb12-252"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-252"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-253">Reprezentuje przeciążony Visual Basic większym lub równym operatorowi (&gt;=).</span><span class="sxs-lookup"><span data-stu-id="2fb12-253">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-254">Wynik przeciążonego operatora większego niż lub równego.</span><span class="sxs-lookup"><span data-stu-id="2fb12-254">The result of the overloaded greater-than or equal-to operator.</span></span> <span data-ttu-id="2fb12-255"><see langword="False" />przeciążanie operatora nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-255"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-256">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-256">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="2fb12-257">Procedury operatorów</span><span class="sxs-lookup"><span data-stu-id="2fb12-257">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLess : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-258">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-258">Required.</span></span> <span data-ttu-id="2fb12-259">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-259">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-260">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-260">Required.</span></span> <span data-ttu-id="2fb12-261">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-261">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-262">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-262">Required.</span></span> <span data-ttu-id="2fb12-263"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-263"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-264">Reprezentuje przeciążony operator Visual Basic mniejszy niż (&lt;).</span><span class="sxs-lookup"><span data-stu-id="2fb12-264">Represents the overloaded Visual Basic less-than (&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-265">Wynik przeciążonego operatora mniejszego niż.</span><span class="sxs-lookup"><span data-stu-id="2fb12-265">The result of the overloaded less-than operator.</span></span> <span data-ttu-id="2fb12-266"><see langword="False" />przeciążanie operatora nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-266"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-267">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-267">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="2fb12-268">Procedury operatorów</span><span class="sxs-lookup"><span data-stu-id="2fb12-268">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectLessEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-269">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-269">Required.</span></span> <span data-ttu-id="2fb12-270">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-270">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-271">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-271">Required.</span></span> <span data-ttu-id="2fb12-272">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-272">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-273">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-273">Required.</span></span> <span data-ttu-id="2fb12-274"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-274"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-275">Przedstawia przeciążoną Visual Basic mniejszą lub równą operatorowi (&lt;=).</span><span class="sxs-lookup"><span data-stu-id="2fb12-275">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-276">Wynik przeciążonego operatora mniejszego lub równego.</span><span class="sxs-lookup"><span data-stu-id="2fb12-276">The result of the overloaded less-than or equal-to operator.</span></span> <span data-ttu-id="2fb12-277"><see langword="False" />przeciążanie operatora nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-277"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-278">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-278">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="2fb12-279">Procedury operatorów</span><span class="sxs-lookup"><span data-stu-id="2fb12-279">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ConditionalCompareObjectNotEqual : obj * obj * bool -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual (Left, Right, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-280">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-280">Required.</span></span> <span data-ttu-id="2fb12-281">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-281">Any expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-282">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-282">Required.</span></span> <span data-ttu-id="2fb12-283">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-283">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="2fb12-284">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-284">Required.</span></span> <span data-ttu-id="2fb12-285"><see langword="True" />Aby wykonać Porównywanie ciągów bez uwzględniania wielkości liter; w przeciwnym razie. <see langword="False" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-285"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-286">Reprezentuje przeciążony operator Visual Basic nie równa&lt;się (&gt;).</span><span class="sxs-lookup"><span data-stu-id="2fb12-286">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-287">Wynik przeciążenia nierównego operatora.</span><span class="sxs-lookup"><span data-stu-id="2fb12-287">The result of the overloaded not-equal operator.</span></span> <span data-ttu-id="2fb12-288"><see langword="False" />przeciążanie operatora nie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-288"><see langword="False" /> if operator overloading is not supported.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-289">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-289">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/procedures/operator-procedures.md"><span data-ttu-id="2fb12-290">Procedury operatorów</span><span class="sxs-lookup"><span data-stu-id="2fb12-290">Operator Procedures</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member DivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.DivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-291">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-291">Required.</span></span> <span data-ttu-id="2fb12-292">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-292">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-293">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-293">Required.</span></span> <span data-ttu-id="2fb12-294">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-294">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-295">Reprezentuje operator dzielenia Visual Basic (/).</span><span class="sxs-lookup"><span data-stu-id="2fb12-295">Represents the Visual Basic division (/) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-296">Pełny iloraz <paramref name="Left" /> podzielony przez <paramref name="Right" />, łącznie z dowolnymi resztami.</span><span class="sxs-lookup"><span data-stu-id="2fb12-296">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-297">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-297">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/floating-point-division-operator.md"><span data-ttu-id="2fb12-298">/ — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-298">/ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ExponentObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-299">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-299">Required.</span></span> <span data-ttu-id="2fb12-300">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-300">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-301">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-301">Required.</span></span> <span data-ttu-id="2fb12-302">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-302">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-303">Reprezentuje operator Visual Basic wykładnika (^).</span><span class="sxs-lookup"><span data-stu-id="2fb12-303">Represents the Visual Basic exponent (^) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-304">Wynik <paramref name="Left" /> podniesiony do <paramref name="Right" />potęgi.</span><span class="sxs-lookup"><span data-stu-id="2fb12-304">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-305">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-305">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/exponentiation-operators.md"><span data-ttu-id="2fb12-306">^ — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-306">^ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member FallbackInvokeUserDefinedOperator : obj * obj[] -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator (vbOp, Arguments)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] arguments);" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object FallbackInvokeUserDefinedOperator(object vbOp, object[] arguments) cil managed" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, arguments As Object()) As Object" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ arguments);" FrameworkAlternate="netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Arguments" Type="System.Object[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="vbOp"><span data-ttu-id="2fb12-307">Zdefiniowany przez użytkownika operator.</span><span class="sxs-lookup"><span data-stu-id="2fb12-307">The user-defined operator.</span></span></param>
        <param name="Arguments"><span data-ttu-id="2fb12-308">Wartości argumentów do przekazania do operatora zdefiniowanego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2fb12-308">Argument values to pass to the user-defined operator.</span></span></param>
        <param name="arguments">To be added.</param>
        <summary><span data-ttu-id="2fb12-309">Wykonuje ocenę z późnym wiązaniem operatora zdefiniowanego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2fb12-309">Executes a late-bound evaluation of a user-defined operator.</span></span> <span data-ttu-id="2fb12-310">Ta metoda pomocnika nie jest przeznaczona do wywoływania bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-310">This helper method is not meant to be called directly from your code.</span></span></summary>
        <returns><span data-ttu-id="2fb12-311">Wynik zwrócony przez operatora zdefiniowanego przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="2fb12-311">The result returned from the user-defined operator.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member IntDivideObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-312">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-312">Required.</span></span> <span data-ttu-id="2fb12-313">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-313">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-314">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-314">Required.</span></span> <span data-ttu-id="2fb12-315">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-315">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-316">Reprezentuje operator dzielenia liczby całkowitej Visual Basic\\().</span><span class="sxs-lookup"><span data-stu-id="2fb12-316">Represents the Visual Basic integer division (\\) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-317">Iloraz <paramref name="Left" /> liczby całkowitej podzielony przez <paramref name="Right" />, który odrzuca resztę i zachowuje tylko część całkowitą.</span><span class="sxs-lookup"><span data-stu-id="2fb12-317">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-318">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-318">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/integer-division-operator.md"><span data-ttu-id="2fb12-319">\ — Operator</span><span class="sxs-lookup"><span data-stu-id="2fb12-319">\ Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member LeftShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="2fb12-320">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-320">Required.</span></span> <span data-ttu-id="2fb12-321">Całkowite wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-321">Integral numeric expression.</span></span> <span data-ttu-id="2fb12-322">Wzorzec bitowy, który ma zostać przesunięty.</span><span class="sxs-lookup"><span data-stu-id="2fb12-322">The bit pattern to be shifted.</span></span> <span data-ttu-id="2fb12-323">Typ danych musi być typem całkowitym (<see langword="SByte" />, <see langword="Byte" />, <see langword="Integer" /> <see langword="UShort" /> <see langword="Short" /> <see langword="Long" />,,, <see langword="ULong" />, lub). <see langword="UInteger" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-323">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="2fb12-324">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-324">Required.</span></span> <span data-ttu-id="2fb12-325">Wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-325">Numeric expression.</span></span> <span data-ttu-id="2fb12-326">Liczba bitów do przesunięcia wzorca bitowego.</span><span class="sxs-lookup"><span data-stu-id="2fb12-326">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="2fb12-327">Typ danych musi być lub <see langword="Integer" /> być rozszerzony do <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-327">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-328">Reprezentuje operator przesunięcia w lewo Visual Basic&lt;(&lt;).</span><span class="sxs-lookup"><span data-stu-id="2fb12-328">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-329">Całkowita wartość liczbowa.</span><span class="sxs-lookup"><span data-stu-id="2fb12-329">An integral numeric value.</span></span> <span data-ttu-id="2fb12-330">Wynik przesunięcia wzorca bitowego.</span><span class="sxs-lookup"><span data-stu-id="2fb12-330">The result of shifting the bit pattern.</span></span> <span data-ttu-id="2fb12-331">Typ danych jest taki sam jak w przypadku programu <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-331">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-332">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-332">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/left-shift-operator.md"><span data-ttu-id="2fb12-333">&lt;&lt;Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-333">&lt;&lt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObject : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeObject (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pattern" Type="System.Object" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="2fb12-334">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-334">Required.</span></span> <span data-ttu-id="2fb12-335">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-335">Any expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="2fb12-336">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-336">Required.</span></span> <span data-ttu-id="2fb12-337">Dowolne wyrażenie ciągu zgodne z konwencjami dopasowania wzorca opisanymi w operator like.</span><span class="sxs-lookup"><span data-stu-id="2fb12-337">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="2fb12-338">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-338">Required.</span></span> <span data-ttu-id="2fb12-339"><see cref="T:Microsoft.VisualBasic.CompareMethod" /> Wartość, która określa, że operacja używa porównania tekstowego lub binarnego.</span><span class="sxs-lookup"><span data-stu-id="2fb12-339">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="2fb12-340">Reprezentuje operator Visual Basic <see langword="Like" /> .</span><span class="sxs-lookup"><span data-stu-id="2fb12-340">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-341"><see langword="True" />Jeśli ciąg reprezentujący wartość w <paramref name="Source" /> spełnia wzorzec, który jest zawarty w <paramref name="Pattern" />; w przeciwnym razie, <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-341"><see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="2fb12-342"><see langword="True" />Jeśli obie <paramref name="Source" /> i <paramref name="Pattern" /> są <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-342"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-343">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-343">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="2fb12-344">Like — Operator</span><span class="sxs-lookup"><span data-stu-id="2fb12-344">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeString : string * string * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.Operators.LikeString (Source, Pattern, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Pattern" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Source"><span data-ttu-id="2fb12-345">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-345">Required.</span></span> <span data-ttu-id="2fb12-346">Dowolne <see langword="String" /> wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-346">Any <see langword="String" /> expression.</span></span></param>
        <param name="Pattern"><span data-ttu-id="2fb12-347">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-347">Required.</span></span> <span data-ttu-id="2fb12-348">Dowolne <see langword="String" /> wyrażenie zgodne z konwencjami dopasowania wzorca opisanymi w operator like.</span><span class="sxs-lookup"><span data-stu-id="2fb12-348">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="2fb12-349">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-349">Required.</span></span> <span data-ttu-id="2fb12-350"><see cref="T:Microsoft.VisualBasic.CompareMethod" /> Wartość, która określa, że operacja używa porównania tekstowego lub binarnego.</span><span class="sxs-lookup"><span data-stu-id="2fb12-350">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="2fb12-351">Reprezentuje operator Visual Basic <see langword="Like" /> .</span><span class="sxs-lookup"><span data-stu-id="2fb12-351">Represents the Visual Basic <see langword="Like" /> operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-352"><see langword="True" />Jeśli wartość w <paramref name="Source" /> spełnia wzorzec, który jest zawarty w <paramref name="Pattern" />; w przeciwnym razie <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-352"><see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="2fb12-353"><see langword="True" />Jeśli oba <paramref name="Source" /> i <paramref name="Pattern" /> są puste.</span><span class="sxs-lookup"><span data-stu-id="2fb12-353"><see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-354">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-354">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/like-operator.md"><span data-ttu-id="2fb12-355">Like — Operator</span><span class="sxs-lookup"><span data-stu-id="2fb12-355">Like Operator</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member ModObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.ModObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-356">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-356">Required.</span></span> <span data-ttu-id="2fb12-357">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-357">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-358">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-358">Required.</span></span> <span data-ttu-id="2fb12-359">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-359">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-360">Reprezentuje operator Visual Basic <see langword="Mod" /> .</span><span class="sxs-lookup"><span data-stu-id="2fb12-360">Represents the Visual Basic <see langword="Mod" /> operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-361">Pozostała <paramref name="Left" /> część po jest <paramref name="Right" />podzielona przez.</span><span class="sxs-lookup"><span data-stu-id="2fb12-361">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-362">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-362">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/mod-operator.md"><span data-ttu-id="2fb12-363">Mod — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-363">Mod Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member MultiplyObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-364">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-364">Required.</span></span> <span data-ttu-id="2fb12-365">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-365">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-366">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-366">Required.</span></span> <span data-ttu-id="2fb12-367">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-367">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-368">Reprezentuje operator Visual Basic mnożenia (\*).</span><span class="sxs-lookup"><span data-stu-id="2fb12-368">Represents the Visual Basic multiply (\*) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-369">Produkt <paramref name="Left" /> i <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-369">The product of <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-370">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-370">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/multiplication-operator.md"><span data-ttu-id="2fb12-371">\* Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-371">\* Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NegateObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NegateObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="2fb12-372">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-372">Required.</span></span> <span data-ttu-id="2fb12-373">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-373">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-374">Reprezentuje operator Visual Basic jednoargumentowy minus (-).</span><span class="sxs-lookup"><span data-stu-id="2fb12-374">Represents the Visual Basic unary minus (-) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-375">Wartość <paramref name="Operand" />ujemna.</span><span class="sxs-lookup"><span data-stu-id="2fb12-375">The negative value of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-376">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-376">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="2fb12-377">- — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-377">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member NotObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.NotObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="2fb12-378">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-378">Required.</span></span> <span data-ttu-id="2fb12-379">Wyrażenie <see langword="Boolean" /> dowolne lub liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-379">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-380">Reprezentuje operator Visual Basic <see langword="Not" /> .</span><span class="sxs-lookup"><span data-stu-id="2fb12-380">Represents the Visual Basic <see langword="Not" /> operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-381">W <see langword="Boolean" /> przypadku operacji <see langword="False" /> , <paramref name="Operand" /> Jeśli jest<see langword="True" />; w przeciwnym razie. <see langword="True" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-381">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="2fb12-382">W przypadku operacji bitowych wartość 1 <paramref name="Operand" /> oznacza 0; w przeciwnym razie 0.</span><span class="sxs-lookup"><span data-stu-id="2fb12-382">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-383">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-383">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/not-operator.md"><span data-ttu-id="2fb12-384">Not — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-384">Not Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member OrObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.OrObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-385">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-385">Required.</span></span> <span data-ttu-id="2fb12-386">Wyrażenie <see langword="Boolean" /> dowolne lub liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-386">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-387">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-387">Required.</span></span> <span data-ttu-id="2fb12-388">Wyrażenie <see langword="Boolean" /> dowolne lub liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-388">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-389">Reprezentuje operator Visual Basic <see langword="Or" /> .</span><span class="sxs-lookup"><span data-stu-id="2fb12-389">Represents the Visual Basic <see langword="Or" /> operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-390">W <see langword="Boolean" /> przypadku operacji <see langword="False" /> , jeśli <paramref name="Left" /> obie <paramref name="Right" /> i są <see langword="False" />oceniane do; <see langword="True" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-390">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="2fb12-391">W przypadku operacji bitowych wartość 0, <paramref name="Left" /> Jeśli <paramref name="Right" /> obie i szacują się na 0; w przeciwnym razie 1.</span><span class="sxs-lookup"><span data-stu-id="2fb12-391">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-392">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-392">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/or-operator.md"><span data-ttu-id="2fb12-393">Or — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-393">Or Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberSignature Language="F#" Value="static member PlusObject : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.PlusObject Operand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="2fb12-394">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-394">Required.</span></span> <span data-ttu-id="2fb12-395">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-395">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-396">Reprezentuje operator Visual Basic jednoargumentowy plus (+).</span><span class="sxs-lookup"><span data-stu-id="2fb12-396">Represents the Visual Basic unary plus (+) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-397">Wartość <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-397">The value of <paramref name="Operand" />.</span></span> <span data-ttu-id="2fb12-398">(Znak <paramref name="Operand" /> nie jest zmieniany).</span><span class="sxs-lookup"><span data-stu-id="2fb12-398">(The sign of the <paramref name="Operand" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-399">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-399">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/addition-operator.md"><span data-ttu-id="2fb12-400">+ — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-400">+ Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberSignature Language="F#" Value="static member RightShiftObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject (Operand, Amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand"><span data-ttu-id="2fb12-401">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-401">Required.</span></span> <span data-ttu-id="2fb12-402">Całkowite wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-402">Integral numeric expression.</span></span> <span data-ttu-id="2fb12-403">Wzorzec bitowy, który ma zostać przesunięty.</span><span class="sxs-lookup"><span data-stu-id="2fb12-403">The bit pattern to be shifted.</span></span> <span data-ttu-id="2fb12-404">Typ danych musi być typem całkowitym (<see langword="SByte" />, <see langword="Byte" />, <see langword="Integer" /> <see langword="UShort" /> <see langword="Short" /> <see langword="Long" />,,, <see langword="ULong" />, lub). <see langword="UInteger" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-404">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="Amount"><span data-ttu-id="2fb12-405">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-405">Required.</span></span> <span data-ttu-id="2fb12-406">Wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-406">Numeric expression.</span></span> <span data-ttu-id="2fb12-407">Liczba bitów do przesunięcia wzorca bitowego.</span><span class="sxs-lookup"><span data-stu-id="2fb12-407">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="2fb12-408">Typ danych musi być lub <see langword="Integer" /> być rozszerzony do <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-408">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="2fb12-409">Reprezentuje operator przesunięcia w prawo Visual Basic&gt;(&gt;).</span><span class="sxs-lookup"><span data-stu-id="2fb12-409">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-410">Całkowita wartość liczbowa.</span><span class="sxs-lookup"><span data-stu-id="2fb12-410">An integral numeric value.</span></span> <span data-ttu-id="2fb12-411">Wynik przesunięcia wzorca bitowego.</span><span class="sxs-lookup"><span data-stu-id="2fb12-411">The result of shifting the bit pattern.</span></span> <span data-ttu-id="2fb12-412">Typ danych jest taki sam jak w przypadku programu <paramref name="Operand" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-412">The data type is the same as that of <paramref name="Operand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-413">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-413">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/right-shift-operator.md"><span data-ttu-id="2fb12-414">&gt;&gt;Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-414">&gt;&gt; Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member SubtractObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-415">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-415">Required.</span></span> <span data-ttu-id="2fb12-416">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-416">Any numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-417">Wymagana.</span><span class="sxs-lookup"><span data-stu-id="2fb12-417">Required.</span></span> <span data-ttu-id="2fb12-418">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-418">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-419">Reprezentuje operator Visual Basic odejmowania (-).</span><span class="sxs-lookup"><span data-stu-id="2fb12-419">Represents the Visual Basic subtraction (-) operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-420">Różnica między <paramref name="Left" /> i <paramref name="Right" />.</span><span class="sxs-lookup"><span data-stu-id="2fb12-420">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-421">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-421">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/subtraction-operator.md"><span data-ttu-id="2fb12-422">- — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-422">- Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberSignature Language="F#" Value="static member XorObject : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.Operators.XorObject (Left, Right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left"><span data-ttu-id="2fb12-423">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="2fb12-423">Required.</span></span> <span data-ttu-id="2fb12-424">Wyrażenie <see langword="Boolean" /> dowolne lub liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-424">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="Right"><span data-ttu-id="2fb12-425">Wymagane.</span><span class="sxs-lookup"><span data-stu-id="2fb12-425">Required.</span></span> <span data-ttu-id="2fb12-426">Wyrażenie <see langword="Boolean" /> dowolne lub liczbowe.</span><span class="sxs-lookup"><span data-stu-id="2fb12-426">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="2fb12-427">Reprezentuje operator Visual Basic <see langword="Xor" /> .</span><span class="sxs-lookup"><span data-stu-id="2fb12-427">Represents the Visual Basic <see langword="Xor" /> operator.</span></span></summary>
        <returns><span data-ttu-id="2fb12-428"><see langword="Boolean" /> Wartość numeryczna.</span><span class="sxs-lookup"><span data-stu-id="2fb12-428">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="2fb12-429">W celu <see langword="Boolean" /> porównania wartością zwracaną jest wykluczenie logiczne (wyłączne odłączenie logiczne) dwóch wartości. <see langword="Boolean" /></span><span class="sxs-lookup"><span data-stu-id="2fb12-429">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="2fb12-430">W przypadku operacji bitowych (numerycznych) zwracana wartość jest wartością liczbową reprezentującą wykluczenie bitowe (wyłączne rozłączenie bitowe) dwóch liczbowych wzorców bitowych.</span><span class="sxs-lookup"><span data-stu-id="2fb12-430">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="2fb12-431">Aby uzyskać więcej informacji, zobacz <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">operator XOR</see>.</span><span class="sxs-lookup"><span data-stu-id="2fb12-431">For more information, see <see href="https://docs.microsoft.com/dotnet/visual-basic/language-reference/operators/xor-operator">Xor Operator</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fb12-432">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="2fb12-432">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <related type="Article" href="~/docs/visual-basic/language-reference/operators/xor-operator.md"><span data-ttu-id="2fb12-433">Xor — Operator (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="2fb12-433">Xor Operator (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
