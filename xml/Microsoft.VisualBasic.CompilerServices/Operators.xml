<Type Name="Operators" FullName="Microsoft.VisualBasic.CompilerServices.Operators">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f2836cbb320d1b41c283f4d38c7019578668a6d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30431805" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Operators" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Operators extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.Operators" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Operators" />
  <TypeSignature Language="C++ CLI" Value="public ref class Operators sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="482a3-101">Zawiera operatory matematyczne późnym wiązaniem, takich jak <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> i <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, która jest używana wewnętrznie przez kompilator Visual Basic.</span>
      <span class="sxs-lookup">
        <span data-stu-id="482a3-101">Provides late-bound math operators, such as <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" /> and <see cref="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />, which the Visual Basic compiler uses internally.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-102">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="AddObject">
      <MemberSignature Language="C#" Value="public static object AddObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AddObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-103">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-103">Required.</span>
          </span>
          <span data-ttu-id="482a3-104">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-104">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-105">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-105">Required.</span>
          </span>
          <span data-ttu-id="482a3-106">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-106">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-107">Reprezentuje Visual Basic operator dodawania (+).</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-107">Represents the Visual Basic addition (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-108">Suma <paramref name="Left" /> i <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-108">The sum of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-109">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-109">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AndObject">
      <MemberSignature Language="C#" Value="public static object AndObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AndObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.AndObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AndObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AndObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-110">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-110">Required.</span>
          </span>
          <span data-ttu-id="482a3-111">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-111">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-112">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-112">Required.</span>
          </span>
          <span data-ttu-id="482a3-113">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-113">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-114">Reprezentuje Visual Basic <see langword="And" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-114">Represents the Visual Basic <see langword="And" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-115">Dla <see langword="Boolean" /> operacji <see langword="True" /> Jeśli obie <paramref name="Left" /> i <paramref name="Right" /> obliczać <see langword="True" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-115">For <see langword="Boolean" /> operations, <see langword="True" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="True" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="482a3-116">Dla Operacje bitowe, 1, jeśli obie <paramref name="Left" /> i <paramref name="Right" /> oceny 1; w przeciwnym razie wartość 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-116">For bitwise operations, 1 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 1; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-117">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-117">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObject">
      <MemberSignature Language="C#" Value="public static int CompareObject (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareObject(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObject(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObject (Left As Object, Right As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareObject(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-118">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-118">Required.</span>
          </span>
          <span data-ttu-id="482a3-119">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-119">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-120">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-120">Required.</span>
          </span>
          <span data-ttu-id="482a3-121">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-121">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-122">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-122">Required.</span>
          </span>
          <span data-ttu-id="482a3-123">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-123">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-124">Reprezentuje operatory porównania języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-124">Represents Visual Basic comparison operators.</span>
          </span>
        </summary>
        <returns>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="482a3-125">Wartość</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-125">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="482a3-126">Warunek</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-126">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="482a3-127">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-127">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="482a3-128">
                  <paramref name="Left" /> jest mniejsza niż <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-128">
                    <paramref name="Left" /> is less than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="482a3-129">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-129">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="482a3-130">
                  <paramref name="Left" /> i <paramref name="Right" /> są takie same.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-130">
                    <paramref name="Left" /> and <paramref name="Right" /> are equal.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="482a3-131">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-131">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="482a3-132">
                  <paramref name="Left" /> jest większa niż <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-132">
                    <paramref name="Left" /> is greater than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-133">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-133">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-134">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-134">Required.</span>
          </span>
          <span data-ttu-id="482a3-135">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-135">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-136">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-136">Required.</span>
          </span>
          <span data-ttu-id="482a3-137">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-137">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-138">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-138">Required.</span>
          </span>
          <span data-ttu-id="482a3-139">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-139">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-140">Reprezentuje Visual Basic operator równości (=).</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-140">Represents the Visual Basic equal (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-141">
            <see langword="True" /> Jeśli <paramref name="Left" /> i <paramref name="Right" /> są równe; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-141">
              <see langword="True" /> if <paramref name="Left" /> and <paramref name="Right" /> are equal; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-142">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-142">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreater">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-143">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-143">Required.</span>
          </span>
          <span data-ttu-id="482a3-144">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-144">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-145">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-145">Required.</span>
          </span>
          <span data-ttu-id="482a3-146">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-146">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-147">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-147">Required.</span>
          </span>
          <span data-ttu-id="482a3-148">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-148">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-149">Reprezentuje większa Visual Basic-niż (&gt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-149">Represents the Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-150">
            <see langword="True" /> Jeśli <paramref name="Left" /> jest większa niż <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-150">
              <see langword="True" /> if <paramref name="Left" /> is greater than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-151">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-151">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-152">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-152">Required.</span>
          </span>
          <span data-ttu-id="482a3-153">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-153">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-154">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-154">Required.</span>
          </span>
          <span data-ttu-id="482a3-155">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-155">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-156">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-156">Required.</span>
          </span>
          <span data-ttu-id="482a3-157">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-157">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-158">Reprezentuje większa Visual Basic-niż lub równe do (&gt;=) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-158">Represents the Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-159">
            <see langword="True" /> Jeśli <paramref name="Left" /> jest większa niż lub równa <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-159">
              <see langword="True" /> if <paramref name="Left" /> is greater than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-160">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-160">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLess">
      <MemberSignature Language="C#" Value="public static object CompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-161">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-161">Required.</span>
          </span>
          <span data-ttu-id="482a3-162">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-162">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-163">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-163">Required.</span>
          </span>
          <span data-ttu-id="482a3-164">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-164">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-165">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-165">Required.</span>
          </span>
          <span data-ttu-id="482a3-166">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-166">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-167">Reprezentuje mniej Visual Basic-niż (&lt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-167">Represents the Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-168">
            <see langword="True" /> Jeśli <paramref name="Left" /> jest mniejsza niż <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-168">
              <see langword="True" /> if <paramref name="Left" /> is less than <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-169">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-169">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-170">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-170">Required.</span>
          </span>
          <span data-ttu-id="482a3-171">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-171">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-172">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-172">Required.</span>
          </span>
          <span data-ttu-id="482a3-173">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-173">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-174">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-174">Required.</span>
          </span>
          <span data-ttu-id="482a3-175">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-175">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-176">Reprezentuje mniej Visual Basic-niż lub równe do (&lt;=) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-176">Represents the Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-177">
            <see langword="True" /> Jeśli <paramref name="Left" /> jest mniejsza niż lub równa <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-177">
              <see langword="True" /> if <paramref name="Left" /> is less than or equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-178">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-178">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static object CompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static object CompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-179">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-179">Required.</span>
          </span>
          <span data-ttu-id="482a3-180">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-180">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-181">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-181">Required.</span>
          </span>
          <span data-ttu-id="482a3-182">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-182">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-183">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-183">Required.</span>
          </span>
          <span data-ttu-id="482a3-184">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-184">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-185">Reprezentuje Visual Basic — różne (&lt;&gt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-185">Represents the Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-186">
            <see langword="True" /> Jeśli <paramref name="Left" /> nie jest równa <paramref name="Right" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-186">
              <see langword="True" /> if <paramref name="Left" /> is not equal to <paramref name="Right" />; otherwise, <see langword="False" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-187">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-187">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareString">
      <MemberSignature Language="C#" Value="public static int CompareString (string Left, string Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 CompareString(string Left, string Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.CompareString(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareString (Left As String, Right As String, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareString(System::String ^ Left, System::String ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.String" />
        <Parameter Name="Right" Type="System.String" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-188">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-188">Required.</span>
          </span>
          <span data-ttu-id="482a3-189">Wszelkie <see langword="String" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-189">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-190">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-190">Required.</span>
          </span>
          <span data-ttu-id="482a3-191">Wszelkie <see langword="String" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-191">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-192">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-192">Required.</span>
          </span>
          <span data-ttu-id="482a3-193">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-193">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-194">Przeprowadza porównanie ciągu tekst lub binarny, gdy dwa ciągi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-194">Performs binary or text string comparison when given two strings.</span>
          </span>
        </summary>
        <returns>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="482a3-195">Wartość</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-195">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="482a3-196">Warunek</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-196">Condition</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="482a3-197">-1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-197">-1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="482a3-198">
                  <paramref name="Left" /> jest mniejsza niż <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-198">
                    <paramref name="Left" /> is less than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="482a3-199">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-199">0</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="482a3-200">
                  <paramref name="Left" /> jest równa <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-200">
                    <paramref name="Left" /> is equal to <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="482a3-201">1</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-201">1</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="482a3-202">
                  <paramref name="Left" /> jest większa niż <paramref name="Right" />.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="482a3-202">
                    <paramref name="Left" /> is greater than <paramref name="Right" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-203">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-203">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="482a3-204">Operator równości Visual Basic służy do porównywania dwóch ciągów, przechodzą ciągi do <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> metody wraz z wartością `False` dla `TextCompare` argumentu.</span><span class="sxs-lookup"><span data-stu-id="482a3-204">When the Visual Basic equality operator is used to compare two strings, it passes the strings to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A> method along with a value of `False` for the `TextCompare` argument.</span></span> <span data-ttu-id="482a3-205">Spowoduje to wykonanie porównania z uwzględnieniem wielkości liter, numer porządkowy lub oparte na bieżącej kultury, w zależności od wartości w instrukcji.</span><span class="sxs-lookup"><span data-stu-id="482a3-205">This performs a case-sensitive comparison that is either ordinal or based on the current culture, depending on the value of the  statement.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConcatenateObject">
      <MemberSignature Language="C#" Value="public static object ConcatenateObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ConcatenateObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConcatenateObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConcatenateObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ConcatenateObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-206">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-206">Required.</span>
          </span>
          <span data-ttu-id="482a3-207">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-207">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-208">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-208">Required.</span>
          </span>
          <span data-ttu-id="482a3-209">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-209">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-210">Reprezentuje łączenia Visual Basic (&amp;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-210">Represents the Visual Basic concatenation (&amp;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-211">Ciąg reprezentujący połączenie <paramref name="Left" /> i <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-211">A string representing the concatenation of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-212">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-212">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-213">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-213">Required.</span>
          </span>
          <span data-ttu-id="482a3-214">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-214">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-215">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-215">Required.</span>
          </span>
          <span data-ttu-id="482a3-216">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-216">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-217">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-217">Required.</span>
          </span>
          <span data-ttu-id="482a3-218">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-218">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-219">Reprezentuje Przeciążony operator równości (=) języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-219">Represents the overloaded Visual Basic equals (=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-220">Wynik operatora równości przeciążona.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-220">The result of the overloaded equals operator.</span>
          </span>
          <span data-ttu-id="482a3-221">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-221">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-222">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-222">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreater">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreater (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreater(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreater(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreater (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreater(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-223">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-223">Required.</span>
          </span>
          <span data-ttu-id="482a3-224">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-224">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-225">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-225">Required.</span>
          </span>
          <span data-ttu-id="482a3-226">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-226">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-227">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-227">Required.</span>
          </span>
          <span data-ttu-id="482a3-228">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-228">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-229">Reprezentuje przeciążone Visual Basic większa-niż (&gt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-229">Represents the overloaded Visual Basic greater-than (&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-230">Wynik przeciążone większa-niż operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-230">The result of the overloaded greater-than operator.</span>
          </span>
          <span data-ttu-id="482a3-231">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-231">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-232">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-232">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectGreaterEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectGreaterEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectGreaterEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectGreaterEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectGreaterEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectGreaterEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-233">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-233">Required.</span>
          </span>
          <span data-ttu-id="482a3-234">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-234">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-235">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-235">Required.</span>
          </span>
          <span data-ttu-id="482a3-236">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-236">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-237">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-237">Required.</span>
          </span>
          <span data-ttu-id="482a3-238">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-238">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-239">Reprezentuje przeciążone Visual Basic większa-niż lub równe do (&gt;=) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-239">Represents the overloaded Visual Basic greater-than or equal-to (&gt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-240">Wynik przeciążone większa-niż lub operator równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-240">The result of the overloaded greater-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="482a3-241">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-241">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-242">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-242">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLess">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLess (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLess(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLess(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLess (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLess(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-243">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-243">Required.</span>
          </span>
          <span data-ttu-id="482a3-244">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-244">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-245">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-245">Required.</span>
          </span>
          <span data-ttu-id="482a3-246">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-246">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-247">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-247">Required.</span>
          </span>
          <span data-ttu-id="482a3-248">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-248">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-249">Reprezentuje mniej przeciążone Visual Basic-niż (&lt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-249">Represents the overloaded Visual Basic less-than (&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-250">Wynik przeciążone mniej-niż operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-250">The result of the overloaded less-than operator.</span>
          </span>
          <span data-ttu-id="482a3-251">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-251">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-252">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-252">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectLessEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectLessEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectLessEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectLessEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectLessEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectLessEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-253">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-253">Required.</span>
          </span>
          <span data-ttu-id="482a3-254">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-254">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-255">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-255">Required.</span>
          </span>
          <span data-ttu-id="482a3-256">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-256">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-257">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-257">Required.</span>
          </span>
          <span data-ttu-id="482a3-258">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-258">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-259">Reprezentuje mniej przeciążone Visual Basic — niż lub równe do (&lt;=) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-259">Represents the overloaded Visual Basic less-than or equal-to (&lt;=) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-260">Wynik przeciążone mniej-niż lub operator równości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-260">The result of the overloaded less-than or equal-to operator.</span>
          </span>
          <span data-ttu-id="482a3-261">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-261">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-262">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-262">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConditionalCompareObjectNotEqual">
      <MemberSignature Language="C#" Value="public static bool ConditionalCompareObjectNotEqual (object Left, object Right, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool ConditionalCompareObjectNotEqual(object Left, object Right, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ConditionalCompareObjectNotEqual(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConditionalCompareObjectNotEqual (Left As Object, Right As Object, TextCompare As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConditionalCompareObjectNotEqual(System::Object ^ Left, System::Object ^ Right, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-263">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-263">Required.</span>
          </span>
          <span data-ttu-id="482a3-264">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-264">Any expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-265">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-265">Required.</span>
          </span>
          <span data-ttu-id="482a3-266">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-266">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="482a3-267">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-267">Required.</span>
          </span>
          <span data-ttu-id="482a3-268">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-268">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-269">Reprezentuje przeciążone Visual Basic — różne (&lt;&gt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-269">Represents the overloaded Visual Basic not-equal (&lt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-270">Wynik Przeciążony operator równości nie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-270">The result of the overloaded not-equal operator.</span>
          </span>
          <span data-ttu-id="482a3-271">
            <see langword="False" /> w przypadku przeciążania operatorów nie jest obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-271">
              <see langword="False" /> if operator overloading is not supported.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-272">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-272">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DivideObject">
      <MemberSignature Language="C#" Value="public static object DivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.DivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-273">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-273">Required.</span>
          </span>
          <span data-ttu-id="482a3-274">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-274">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-275">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-275">Required.</span>
          </span>
          <span data-ttu-id="482a3-276">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-276">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-277">Reprezentuje Visual Basic operator dzielenia (/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-277">Represents the Visual Basic division (/) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-278">Pełna iloraz <paramref name="Left" /> podzielona przez <paramref name="Right" />, w tym wszelkie pozostałe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-278">The full quotient of <paramref name="Left" /> divided by <paramref name="Right" />, including any remainder.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-279">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-279">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExponentObject">
      <MemberSignature Language="C#" Value="public static object ExponentObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ExponentObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ExponentObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ExponentObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ExponentObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-280">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-280">Required.</span>
          </span>
          <span data-ttu-id="482a3-281">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-281">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-282">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-282">Required.</span>
          </span>
          <span data-ttu-id="482a3-283">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-283">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-284">Reprezentuje operator wykładnik (^) języka Visual Basic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-284">Represents the Visual Basic exponent (^) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-285">Wynik <paramref name="Left" /> podniesionej do potęgi równej <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-285">The result of <paramref name="Left" /> raised to the power of <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-286">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-286">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="FallbackInvokeUserDefinedOperator">
      <MemberSignature Language="C#" Value="public static object FallbackInvokeUserDefinedOperator (object vbOp, object[] Arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static object FallbackInvokeUserDefinedOperator(object vbOp, object[] Arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.FallbackInvokeUserDefinedOperator(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FallbackInvokeUserDefinedOperator (vbOp As Object, Arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ FallbackInvokeUserDefinedOperator(System::Object ^ vbOp, cli::array &lt;System::Object ^&gt; ^ Arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("do not use this method", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vbOp" Type="System.Object" />
        <Parameter Name="Arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="vbOp">
          <span data-ttu-id="482a3-287">Operator zdefiniowany przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-287">The user-defined operator.</span>
          </span>
        </param>
        <param name="Arguments">
          <span data-ttu-id="482a3-288">Wartości argumentów, które zostaną przekazane do operatora zdefiniowanej przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-288">Argument values to pass to the user-defined operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-289">Wykonuje z późnym wiązaniem wersji ewaluacyjnej operatorem zdefiniowane przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-289">Executes a late-bound evaluation of a user-defined operator.</span>
          </span>
          <span data-ttu-id="482a3-290">Ta metoda pomocnika nie jest przeznaczona do wywoływania bezpośrednio w kodzie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-290">This helper method is not meant to be called directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-291">Wynik zwracany z operatorem zdefiniowanym przez użytkownika.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-291">The result returned from the user-defined operator.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IntDivideObject">
      <MemberSignature Language="C#" Value="public static object IntDivideObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IntDivideObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.IntDivideObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IntDivideObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IntDivideObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-292">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-292">Required.</span>
          </span>
          <span data-ttu-id="482a3-293">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-293">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-294">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-294">Required.</span>
          </span>
          <span data-ttu-id="482a3-295">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-295">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-296">Reprezentuje dzielenie liczby całkowitej Visual Basic (\\) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-296">Represents the Visual Basic integer division (\\) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-297">Iloraz liczb całkowitych z <paramref name="Left" /> rozdzielonych <paramref name="Right" />, które odrzuca wszystkie pozostałe i zachowuje całkowitą część.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-297">The integer quotient of <paramref name="Left" /> divided by <paramref name="Right" />, which discards any remainder and retains only the integer portion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-298">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-298">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LeftShiftObject">
      <MemberSignature Language="C#" Value="public static object LeftShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LeftShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LeftShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeftShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LeftShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="482a3-299">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-299">Required.</span>
          </span>
          <span data-ttu-id="482a3-300">Całkowite wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-300">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="482a3-301">Wzorca bitowego lekkie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-301">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="482a3-302">Typ danych musi być typem całkowitym (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, lub <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-302">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="482a3-303">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-303">Required.</span>
          </span>
          <span data-ttu-id="482a3-304">Wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-304">Numeric expression.</span>
          </span>
          <span data-ttu-id="482a3-305">Liczba bitów przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-305">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="482a3-306">Typ danych musi być <see langword="Integer" /> lub rozszerzyć do <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-306">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-307">Reprezentuje Visual Basic arytmetyczne przesunięcie w lewo (&lt;&lt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-307">Represents the Visual Basic arithmetic left shift (&lt;&lt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-308">Całkowite wartość liczbowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-308">An integral numeric value.</span>
          </span>
          <span data-ttu-id="482a3-309">Wynik przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-309">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="482a3-310">Typ danych jest taki sam, jak te <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-310">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-311">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-311">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeObject">
      <MemberSignature Language="C#" Value="public static object LikeObject (object Source, object Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static object LikeObject(object Source, object Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeObject(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObject (Source As Object, Pattern As Object, CompareOption As CompareMethod) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ LikeObject(System::Object ^ Source, System::Object ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Pattern" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="482a3-312">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-312">Required.</span>
          </span>
          <span data-ttu-id="482a3-313">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-313">Any expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="482a3-314">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-314">Required.</span>
          </span>
          <span data-ttu-id="482a3-315">Wyrażenia ciągu zgodnych z Konwencją dopasowywanie do wzorca opisanego w operatora Like.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-315">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="482a3-316">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-316">Required.</span>
          </span>
          <span data-ttu-id="482a3-317">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> wartość, która określa, że operacja używany tekst lub binarny porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-317">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-318">Reprezentuje Visual Basic <see langword="Like" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-318">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-319">
            <see langword="True" /> Jeśli reprezentacja ciągu wartości <paramref name="Source" /> spełnia wzorzec, który jest zawarty w <paramref name="Pattern" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-319">
              <see langword="True" /> if the string representation of the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="482a3-320">
            <see langword="True" /> Jeśli oba <paramref name="Source" /> i <paramref name="Pattern" /> są <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-320">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are <see langword="Nothing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-321">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-321">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeString">
      <MemberSignature Language="C#" Value="public static bool LikeString (string Source, string Pattern, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeString(string Source, string Pattern, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.LikeString(System.String,System.String,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeString (Source As String, Pattern As String, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeString(System::String ^ Source, System::String ^ Pattern, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Source" Type="System.String" />
        <Parameter Name="Pattern" Type="System.String" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="Source">
          <span data-ttu-id="482a3-322">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-322">Required.</span>
          </span>
          <span data-ttu-id="482a3-323">Wszelkie <see langword="String" /> wyrażenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-323">Any <see langword="String" /> expression.</span>
          </span>
        </param>
        <param name="Pattern">
          <span data-ttu-id="482a3-324">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-324">Required.</span>
          </span>
          <span data-ttu-id="482a3-325">Wszelkie <see langword="String" /> wyrażeń zgodnych z opisanych w operatorze jak konwencje dopasowywanie do wzorca.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-325">Any <see langword="String" /> expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="482a3-326">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-326">Required.</span>
          </span>
          <span data-ttu-id="482a3-327">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> wartość, która określa, że operacja używany tekst lub binarny porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-327">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-328">Reprezentuje Visual Basic <see langword="Like" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-328">Represents the Visual Basic <see langword="Like" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-329">
            <see langword="True" /> Jeśli wartość w <paramref name="Source" /> spełnia wzorzec, który jest zawarty w <paramref name="Pattern" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-329">
              <see langword="True" /> if the value in <paramref name="Source" /> satisfies the pattern that is contained in <paramref name="Pattern" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="482a3-330">
            <see langword="True" /> Jeśli oba <paramref name="Source" /> i <paramref name="Pattern" /> są puste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-330">
              <see langword="True" /> if both <paramref name="Source" /> and <paramref name="Pattern" /> are empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-331">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-331">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModObject">
      <MemberSignature Language="C#" Value="public static object ModObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.ModObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-332">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-332">Required.</span>
          </span>
          <span data-ttu-id="482a3-333">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-333">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-334">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-334">Required.</span>
          </span>
          <span data-ttu-id="482a3-335">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-335">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-336">Reprezentuje Visual Basic <see langword="Mod" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-336">Represents the Visual Basic <see langword="Mod" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-337">Pozostałe po <paramref name="Left" /> przez <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-337">The remainder after <paramref name="Left" /> is divided by <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-338">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-338">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MultiplyObject">
      <MemberSignature Language="C#" Value="public static object MultiplyObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MultiplyObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.MultiplyObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MultiplyObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MultiplyObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-339">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-339">Required.</span>
          </span>
          <span data-ttu-id="482a3-340">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-340">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-341">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-341">Required.</span>
          </span>
          <span data-ttu-id="482a3-342">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-342">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-343">Reprezentuje Visual Basic mnożenia (\*) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-343">Represents the Visual Basic multiply (\*) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-344">Iloczyn <paramref name="Left" /> i <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-344">The product of <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-345">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-345">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NegateObject">
      <MemberSignature Language="C#" Value="public static object NegateObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegateObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NegateObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegateObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegateObject(System::Object ^ Operand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="482a3-346">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-346">Required.</span>
          </span>
          <span data-ttu-id="482a3-347">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-347">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-348">Reprezentuje jednoargumentowe języka Visual Basic minus (-) — operator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-348">Represents the Visual Basic unary minus (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-349">Wartość ujemną <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-349">The negative value of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-350">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-350">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NotObject">
      <MemberSignature Language="C#" Value="public static object NotObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.NotObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObject(System::Object ^ Operand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="482a3-351">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-351">Required.</span>
          </span>
          <span data-ttu-id="482a3-352">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-352">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-353">Reprezentuje Visual Basic <see langword="Not" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-353">Represents the Visual Basic <see langword="Not" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-354">Dla <see langword="Boolean" /> operacji <see langword="False" /> Jeśli <paramref name="Operand" /> jest <see langword="True" />; w przeciwnym razie <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-354">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="Operand" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="482a3-355">Dla Operacje bitowe 1, gdy <paramref name="Operand" /> 0, a w przeciwnym razie 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-355">For bitwise operations, 1 if <paramref name="Operand" /> is 0; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-356">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-356">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OrObject">
      <MemberSignature Language="C#" Value="public static object OrObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object OrObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.OrObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ OrObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-357">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-357">Required.</span>
          </span>
          <span data-ttu-id="482a3-358">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-358">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-359">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-359">Required.</span>
          </span>
          <span data-ttu-id="482a3-360">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-360">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-361">Reprezentuje Visual Basic <see langword="Or" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-361">Represents the Visual Basic <see langword="Or" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-362">Dla <see langword="Boolean" /> operacji <see langword="False" /> Jeśli obie <paramref name="Left" /> i <paramref name="Right" /> obliczać <see langword="False" />; w przeciwnym razie <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-362">For <see langword="Boolean" /> operations, <see langword="False" /> if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to <see langword="False" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="482a3-363">Dla Operacje bitowe, 0, jeśli obie <paramref name="Left" /> i <paramref name="Right" /> oceny 0; w przeciwnym razie wartość 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-363">For bitwise operations, 0 if both <paramref name="Left" /> and <paramref name="Right" /> evaluate to 0; otherwise, 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-364">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-364">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PlusObject">
      <MemberSignature Language="C#" Value="public static object PlusObject (object Operand);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObject(object Operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.PlusObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObject (Operand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObject(System::Object ^ Operand);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="482a3-365">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-365">Required.</span>
          </span>
          <span data-ttu-id="482a3-366">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-366">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-367">Reprezentuje Visual Basic operator jednoargumentowy plus (+).</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-367">Represents the Visual Basic unary plus (+) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-368">Wartość <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-368">The value of <paramref name="Operand" />.</span>
          </span>
          <span data-ttu-id="482a3-369">(Znak <paramref name="Operand" /> niezmieniona.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-369">(The sign of the <paramref name="Operand" /> is unchanged.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-370">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-370">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RightShiftObject">
      <MemberSignature Language="C#" Value="public static object RightShiftObject (object Operand, object Amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object RightShiftObject(object Operand, object Amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.RightShiftObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RightShiftObject (Operand As Object, Amount As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ RightShiftObject(System::Object ^ Operand, System::Object ^ Amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Operand" Type="System.Object" />
        <Parameter Name="Amount" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Operand">
          <span data-ttu-id="482a3-371">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-371">Required.</span>
          </span>
          <span data-ttu-id="482a3-372">Całkowite wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-372">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="482a3-373">Wzorca bitowego lekkie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-373">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="482a3-374">Typ danych musi być typem całkowitym (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, lub <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-374">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="Amount">
          <span data-ttu-id="482a3-375">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-375">Required.</span>
          </span>
          <span data-ttu-id="482a3-376">Wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-376">Numeric expression.</span>
          </span>
          <span data-ttu-id="482a3-377">Liczba bitów przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-377">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="482a3-378">Typ danych musi być <see langword="Integer" /> lub rozszerzyć do <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-378">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-379">Reprezentuje Visual Basic arytmetyczne przesunięcie w prawo (&gt;&gt;) operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-379">Represents the Visual Basic arithmetic right shift (&gt;&gt;) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-380">Całkowite wartość liczbowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-380">An integral numeric value.</span>
          </span>
          <span data-ttu-id="482a3-381">Wynik przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-381">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="482a3-382">Typ danych jest taki sam, jak te <paramref name="Operand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-382">The data type is the same as that of <paramref name="Operand" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-383">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-383">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SubtractObject">
      <MemberSignature Language="C#" Value="public static object SubtractObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubtractObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.SubtractObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubtractObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubtractObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-384">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-384">Required.</span>
          </span>
          <span data-ttu-id="482a3-385">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-385">Any numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-386">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-386">Required.</span>
          </span>
          <span data-ttu-id="482a3-387">Dowolne wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-387">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-388">Reprezentuje Visual Basic operator odejmowania (-).</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-388">Represents the Visual Basic subtraction (–) operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-389">Różnica między <paramref name="Left" /> i <paramref name="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-389">The difference between <paramref name="Left" /> and <paramref name="Right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-390">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-390">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XorObject">
      <MemberSignature Language="C#" Value="public static object XorObject (object Left, object Right);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObject(object Left, object Right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.Operators.XorObject(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObject (Left As Object, Right As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObject(System::Object ^ Left, System::Object ^ Right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Left" Type="System.Object" />
        <Parameter Name="Right" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Left">
          <span data-ttu-id="482a3-391">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-391">Required.</span>
          </span>
          <span data-ttu-id="482a3-392">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-392">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="Right">
          <span data-ttu-id="482a3-393">Wymagany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-393">Required.</span>
          </span>
          <span data-ttu-id="482a3-394">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-394">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="482a3-395">Reprezentuje Visual Basic <see langword="Xor" /> operatora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-395">Represents the Visual Basic <see langword="Xor" /> operator.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="482a3-396">A <see langword="Boolean" /> lub wartość liczbowa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-396">A <see langword="Boolean" /> or numeric value.</span>
          </span>
          <span data-ttu-id="482a3-397">Aby uzyskać <see langword="Boolean" /> porównanie, wartość zwracana jest wykluczenie logiczne (wyłączne rozłączenie logiczne) z dwóch <see langword="Boolean" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-397">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          </span>
          <span data-ttu-id="482a3-398">Dla Operacje bitowe (numeryczną) wartość zwracana jest wartość liczbową reprezentuje z bitowego wykluczenia dwa wzorce bit liczbowych (wyłączne z bitowego rozłączenia).</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-398">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="482a3-399">Aby uzyskać więcej informacji, zobacz [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="482a3-399">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="482a3-400">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="482a3-400">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>