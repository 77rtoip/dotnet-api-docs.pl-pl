<Type Name="ObjectType" FullName="Microsoft.VisualBasic.CompilerServices.ObjectType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f33015dfa56a230058b99c19f52ad51441b59c2" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39859297" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectType sealed" />
  <TypeSignature Language="F#" Value="type ObjectType = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="227dd-101">Ta klasa jest przestarzała począwszy od programu Visual Basic 2005.</span>
      <span class="sxs-lookup">
        <span data-stu-id="227dd-101">This class has been deprecated as of Visual Basic 2005.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-102">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="227dd-103">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-103">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-104">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-104">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddObj">
      <MemberSignature Language="C#" Value="public static object AddObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member AddObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="227dd-105">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-105">Required.</span>
          </span>
          <span data-ttu-id="227dd-106">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-106">Any numeric expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="227dd-107">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-107">Required.</span>
          </span>
          <span data-ttu-id="227dd-108">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-108">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-109">Wykonuje operację dodawania (+).</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-109">Performs an addition (+) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-110">Suma <paramref name="o1" /> i <paramref name="o2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-110">The sum of <paramref name="o1" /> and <paramref name="o2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-111">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-111">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BitAndObj">
      <MemberSignature Language="C#" Value="public static object BitAndObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitAndObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitAndObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitAndObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitAndObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="227dd-112">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-112">Required.</span>
          </span>
          <span data-ttu-id="227dd-113">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-113">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="227dd-114">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-114">Required.</span>
          </span>
          <span data-ttu-id="227dd-115">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-115">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-116">Wykonuje bitową operację <see langword="And" /> operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-116">Performs a bitwise <see langword="And" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-117">1, jeśli obie <paramref name="obj1" /> i <paramref name="obj2" /> oceny na 1; w przeciwnym razie 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-117">1 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 1; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-118">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-118">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BitOrObj">
      <MemberSignature Language="C#" Value="public static object BitOrObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitOrObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitOrObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitOrObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitOrObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="227dd-119">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-119">Required.</span>
          </span>
          <span data-ttu-id="227dd-120">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-120">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="227dd-121">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-121">Required.</span>
          </span>
          <span data-ttu-id="227dd-122">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-122">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-123">Wykonuje bitową operację <see langword="Or" /> operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-123">Performs a bitwise <see langword="Or" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-124">0, jeśli obie <paramref name="obj1" /> i <paramref name="obj2" /> obliczania do 0; w przeciwnym razie, 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-124">0 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 0; otherwise, 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-125">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-125">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BitXorObj">
      <MemberSignature Language="C#" Value="public static object BitXorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitXorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitXorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitXorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member BitXorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="227dd-126">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-126">Required.</span>
          </span>
          <span data-ttu-id="227dd-127">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-127">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="227dd-128">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-128">Required.</span>
          </span>
          <span data-ttu-id="227dd-129">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-129">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-130">Wykonuje <see langword="Xor" /> operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-130">Performs an <see langword="Xor" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-131">Wartość liczbowa reprezentująca bitowe wykluczenie dwóch wzorców bitowych liczbowych (wyłączne bitowego rozłączenia).</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-131">A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="227dd-132">Aby uzyskać więcej informacji, zobacz [Xor — Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-132">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-133">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-133">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DivObj">
      <MemberSignature Language="C#" Value="public static object DivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member DivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="227dd-134">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-134">Required.</span>
          </span>
          <span data-ttu-id="227dd-135">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-135">Any numeric expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="227dd-136">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-136">Required.</span>
          </span>
          <span data-ttu-id="227dd-137">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-137">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-138">Wykonuje operację dzielenia (/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-138">Performs a division (/) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-139">Pełne iloraz <paramref name="o1" /> podzielona przez <paramref name="o2" />, włączając wszelkie pozostałe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-139">The full quotient of <paramref name="o1" /> divided by <paramref name="o2" />, including any remainder.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-140">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-140">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetObjectValuePrimitive">
      <MemberSignature Language="C#" Value="public static object GetObjectValuePrimitive (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObjectValuePrimitive(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectValuePrimitive (o As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectValuePrimitive(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="static member GetObjectValuePrimitive : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="227dd-141">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-141">Required.</span>
          </span>
          <span data-ttu-id="227dd-142">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-142">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-143">Zwraca wartości spakowanej pierwotnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-143">Returns a boxed primitive value.</span>
          </span>
          <span data-ttu-id="227dd-144">Ta metoda jest używana, aby uniemożliwić kopiowanie struktury wiele razy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-144">This method is used to prevent copying structures multiple times.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-145">Wartość pierwotną <paramref name="o" /> wpisanych w formie obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-145">The primitive value of <paramref name="o" /> typed as object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-146">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IDivObj">
      <MemberSignature Language="C#" Value="public static object IDivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IDivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IDivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IDivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member IDivObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="227dd-147">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-147">Required.</span>
          </span>
          <span data-ttu-id="227dd-148">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-148">Any numeric expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="227dd-149">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-149">Required.</span>
          </span>
          <span data-ttu-id="227dd-150">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-150">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-151">Wykonuje dzielenie liczby całkowitej (\\) operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-151">Performs an integer division (\\) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-152">Iloraz liczb całkowitych z <paramref name="o1" /> podzielona przez <paramref name="o2" />, która odrzuca wszystkie pozostałe i zachowuje tylko część całkowitą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-152">The integer quotient of <paramref name="o1" /> divided by <paramref name="o2" />, which discards any remainder and retains only the integer portion.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-153">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-153">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeObj">
      <MemberSignature Language="C#" Value="public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeObj(object vLeft, object vRight, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObj (vLeft As Object, vRight As Object, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeObj(System::Object ^ vLeft, System::Object ^ vRight, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberSignature Language="F#" Value="static member LikeObj : obj * obj * Microsoft.VisualBasic.CompareMethod -&gt; bool" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj (vLeft, vRight, CompareOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="vLeft">
          <span data-ttu-id="227dd-154">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-154">Required.</span>
          </span>
          <span data-ttu-id="227dd-155">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-155">Any expression.</span>
          </span>
        </param>
        <param name="vRight">
          <span data-ttu-id="227dd-156">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-156">Required.</span>
          </span>
          <span data-ttu-id="227dd-157">Wszystkie zgodne z konwencjami dopasowania do wzorca opisanego w takich jak Operator wyrażenia ciągu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-157">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span>
          </span>
        </param>
        <param name="CompareOption">
          <span data-ttu-id="227dd-158">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-158">Required.</span>
          </span>
          <span data-ttu-id="227dd-159">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> wartość, która określa, że operacja używają porównanie tekstowe lub binarne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-159">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-160">Wykonuje <see langword="Like" /> porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-160">Performs a <see langword="Like" /> comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-161">
            <see langword="True" /> Jeśli ciąg reprezentujący wartość w <paramref name="vLeft" /> spełnia wzorzec, który jest zawarty w <paramref name="vRight" />; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-161">
              <see langword="True" /> if the string representation of the value in <paramref name="vLeft" /> satisfies the pattern that is contained in <paramref name="vRight" />; otherwise, <see langword="False" />.</span>
          </span>
          <span data-ttu-id="227dd-162">
            <see langword="True" /> Jeśli oba <paramref name="vLeft" /> i <paramref name="vRight" /> są <see langword="Nothing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-162">
              <see langword="True" /> if both <paramref name="vLeft" /> and <paramref name="vRight" /> are <see langword="Nothing" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-163">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-163">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModObj">
      <MemberSignature Language="C#" Value="public static object ModObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member ModObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="227dd-164">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-164">Required.</span>
          </span>
          <span data-ttu-id="227dd-165">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-165">Any numeric expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="227dd-166">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-166">Required.</span>
          </span>
          <span data-ttu-id="227dd-167">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-167">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-168">Wykonuje modulo (<see langword="Mod" />) operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-168">Performs a modulus (<see langword="Mod" />) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-169">Resztę po <paramref name="o1" /> jest dzielona przez <paramref name="o2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-169">The remainder after <paramref name="o1" /> is divided by <paramref name="o2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-170">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-170">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MulObj">
      <MemberSignature Language="C#" Value="public static object MulObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MulObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MulObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MulObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member MulObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="227dd-171">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-171">Required.</span>
          </span>
          <span data-ttu-id="227dd-172">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-172">Any numeric expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="227dd-173">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-173">Required.</span>
          </span>
          <span data-ttu-id="227dd-174">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-174">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-175">Wykonuje operację mnożenia (\*).</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-175">Performs a multiplication (\*) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-176">Iloczyn <paramref name="o1" /> i <paramref name="o2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-176">The product of <paramref name="o1" /> and <paramref name="o2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-177">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-177">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NegObj">
      <MemberSignature Language="C#" Value="public static object NegObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NegObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="227dd-178">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-178">Required.</span>
          </span>
          <span data-ttu-id="227dd-179">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-179">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-180">Wykonuje Jednoargumentowa operacja minus (-), operacja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-180">Performs a unary minus (–) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-181">Wartość ujemną <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-181">The negative value of <paramref name="obj" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-182">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-182">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NotObj">
      <MemberSignature Language="C#" Value="public static object NotObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member NotObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="227dd-183">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-183">Required.</span>
          </span>
          <span data-ttu-id="227dd-184">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-184">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-185">Wykonuje <see langword="Not" /> operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-185">Performs a <see langword="Not" /> operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-186">Aby uzyskać <see langword="Boolean" /> operacji <see langword="False" /> Jeśli <paramref name="obj" /> jest <see langword="True" />; w przeciwnym razie <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-186">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="obj" /> is <see langword="True" />; otherwise, <see langword="True" />.</span>
          </span>
          <span data-ttu-id="227dd-187">W przypadku operacji bitowej 1, jeśli <paramref name="obj" /> jest 0; w przeciwnym razie 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-187">For bitwise operations, 1 if <paramref name="obj" /> is 0; otherwise, 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-188">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-188">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ObjTst">
      <MemberSignature Language="C#" Value="public static int ObjTst (object o1, object o2, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 ObjTst(object o1, object o2, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjTst (o1 As Object, o2 As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ObjTst(System::Object ^ o1, System::Object ^ o2, bool TextCompare);" />
      <MemberSignature Language="F#" Value="static member ObjTst : obj * obj * bool -&gt; int" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst (o1, o2, TextCompare)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="227dd-189">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-189">Required.</span>
          </span>
          <span data-ttu-id="227dd-190">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-190">Any expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="227dd-191">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-191">Required.</span>
          </span>
          <span data-ttu-id="227dd-192">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-192">Any expression.</span>
          </span>
        </param>
        <param name="TextCompare">
          <span data-ttu-id="227dd-193">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-193">Required.</span>
          </span>
          <span data-ttu-id="227dd-194">
            <see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-194">
              <see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-195">Wykonuje porównanie ciągu binarnej lub tekstowej, gdy dwa obiekty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-195">Performs binary or text string comparison when given two objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-196">
            <list type="table">
              <listheader>
                <term> Wartość </term>
                <description> warunek </description>
              </listheader>
              <item>
                <term> -1 </term>
                <description>
                  <paramref name="o1" /> jest mniejsza niż <paramref name="o2" />.  </description>
              </item>
              <item>
                <term> 0 </term>
                <description>
                  <paramref name="o1" /> jest równa <paramref name="o2" />.  </description>
              </item>
              <item>
                <term> 1 </term>
                <description>
                  <paramref name="o1" /> jest większa niż <paramref name="o2" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-196">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description>
                    <paramref name="o1" /> is less than <paramref name="o2" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description>
                    <paramref name="o1" /> is equal to <paramref name="o2" />.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description>
                    <paramref name="o1" /> is greater than <paramref name="o2" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-197">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-197">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PlusObj">
      <MemberSignature Language="C#" Value="public static object PlusObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObj(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="static member PlusObj : obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="227dd-198">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-198">Required.</span>
          </span>
          <span data-ttu-id="227dd-199">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-199">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-200">Wykonuje operację jednoargumentowe plus (+).</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-200">Performs a unary plus (+) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-201">Wartość <paramref name="obj" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-201">The value of <paramref name="obj" />.</span>
          </span>
          <span data-ttu-id="227dd-202">(Znak <paramref name="obj" /> nie ulega zmianie.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-202">(The sign of the <paramref name="obj" /> is unchanged.)</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-203">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-203">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PowObj">
      <MemberSignature Language="C#" Value="public static object PowObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PowObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PowObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member PowObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="227dd-204">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-204">Required.</span>
          </span>
          <span data-ttu-id="227dd-205">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-205">Any numeric expression.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="227dd-206">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-206">Required.</span>
          </span>
          <span data-ttu-id="227dd-207">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-207">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-208">Wykonuje operację potęgowania (^).</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-208">Performs an exponent (^) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-209">Wynik <paramref name="obj1" /> podniesione do potęgi równej <paramref name="obj2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-209">The result of <paramref name="obj1" /> raised to the power of <paramref name="obj2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-210">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-210">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftObj">
      <MemberSignature Language="C#" Value="public static object ShiftLeftObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftLeftObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftLeftObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftLeftObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="227dd-211">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-211">Required.</span>
          </span>
          <span data-ttu-id="227dd-212">Całkowite wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-212">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="227dd-213">Wzorzec bitowy jest przesuwany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-213">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="227dd-214">Typ danych musi być typem całkowitym (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, lub <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-214">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="amount">
          <span data-ttu-id="227dd-215">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-215">Required.</span>
          </span>
          <span data-ttu-id="227dd-216">Wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-216">Numeric expression.</span>
          </span>
          <span data-ttu-id="227dd-217">Liczba bitów do przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-217">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="227dd-218">Typ danych musi być <see langword="Integer" /> lub mogą zostać poszerzone do <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-218">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-219">Wykonuje arytmetyczne przesunięcie w lewo (&lt;&lt;) operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-219">Performs an arithmetic left shift (&lt;&lt;) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-220">Całkowitą wartość liczbową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-220">An integral numeric value.</span>
          </span>
          <span data-ttu-id="227dd-221">Wynik przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-221">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="227dd-222">Typ danych jest taka sama jak w przypadku <paramref name="o1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-222">The data type is the same as that of <paramref name="o1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-223">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-223">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ShiftRightObj">
      <MemberSignature Language="C#" Value="public static object ShiftRightObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftRightObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftRightObj(System::Object ^ o1, int amount);" />
      <MemberSignature Language="F#" Value="static member ShiftRightObj : obj * int -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj (o1, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="227dd-224">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-224">Required.</span>
          </span>
          <span data-ttu-id="227dd-225">Całkowite wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-225">Integral numeric expression.</span>
          </span>
          <span data-ttu-id="227dd-226">Wzorzec bitowy jest przesuwany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-226">The bit pattern to be shifted.</span>
          </span>
          <span data-ttu-id="227dd-227">Typ danych musi być typem całkowitym (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, lub <see langword="ULong" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-227">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span>
          </span>
        </param>
        <param name="amount">
          <span data-ttu-id="227dd-228">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-228">Required.</span>
          </span>
          <span data-ttu-id="227dd-229">Wyrażenie liczbowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-229">Numeric expression.</span>
          </span>
          <span data-ttu-id="227dd-230">Liczba bitów do przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-230">The number of bits to shift the bit pattern.</span>
          </span>
          <span data-ttu-id="227dd-231">Typ danych musi być <see langword="Integer" /> lub mogą zostać poszerzone do <see langword="Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-231">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-232">Wykonuje arytmetyczne przesunięcie w prawo (&gt;&gt;) operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-232">Performs an arithmetic right shift (&gt;&gt;) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-233">Całkowitą wartość liczbową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-233">An integral numeric value.</span>
          </span>
          <span data-ttu-id="227dd-234">Wynik przesunięcia wzorca bitowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-234">The result of shifting the bit pattern.</span>
          </span>
          <span data-ttu-id="227dd-235">Typ danych jest taka sama jak w przypadku <paramref name="o1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-235">The data type is the same as that of <paramref name="o1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-236">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-236">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StrCatObj">
      <MemberSignature Language="C#" Value="public static object StrCatObj (object vLeft, object vRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrCatObj(object vLeft, object vRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrCatObj (vLeft As Object, vRight As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrCatObj(System::Object ^ vLeft, System::Object ^ vRight);" />
      <MemberSignature Language="F#" Value="static member StrCatObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj (vLeft, vRight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="vLeft">
          <span data-ttu-id="227dd-237">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-237">Required.</span>
          </span>
          <span data-ttu-id="227dd-238">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-238">Any expression.</span>
          </span>
        </param>
        <param name="vRight">
          <span data-ttu-id="227dd-239">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-239">Required.</span>
          </span>
          <span data-ttu-id="227dd-240">Dowolne wyrażenie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-240">Any expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-241">Wykonuje ciągów (&amp;) operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-241">Performs a string concatenation (&amp;) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-242">Ciąg reprezentujący łączenie <paramref name="vLeft" /> i <paramref name="vRight" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-242">A string representing the concatenation of <paramref name="vLeft" /> and <paramref name="vRight" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-243">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-243">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SubObj">
      <MemberSignature Language="C#" Value="public static object SubObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberSignature Language="F#" Value="static member SubObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj (o1, o2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1">
          <span data-ttu-id="227dd-244">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-244">Required.</span>
          </span>
          <span data-ttu-id="227dd-245">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-245">Any numeric expression.</span>
          </span>
        </param>
        <param name="o2">
          <span data-ttu-id="227dd-246">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-246">Required.</span>
          </span>
          <span data-ttu-id="227dd-247">Dowolne wyrażenie numeryczne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-247">Any numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-248">Wykonuje operację odejmowania (-).</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-248">Performs a subtraction (–) operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-249">Różnica między <paramref name="o1" /> i <paramref name="o2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-249">The difference between <paramref name="o1" /> and <paramref name="o2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-250">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-250">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XorObj">
      <MemberSignature Language="C#" Value="public static object XorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberSignature Language="F#" Value="static member XorObj : obj * obj -&gt; obj" Usage="Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1">
          <span data-ttu-id="227dd-251">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-251">Required.</span>
          </span>
          <span data-ttu-id="227dd-252">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-252">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <param name="obj2">
          <span data-ttu-id="227dd-253">Wymagane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-253">Required.</span>
          </span>
          <span data-ttu-id="227dd-254">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-254">Any <see langword="Boolean" /> or numeric expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="227dd-255">Wykonuje <see langword="Xor" /> porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-255">Performs an <see langword="Xor" /> comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="227dd-256">A <see langword="Boolean" /> lub wartość liczbową.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-256">A <see langword="Boolean" /> or numeric value.</span>
          </span>
          <span data-ttu-id="227dd-257">Aby uzyskać <see langword="Boolean" /> porównania, wartość zwracana jest wykluczenie logiczne (wyłączne rozłączenie logiczne) z dwóch <see langword="Boolean" /> wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-257">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span>
          </span>
          <span data-ttu-id="227dd-258">Bitowe operacji (numeryczne) wartość zwracana jest wartość liczbową, która reprezentuje bitowe wykluczenie dwóch wzorców bitowych liczbowych (wyłączne bitowego rozłączenia).</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-258">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span>
          </span>
          <span data-ttu-id="227dd-259">Aby uzyskać więcej informacji, zobacz [Xor — Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="227dd-259">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="227dd-260">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="227dd-260">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>