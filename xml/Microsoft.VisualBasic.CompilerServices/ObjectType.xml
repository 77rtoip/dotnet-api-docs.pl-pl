<Type Name="ObjectType" FullName="Microsoft.VisualBasic.CompilerServices.ObjectType">
  <TypeSignature Language="C#" Value="public sealed class ObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.CompilerServices.ObjectType" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectType sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7d369-101">Ta klasa jest przestarzały począwszy od programu Visual Basic 2005.</span><span class="sxs-lookup"><span data-stu-id="7d369-101">This class has been deprecated as of Visual Basic 2005.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-102">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-102">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d369-103">Inicjuje nowe wystąpienie klasy <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="7d369-103">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.CompilerServices.ObjectType" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-104">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-104">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AddObj">
      <MemberSignature Language="C#" Value="public static object AddObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object AddObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.AddObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ AddObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="7d369-105">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-105">Required.</span></span> <span data-ttu-id="7d369-106">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-106">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="7d369-107">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-107">Required.</span></span> <span data-ttu-id="7d369-108">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-108">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-109">Wykonuje operację dodawania (+).</span><span class="sxs-lookup"><span data-stu-id="7d369-109">Performs an addition (+) operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-110">Suma <paramref name="o1" /> i <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-110">The sum of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-111">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-111">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BitAndObj">
      <MemberSignature Language="C#" Value="public static object BitAndObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitAndObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitAndObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitAndObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitAndObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="7d369-112">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-112">Required.</span></span> <span data-ttu-id="7d369-113">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-113">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="7d369-114">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-114">Required.</span></span> <span data-ttu-id="7d369-115">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-115">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-116">Wykonuje bitowej <see langword="And" /> operacji.</span><span class="sxs-lookup"><span data-stu-id="7d369-116">Performs a bitwise <see langword="And" /> operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-117">1, jeśli obie <paramref name="obj1" /> i <paramref name="obj2" /> oceny 1; w przeciwnym razie wartość 0.</span><span class="sxs-lookup"><span data-stu-id="7d369-117">1 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 1; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-118">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-118">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BitOrObj">
      <MemberSignature Language="C#" Value="public static object BitOrObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitOrObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitOrObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitOrObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitOrObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="7d369-119">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-119">Required.</span></span> <span data-ttu-id="7d369-120">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-120">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="7d369-121">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-121">Required.</span></span> <span data-ttu-id="7d369-122">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-122">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-123">Wykonuje bitowej <see langword="Or" /> operacji.</span><span class="sxs-lookup"><span data-stu-id="7d369-123">Performs a bitwise <see langword="Or" /> operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-124">0, jeśli obie <paramref name="obj1" /> i <paramref name="obj2" /> oceny 0; w przeciwnym razie wartość 1.</span><span class="sxs-lookup"><span data-stu-id="7d369-124">0 if both <paramref name="obj1" /> and <paramref name="obj2" /> evaluate to 0; otherwise, 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-125">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-125">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="BitXorObj">
      <MemberSignature Language="C#" Value="public static object BitXorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object BitXorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.BitXorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BitXorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ BitXorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="7d369-126">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-126">Required.</span></span> <span data-ttu-id="7d369-127">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-127">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="7d369-128">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-128">Required.</span></span> <span data-ttu-id="7d369-129">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-129">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-130">Wykonuje <see langword="Xor" /> operacji.</span><span class="sxs-lookup"><span data-stu-id="7d369-130">Performs an <see langword="Xor" /> operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-131">Wartość liczbowa reprezentuje z bitowego wykluczenia dwa wzorce bit liczbowych (wyłączne z bitowego rozłączenia).</span><span class="sxs-lookup"><span data-stu-id="7d369-131">A numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="7d369-132">Aby uzyskać więcej informacji, zobacz [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span><span class="sxs-lookup"><span data-stu-id="7d369-132">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-133">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-133">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DivObj">
      <MemberSignature Language="C#" Value="public static object DivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object DivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.DivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ DivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="7d369-134">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-134">Required.</span></span> <span data-ttu-id="7d369-135">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-135">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="7d369-136">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-136">Required.</span></span> <span data-ttu-id="7d369-137">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-137">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-138">Wykonuje operację dzielenia (/).</span><span class="sxs-lookup"><span data-stu-id="7d369-138">Performs a division (/) operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-139">Pełna iloraz <paramref name="o1" /> podzielona przez <paramref name="o2" />, w tym wszelkie pozostałe.</span><span class="sxs-lookup"><span data-stu-id="7d369-139">The full quotient of <paramref name="o1" /> divided by <paramref name="o2" />, including any remainder.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-140">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-140">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetObjectValuePrimitive">
      <MemberSignature Language="C#" Value="public static object GetObjectValuePrimitive (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public static object GetObjectValuePrimitive(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.GetObjectValuePrimitive(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetObjectValuePrimitive (o As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObjectValuePrimitive(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="7d369-141">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-141">Required.</span></span> <span data-ttu-id="7d369-142">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="7d369-142">Any expression.</span></span></param>
        <summary><span data-ttu-id="7d369-143">Zwraca wartość pierwotnych ramce.</span><span class="sxs-lookup"><span data-stu-id="7d369-143">Returns a boxed primitive value.</span></span> <span data-ttu-id="7d369-144">Ta metoda jest używana w celu zapobieżenia kopiowania struktury wiele razy.</span><span class="sxs-lookup"><span data-stu-id="7d369-144">This method is used to prevent copying structures multiple times.</span></span></summary>
        <returns><span data-ttu-id="7d369-145">Pierwotne wartości <paramref name="o" /> typu obiektu.</span><span class="sxs-lookup"><span data-stu-id="7d369-145">The primitive value of <paramref name="o" /> typed as object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-146">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-146">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IDivObj">
      <MemberSignature Language="C#" Value="public static object IDivObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object IDivObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.IDivObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IDivObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ IDivObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="7d369-147">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-147">Required.</span></span> <span data-ttu-id="7d369-148">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-148">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="7d369-149">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-149">Required.</span></span> <span data-ttu-id="7d369-150">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-150">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-151">Wykonuje dzielenie liczby całkowitej (\\) operacji.</span><span class="sxs-lookup"><span data-stu-id="7d369-151">Performs an integer division (\\) operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-152">Iloraz liczb całkowitych z <paramref name="o1" /> rozdzielonych <paramref name="o2" />, które odrzuca wszystkie pozostałe i zachowuje całkowitą część.</span><span class="sxs-lookup"><span data-stu-id="7d369-152">The integer quotient of <paramref name="o1" /> divided by <paramref name="o2" />, which discards any remainder and retains only the integer portion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-153">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-153">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LikeObj">
      <MemberSignature Language="C#" Value="public static bool LikeObj (object vLeft, object vRight, Microsoft.VisualBasic.CompareMethod CompareOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool LikeObj(object vLeft, object vRight, valuetype Microsoft.VisualBasic.CompareMethod CompareOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.LikeObj(System.Object,System.Object,Microsoft.VisualBasic.CompareMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LikeObj (vLeft As Object, vRight As Object, CompareOption As CompareMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool LikeObj(System::Object ^ vLeft, System::Object ^ vRight, Microsoft::VisualBasic::CompareMethod CompareOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
        <Parameter Name="CompareOption" Type="Microsoft.VisualBasic.CompareMethod" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="7d369-154">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-154">Required.</span></span> <span data-ttu-id="7d369-155">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="7d369-155">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="7d369-156">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-156">Required.</span></span> <span data-ttu-id="7d369-157">Wyrażenia ciągu zgodnych z Konwencją dopasowywanie do wzorca opisanego w operatora Like.</span><span class="sxs-lookup"><span data-stu-id="7d369-157">Any string expression conforming to the pattern-matching conventions described in Like Operator.</span></span></param>
        <param name="CompareOption"><span data-ttu-id="7d369-158">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-158">Required.</span></span> <span data-ttu-id="7d369-159">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> wartość, która określa, że operacja używany tekst lub binarny porównania.</span><span class="sxs-lookup"><span data-stu-id="7d369-159">A <see cref="T:Microsoft.VisualBasic.CompareMethod" /> value that specifies that the operation use either text or binary comparison.</span></span></param>
        <summary><span data-ttu-id="7d369-160">Wykonuje <see langword="Like" /> porównania.</span><span class="sxs-lookup"><span data-stu-id="7d369-160">Performs a <see langword="Like" /> comparison.</span></span></summary>
        <returns>
          <span data-ttu-id="7d369-161"><see langword="True" /> Jeśli reprezentacja ciągu wartości <paramref name="vLeft" /> spełnia wzorzec, który jest zawarty w <paramref name="vRight" />; w przeciwnym razie <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-161"><see langword="True" /> if the string representation of the value in <paramref name="vLeft" /> satisfies the pattern that is contained in <paramref name="vRight" />; otherwise, <see langword="False" />.</span></span> <span data-ttu-id="7d369-162"><see langword="True" /> Jeśli oba <paramref name="vLeft" /> i <paramref name="vRight" /> są <see langword="Nothing" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-162"><see langword="True" /> if both <paramref name="vLeft" /> and <paramref name="vRight" /> are <see langword="Nothing" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-163">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-163">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ModObj">
      <MemberSignature Language="C#" Value="public static object ModObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ModObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ModObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ModObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="7d369-164">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-164">Required.</span></span> <span data-ttu-id="7d369-165">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-165">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="7d369-166">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-166">Required.</span></span> <span data-ttu-id="7d369-167">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-167">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-168">Wykonuje modulo (<see langword="Mod" />) operacji.</span><span class="sxs-lookup"><span data-stu-id="7d369-168">Performs a modulus (<see langword="Mod" />) operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-169">Pozostałe po <paramref name="o1" /> przez <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-169">The remainder after <paramref name="o1" /> is divided by <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-170">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-170">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="MulObj">
      <MemberSignature Language="C#" Value="public static object MulObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object MulObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.MulObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MulObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ MulObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="7d369-171">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-171">Required.</span></span> <span data-ttu-id="7d369-172">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-172">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="7d369-173">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-173">Required.</span></span> <span data-ttu-id="7d369-174">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-174">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-175">Wykonuje operację mnożenia (\*).</span><span class="sxs-lookup"><span data-stu-id="7d369-175">Performs a multiplication (\*) operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-176">Iloczyn <paramref name="o1" /> i <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-176">The product of <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-177">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-177">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NegObj">
      <MemberSignature Language="C#" Value="public static object NegObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NegObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NegObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NegObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NegObj(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="7d369-178">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-178">Required.</span></span> <span data-ttu-id="7d369-179">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-179">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-180">Wykonuje jednoargumentowy minus (-) operacji.</span><span class="sxs-lookup"><span data-stu-id="7d369-180">Performs a unary minus (–) operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-181">Wartość ujemną <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-181">The negative value of <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-182">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-182">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="NotObj">
      <MemberSignature Language="C#" Value="public static object NotObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object NotObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.NotObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NotObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ NotObj(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="7d369-183">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-183">Required.</span></span> <span data-ttu-id="7d369-184">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-184">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-185">Wykonuje <see langword="Not" /> operacji.</span><span class="sxs-lookup"><span data-stu-id="7d369-185">Performs a <see langword="Not" /> operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-186">Dla <see langword="Boolean" /> operacji <see langword="False" /> Jeśli <paramref name="obj" /> jest <see langword="True" />; w przeciwnym razie <see langword="True" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-186">For <see langword="Boolean" /> operations, <see langword="False" /> if <paramref name="obj" /> is <see langword="True" />; otherwise, <see langword="True" />.</span></span> <span data-ttu-id="7d369-187">Dla Operacje bitowe 1, gdy <paramref name="obj" /> 0, a w przeciwnym razie 0.</span><span class="sxs-lookup"><span data-stu-id="7d369-187">For bitwise operations, 1 if <paramref name="obj" /> is 0; otherwise, 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-188">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-188">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ObjTst">
      <MemberSignature Language="C#" Value="public static int ObjTst (object o1, object o2, bool TextCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public static int32 ObjTst(object o1, object o2, bool TextCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ObjTst(System.Object,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjTst (o1 As Object, o2 As Object, TextCompare As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ObjTst(System::Object ^ o1, System::Object ^ o2, bool TextCompare);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
        <Parameter Name="TextCompare" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="7d369-189">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-189">Required.</span></span> <span data-ttu-id="7d369-190">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="7d369-190">Any expression.</span></span></param>
        <param name="o2"><span data-ttu-id="7d369-191">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-191">Required.</span></span> <span data-ttu-id="7d369-192">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="7d369-192">Any expression.</span></span></param>
        <param name="TextCompare"><span data-ttu-id="7d369-193">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-193">Required.</span></span> <span data-ttu-id="7d369-194"><see langword="True" /> do wykonania porównania bez uwzględniania wielkości liter ciągu; w przeciwnym razie <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-194"><see langword="True" /> to perform a case-insensitive string comparison; otherwise, <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="7d369-195">Przeprowadza porównanie ciągu tekst lub binarny, gdy dwa obiekty.</span><span class="sxs-lookup"><span data-stu-id="7d369-195">Performs binary or text string comparison when given two objects.</span></span></summary>
        <returns>
          <list type="table">
            <listheader>
              <term> <span data-ttu-id="7d369-196">Wartość</span><span class="sxs-lookup"><span data-stu-id="7d369-196">Value</span></span>  
  
 </term>
              <description> <span data-ttu-id="7d369-197">Warunek</span><span class="sxs-lookup"><span data-stu-id="7d369-197">Condition</span></span>  
  
 </description>
            </listheader>
            <item>
              <term> <span data-ttu-id="7d369-198">-1</span><span class="sxs-lookup"><span data-stu-id="7d369-198">-1</span></span>  
  
 </term>
              <description>
                <span data-ttu-id="7d369-199"><paramref name="o1" /> jest mniejsza niż <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-199"><paramref name="o1" /> is less than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="7d369-200">0</span><span class="sxs-lookup"><span data-stu-id="7d369-200">0</span></span>  
  
 </term>
              <description>
                <span data-ttu-id="7d369-201"><paramref name="o1" /> jest równa <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-201"><paramref name="o1" /> is equal to <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
            <item>
              <term> <span data-ttu-id="7d369-202">1</span><span class="sxs-lookup"><span data-stu-id="7d369-202">1</span></span>  
  
 </term>
              <description>
                <span data-ttu-id="7d369-203"><paramref name="o1" /> jest większa niż <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-203"><paramref name="o1" /> is greater than <paramref name="o2" />.</span></span>  
  
 </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-204">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-204">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PlusObj">
      <MemberSignature Language="C#" Value="public static object PlusObj (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PlusObj(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PlusObj(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PlusObj (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PlusObj(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="7d369-205">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-205">Required.</span></span> <span data-ttu-id="7d369-206">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-206">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-207">Wykonuje operację jednoargumentowe plus (+).</span><span class="sxs-lookup"><span data-stu-id="7d369-207">Performs a unary plus (+) operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-208">Wartość <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-208">The value of <paramref name="obj" />.</span></span> <span data-ttu-id="7d369-209">(Znak <paramref name="obj" /> niezmieniona.)</span><span class="sxs-lookup"><span data-stu-id="7d369-209">(The sign of the <paramref name="obj" /> is unchanged.)</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-210">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-210">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PowObj">
      <MemberSignature Language="C#" Value="public static object PowObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object PowObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.PowObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PowObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ PowObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="7d369-211">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-211">Required.</span></span> <span data-ttu-id="7d369-212">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-212">Any numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="7d369-213">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-213">Required.</span></span> <span data-ttu-id="7d369-214">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-214">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-215">Wykonuje operację wykładnik (^).</span><span class="sxs-lookup"><span data-stu-id="7d369-215">Performs an exponent (^) operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-216">Wynik <paramref name="obj1" /> podniesionej do potęgi równej <paramref name="obj2" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-216">The result of <paramref name="obj1" /> raised to the power of <paramref name="obj2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-217">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-217">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ShiftLeftObj">
      <MemberSignature Language="C#" Value="public static object ShiftLeftObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftLeftObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftLeftObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftLeftObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftLeftObj(System::Object ^ o1, int amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="7d369-218">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-218">Required.</span></span> <span data-ttu-id="7d369-219">Całkowite wyrażenia liczbowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-219">Integral numeric expression.</span></span> <span data-ttu-id="7d369-220">Wzorca bitowego lekkie.</span><span class="sxs-lookup"><span data-stu-id="7d369-220">The bit pattern to be shifted.</span></span> <span data-ttu-id="7d369-221">Typ danych musi być typem całkowitym (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, lub <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="7d369-221">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="7d369-222">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-222">Required.</span></span> <span data-ttu-id="7d369-223">Wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-223">Numeric expression.</span></span> <span data-ttu-id="7d369-224">Liczba bitów przesunięcia wzorca bitowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-224">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="7d369-225">Typ danych musi być <see langword="Integer" /> lub rozszerzyć do <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-225">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="7d369-226">Wykonuje arytmetyczne przesunięcie w lewo (&lt;&lt;) operacji.</span><span class="sxs-lookup"><span data-stu-id="7d369-226">Performs an arithmetic left shift (&lt;&lt;) operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-227">Całkowite wartość liczbowa.</span><span class="sxs-lookup"><span data-stu-id="7d369-227">An integral numeric value.</span></span> <span data-ttu-id="7d369-228">Wynik przesunięcia wzorca bitowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-228">The result of shifting the bit pattern.</span></span> <span data-ttu-id="7d369-229">Typ danych jest taki sam, jak te <paramref name="o1" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-229">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-230">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-230">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ShiftRightObj">
      <MemberSignature Language="C#" Value="public static object ShiftRightObj (object o1, int amount);" />
      <MemberSignature Language="ILAsm" Value=".method public static object ShiftRightObj(object o1, int32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.ShiftRightObj(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ShiftRightObj (o1 As Object, amount As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ShiftRightObj(System::Object ^ o1, int amount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="amount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="7d369-231">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-231">Required.</span></span> <span data-ttu-id="7d369-232">Całkowite wyrażenia liczbowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-232">Integral numeric expression.</span></span> <span data-ttu-id="7d369-233">Wzorca bitowego lekkie.</span><span class="sxs-lookup"><span data-stu-id="7d369-233">The bit pattern to be shifted.</span></span> <span data-ttu-id="7d369-234">Typ danych musi być typem całkowitym (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, lub <see langword="ULong" />).</span><span class="sxs-lookup"><span data-stu-id="7d369-234">The data type must be an integral type (<see langword="SByte" />, <see langword="Byte" />, <see langword="Short" />, <see langword="UShort" />, <see langword="Integer" />, <see langword="UInteger" />, <see langword="Long" />, or <see langword="ULong" />).</span></span></param>
        <param name="amount"><span data-ttu-id="7d369-235">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-235">Required.</span></span> <span data-ttu-id="7d369-236">Wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-236">Numeric expression.</span></span> <span data-ttu-id="7d369-237">Liczba bitów przesunięcia wzorca bitowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-237">The number of bits to shift the bit pattern.</span></span> <span data-ttu-id="7d369-238">Typ danych musi być <see langword="Integer" /> lub rozszerzyć do <see langword="Integer" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-238">The data type must be <see langword="Integer" /> or widen to <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="7d369-239">Wykonuje arytmetyczne przesunięcie w prawo (&gt;&gt;) operacji.</span><span class="sxs-lookup"><span data-stu-id="7d369-239">Performs an arithmetic right shift (&gt;&gt;) operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-240">Całkowite wartość liczbowa.</span><span class="sxs-lookup"><span data-stu-id="7d369-240">An integral numeric value.</span></span> <span data-ttu-id="7d369-241">Wynik przesunięcia wzorca bitowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-241">The result of shifting the bit pattern.</span></span> <span data-ttu-id="7d369-242">Typ danych jest taki sam, jak te <paramref name="o1" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-242">The data type is the same as that of <paramref name="o1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-243">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-243">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="StrCatObj">
      <MemberSignature Language="C#" Value="public static object StrCatObj (object vLeft, object vRight);" />
      <MemberSignature Language="ILAsm" Value=".method public static object StrCatObj(object vLeft, object vRight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.StrCatObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function StrCatObj (vLeft As Object, vRight As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ StrCatObj(System::Object ^ vLeft, System::Object ^ vRight);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vLeft" Type="System.Object" />
        <Parameter Name="vRight" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="vLeft"><span data-ttu-id="7d369-244">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-244">Required.</span></span> <span data-ttu-id="7d369-245">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="7d369-245">Any expression.</span></span></param>
        <param name="vRight"><span data-ttu-id="7d369-246">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-246">Required.</span></span> <span data-ttu-id="7d369-247">Dowolne wyrażenie.</span><span class="sxs-lookup"><span data-stu-id="7d369-247">Any expression.</span></span></param>
        <summary><span data-ttu-id="7d369-248">Wykonuje łączenie ciągów (&amp;) operacji.</span><span class="sxs-lookup"><span data-stu-id="7d369-248">Performs a string concatenation (&amp;) operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-249">Ciąg reprezentujący połączenie <paramref name="vLeft" /> i <paramref name="vRight" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-249">A string representing the concatenation of <paramref name="vLeft" /> and <paramref name="vRight" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-250">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-250">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SubObj">
      <MemberSignature Language="C#" Value="public static object SubObj (object o1, object o2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object SubObj(object o1, object o2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.SubObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SubObj (o1 As Object, o2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ SubObj(System::Object ^ o1, System::Object ^ o2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o1" Type="System.Object" />
        <Parameter Name="o2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o1"><span data-ttu-id="7d369-251">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-251">Required.</span></span> <span data-ttu-id="7d369-252">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-252">Any numeric expression.</span></span></param>
        <param name="o2"><span data-ttu-id="7d369-253">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-253">Required.</span></span> <span data-ttu-id="7d369-254">Dowolne wyrażenie liczbowe.</span><span class="sxs-lookup"><span data-stu-id="7d369-254">Any numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-255">Wykonuje operację odejmowania (-).</span><span class="sxs-lookup"><span data-stu-id="7d369-255">Performs a subtraction (–) operation.</span></span></summary>
        <returns><span data-ttu-id="7d369-256">Różnica między <paramref name="o1" /> i <paramref name="o2" />.</span><span class="sxs-lookup"><span data-stu-id="7d369-256">The difference between <paramref name="o1" /> and <paramref name="o2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-257">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-257">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XorObj">
      <MemberSignature Language="C#" Value="public static object XorObj (object obj1, object obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static object XorObj(object obj1, object obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.CompilerServices.ObjectType.XorObj(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function XorObj (obj1 As Object, obj2 As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ XorObj(System::Object ^ obj1, System::Object ^ obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Object" />
        <Parameter Name="obj2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="7d369-258">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-258">Required.</span></span> <span data-ttu-id="7d369-259">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-259">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <param name="obj2"><span data-ttu-id="7d369-260">Wymagany.</span><span class="sxs-lookup"><span data-stu-id="7d369-260">Required.</span></span> <span data-ttu-id="7d369-261">Wszelkie <see langword="Boolean" /> lub wyrażenia liczbowego.</span><span class="sxs-lookup"><span data-stu-id="7d369-261">Any <see langword="Boolean" /> or numeric expression.</span></span></param>
        <summary><span data-ttu-id="7d369-262">Wykonuje <see langword="Xor" /> porównania.</span><span class="sxs-lookup"><span data-stu-id="7d369-262">Performs an <see langword="Xor" /> comparison.</span></span></summary>
        <returns><span data-ttu-id="7d369-263">A <see langword="Boolean" /> lub wartość liczbowa.</span><span class="sxs-lookup"><span data-stu-id="7d369-263">A <see langword="Boolean" /> or numeric value.</span></span> <span data-ttu-id="7d369-264">Aby uzyskać <see langword="Boolean" /> porównanie, wartość zwracana jest wykluczenie logiczne (wyłączne rozłączenie logiczne) z dwóch <see langword="Boolean" /> wartości.</span><span class="sxs-lookup"><span data-stu-id="7d369-264">For a <see langword="Boolean" /> comparison, the return value is the logical exclusion (exclusive logical disjunction) of two <see langword="Boolean" /> values.</span></span> <span data-ttu-id="7d369-265">Dla Operacje bitowe (numeryczną) wartość zwracana jest wartość liczbową reprezentuje z bitowego wykluczenia dwa wzorce bit liczbowych (wyłączne z bitowego rozłączenia).</span><span class="sxs-lookup"><span data-stu-id="7d369-265">For bitwise (numeric) operations, the return value is a numeric value that represents the bitwise exclusion (exclusive bitwise disjunction) of two numeric bit patterns.</span></span> <span data-ttu-id="7d369-266">Aby uzyskać więcej informacji, zobacz [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span><span class="sxs-lookup"><span data-stu-id="7d369-266">For more information, see [Xor Operator](~/docs/visual-basic/language-reference/operators/xor-operator.md).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d369-267">Ta klasa obsługuje kompilator Visual Basic i nie jest przeznaczona do użycia bezpośrednio w kodzie.</span><span class="sxs-lookup"><span data-stu-id="7d369-267">This class supports the Visual Basic compiler and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>