<Type Name="RoleService" FullName="System.Web.ApplicationServices.RoleService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32ebe12fb9e40a658316d0e088d7d4e6890d9984" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37753997" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RoleService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.RoleService" />
  <TypeSignature Language="VB.NET" Value="Public Class RoleService" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleService" />
  <TypeSignature Language="F#" Value="type RoleService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia dostęp do dostawcy ról ASP.NET jako usługi sieci WCF Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.RoleService> Obiekt umożliwia czytanie role użytkownika za pośrednictwem usługi Windows Communication Foundation (WCF). Aby korzystać z usługi roli, należy włączyć usługę roli serwera sieci Web, a następnie połącz aplikację klienta zgodnego z usługi WCF do usługi sieci Web. Aby dowiedzieć się, jak skonfigurować usługę roli, zobacz [jak: Włącz usługę roli usługi WCF](http://msdn.microsoft.com/library/d021aa39-4cbf-4450-a3c1-d5573ca7ce8c).  
  
 Użytkownik musi zostać uwierzytelniony do odczytu ról użytkownika. Usługa roli współpracuje z żadnego rodzaju uwierzytelniania platformy ASP.NET. Aby uzyskać informacji na temat sposobu logowania się użytkowników w za pośrednictwem usługi WCF, zobacz [Omówienie usługi programu Windows Communication Foundation uwierzytelniania](http://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b).  
  
 <xref:System.Web.ApplicationServices.RoleService> Klasa udostępnia dwie metody, których powinni mieć dostęp tylko za pośrednictwem usługi WCF: <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> metody i <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> metody. <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> Metoda zwraca wszystkie role dla zalogowanego użytkownika. <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> Metoda określa, czy użytkownik znajduje się w określonej roli.  
  
 <xref:System.Web.ApplicationServices.RoleService> Obiektu zgłasza <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> zdarzeń. Utwórz program obsługi zdarzeń dla <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> zdarzenie, aby wybrać dostawcy ról, które do użycia w czasie wykonywania.  
  
 Na przykład jak używać usługi roli usługi WCF z aplikacji konsoli Zobacz [wskazówki: Korzystanie z usług aplikacji ASP.NET](http://msdn.microsoft.com/library/f3f394f0-20d6-4361-aa8f-4b21bf4933eb).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.RoleService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoleService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.ApplicationServices.RoleService" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForCurrentUser">
      <MemberSignature Language="C#" Value="public string[] GetRolesForCurrentUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetRolesForCurrentUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRolesForCurrentUser () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetRolesForCurrentUser();" />
      <MemberSignature Language="F#" Value="member this.GetRolesForCurrentUser : unit -&gt; string[]" Usage="roleService.GetRolesForCurrentUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wszystkie role dla zalogowanego użytkownika.</summary>
        <returns>Tablica nazwy ról, których należy użytkownik.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> Metoda zwraca wszystkie role dla użytkownika. Możesz użyć <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> metody, gdy musisz sprawdzić lub zachować wszystkie role użytkownika w celu określenia, jakie zasoby są dostępne dla użytkownika. Ta metoda umożliwia uniknięcie wielu wywołań <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> metody.  
  
 Wywoływanie <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> wywołuje metodę <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> zdarzeń.  
  
> [!NOTE]
>  Nie wywołuj <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> metody z kodu, który jest wykonywany na serwerze sieci Web. Należy wywołać <xref:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser%2A> metody tylko jako część usługi WCF. Aby uzyskać więcej informacji o tym, jak można odczytać ról użytkownika w kodzie, który jest wykonywany na serwerze sieci Web, zobacz <xref:System.Web.Security.Roles.GetRolesForUser%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie włączono zarządzania rolami.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCurrentUserInRole">
      <MemberSignature Language="C#" Value="public bool IsCurrentUserInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCurrentUserInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCurrentUserInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCurrentUserInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="member this.IsCurrentUserInRole : string -&gt; bool" Usage="roleService.IsCurrentUserInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">Nazwa roli do sprawdzenia.</param>
        <summary>Określa, czy zalogowany użytkownik należy do określonej roli.</summary>
        <returns>
          <see langword="true" /> Jeśli użytkownik znajduje się w określonej roli; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> Metoda sprawdza, czy zalogowany użytkownik należy do określonej roli. <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> Wywołuje metodę <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> zdarzeń.  
  
> [!NOTE]
>  Nie wywołuj <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> metody z kodu, który jest wykonywany na serwerze sieci Web. Należy wywołać <xref:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole%2A> metody tylko jako część usługi WCF. Aby uzyskać więcej informacji o sposobie Sprawdź, czy użytkownik należy do określonej grupy z kodu wykonywanego na serwerze sieci Web, zobacz <xref:System.Web.Security.Roles.IsUserInRole%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="role" /> jest <see langword="null" /> lub użytkownik nie jest zalogowany.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Nie włączono zarządzania rolami.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectingProvider">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.SelectingProviderEventArgs&gt; SelectingProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.SelectingProviderEventArgs&gt; SelectingProvider" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.RoleService.SelectingProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SelectingProvider As EventHandler(Of SelectingProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::SelectingProviderEventArgs ^&gt; ^ SelectingProvider;" />
      <MemberSignature Language="F#" Value="member this.SelectingProvider : EventHandler&lt;System.Web.ApplicationServices.SelectingProviderEventArgs&gt; " Usage="member this.SelectingProvider : System.EventHandler&lt;System.Web.ApplicationServices.SelectingProviderEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.SelectingProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy <see cref="T:System.Web.ApplicationServices.RoleService" /> wystąpienia określa dostawcy ról, które należy używać sprawdzania ról użytkownika.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.RoleService> Klasy wywołuje <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> zdarzenie, gdy ustali, który dostawca ról do użycia w celu pobrania role użytkownika. Można utworzyć program obsługi zdarzeń dla <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> zdarzeń, aby wybrać w czasie wykonywania, który dostawca ról do użycia.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak program obsługi zdarzeń, aby powiązać <xref:System.Web.ApplicationServices.RoleService.SelectingProvider> zdarzenia w pliku Global.asax. Program obsługi zdarzeń określa, w czasie wykonywania dostawcy ról, które można użyć, na podstawie nazwy użytkownika.  
  
 [!code-csharp[System.Web.Security.SelectingProviderEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SelectingProviderEventHandler/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.SelectingProviderEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SelectingProviderEventHandler/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.SelectingProviderEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>