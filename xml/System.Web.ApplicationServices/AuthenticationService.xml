<Type Name="AuthenticationService" FullName="System.Web.ApplicationServices.AuthenticationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a119b8231da9159b3f1123568345ec1921ff191b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69143083" /></Metadata><TypeSignature Language="C#" Value="public class AuthenticationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.AuthenticationService" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationService" />
  <TypeSignature Language="F#" Value="type AuthenticationService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Umożliwia dostęp do uwierzytelniania formularzy ASP.NET jako usługi sieci Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService> Obiekt umożliwia uwierzytelnianie użytkowników za pomocą usługi Windows Communication Foundation (WCF). Korzystając z usługi uwierzytelniania WCF, należy uwierzytelniać użytkowników za pomocą członkostwa ASP.NET z aplikacji znajdującej się poza aplikacją sieci Web, która przechowuje poświadczenia użytkownika. Aplikacja musi być w stanie wysyłać wiadomości i korzystać z nich w formacie protokołu SOAP. Za pomocą <xref:System.Web.ApplicationServices.AuthenticationService> klasy można rejestrować użytkowników w programie, logować użytkowników, sprawdzać poprawność poświadczeń, sprawdzać stan uwierzytelniania, dostosowywać uwierzytelnianie i konfigurować plik cookie uwierzytelniania.  
  
 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>Klasa zawiera cztery metody, do których należy uzyskać dostęp tylko za pomocą usługi WCF: metody,, i. <xref:System.Web.ApplicationServices.AuthenticationService> Aby wywołać te metody, należy włączyć usługę uwierzytelniania na serwerze sieci Web, a następnie połączyć aplikację kliencką zgodną z programem WCF z usługą sieci Web. Aby uzyskać informacje o sposobie konfigurowania usługi uwierzytelniania, zobacz [How to: Włącz usługę](https://msdn.microsoft.com/library/f7913259-762e-4a73-a771-ac9e42903f44)uwierzytelniania WCF.  
  
 Aby zalogować użytkowników, należy przekazać poświadczenia użytkownika do <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> metody. Jeśli poświadczenia są prawidłowe, <xref:System.Web.ApplicationServices.AuthenticationService> Klasa tworzy plik cookie uwierzytelniania. Jeśli plik cookie uwierzytelniania nie wygasł, wiadomo, że poświadczenia użytkownika zostały uwierzytelnione i nie ma konieczności ponownego weryfikowania poświadczeń. (Uwierzytelnianie bez plików cookie nie jest dostępne za pomocą <xref:System.Web.ApplicationServices.AuthenticationService> klasy).  
  
 Może wywołać dwa zdarzenia: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> i <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>. <xref:System.Web.ApplicationServices.AuthenticationService> <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Zdarzenie występuje, gdy poświadczenia użytkownika są weryfikowane. Utwórz procedurę obsługi zdarzeń dla <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> zdarzenia, aby dostosować sposób sprawdzania poprawności poświadczeń użytkownika. <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Zdarzenie występuje, gdy plik cookie uwierzytelniania jest ustawiany po sprawdzeniu poprawności poświadczeń użytkownika. Utwórz procedurę obsługi zdarzeń, <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> aby dostosować plik cookie uwierzytelniania.  
  
 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Metoda sprawdza poświadczenia użytkownika w celu uwierzytelnienia, ale nie zwraca biletu uwierzytelniania. Użyj <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> , gdy użytkownik zalogował się wcześniej i musisz sprawdzić, czy poświadczenia są nadal ważne na początku nowej sesji aplikacji.  
  
 Przykład użycia usługi uwierzytelniania WCF z poziomu aplikacji konsolowej, zobacz [Przewodnik: Używanie Usługi aplikacji](https://msdn.microsoft.com/library/f3f394f0-20d6-4361-aa8f-4b21bf4933eb)ASP.NET.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Omówienie usługi Windows Communication Foundation Authentication</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Web.ApplicationServices.AuthenticationService" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticating">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Authenticating As EventHandler(Of AuthenticatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::AuthenticatingEventArgs ^&gt; ^ Authenticating;" />
      <MemberSignature Language="F#" Value="member this.Authenticating : EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " Usage="member this.Authenticating : System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy poświadczenia użytkownika są weryfikowane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> jest zgłaszane, gdy poświadczenia użytkownika są weryfikowane. Utwórz procedurę obsługi zdarzeń dla <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> zdarzenia, aby dostosować sposób sprawdzania poprawności poświadczeń użytkownika.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak powiązać procedurę obsługi zdarzeń dla <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> zdarzenia `Application_Start` w metodzie pliku Global. asax.  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#1)]  
  
 Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> zdarzenia w pliku Global. asax. Program obsługi zdarzeń odczytuje dwie wartości uwierzytelniania z <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> właściwości i przekazuje je wraz z nazwą użytkownika i hasłem do niestandardowej klasy uwierzytelniania o nazwie. `StudentAuthentication`  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.AuthenticatingEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Omówienie usługi Windows Communication Foundation Authentication</related>
      </Docs>
    </Member>
    <Member MemberName="CreatingCookie">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CreatingCookie As EventHandler(Of CreatingCookieEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::CreatingCookieEventArgs ^&gt; ^ CreatingCookie;" />
      <MemberSignature Language="F#" Value="member this.CreatingCookie : EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " Usage="member this.CreatingCookie : System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy jest ustawiany plik cookie uwierzytelniania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Zdarzenie jest zgłaszane, gdy plik cookie uwierzytelniania jest ustawiany po sprawdzeniu poprawności poświadczeń użytkownika. Utwórz procedurę obsługi zdarzeń, <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> aby dostosować plik cookie uwierzytelniania.  
  
   
  
## Examples  
 Poniższy przykład pokazuje, jak powiązać procedurę obsługi zdarzeń ze <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> zdarzeniem `Application_Start` w metodzie pliku Global. asax.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#1)]  
  
 Poniższy przykład pokazuje procedurę obsługi zdarzeń dla <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> zdarzenia w pliku Global. asax. Program obsługi zdarzeń dostosowuje plik cookie uwierzytelniania przez dodanie wartości we <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> właściwości <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> do właściwości. <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> Przechowuj właściwość w pliku cookie tylko wtedy, gdy wiesz, że dane we właściwości nie są poufne. Złośliwi użytkownicy mogą uzyskać dostęp do wartości w pliku cookie.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.CreatingCookieEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Omówienie usługi Windows Communication Foundation Authentication</related>
      </Docs>
    </Member>
    <Member MemberName="IsLoggedIn">
      <MemberSignature Language="C#" Value="public bool IsLoggedIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLoggedIn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLoggedIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLoggedIn();" />
      <MemberSignature Language="F#" Value="member this.IsLoggedIn : unit -&gt; bool" Usage="authenticationService.IsLoggedIn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Określa, czy bieżący użytkownik jest uwierzytelniony.</summary>
        <returns><see langword="true" />Jeśli użytkownik został uwierzytelniony; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Metoda sprawdza, czy bieżący użytkownik jest uwierzytelniany przez <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>sprawdzenie właściwości. <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>  
  
> [!NOTE]
>  Nie wywołuj <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> metody z kodu, który jest wykonywany na serwerze sieci Web. <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> Metodę można wywołać tylko jako część usługi WCF.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Omówienie usługi Windows Communication Foundation Authentication</related>
      </Docs>
    </Member>
    <Member MemberName="Login">
      <MemberSignature Language="C#" Value="public bool Login (string username, string password, string customCredential, bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Login(string username, string password, string customCredential, bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Login (username As String, password As String, customCredential As String, isPersistent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Login(System::String ^ username, System::String ^ password, System::String ^ customCredential, bool isPersistent);" />
      <MemberSignature Language="F#" Value="member this.Login : string * string * string * bool -&gt; bool" Usage="authenticationService.Login (username, password, customCredential, isPersistent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do zweryfikowania.</param>
        <param name="password">Hasło dla określonego użytkownika.</param>
        <param name="customCredential">Wartość lub wartości do zweryfikowania oprócz <paramref name="username" /> i <paramref name="password" />, jeśli istnieją.</param>
        <param name="isPersistent">Wartość wskazująca, czy bilet uwierzytelniania pozostaje ważny między sesjami.</param>
        <summary>Sprawdza poświadczenia użytkownika i tworzy bilet uwierzytelniania (cookie), jeśli poświadczenia są prawidłowe.</summary>
        <returns><see langword="true" />Jeśli poświadczenia użytkownika są prawidłowe; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Metoda sprawdza poprawność poświadczeń użytkownika za pomocą dostawcy członkostwa. Możesz użyć domyślnego dostawcy członkostwa lub określić niestandardowego dostawcę członkostwa w czasie wykonywania. <xref:System.Web.ApplicationServices.AuthenticationService> Klasa przekazuje `userName` i <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> `customCredential`do metody dostawcy członkostwa, ale nie przekazuje. `password` Jeśli <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> zwraca `true`, program<xref:System.Web.ApplicationServices.AuthenticationService> tworzy bilet uwierzytelniania jako plik cookie. Ustaw parametr na `true` , aby utworzyć bilet uwierzytelniania, który jest poza bieżącą sesją. `isPersistent`  
  
> [!NOTE]
>  Należy zawsze używać usługi uwierzytelniania wraz z protokołem SSL (Secure Sockets Layer), aby chronić poufne dane.  
  
 Metoda wywołuje zdarzenie i<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>zdarzenie. <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Utwórz procedurę obsługi zdarzeń dla <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> programu, aby dostosować uwierzytelnianie, takie jak sprawdzanie wartości `customCredential` w lub Weryfikowanie poświadczeń za pomocą dostawcy członkostwa innego niż domyślny. Wartości w `customCredential` nie są weryfikowane przez domyślnego dostawcę członkostwa. Aby dostosować plik cookie uwierzytelniania, Utwórz procedurę obsługi zdarzeń dla <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>programu.  
  
> [!NOTE]
>  Nie wywołuj <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> metody z kodu, który jest wykonywany na serwerze sieci Web. <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Metodę można wywołać tylko jako część usługi WCF. Aby uzyskać więcej informacji, zobacz [ASP.NET Authentication](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userName" />lub <paramref name="password" /> jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Omówienie usługi Windows Communication Foundation Authentication</related>
      </Docs>
    </Member>
    <Member MemberName="Logout">
      <MemberSignature Language="C#" Value="public void Logout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Logout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Logout" />
      <MemberSignature Language="VB.NET" Value="Public Sub Logout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Logout();" />
      <MemberSignature Language="F#" Value="member this.Logout : unit -&gt; unit" Usage="authenticationService.Logout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Czyści bilet uwierzytelniania (cookie) w przeglądarce.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> Metoda czyści plik cookie uwierzytelniania z kolekcji plików cookie w przeglądarce. Użytkownik musi ponownie zalogować się w celu uwierzytelnienia.  
  
 <xref:System.Web.ApplicationServices.AuthenticationService> Klasa nie przechowuje na serwerze informacji o tym, które bilety uwierzytelniania zostały wyczyszczone.  
  
> [!NOTE]
>  Nie wywołuj <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> metody z kodu, który jest wykonywany na serwerze sieci Web. <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> Metodę można wywołać tylko jako część usługi WCF. Aby uzyskać więcej informacji, zobacz [ASP.NET Authentication](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Security.FormsAuthentication.SignOut" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Omówienie usługi Windows Communication Foundation Authentication</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public bool ValidateUser (string username, string password, string customCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateUser(string username, string password, string customCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateUser (username As String, password As String, customCredential As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateUser(System::String ^ username, System::String ^ password, System::String ^ customCredential);" />
      <MemberSignature Language="F#" Value="member this.ValidateUser : string * string * string -&gt; bool" Usage="authenticationService.ValidateUser (username, password, customCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nazwa użytkownika do zweryfikowania.</param>
        <param name="password">Hasło dla określonego użytkownika.</param>
        <param name="customCredential">Wartość lub wartości do zweryfikowania oprócz <paramref name="username" /> i <paramref name="password" />, jeśli istnieją.</param>
        <summary>Uwierzytelnia poświadczenia użytkownika bez wydawania biletu uwierzytelniania.</summary>
        <returns><see langword="true" />Jeśli poświadczenia użytkownika są prawidłowe; w przeciwnym razie. <see langword="false" /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Metoda uwierzytelnia poświadczenia użytkownika, ale nie ustawia pliku cookie uwierzytelniania. Bez pliku cookie uwierzytelniania użytkownik nie zostanie zalogowany, nawet jeśli poświadczenia są prawidłowe.  
  
 Użyj metody <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> , gdy musisz sprawdzić, czy poświadczenia użytkownika są prawidłowe bez otrzymywania pliku cookie uwierzytelniania. Można to zrobić na przykład w przypadku, gdy plik cookie uwierzytelniania jest już przechowywany w aplikacji klienckiej, ale przed rozpoczęciem nowej sesji należy sprawdzić, czy poświadczenia użytkownika są nadal ważne.  
  
 Metoda wywołuje zdarzenie ,<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> ale nie zgłasza zdarzenia. <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>  
  
> [!NOTE]
>  Nie wywołuj <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> metody z kodu, który jest wykonywany na serwerze sieci Web. <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Metodę można wywołać tylko jako część usługi WCF. Aby uzyskać więcej informacji, zobacz [ASP.NET Authentication](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userName" />lub <paramref name="password" /> jest <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Omówienie usługi Windows Communication Foundation Authentication</related>
      </Docs>
    </Member>
  </Members>
</Type>
