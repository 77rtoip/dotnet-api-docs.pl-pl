<Type Name="SearchResultCollection" FullName="System.DirectoryServices.SearchResultCollection">
  <TypeSignature Language="C#" Value="public class SearchResultCollection : MarshalByRefObject, IDisposable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchResultCollection extends System.MarshalByRefObject implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.SearchResultCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchResultCollection&#xA;Inherits MarshalByRefObject&#xA;Implements ICollection, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchResultCollection : MarshalByRefObject, IDisposable, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6e578-101"><see cref="T:System.DirectoryServices.SearchResultCollection" /> Klasa zawiera <see cref="T:System.DirectoryServices.SearchResult" /> wystąpień, które zwróciły hierarchii usługi Active Directory podczas <see cref="T:System.DirectoryServices.DirectorySearcher" /> zapytania.</span><span class="sxs-lookup"><span data-stu-id="6e578-101">The <see cref="T:System.DirectoryServices.SearchResultCollection" /> class contains the <see cref="T:System.DirectoryServices.SearchResult" /> instances that the Active Directory hierarchy returned during a <see cref="T:System.DirectoryServices.DirectorySearcher" /> query.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e578-102">Ze względu na ograniczenia implementacji <xref:System.DirectoryServices.SearchResultCollection> klasy nie można zwolnić wszystkie jej zasoby niezarządzane, gdy nadejdzie bezużytecznych.</span><span class="sxs-lookup"><span data-stu-id="6e578-102">Due to implementation restrictions, the <xref:System.DirectoryServices.SearchResultCollection> class cannot release all of its unmanaged resources when it is garbage collected.</span></span> <span data-ttu-id="6e578-103">Aby zapobiec przeciek pamięci, należy wywołać <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metody podczas <xref:System.DirectoryServices.SearchResultCollection> obiektu nie jest już potrzebne.</span><span class="sxs-lookup"><span data-stu-id="6e578-103">To prevent a memory leak, you must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method when the <xref:System.DirectoryServices.SearchResultCollection> object is no longer needed.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
      <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
    </permission>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.DirectoryServices.SearchResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.DirectoryServices.SearchResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (result As SearchResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::DirectoryServices::SearchResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.DirectoryServices.SearchResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="6e578-104"><see cref="T:System.DirectoryServices.SearchResult" /> Obiektu można znaleźć.</span><span class="sxs-lookup"><span data-stu-id="6e578-104">The <see cref="T:System.DirectoryServices.SearchResult" /> object to find.</span></span></param>
        <summary><span data-ttu-id="6e578-105">Określa, czy określonej <see cref="T:System.DirectoryServices.SearchResult" /> obiekt jest w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-105">Determines if a specified <see cref="T:System.DirectoryServices.SearchResult" /> object is in this collection.</span></span></summary>
        <returns>
          <span data-ttu-id="6e578-106"><see langword="true" /> Jeśli określona właściwość należy do tej kolekcji; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e578-106"><see langword="true" /> if the specified property belongs to this collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.DirectoryServices.SearchResult[] results, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.DirectoryServices.SearchResult[] results, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (results As SearchResult(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::DirectoryServices::SearchResult ^&gt; ^ results, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.DirectoryServices.SearchResult[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="results"><span data-ttu-id="6e578-107">Tablica <see cref="T:System.DirectoryServices.SearchResult" /> obiektów, które otrzymuje elementów tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-107">The array of <see cref="T:System.DirectoryServices.SearchResult" /> objects that receives the elements of this collection.</span></span></param>
        <param name="index"><span data-ttu-id="6e578-108">Liczony od zera indeks w <c>wyniki</c> gdy ta metoda rozpoczyna się kopiowanie tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-108">The zero-based index in <c>results</c> where this method starts copying this collection.</span></span></param>
        <summary><span data-ttu-id="6e578-109">Kopiuje wszystkie <see cref="T:System.DirectoryServices.SearchResult" /> obiektów w tej kolekcji do określonej tablicy, zaczynając od określonego indeksu tablicy docelowej.</span><span class="sxs-lookup"><span data-stu-id="6e578-109">Copies all <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection to the specific array, starting at the specified index in the target array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e578-110">Pobiera liczbę <see cref="T:System.DirectoryServices.SearchResult" /> obiektów w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-110">Gets the number of <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection.</span></span></summary>
        <value><span data-ttu-id="6e578-111">Liczba <see cref="T:System.DirectoryServices.SearchResult" /> obiektów w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-111">The number of <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6e578-112">Zwalnia wszystkie zasoby, które są używane przez <see cref="T:System.DirectoryServices.SearchResultCollection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6e578-112">Releases all resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e578-113">Zwalnia wszystkie zasoby, które są używane przez <see cref="T:System.DirectoryServices.SearchResultCollection" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6e578-113">Releases all resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e578-114"><xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> Metody umożliwia zasoby, które są używane przez <xref:System.DirectoryServices.SearchResultCollection> odbiorczego do innych celów.</span><span class="sxs-lookup"><span data-stu-id="6e578-114">The <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method, it allows the resources that are used by the <xref:System.DirectoryServices.SearchResultCollection> to be reallocated for other purposes.</span></span> <span data-ttu-id="6e578-115">Aby uzyskać więcej informacji na temat <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="6e578-115">For more information about <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 <span data-ttu-id="6e578-116">Moduł zbierający elementy bezużyteczne nie zwalnia pamięć dla <xref:System.DirectoryServices.SearchResultCollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6e578-116">The garbage collector does not release memory for a <xref:System.DirectoryServices.SearchResultCollection> object.</span></span> <span data-ttu-id="6e578-117">W związku z tym, aplikacja musi wywołać <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metoda jawnie, aby zapobiec przeciek pamięci.</span><span class="sxs-lookup"><span data-stu-id="6e578-117">Therefore, an application must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method explicitly to prevent a memory leak.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="6e578-118"><see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko zasoby niezarządzane.</span><span class="sxs-lookup"><span data-stu-id="6e578-118"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="6e578-119">Zwalnia zasoby niezarządzane używane przez <see cref="T:System.DirectoryServices.SearchResultCollection" /> obiektu i opcjonalnie zwalnia zasoby zarządzane.</span><span class="sxs-lookup"><span data-stu-id="6e578-119">Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> object and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e578-120">Ta metoda jest wywoływana przez metodę publiczną <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> — metoda i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="6e578-120">This method is called by the public <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="6e578-121"><xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> wywołuje chronioną metodę <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metody z `disposing` ustawiono parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="6e578-121"><xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> invokes the protected <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="6e578-122"><xref:System.Object.Finalize%2A> wywołuje <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> z `disposing` ustawiono parametr `false`.</span><span class="sxs-lookup"><span data-stu-id="6e578-122"><xref:System.Object.Finalize%2A> invokes <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> with the `disposing` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="6e578-123">Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby, które są przechowywane przez wszelkie obiekty zarządzane przez to <xref:System.DirectoryServices.SearchResultCollection> odwołania.</span><span class="sxs-lookup"><span data-stu-id="6e578-123">When the `disposing` parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.DirectoryServices.SearchResultCollection> references.</span></span>  
  
 <span data-ttu-id="6e578-124">Moduł zbierający elementy bezużyteczne nie zwalnia pamięć dla <xref:System.DirectoryServices.SearchResultCollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6e578-124">The garbage collector does not release memory for a <xref:System.DirectoryServices.SearchResultCollection> object.</span></span> <span data-ttu-id="6e578-125">W związku z tym należy wywołać <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metoda jawnie, aby zapobiec przeciek pamięci.</span><span class="sxs-lookup"><span data-stu-id="6e578-125">Therefore, you must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method explicitly to prevent a memory leak.</span></span>  
  
 <span data-ttu-id="6e578-126">Ta metoda wywołuje <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metody każdego obiektu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-126">This method invokes the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method of each object in the collection.</span></span>  
  
 <span data-ttu-id="6e578-127">Aby uzyskać więcej informacji na temat <xref:System.DirectoryServices.SearchResultCollection.Dispose> i <xref:System.Object.Finalize%2A>, zobacz [czyszczenie zasobów niezarządzanych](~/docs/standard/garbage-collection/unmanaged.md) i [przesłaniania metody Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="6e578-127">For more information about <xref:System.DirectoryServices.SearchResultCollection.Dispose> and <xref:System.Object.Finalize%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="6e578-128"><see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /> Metodę można wywoływać wielokrotnie przez inne obiekty.</span><span class="sxs-lookup"><span data-stu-id="6e578-128">The <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /> method can be called multiple times by other objects.</span></span> <span data-ttu-id="6e578-129">W przypadku przesłaniania <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" /> metody należy uważać, aby nie odwołują się obiekty, które zostały wcześniej zlikwidowane w wywołaniu wcześniejszych <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /> metody.</span><span class="sxs-lookup"><span data-stu-id="6e578-129">When overriding the <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" /> method be careful not to reference objects that have been previously disposed of in an earlier call to the <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /> method.</span></span> <span data-ttu-id="6e578-130">Aby uzyskać więcej informacji na temat sposobu wdrażania <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" />, zobacz [implementacja metody Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="6e578-130">For more information about how to implement <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SearchResultCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SearchResultCollection ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e578-131">Zastępuje <see cref="M:System.Object.Finalize" /> metody.</span><span class="sxs-lookup"><span data-stu-id="6e578-131">Overrides the <see cref="M:System.Object.Finalize" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6e578-132">Zwraca moduł wyliczający, który służy do iterowania po tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-132">Returns an enumerator that you can use to iterate through this collection.</span></span></summary>
        <returns><span data-ttu-id="6e578-133"><see cref="T:System.Collections.IEnumerator" /> Obiekt, który służy do iterowania po tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-133">An <see cref="T:System.Collections.IEnumerator" /> object that you can use to iterate through this collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e578-134">Pobiera zwróconego przez dojście [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) metodę, która wykonuje rzeczywiste wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="6e578-134">Gets the handle that is returned by the [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) method that performs the actual search.</span></span> <span data-ttu-id="6e578-135">Aby uzyskać więcej informacji, zobacz [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) tematu w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).</span><span class="sxs-lookup"><span data-stu-id="6e578-135">For more information, see the [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) topic in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span></summary>
        <value><span data-ttu-id="6e578-136">Wartość ADS_SEARCH_HANDLE, która korzysta z tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-136">The ADS_SEARCH_HANDLE value that this collection uses.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e578-137"><xref:System.DirectoryServices.DirectorySearcher> Tej kolekcji, który utworzył wywołuje [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) metodę, która udostępnia wyniki zapytania do obiektu T:System.DirectoryServices.SearchResultCollection.</span><span class="sxs-lookup"><span data-stu-id="6e578-137">The  <xref:System.DirectoryServices.DirectorySearcher> that created this collection calls the [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) method, which makes the query results available to the T:System.DirectoryServices.SearchResultCollection object.</span></span> <span data-ttu-id="6e578-138">Aby uzyskać więcej informacji, zobacz [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) tematu w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).</span><span class="sxs-lookup"><span data-stu-id="6e578-138">For more information, see the [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) topic in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span>  
  
 <span data-ttu-id="6e578-139">Za każdym razem, zapytanie jest wykonywane, obsługę wyniki tego zapytania jest skojarzony z jego <xref:System.DirectoryServices.SearchResultCollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6e578-139">Each time that a query is performed, a handle for the results of that query is associated with its  <xref:System.DirectoryServices.SearchResultCollection> object.</span></span> <span data-ttu-id="6e578-140">Ta dojścia odnosi się do uchwytu wyszukiwania w interfejsie ADSI.</span><span class="sxs-lookup"><span data-stu-id="6e578-140">This handle corresponds to the search handle in ADSI.</span></span> <span data-ttu-id="6e578-141">Ta dojścia jest zachowywana do czasu wywołania <xref:System.DirectoryServices.SearchResultCollection.Dispose> metoda <xref:System.DirectoryServices.SearchResultCollection> obiektu, dlatego należy wywołać <xref:System.DirectoryServices.SearchResultCollection.Dispose> zapobiegające przeciek pamięci.</span><span class="sxs-lookup"><span data-stu-id="6e578-141">This handle persists until you call the <xref:System.DirectoryServices.SearchResultCollection.Dispose> method on the <xref:System.DirectoryServices.SearchResultCollection> object, so you must call <xref:System.DirectoryServices.SearchResultCollection.Dispose> to prevent a memory leak.</span></span> <span data-ttu-id="6e578-142">Moduł zbierający elementy bezużyteczne nie spowoduje zwolnienia pamięci dla tego konkretnego obiektu.</span><span class="sxs-lookup"><span data-stu-id="6e578-142">The garbage collector does not free memory for this particular object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.DirectoryServices.SearchResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.DirectoryServices.SearchResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (result As SearchResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::DirectoryServices::SearchResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.DirectoryServices.SearchResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="6e578-143"><see cref="T:System.DirectoryServices.SearchResult" /> Obiektu do wyszukania w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-143">The <see cref="T:System.DirectoryServices.SearchResult" /> object to search for in this collection.</span></span></param>
        <summary><span data-ttu-id="6e578-144">Zwraca indeks pierwszego wystąpienia określonego <see cref="T:System.DirectoryServices.SearchResult" /> obiektu w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-144">Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.SearchResult" /> object in this collection.</span></span></summary>
        <returns><span data-ttu-id="6e578-145">Liczony od zera indeks pierwszego obiektu dopasowania.</span><span class="sxs-lookup"><span data-stu-id="6e578-145">The zero-based index of the first matching object.</span></span> <span data-ttu-id="6e578-146">Zwraca wartość -1, jeśli nie członek tej kolekcji nie jest taka sama jak <see cref="T:System.DirectoryServices.SearchResult" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="6e578-146">Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.SearchResult" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchResult this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.SearchResult Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As SearchResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SearchResult ^ default[int] { System::DirectoryServices::SearchResult ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6e578-147">Liczony od zera indeks <see cref="T:System.DirectoryServices.SearchResult" /> obiektu do pobrania.</span><span class="sxs-lookup"><span data-stu-id="6e578-147">The zero-based index of the <see cref="T:System.DirectoryServices.SearchResult" /> object to retrieve.</span></span></param>
        <summary><span data-ttu-id="6e578-148">Pobiera <see cref="T:System.DirectoryServices.SearchResult" /> obiekt, który znajduje się w określonym indeksie w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-148">Gets the <see cref="T:System.DirectoryServices.SearchResult" /> object that is located at a specified index in this collection.</span></span></summary>
        <value><span data-ttu-id="6e578-149"><see cref="T:System.DirectoryServices.SearchResult" /> Obiekt, który znajduje się w określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="6e578-149">The <see cref="T:System.DirectoryServices.SearchResult" /> object that is located at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e578-150">W języku C#, ta właściwość jest indeksatora dla <xref:System.DirectoryServices.SearchResultCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="6e578-150">In C#, this property is the indexer for the <xref:System.DirectoryServices.SearchResultCollection> class.</span></span>  
  
 <span data-ttu-id="6e578-151">W języku JScript można używać właściwości domyślnie indeksowanej wynika z typem, ale nie można jawnie definiować własnych.</span><span class="sxs-lookup"><span data-stu-id="6e578-151">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="6e578-152">Jednak określenie atrybutu expando klasy automatycznie udostępnia domyślny indeksowane właściwości, którego typ jest obiektem i o typie indeksu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="6e578-152">However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and with an index type of <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertiesLoaded">
      <MemberSignature Language="C#" Value="public string[] PropertiesLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] PropertiesLoaded" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertiesLoaded As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ PropertiesLoaded { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e578-153">Pobiera <see cref="T:System.DirectoryServices.DirectorySearcher" /> właściwości, które zostały określone, zanim wykonano wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="6e578-153">Gets the <see cref="T:System.DirectoryServices.DirectorySearcher" /> properties that were specified before the search was executed.</span></span></summary>
        <value><span data-ttu-id="6e578-154">Tablica typu <see cref="T:System.String" /> zawierający właściwości, które zostały określone w <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> kolekcji właściwości przed zostało wykonane wyszukiwanie.</span><span class="sxs-lookup"><span data-stu-id="6e578-154">An array of type <see cref="T:System.String" /> that contains the properties that were specified in the <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> property collection before the search was executed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="6e578-155">Jednowymiarowa <see cref="T:System.Array" /> który jest miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="6e578-155">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="6e578-156"><see cref="T:System.Array" /> Musi mieć indeksowania liczony od zera.</span><span class="sxs-lookup"><span data-stu-id="6e578-156">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="6e578-157">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span><span class="sxs-lookup"><span data-stu-id="6e578-157">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="6e578-158">Kopiuje elementy <see cref="T:System.Collections.ICollection" /> do <see cref="T:System.Array" />, rozpoczynając od określonego <see cref="T:System.Array" /> indeksu.</span><span class="sxs-lookup"><span data-stu-id="6e578-158">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6e578-159"><paramref name="array" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6e578-159"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6e578-160"><paramref name="index" /> jest mniejsza od zera.</span><span class="sxs-lookup"><span data-stu-id="6e578-160"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6e578-161"><paramref name="array" /> jest wielowymiarowy.</span><span class="sxs-lookup"><span data-stu-id="6e578-161"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="6e578-162">—lub—</span><span class="sxs-lookup"><span data-stu-id="6e578-162">-or-</span></span>  
  
 <span data-ttu-id="6e578-163">Liczba elementów w źródle <see cref="T:System.Collections.ICollection" /> jest większa niż dostępne miejsce od <paramref name="index" /> do końca tablicy docelowej <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="6e578-163">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="6e578-164">Typ źródła <see cref="T:System.Collections.ICollection" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="6e578-164">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e578-165">Pobiera wartość wskazującą czy uzyskują dostęp do <see cref="T:System.Collections.ICollection" /> jest synchronizowane (wielowątkowość).</span><span class="sxs-lookup"><span data-stu-id="6e578-165">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="6e578-166"><see langword="true" /> Jeśli dostęp do <see cref="T:System.Collections.ICollection" /> jest synchronizowane (wielowątkowość); w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="6e578-166"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e578-167"><xref:System.Collections.ICollection.SyncRoot%2A> Zwraca obiekt, który może służyć do synchronizujący dostęp do <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="6e578-167"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="6e578-168">Większość kolekcji klas w <xref:System.Collections?displayProperty=nameWithType> przestrzeń nazw również implementować metodę Synchronized, co zapewnia zsynchronizowane otokę odpowiednia kolekcja.</span><span class="sxs-lookup"><span data-stu-id="6e578-168">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</span></span>  
  
 <span data-ttu-id="6e578-169">Wyliczanie za pomocą kolekcji leżą nie jest procedurą bezpieczne wątku.</span><span class="sxs-lookup"><span data-stu-id="6e578-169">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="6e578-170">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="6e578-170">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="6e578-171">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="6e578-171">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="6e578-172">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="6e578-172">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="6e578-173">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <xref:System.Collections.ICollection.SyncRoot%2A> podczas wyliczania całego:</span><span class="sxs-lookup"><span data-stu-id="6e578-173">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
  lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6e578-174">Pobiera obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="6e578-174">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="6e578-175">Obiekt, który może służyć do synchronizujący dostęp do <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="6e578-175">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6e578-176">Dla kolekcji, w których Magazyn nie jest publicznie dostępna oczekiwano implementacja jest aby powrócić do bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="6e578-176">For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</span></span> <span data-ttu-id="6e578-177">Należy pamiętać, że wskaźnik do bieżącego wystąpienia nie może być wystarczający do kolekcji, które otaczają innych kolekcji; te powinny zwrócić odpowiednia Kolekcja `SyncRoot` właściwości.</span><span class="sxs-lookup"><span data-stu-id="6e578-177">Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's `SyncRoot` property.</span></span>  
  
 <span data-ttu-id="6e578-178">Większość kolekcji klas w <xref:System.Collections?displayProperty=nameWithType> przestrzeń nazw również implementować `Synchronized` metodę, która udostępnia otokę zsynchronizowane odpowiednia kolekcja.</span><span class="sxs-lookup"><span data-stu-id="6e578-178">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span> <span data-ttu-id="6e578-179">Jednak klasy pochodne zapewniają własne zsynchronizowanej wersji przy użyciu kolekcji <xref:System.Collections.ICollection.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="6e578-179">However, derived classes can provide their own synchronized version of the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="6e578-180">Synchronizowanie kodu musi wykonywać operacje <xref:System.Collections.ICollection.SyncRoot%2A> kolekcji, a nie bezpośrednio w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-180">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the collection, not directly on the collection.</span></span> <span data-ttu-id="6e578-181">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="6e578-181">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="6e578-182">W szczególności przechowuje prawidłowego synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie wystąpienie kolekcji.</span><span class="sxs-lookup"><span data-stu-id="6e578-182">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</span></span>  
  
 <span data-ttu-id="6e578-183">W przypadku braku `Synchronized` metody w kolekcji, oczekiwane wykorzystanie dla <xref:System.Collections.ICollection.SyncRoot%2A> wygląda podobnie do następującej:</span><span class="sxs-lookup"><span data-stu-id="6e578-183">In the absence of a `Synchronized` method on a collection, the expected usage for <xref:System.Collections.ICollection.SyncRoot%2A> looks like this:</span></span>  
  
```csharp  
ICollection MyCollection =...  
 lock(MyCollection.SyncRoot) {  
  // Some operation on the collection, which is now thread safe.  
 }  
```  
  
```vb  
Dim myCollection as New ICollection()  
 SyncLock myCollection.SyncRoot  
  ' Some operation on the collection, which is now thread safe.  
 End SyncLock  
```  
  
 <span data-ttu-id="6e578-184">Wyliczanie za pomocą kolekcji leżą nie jest procedurą bezpieczne wątku.</span><span class="sxs-lookup"><span data-stu-id="6e578-184">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="6e578-185">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="6e578-185">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="6e578-186">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="6e578-186">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="6e578-187">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="6e578-187">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="6e578-188">W poniższym przykładzie pokazano, jak można zablokować za pomocą kolekcji <xref:System.Collections.ICollection.SyncRoot%2A> podczas wyliczania całego:</span><span class="sxs-lookup"><span data-stu-id="6e578-188">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
 lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
  </Members>
</Type>