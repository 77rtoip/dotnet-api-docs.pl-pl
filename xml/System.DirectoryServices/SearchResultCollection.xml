<Type Name="SearchResultCollection" FullName="System.DirectoryServices.SearchResultCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b73aa0a7d099a3b3df9c7ecc1881698c8fc9dc3" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51322608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SearchResultCollection : MarshalByRefObject, IDisposable, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SearchResultCollection extends System.MarshalByRefObject implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.SearchResultCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SearchResultCollection&#xA;Inherits MarshalByRefObject&#xA;Implements ICollection, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SearchResultCollection : MarshalByRefObject, IDisposable, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type SearchResultCollection = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="a7111-101">
        <see cref="T:System.DirectoryServices.SearchResultCollection" /> Klasa zawiera <see cref="T:System.DirectoryServices.SearchResult" /> wystąpień, które zwróciły hierarchii usługi Active Directory, podczas <see cref="T:System.DirectoryServices.DirectorySearcher" /> zapytania.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a7111-101">The <see cref="T:System.DirectoryServices.SearchResultCollection" /> class contains the <see cref="T:System.DirectoryServices.SearchResult" /> instances that the Active Directory hierarchy returned during a <see cref="T:System.DirectoryServices.DirectorySearcher" /> query.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7111-102">Ze względu na ograniczenia wdrożenia <xref:System.DirectoryServices.SearchResultCollection> klasy nie można zwolnić wszystkie jej zasoby niezarządzane, gdy będzie bezużyteczne.</span><span class="sxs-lookup"><span data-stu-id="a7111-102">Due to implementation restrictions, the <xref:System.DirectoryServices.SearchResultCollection> class cannot release all of its unmanaged resources when it is garbage collected.</span></span> <span data-ttu-id="a7111-103">Aby zapobiec przeciek pamięci, należy wywołać <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metody podczas <xref:System.DirectoryServices.SearchResultCollection> obiektu nie jest już potrzebny.</span><span class="sxs-lookup"><span data-stu-id="a7111-103">To prevent a memory leak, you must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method when the <xref:System.DirectoryServices.SearchResultCollection> object is no longer needed.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
      <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
    </permission>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.DirectoryServices.SearchResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.DirectoryServices.SearchResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Contains(System.DirectoryServices.SearchResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (result As SearchResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::DirectoryServices::SearchResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.DirectoryServices.SearchResult -&gt; bool" Usage="searchResultCollection.Contains result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.DirectoryServices.SearchResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="a7111-104">
            <see cref="T:System.DirectoryServices.SearchResult" /> Obiektu do znalezienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-104">The <see cref="T:System.DirectoryServices.SearchResult" /> object to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7111-105">Określa, czy określony <see cref="T:System.DirectoryServices.SearchResult" /> obiekt jest w tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-105">Determines if a specified <see cref="T:System.DirectoryServices.SearchResult" /> object is in this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7111-106">
            <see langword="true" /> Jeśli określona właściwość należy do tej kolekcji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-106">
              <see langword="true" /> if the specified property belongs to this collection; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.DirectoryServices.SearchResult[] results, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.DirectoryServices.SearchResult[] results, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.CopyTo(System.DirectoryServices.SearchResult[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (results As SearchResult(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::DirectoryServices::SearchResult ^&gt; ^ results, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.DirectoryServices.SearchResult[] * int -&gt; unit" Usage="searchResultCollection.CopyTo (results, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.DirectoryServices.SearchResult[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="a7111-107">Tablica <see cref="T:System.DirectoryServices.SearchResult" /> obiektów, które odbiera elementów tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-107">The array of <see cref="T:System.DirectoryServices.SearchResult" /> objects that receives the elements of this collection.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a7111-108">Liczony od zera indeks w <c>wyniki</c> której ta metoda rozpoczyna kopiowanie tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-108">The zero-based index in <c>results</c> where this method starts copying this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7111-109">Kopiuje wszystkie <see cref="T:System.DirectoryServices.SearchResult" /> obiektów w tej kolekcji do określonej tablicy, zaczynając od określonego indeksu w tablicy docelowej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-109">Copies all <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection to the specific array, starting at the specified index in the target array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.DirectoryServices.SearchResultCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7111-110">Pobiera liczbę <see cref="T:System.DirectoryServices.SearchResult" /> obiektów w tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-110">Gets the number of <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7111-111">Liczba <see cref="T:System.DirectoryServices.SearchResult" /> obiektów w tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-111">The number of <see cref="T:System.DirectoryServices.SearchResult" /> objects in this collection.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a7111-112">Zwalnia wszystkie zasoby, które są używane przez <see cref="T:System.DirectoryServices.SearchResultCollection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-112">Releases all resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="searchResultCollection.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7111-113">Zwalnia wszystkie zasoby, które są używane przez <see cref="T:System.DirectoryServices.SearchResultCollection" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-113">Releases all resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7111-114"><xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> Metody umożliwia zasoby, które są używane przez <xref:System.DirectoryServices.SearchResultCollection> zostają przeniesione do innych celów.</span><span class="sxs-lookup"><span data-stu-id="a7111-114">The <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method, it allows the resources that are used by the <xref:System.DirectoryServices.SearchResultCollection> to be reallocated for other purposes.</span></span> <span data-ttu-id="a7111-115">Aby uzyskać więcej informacji na temat <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="a7111-115">For more information about <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 <span data-ttu-id="a7111-116">Moduł odśmiecania pamięci nie spowoduje zwolnienia pamięci dla <xref:System.DirectoryServices.SearchResultCollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="a7111-116">The garbage collector does not release memory for a <xref:System.DirectoryServices.SearchResultCollection> object.</span></span> <span data-ttu-id="a7111-117">W związku z tym, aplikacja musi wywołać <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metoda jawnie, aby zapobiec przeciek pamięci.</span><span class="sxs-lookup"><span data-stu-id="a7111-117">Therefore, an application must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method explicitly to prevent a memory leak.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="searchResultCollection.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="a7111-118">
            <see langword="true" /> Aby zwolnić zasoby zarządzane i niezarządzane; <see langword="false" /> aby zwolnić tylko niezarządzane zasoby.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-118">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7111-119">Zwalnia zasoby niezarządzane, które są używane przez <see cref="T:System.DirectoryServices.SearchResultCollection" /> obiektu i opcjonalnie zwalnia zasoby zarządzane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-119">Releases the unmanaged resources that are used by the <see cref="T:System.DirectoryServices.SearchResultCollection" /> object and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7111-120">Ta metoda jest wywoływana przez publiczną <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metody i <xref:System.Object.Finalize%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="a7111-120">This method is called by the public <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="a7111-121"><xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> wywołuje chronioną metodę <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metody z `disposing` parametr `true`.</span><span class="sxs-lookup"><span data-stu-id="a7111-121"><xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> invokes the protected <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="a7111-122"><xref:System.Object.Finalize%2A> wywołuje <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> z `disposing` parametr `false`.</span><span class="sxs-lookup"><span data-stu-id="a7111-122"><xref:System.Object.Finalize%2A> invokes <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> with the `disposing` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="a7111-123">Gdy `disposing` parametr jest `true`, ta metoda zwalnia wszystkie zasoby, które są przechowywane przez wszelkie obiekty zarządzane że <xref:System.DirectoryServices.SearchResultCollection> odwołania.</span><span class="sxs-lookup"><span data-stu-id="a7111-123">When the `disposing` parameter is `true`, this method releases all resources that are held by any managed objects that this <xref:System.DirectoryServices.SearchResultCollection> references.</span></span>  
  
 <span data-ttu-id="a7111-124">Moduł odśmiecania pamięci nie spowoduje zwolnienia pamięci dla <xref:System.DirectoryServices.SearchResultCollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="a7111-124">The garbage collector does not release memory for a <xref:System.DirectoryServices.SearchResultCollection> object.</span></span> <span data-ttu-id="a7111-125">W związku z tym, należy wywołać <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metoda jawnie, aby zapobiec przeciek pamięci.</span><span class="sxs-lookup"><span data-stu-id="a7111-125">Therefore, you must call the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method explicitly to prevent a memory leak.</span></span>  
  
 <span data-ttu-id="a7111-126">Ta metoda wywołuje <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metoda każdego obiektu w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="a7111-126">This method invokes the <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> method of each object in the collection.</span></span>  
  
 <span data-ttu-id="a7111-127">Aby uzyskać więcej informacji na temat <xref:System.DirectoryServices.SearchResultCollection.Dispose> i <xref:System.Object.Finalize%2A>, zobacz [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) i [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="a7111-127">For more information about <xref:System.DirectoryServices.SearchResultCollection.Dispose> and <xref:System.Object.Finalize%2A>, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="a7111-128">
              <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /> Metoda może być wywoływana wiele razy przez inne obiekty.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7111-128">The <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /> method can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="a7111-129">Podczas zastępowania <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" /> metody należy uważać, aby nie odwołują się do obiektów, które zostały wcześniej zlikwidowane wcześniejszym wywołaniem do <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /> metody.</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7111-129">When overriding the <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose(System.Boolean)" /> method be careful not to reference objects that have been previously disposed of in an earlier call to the <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" /> method.</span>
            </span>
            <span data-ttu-id="a7111-130">Aby uzyskać więcej informacji o sposobie wdrażania <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" />, zobacz [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="a7111-130">For more information about how to implement <see cref="M:System.DirectoryServices.SearchResultCollection.Dispose" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SearchResultCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SearchResultCollection ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="searchResultCollection.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7111-131">Zastępuje <see cref="M:System.Object.Finalize" /> metody.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-131">Overrides the <see cref="M:System.Object.Finalize" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="searchResultCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a7111-132">Zwraca moduł wyliczający, który można użyć do iterowania po tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-132">Returns an enumerator that you can use to iterate through this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7111-133">
            <see cref="T:System.Collections.IEnumerator" /> Obiekt, który można użyć do iterowania po tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-133">An <see cref="T:System.Collections.IEnumerator" /> object that you can use to iterate through this collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.DirectoryServices.SearchResultCollection.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7111-134">Pobiera uchwyt, który jest zwracany przez <see href="http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp">IDirectorySearch::ExecuteSearch</see> metodę, która przeprowadza rzeczywiste wyszukiwanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-134">Gets the handle that is returned by the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp">IDirectorySearch::ExecuteSearch</see> method that performs the actual search.</span>
          </span>
          <span data-ttu-id="a7111-135">Aby uzyskać więcej informacji, zobacz <see href="http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp">IDirectorySearch::ExecuteSearch</see> tematu w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-135">For more information, see the <see href="http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp">IDirectorySearch::ExecuteSearch</see> topic in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7111-136">Wartość ADS_SEARCH_HANDLE, która korzysta z tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-136">The ADS_SEARCH_HANDLE value that this collection uses.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7111-137"><xref:System.DirectoryServices.DirectorySearcher> Które tworzone w tej kolekcji wywołuje [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) metody, która udostępnia obiekt T:System.DirectoryServices.SearchResultCollection wyników zapytania.</span><span class="sxs-lookup"><span data-stu-id="a7111-137">The  <xref:System.DirectoryServices.DirectorySearcher> that created this collection calls the [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) method, which makes the query results available to the T:System.DirectoryServices.SearchResultCollection object.</span></span> <span data-ttu-id="a7111-138">Aby uzyskać więcej informacji, zobacz [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) tematu w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).</span><span class="sxs-lookup"><span data-stu-id="a7111-138">For more information, see the [IDirectorySearch::ExecuteSearch](http://msdn.microsoft.com/library/default.asp?url=/library/adsi/adsi/idirectorysearch_executesearch.asp) topic in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span>  
  
 <span data-ttu-id="a7111-139">Za każdym razem, zapytanie jest wykonywane, obsługi do wyników tej kwerendy jest skojarzony z jego <xref:System.DirectoryServices.SearchResultCollection> obiektu.</span><span class="sxs-lookup"><span data-stu-id="a7111-139">Each time that a query is performed, a handle for the results of that query is associated with its  <xref:System.DirectoryServices.SearchResultCollection> object.</span></span> <span data-ttu-id="a7111-140">To dojście odnosi się do uchwytu wyszukiwania ADSI.</span><span class="sxs-lookup"><span data-stu-id="a7111-140">This handle corresponds to the search handle in ADSI.</span></span> <span data-ttu-id="a7111-141">To dojście będzie się powtarzać, dopóki nie zostanie wywołana <xref:System.DirectoryServices.SearchResultCollection.Dispose> metody <xref:System.DirectoryServices.SearchResultCollection> obiektu, dlatego należy wywołać <xref:System.DirectoryServices.SearchResultCollection.Dispose> zapobiegające przeciek pamięci.</span><span class="sxs-lookup"><span data-stu-id="a7111-141">This handle persists until you call the <xref:System.DirectoryServices.SearchResultCollection.Dispose> method on the <xref:System.DirectoryServices.SearchResultCollection> object, so you must call <xref:System.DirectoryServices.SearchResultCollection.Dispose> to prevent a memory leak.</span></span> <span data-ttu-id="a7111-142">Moduł odśmiecania pamięci nie spowoduje zwolnienia pamięci dla tego konkretnego obiektu.</span><span class="sxs-lookup"><span data-stu-id="a7111-142">The garbage collector does not free memory for this particular object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.DirectoryServices.SearchResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.DirectoryServices.SearchResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (result As SearchResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::DirectoryServices::SearchResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.DirectoryServices.SearchResult -&gt; int" Usage="searchResultCollection.IndexOf result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.DirectoryServices.SearchResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="a7111-143">
            <see cref="T:System.DirectoryServices.SearchResult" /> Obiektu do wyszukania w tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-143">The <see cref="T:System.DirectoryServices.SearchResult" /> object to search for in this collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7111-144">Zwraca indeks pierwszego wystąpienia określonego <see cref="T:System.DirectoryServices.SearchResult" /> obiektu w tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-144">Returns the index of the first occurrence of the specified <see cref="T:System.DirectoryServices.SearchResult" /> object in this collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a7111-145">Liczony od zera indeks pierwszego pasującego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-145">The zero-based index of the first matching object.</span>
          </span>
          <span data-ttu-id="a7111-146">Zwraca wartość -1, jeśli żaden członek tej kolekcji jest taka sama jak <see cref="T:System.DirectoryServices.SearchResult" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-146">Returns -1 if no member of this collection is identical to the <see cref="T:System.DirectoryServices.SearchResult" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchResult this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.SearchResult Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As SearchResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SearchResult ^ default[int] { System::DirectoryServices::SearchResult ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.DirectoryServices.SearchResult" Usage="System.DirectoryServices.SearchResultCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="a7111-147">Liczony od zera indeks <see cref="T:System.DirectoryServices.SearchResult" /> obiektu do pobrania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-147">The zero-based index of the <see cref="T:System.DirectoryServices.SearchResult" /> object to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7111-148">Pobiera <see cref="T:System.DirectoryServices.SearchResult" /> obiekt, który znajduje się w określonym indeksie w tej kolekcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-148">Gets the <see cref="T:System.DirectoryServices.SearchResult" /> object that is located at a specified index in this collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7111-149">
            <see cref="T:System.DirectoryServices.SearchResult" /> Obiektu, który jest umieszczony pod określonym indeksem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-149">The <see cref="T:System.DirectoryServices.SearchResult" /> object that is located at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7111-150">W języku C#, ta właściwość jest indeksator <xref:System.DirectoryServices.SearchResultCollection> klasy.</span><span class="sxs-lookup"><span data-stu-id="a7111-150">In C#, this property is the indexer for the <xref:System.DirectoryServices.SearchResultCollection> class.</span></span>  
  
 <span data-ttu-id="a7111-151">W języku JScript można używać właściwości domyślnie indeksowanej definicją typu, ale nie można jawnie definiować własnych.</span><span class="sxs-lookup"><span data-stu-id="a7111-151">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="a7111-152">Jednak określenie atrybutu expando w klasie automatycznie udostępnia domyślny indeksowana właściwość, której typem jest obiektem i korzystając z indeksu typu <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="a7111-152">However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and with an index type of <xref:System.String>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertiesLoaded">
      <MemberSignature Language="C#" Value="public string[] PropertiesLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] PropertiesLoaded" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertiesLoaded As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ PropertiesLoaded { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertiesLoaded : string[]" Usage="System.DirectoryServices.SearchResultCollection.PropertiesLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7111-153">Pobiera <see cref="T:System.DirectoryServices.DirectorySearcher" /> właściwości, które zostały określone, zanim wykonany wyszukiwania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-153">Gets the <see cref="T:System.DirectoryServices.DirectorySearcher" /> properties that were specified before the search was executed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7111-154">Tablica typu <see cref="T:System.String" /> zawierający właściwości, które zostały określone w <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> kolekcji właściwości przed wyszukiwania został wykonany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-154">An array of type <see cref="T:System.String" /> that contains the properties that were specified in the <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> property collection before the search was executed.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="a7111-155">Jednowymiarowy <see cref="T:System.Array" /> czyli miejscem docelowym elementów kopiowanych z <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-155">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="a7111-156">
            <see cref="T:System.Array" /> Musi mieć Indeksowanie oparte na zerze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-156">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="a7111-157">Liczony od zera indeks w <c>tablicy</c> od rozpoczyna się kopiowanie które.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-157">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a7111-158">Kopiuje elementy ze <see cref="T:System.Collections.ICollection" /> do <see cref="T:System.Array" />, rozpoczynając od określonego <see cref="T:System.Array" /> indeksu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-158">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a7111-159">
            <paramref name="array" /> jest <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-159">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a7111-160">
            <paramref name="index" /> jest mniejsza niż zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-160">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a7111-161">
            <paramref name="array" /> ma charakter wielowymiarowy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-161">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="a7111-162">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-162">-or-</span>
          </span>
          <span data-ttu-id="a7111-163">Liczba elementów w źródle <see cref="T:System.Collections.ICollection" /> jest większa niż dostępna ilość miejsca od <paramref name="index" /> do końca tablicy docelowej <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-163">The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a7111-164">Typ źródła <see cref="T:System.Collections.ICollection" /> nie można automatycznie rzutować na typ docelowy <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-164">The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7111-165">Pobiera wartość wskazującą czy dostęp do <see cref="T:System.Collections.ICollection" /> jest synchronizowane (wątkowo).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-165">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7111-166">
            <see langword="true" /> Jeśli dostęp do <see cref="T:System.Collections.ICollection" /> jest synchronizowane (wątkowo); w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-166">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7111-167"><xref:System.Collections.ICollection.SyncRoot%2A> Zwraca obiekt, który może służyć do synchronizowania dostępu do <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="a7111-167"><xref:System.Collections.ICollection.SyncRoot%2A> returns an object, which can be used to synchronize access to the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="a7111-168">Klasy kolekcji większość w <xref:System.Collections?displayProperty=nameWithType> przestrzeni nazw także implementować metody Synchronized, co zapewnia zsynchronizowane otokę wokół kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="a7111-168">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</span></span>  
  
 <span data-ttu-id="a7111-169">Wyliczanie w kolekcji nie jest wewnętrznie bezpieczne procedury wątku.</span><span class="sxs-lookup"><span data-stu-id="a7111-169">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="a7111-170">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="a7111-170">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a7111-171">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="a7111-171">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="a7111-172">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="a7111-172">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="a7111-173">Poniższy przykład kodu pokazuje, jak można zablokować kolekcję przy użyciu <xref:System.Collections.ICollection.SyncRoot%2A> podczas całego procesu wyliczania:</span><span class="sxs-lookup"><span data-stu-id="a7111-173">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
  lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a7111-174">Pobiera obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-174">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a7111-175">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a7111-175">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a7111-176">Dla kolekcji, w której magazyn nie jest publicznie dostępna oczekiwany implementacja jest przywrócenie bieżącego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="a7111-176">For collections whose underlying store is not publicly available, the expected implementation is to return the current instance.</span></span> <span data-ttu-id="a7111-177">Należy pamiętać, że wskaźnik do bieżącego wystąpienia może nie być wystarczające dla kolekcji, które umieszczają w otoce innych kolekcji; te powinna zwrócić podstawowej kolekcji `SyncRoot` właściwości.</span><span class="sxs-lookup"><span data-stu-id="a7111-177">Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's `SyncRoot` property.</span></span>  
  
 <span data-ttu-id="a7111-178">Klasy kolekcji większość w <xref:System.Collections?displayProperty=nameWithType> także zaimplementować przestrzeń nazw `Synchronized` metody, która zapewnia zsynchronizowane otokę wokół kolekcji źródłowej.</span><span class="sxs-lookup"><span data-stu-id="a7111-178">Most collection classes in the <xref:System.Collections?displayProperty=nameWithType> namespace also implement a `Synchronized` method, which provides a synchronized wrapper around the underlying collection.</span></span> <span data-ttu-id="a7111-179">Klasy pochodne może jednak zapewniać swoją własną wersję zsynchronizowane za pomocą kolekcji <xref:System.Collections.ICollection.SyncRoot%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="a7111-179">However, derived classes can provide their own synchronized version of the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="a7111-180">Synchronizowanie kodu należy wykonywać operacje na <xref:System.Collections.ICollection.SyncRoot%2A> kolekcji, a nie bezpośrednio w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="a7111-180">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> of the collection, not directly on the collection.</span></span> <span data-ttu-id="a7111-181">Gwarantuje to prawidłowe funkcjonowanie kolekcji, które są uzyskiwane z innych obiektów.</span><span class="sxs-lookup"><span data-stu-id="a7111-181">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="a7111-182">W szczególności zachowuje właściwe synchronizacji z innych wątków, które mogą być jednocześnie modyfikowanie wystąpienie kolekcji.</span><span class="sxs-lookup"><span data-stu-id="a7111-182">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</span></span>  
  
 <span data-ttu-id="a7111-183">W przypadku braku `Synchronized` metody w kolekcji, oczekiwane użycie dla <xref:System.Collections.ICollection.SyncRoot%2A> wygląda podobnie do następującego:</span><span class="sxs-lookup"><span data-stu-id="a7111-183">In the absence of a `Synchronized` method on a collection, the expected usage for <xref:System.Collections.ICollection.SyncRoot%2A> looks like this:</span></span>  
  
```csharp  
ICollection MyCollection =...  
 lock(MyCollection.SyncRoot) {  
  // Some operation on the collection, which is now thread safe.  
 }  
```  
  
```vb  
Dim myCollection as New ICollection()  
 SyncLock myCollection.SyncRoot  
  ' Some operation on the collection, which is now thread safe.  
 End SyncLock  
```  
  
 <span data-ttu-id="a7111-184">Wyliczanie w kolekcji nie jest wewnętrznie bezpieczne procedury wątku.</span><span class="sxs-lookup"><span data-stu-id="a7111-184">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="a7111-185">Nawet gdy kolekcja jest synchronizowana, inne wątki nadal mogą ją modyfikować. Powoduje to zgłaszanie wyjątku przez moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="a7111-185">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a7111-186">Aby zagwarantować bezpieczeństwo wątków podczas wyliczania, można zablokować kolekcję podczas całego procesu wyliczania albo rejestrować wyjątki wynikłe ze zmian wprowadzanych przez inne wątków.</span><span class="sxs-lookup"><span data-stu-id="a7111-186">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="a7111-187">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="a7111-187">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="a7111-188">Poniższy przykład kodu pokazuje, jak można zablokować kolekcję przy użyciu <xref:System.Collections.ICollection.SyncRoot%2A> podczas całego procesu wyliczania:</span><span class="sxs-lookup"><span data-stu-id="a7111-188">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> during the entire enumeration:</span></span>  
  
```csharp  
ICollection myCollection = new ICollection();  
 lock(myCollection.SyncRoot) {  
  foreach (Object item in myCollection) {  
  // Insert your code here.  
  }  
 }  
```  
  
```vb  
Dim myCollection As New ICollection()  
 Dim item As Object  
 SyncLock myCollection.SyncRoot  
  For Each item In myCollection  
  ' Insert your code here.  
  Next item  
 End SyncLock  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
  </Members>
</Type>