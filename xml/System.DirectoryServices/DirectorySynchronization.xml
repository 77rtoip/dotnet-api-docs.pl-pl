<Type Name="DirectorySynchronization" FullName="System.DirectoryServices.DirectorySynchronization">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="063c07b655a9d7578068e3818399b9e3d4ec85d3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36741065" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DirectorySynchronization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectorySynchronization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.DirectorySynchronization" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectorySynchronization" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectorySynchronization" />
  <TypeSignature Language="F#" Value="type DirectorySynchronization = class" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Określa, jak zsynchronizować katalog w domenie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie C# przedstawia sposób synchronizacji katalogu.  
  
```csharp  
DirectorySearcher src = new DirectorySearcher("…");   
src.DirectorySynchornization= new DirectorySynchronization(); // Initiate dirsync,   
                                                              // this means a full synch  
  
foreach(SearchResult res in src.FindAll() )  
{  
    Console.WriteLine(…");  
}  
  
// Restart the dirsync   
foreach(SearchResult res in src.FindAll() )  
{  
    Console.WriteLine(…");  
}  
  
```  
  
 W poniższym przykładzie C# pokazano, jak zsynchronizować katalog przez przechowywanie go do pliku.  
  
```csharp  
DirectorySearcher src = new DirectorySearcher("…");   
src.DirectorySynchornization= new DirectorySynchronization(); // Initiate dirsync,   
                                                              // this means a full synch  
  
foreach(SearchResult res in src.FindAll() )  
{  
    Console.WriteLine(…");  
}  
  
// Now they should be able to persist the dirSync cookie, by serializing to a file.   
FileStream myStream = File.Create("dirsync.data");  
BinaryFormatter fmt = new BinaryFormatter();  
fmt.Serialize(myStream, src.DirectorySynchronization);  
myStream.Close();  
… ….  
  
// At some point in time, we wake up and read by de-serializing the dirSync cookie,   
// and resume the  dirSync   
FileStream myStream = FileCreate("dirsync.data");  
BinaryFormatter fmt = new BinaryFormatter();  
DirectorySynchronization dirSync = fmt.Deserialize(myStream);  
  
DirectorySearcher src = new DirectorySearcher(…);  
src.DirectorySynchronization = dirSync;  
  
foreach(SearchResult res in src.FindAll() )  
{  
    Console.WriteLine(…");  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.DirectoryServices" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySynchronization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySynchronization.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySynchronization();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySynchronization" /> obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySynchronization (byte[] cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cookie As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySynchronization(cli::array &lt;System::Byte&gt; ^ cookie);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySynchronization : byte[] -&gt; System.DirectoryServices.DirectorySynchronization" Usage="new System.DirectoryServices.DirectorySynchronization cookie" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cookie">Bajtów danych typu obiekt, który określa plik cookie wyszukiwania synchronizacji katalogu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySynchronization" /> obiektu z pliku cookie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySynchronization (System.DirectoryServices.DirectorySynchronization sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectorySynchronization sync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronization)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sync As DirectorySynchronization)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySynchronization(System::DirectoryServices::DirectorySynchronization ^ sync);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySynchronization : System.DirectoryServices.DirectorySynchronization -&gt; System.DirectoryServices.DirectorySynchronization" Usage="new System.DirectoryServices.DirectorySynchronization sync" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sync" Type="System.DirectoryServices.DirectorySynchronization" />
      </Parameters>
      <Docs>
        <param name="sync">A <see cref="T:System.DirectoryServices.DirectorySynchronization" /> obiekt typu danych.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySynchronization" /> obiektu z obiektu synchronizacji katalogu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySynchronization (System.DirectoryServices.DirectorySynchronizationOptions option);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.DirectorySynchronizationOptions option) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As DirectorySynchronizationOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySynchronization(System::DirectoryServices::DirectorySynchronizationOptions option);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySynchronization : System.DirectoryServices.DirectorySynchronizationOptions -&gt; System.DirectoryServices.DirectorySynchronization" Usage="new System.DirectoryServices.DirectorySynchronization option" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="option" Type="System.DirectoryServices.DirectorySynchronizationOptions" />
      </Parameters>
      <Docs>
        <param name="option">A <see cref="T:System.DirectoryServices.DirectorySynchronizationOptions" /> obiekt typu danych, który określa, jak jest wykonywane wyszukiwanie synchronizacji katalogów.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySynchronization" /> obiektu z opcją synchronizacji katalogów.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySynchronization (System.DirectoryServices.DirectorySynchronizationOptions option, byte[] cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.DirectorySynchronizationOptions option, unsigned int8[] cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySynchronization.#ctor(System.DirectoryServices.DirectorySynchronizationOptions,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As DirectorySynchronizationOptions, cookie As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySynchronization(System::DirectoryServices::DirectorySynchronizationOptions option, cli::array &lt;System::Byte&gt; ^ cookie);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySynchronization : System.DirectoryServices.DirectorySynchronizationOptions * byte[] -&gt; System.DirectoryServices.DirectorySynchronization" Usage="new System.DirectoryServices.DirectorySynchronization (option, cookie)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="option" Type="System.DirectoryServices.DirectorySynchronizationOptions" />
        <Parameter Name="cookie" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="option">A <see cref="T:System.DirectoryServices.DirectorySynchronizationOptions" /> obiekt typu danych, który określa, jak jest wykonywane wyszukiwanie synchronizacji katalogów.</param>
        <param name="cookie">Bajtów danych typu obiekt, który określa plik cookie wyszukiwania synchronizacji katalogu.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySynchronization" /> obiektu z opcją synchronizacji katalogów i plików cookie.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectorySynchronization Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.DirectorySynchronization Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySynchronization.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As DirectorySynchronization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::DirectorySynchronization ^ Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; System.DirectoryServices.DirectorySynchronization" Usage="directorySynchronization.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectorySynchronization</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca kopię bieżącego <see cref="T:System.DirectoryServices.DirectorySynchronization" /> wystąpienia.</summary>
        <returns>Zwraca <see cref="T:System.DirectoryServices.DirectorySynchronization" /> obiektu.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectorySynchronizationCookie">
      <MemberSignature Language="C#" Value="public byte[] GetDirectorySynchronizationCookie ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetDirectorySynchronizationCookie() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectorySynchronizationCookie () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetDirectorySynchronizationCookie();" />
      <MemberSignature Language="F#" Value="member this.GetDirectorySynchronizationCookie : unit -&gt; byte[]" Usage="directorySynchronization.GetDirectorySynchronizationCookie " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pobiera plik cookie wyszukiwania synchronizacji katalogu.</summary>
        <returns>Obiekt plik cookie wyszukiwania synchronizacji katalogu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Musi być wyliczone zwrócone wyniki wyszukiwania, aby można było pobrać plik cookie. Aby uzyskać więcej informacji, zapoznaj się z przykładem kodu [migawki później przeszukiwania](http://msdn.microsoft.com/msdnmag/issues/05/12/DirectoryServices/default.aspx?loc=&fig=true).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Option">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectorySynchronizationOptions Option { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.DirectorySynchronizationOptions Option" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySynchronization.Option" />
      <MemberSignature Language="VB.NET" Value="Public Property Option As DirectorySynchronizationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectorySynchronizationOptions Option { System::DirectoryServices::DirectorySynchronizationOptions get(); void set(System::DirectoryServices::DirectorySynchronizationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.Option : System.DirectoryServices.DirectorySynchronizationOptions with get, set" Usage="System.DirectoryServices.DirectorySynchronization.Option" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSDirectorySynchronizationFlag")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectorySynchronizationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia opcje dla wyszukiwanie synchronizacji katalogów.</summary>
        <value>A <see cref="T:System.DirectoryServices.DirectorySynchronizationOptions" /> obiektu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Opcje, których można użyć z tą właściwością znajdują się w <xref:System.DirectoryServices.DirectorySynchronizationOptions> wyliczenia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Wartość nie jest jednym z <see cref="T:System.DirectoryServices.DirectorySynchronizationOptions" /> wartości.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetDirectorySynchronizationCookie">
      <MemberSignature Language="C#" Value="public void ResetDirectorySynchronizationCookie ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetDirectorySynchronizationCookie() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetDirectorySynchronizationCookie ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetDirectorySynchronizationCookie();" />
      <MemberSignature Language="F#" Value="member this.ResetDirectorySynchronizationCookie : unit -&gt; unit" Usage="directorySynchronization.ResetDirectorySynchronizationCookie " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resetss pliku cookie wyszukiwania synchronizacji katalogu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetDirectorySynchronizationCookie">
      <MemberSignature Language="C#" Value="public void ResetDirectorySynchronizationCookie (byte[] cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetDirectorySynchronizationCookie(unsigned int8[] cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySynchronization.ResetDirectorySynchronizationCookie(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetDirectorySynchronizationCookie (cookie As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetDirectorySynchronizationCookie(cli::array &lt;System::Byte&gt; ^ cookie);" />
      <MemberSignature Language="F#" Value="member this.ResetDirectorySynchronizationCookie : byte[] -&gt; unit" Usage="directorySynchronization.ResetDirectorySynchronizationCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cookie">Bajt typu obiektu danych zawierającego plik cookie wyszukiwania synchronizacji katalogu.  Ta metoda powoduje zresetowanie pliku cookie dla tego <see cref="T:System.DirectoryServices.DirectorySynchronization" /> wystąpienie obiektu tej wartości.</param>
        <summary>Resetuje plik cookie wyszukiwania synchronizacji katalogu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>