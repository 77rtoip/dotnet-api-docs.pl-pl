<Type Name="DirectorySearcher" FullName="System.DirectoryServices.DirectorySearcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="60ca9bce94a4ced2477b60db30873134987b9325" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36671287" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DirectorySearcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectorySearcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.DirectorySearcher" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectorySearcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectorySearcher : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type DirectorySearcher = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.DirectoryServices.DSDescription("DirectorySearcherDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wykonuje kwerendy względem usługi domenowe Active Directory.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj <xref:System.DirectoryServices.DirectorySearcher> obiektu wyszukiwania i wykonywać zapytania względem hierarchii usług domenowych w usłudze Active Directory przy użyciu dostępu protokołu LDAP (Lightweight Directory). LDAP jest tylko dostarczany przez system interfejsy usługi Active Directory (ADSI) dostawca obsługującego wyszukiwanie katalogu. Administrator może upewnij, alter, a następnie usuń obiekty, które znajdują się w hierarchii. Aby uzyskać więcej informacji, zobacz [przy użyciu System.DirectoryServices](http://msdn.microsoft.com/library/ffa2f003-3a9a-4e2a-815e-825c8ddd7949).  
  
 Podczas tworzenia wystąpienia <xref:System.DirectoryServices.DirectorySearcher>, można określić katalogu głównego, aby pobrać i opcjonalną listę właściwości do pobrania. <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> Właściwość umożliwia konfigurowanie dodatkowych właściwości do wykonywania następujących zadań:  
  
-   Wyniki wyszukiwania na komputerze lokalnym w pamięci podręcznej. Ustaw <xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> właściwości `true` do przechowywania informacji katalogu na komputerze lokalnym. Aktualizacje są wprowadzone w lokalnej pamięci podręcznej i przekazane do usług domenowych w usłudze Active Directory tylko wtedy, gdy <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=nameWithType> metoda jest wywoływana.  
  
-   Określ czas, aby wyszukać, za pomocą <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> właściwości.  
  
-   Pobrać tylko nazwy atrybutu. Ustaw <xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A> właściwości `true` można pobrać tylko nazwy atrybutów, na których zostały przypisane wartości.  
  
-   Wyszukiwanie stronicowane. Ustaw <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> właściwość, aby określić maksymalną liczbę obiektów, które są zwracane w wyszukiwaniu stronicowanym. Jeśli nie chcesz wykonać wyszukiwanie stronicowane, ustaw <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> właściwości do domyślnego o wartości zero.  
  
-   Określ maksymalną liczbę zwracanych wpisów, za pomocą <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> właściwości. Jeśli ustawisz <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> właściwość do domyślnego o wartości zero, należy określić serwer domyślny jest 1000 wpisów.  
  
> [!NOTE]
>  Jeśli maksymalna liczba wpisów zwrócony i limit czasu przekracza ograniczenia, które są ustawione na serwerze, ustawienia serwera zastępują ustawienia składnika.  
  
 Aby uzyskać listę początkowe wartości właściwości dla wystąpienia <xref:System.DirectoryServices.DirectorySearcher> , zobacz <xref:System.DirectoryServices.DirectorySearcher.%23ctor> konstruktora.  
  
> [!NOTE]
>  Zakłada się, że posiadanie ogólnej wiedzy z usług domenowych w usłudze Active Directory przed użyciem tej klasy. Aby uzyskać więcej informacji, zobacz <xref:System.DirectoryServices?displayProperty=nameWithType> omówienie.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
      <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
    </permission>
    <altmember cref="T:System.DirectoryServices.DirectoryEntries" />
    <altmember cref="T:System.DirectoryServices.DirectoryEntry" />
    <altmember cref="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
    <altmember cref="T:System.DirectoryServices.DirectorySearcher" />
    <altmember cref="T:System.DirectoryServices.PropertyCollection" />
    <altmember cref="T:System.DirectoryServices.PropertyValueCollection" />
    <altmember cref="T:System.DirectoryServices.ReferralChasingOption" />
    <altmember cref="T:System.DirectoryServices.SearchResultCollection" />
    <altmember cref="T:System.DirectoryServices.SearchResult" />
    <altmember cref="T:System.DirectoryServices.ResultPropertyValueCollection" />
    <altmember cref="T:System.DirectoryServices.SearchScope" />
    <altmember cref="T:System.DirectoryServices.SortDirection" />
    <altmember cref="T:System.DirectoryServices.SortOption" />
    <altmember cref="N:System.DirectoryServices" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySearcher" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySearcher" /> z domyślnymi wartościami.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher> obiektu.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic)|  
|<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|"(objectClass=*)"|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|Pusta <xref:System.Collections.Specialized.StringCollection> obiektu|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : System.DirectoryServices.DirectoryEntry -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher searchRoot" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Węzeł w hierarchii usług domenowych w usłudze Active Directory, w którym rozpoczyna się wyszukiwanie. <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> Właściwość jest inicjowana na tę wartość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySearcher" /> przy użyciu głównego wyszukiwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher> obiektu.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|"(objectClass=*)"|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|Pusta <xref:System.Collections.Specialized.StringCollection> obiektu|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::String ^ filter);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : string -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher filter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter">Ciąg filtru wyszukiwania w formacie dostępu protokołu LDAP (Lightweight Directory). <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> Właściwość jest inicjowana na tę wartość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySearcher" /> klasy z określony filtr wyszukiwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher> obiektu.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic)|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|Pusta <xref:System.Collections.Specialized.StringCollection> obiektu|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry, filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot, System::String ^ filter);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : System.DirectoryServices.DirectoryEntry * string -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (searchRoot, filter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Węzeł w hierarchii usług domenowych w usłudze Active Directory, w którym rozpoczyna się wyszukiwanie. <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> Właściwość jest inicjowana na tę wartość.</param>
        <param name="filter">Ciąg filtru wyszukiwania w formacie dostępu protokołu LDAP (Lightweight Directory). <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> Właściwość jest inicjowana na tę wartość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySearcher" /> klasy z filtrem wyszukiwania głównego i wyszukiwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher> obiektu.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|Pusta <xref:System.Collections.Specialized.StringCollection> obiektu.|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (string filter, string[] propertiesToLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter, string[] propertiesToLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String, propertiesToLoad As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : string * string[] -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (filter, propertiesToLoad)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filter">Ciąg filtru wyszukiwania w formacie dostępu protokołu LDAP (Lightweight Directory). <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> Właściwość jest inicjowana na tę wartość.</param>
        <param name="propertiesToLoad">Zestaw właściwości do pobrania podczas wyszukiwania. <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> Właściwość jest inicjowana na tę wartość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySearcher" /> z określony filtr wyszukiwania i właściwości do pobrania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher> obiektu.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic)|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry, filter As String, propertiesToLoad As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot, System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : System.DirectoryServices.DirectoryEntry * string * string[] -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (searchRoot, filter, propertiesToLoad)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Węzeł w hierarchii usług domenowych w usłudze Active Directory, w którym rozpoczyna się wyszukiwanie. <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> Właściwość jest inicjowana na tę wartość.</param>
        <param name="filter">Ciąg filtru wyszukiwania w formacie dostępu protokołu LDAP (Lightweight Directory). <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> Właściwość jest inicjowana na tę wartość.</param>
        <param name="propertiesToLoad">Zbiór właściwości, które są pobierane podczas wyszukiwania. <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> Właściwość jest inicjowana na tę wartość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySearcher" /> klasy z głównego wyszukiwania określony filtr wyszukiwania i właściwości do pobrania...</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher> obiektu.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter, string[] propertiesToLoad, valuetype System.DirectoryServices.SearchScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String, propertiesToLoad As String(), scope As SearchScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad, System::DirectoryServices::SearchScope scope);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : string * string[] * System.DirectoryServices.SearchScope -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (filter, propertiesToLoad, scope)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
        <Parameter Name="scope" Type="System.DirectoryServices.SearchScope" />
      </Parameters>
      <Docs>
        <param name="filter">Ciąg filtru wyszukiwania w formacie dostępu protokołu LDAP (Lightweight Directory). <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> Właściwość jest inicjowana na tę wartość.</param>
        <param name="propertiesToLoad">Zestaw właściwości do pobrania podczas wyszukiwania. <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> Właściwość jest inicjowana na tę wartość.</param>
        <param name="scope">Zakres wyszukiwania, który jest uwzględniony przez serwer. <see cref="T:System.DirectoryServices.SearchScope" /> Właściwość jest inicjowana na tę wartość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySearcher" /> filtrować klasy z określonym wyszukiwania, właściwości, aby pobrać i zakres wyszukiwania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W poniższej tabeli przedstawiono wartości początkowej właściwości <xref:System.DirectoryServices.DirectorySearcher> obiektu.  
  
|Właściwość|Wartość początkowa|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Odwołanie o wartości null (`Nothing` w języku Visual Basic)|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, valuetype System.DirectoryServices.SearchScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry, filter As String, propertiesToLoad As String(), scope As SearchScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot, System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad, System::DirectoryServices::SearchScope scope);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.DirectorySearcher : System.DirectoryServices.DirectoryEntry * string * string[] * System.DirectoryServices.SearchScope -&gt; System.DirectoryServices.DirectorySearcher" Usage="new System.DirectoryServices.DirectorySearcher (searchRoot, filter, propertiesToLoad, scope)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
        <Parameter Name="scope" Type="System.DirectoryServices.SearchScope" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Węzeł w hierarchii usług domenowych w usłudze Active Directory, w którym rozpoczyna się wyszukiwanie. <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> Właściwość jest inicjowana na tę wartość.</param>
        <param name="filter">Ciąg filtru wyszukiwania w formacie dostępu protokołu LDAP (Lightweight Directory). <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> Właściwość jest inicjowana na tę wartość.</param>
        <param name="propertiesToLoad">Zestaw właściwości do pobrania podczas wyszukiwania. <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> Właściwość jest inicjowana na tę wartość.</param>
        <param name="scope">Zakres wyszukiwania, który jest uwzględniony przez serwer. <see cref="T:System.DirectoryServices.SearchScope" /> Właściwość jest inicjowana na tę wartość.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.DirectorySearcher" /> klasy głównym wyszukiwania, filtr wyszukiwania, właściwości, aby pobrać i zakres wyszukiwania.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName="Asynchronous">
      <MemberSignature Language="C#" Value="public bool Asynchronous { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Asynchronous" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Asynchronous" />
      <MemberSignature Language="VB.NET" Value="Public Property Asynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Asynchronous { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Asynchronous : bool with get, set" Usage="System.DirectoryServices.DirectorySearcher.Asynchronous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSAsynchronous")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wyszukiwanie jest wykonywane asynchronicznie.</summary>
        <value>
          <see langword="true" /> Jeśli wyszukiwanie jest asynchroniczne; <see langword="false" /> inaczej.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Asynchroniczne wyszukiwania można wyświetlać wyniki, jak zostały znalezione podczas wyszukiwania jednocześnie dodatkowych wyników. Jest to przydatne w przypadku zadań, takich jak wypełnianie pola listy.  
  
 Domyślne ustawienie dla tej właściwości jest `false`.  
  
   
  
## Examples  
 W poniższym przykładzie C# pokazuje, jak utworzyć asynchroniczne wyszukiwania.  
  
```csharp  
using System.DirectoryServices;  
...  
// Bind to the users container.  
DirectoryEntry entry = new DirectoryEntry("LDAP://CN=users,DC=fabrikam,DC=com");  
// Create a DirectorySearcher object.  
DirectorySearcher mySearcher = new DirectorySearcher(entry);  
//Set the Asynchronous property to true.  
src.Asynchronous = true;  
//Use the FindAll method to get search results.  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeScopeQuery">
      <MemberSignature Language="C#" Value="public string AttributeScopeQuery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeScopeQuery" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeScopeQuery As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AttributeScopeQuery { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AttributeScopeQuery : string with get, set" Usage="System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSAttributeQuery")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę wyświetlaną LDAP atrybut nazwy wyróżniającej do przeszukania. Tylko jeden atrybut może służyć do tego typu wyszukiwania.</summary>
        <value>LDAP, wyświetlana nazwa atrybutu, aby przeprowadzić wyszukiwanie przed lub pusty ciąg kwerendy zakresu atrybutów, nie jest ustawiona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Atrybut, który ma ustawioną wartość tej właściwości musi być atrybut nazwy wyróżniającej, takich jak element członkowski lub zarządzane. Atrybut może być pojedyncze lub wielokrotne wartości. Aby uzyskać więcej informacji, zobacz Tematy adschema "[elementu członkowskiego](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)"i"[zarządzany przez](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)" w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 Wyszukiwanie jest wykonywane względem obiektów, które są identyfikowane przez nazwę wyróżniającą, która jest określona w atrybucie obiektu podstawowego. Na przykład, jeśli obiekt podstawowy jest klasą grupy adschema i <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> ma wartość "elementu członkowskiego,", a następnie wyszukiwania zostaną wykonane względem wszystkich obiektów, które są elementami członkowskimi grupy. Aby uzyskać więcej informacji, zobacz temat klasy "Grupa" adschema w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 Gdy <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> właściwość jest używana, <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> musi mieć ustawioną właściwość <xref:System.DirectoryServices.SearchScope.Base>. Jeśli <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> właściwości ustawiono wszelkie inne wartości, ustawiania <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> zgłosi właściwości <xref:System.ArgumentException>.  
  
 Aby uzyskać więcej informacji, zobacz temat "Wykonywania kwerendy zakresu atrybutów" w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)).  
  
   
  
## Examples  
 Poniższy przykład przedstawia użycie <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> właściwości z atrybutem elementu członkowskiego można pobrać elementów członkowskich grupy. Następnie drukuje limit imiona i nazwiska członków i ich numerów telefonów.  
  
```csharp  
using System.DirectoryServices;  
DirectoryEntry group = new DirectoryEntry("LDAP://CN=MyGroup, …");  
DirectorySearcher src = new DirectorySearcher(group "(&(objectClass=user)(objectCategory=Person))");  
src.AttributeScopedQuery = "member";  
src.PropertiesToLoad.Add("sn");  
src.PropertiesToLoad.Add("givenName");  
src.PropertiesToLoad.Add("telephoneNumber");  
foreach(SearchResult res in src.FindAll())  
{  
    Console.WriteLine("…");  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> Wartość właściwości jest równa wartości innych niż <see cref="F:System.DirectoryServices.SearchScope.Base" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CacheResults">
      <MemberSignature Language="C#" Value="public bool CacheResults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheResults" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.CacheResults" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheResults { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CacheResults : bool with get, set" Usage="System.DirectoryServices.DirectorySearcher.CacheResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSCacheResults")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wynik jest buforowana na komputerze klienckim.</summary>
        <value>
          <see langword="true" /> Jeśli wynik jest buforowana na komputerze klienckim. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyniki wyszukiwania zawierają zestaw wyników dużych, wyszukiwanie będzie bardziej wydajne, jeśli ta właściwość jest ustawiona na `false` w celu uniknięcia transferu zestaw wyników do komputera klienckiego.  Jeśli tak zrobisz, jednak nie można wyliczyć wyników dwa razy, ponieważ <xref:System.DirectoryServices.SearchResultCollection> obiektu zawsze jest nazywana tworzy nowy obiekt modułu wyliczającego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ClientTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ClientTimeout" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ClientTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ClientTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ClientTimeout : TimeSpan with get, set" Usage="System.DirectoryServices.DirectorySearcher.ClientTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSClientTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną ilość czasu, który klient czeka na serwerze w celu zwracania wyników. Jeśli serwer nie odpowie w tym momencie, wyszukiwanie zostało przerwane i żadne wyniki nie są zwracane.</summary>
        <value>A <see cref="T:System.TimeSpan" /> struktury, która zawiera maksymalną ilość czasu na kliencie czekać na serwerze w celu zwracania wyników.  Wartość domyślna to-1 sekundę, co oznacza czekanie w nieskończoność.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Minimalna rozdzielczość tej właściwości jest jednej sekundzie. Części sekundy są ignorowane.  
  
 Jeśli <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> osiągnięciu, zanim upłynie limit czasu klienta, serwer zwraca wyniki i klient przestaje oczekiwania. Serwer maksymalny limit czasu wynosi 120 sekund.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="DerefAlias">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DereferenceAlias DerefAlias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.DereferenceAlias DerefAlias" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.DerefAlias" />
      <MemberSignature Language="VB.NET" Value="Public Property DerefAlias As DereferenceAlias" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DereferenceAlias DerefAlias { System::DirectoryServices::DereferenceAlias get(); void set(System::DirectoryServices::DereferenceAlias value); };" />
      <MemberSignature Language="F#" Value="member this.DerefAlias : System.DirectoryServices.DereferenceAlias with get, set" Usage="System.DirectoryServices.DirectorySearcher.DerefAlias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSDerefAlias")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DereferenceAlias</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, jak można rozpoznać aliasy obiektów, które zostały znalezione podczas wyszukiwania.</summary>
        <value>A <see cref="T:System.DirectoryServices.DereferenceAlias" /> wartość, która określa zachowanie, w którym jest wyłuskiwany aliasów. Domyślne ustawienie dla tej właściwości jest <see cref="F:System.DirectoryServices.DereferenceAlias.Never" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie C# przedstawiono sposób ustawiania <xref:System.DirectoryServices.DirectorySearcher.DerefAlias%2A> właściwości <xref:System.DirectoryServices.DereferenceAlias.Always> , dzięki czemu go wyłuskań aliasy, gdy zarówno wyszukiwania podwładnych i lokalizowanie podstawowa obiektów.  
  
```  
using System.DirectoryServices;  
...  
// Bind to the users container.  
DirectoryEntry entry = new DirectoryEntry("LDAP://CN=users,DC=fabrikam,DC=com");  
// Create a DirectorySearcher object.  
DirectorySearcher mySearcher = new DirectorySearcher(entry);  
// Set DerefAlias to Always.  
src.DerefAlias = DerefenceAlias.Always;  
//Use the FindAll method to get search results.  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.DereferenceAlias" />
      </Docs>
    </Member>
    <Member MemberName="DirectorySynchronization">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectorySynchronization DirectorySynchronization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectorySynchronization DirectorySynchronization" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
      <MemberSignature Language="VB.NET" Value="Public Property DirectorySynchronization As DirectorySynchronization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectorySynchronization ^ DirectorySynchronization { System::DirectoryServices::DirectorySynchronization ^ get(); void set(System::DirectoryServices::DirectorySynchronization ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DirectorySynchronization : System.DirectoryServices.DirectorySynchronization with get, set" Usage="System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSDirectorySynchronization")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectorySynchronization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia obiekt reprezentujący kontrolkę synchronizacji katalogu do użycia z wyszukiwania.</summary>
        <value>
          <see cref="T:System.DirectoryServices.DirectorySynchronization" /> Obiektu dla wyszukiwania. <see langword="null" /> Jeśli nie należy używać kontroli synchronizacji katalogu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kontrola synchronizacji katalogu, zwanymi powszechnie kontrolkę DirSync jest formant LDAP, który służy do wyszukiwania dla obiektów, które uległy zmianie od czasu poprzedniego stanu.  
  
 Aby uzyskać więcej informacji, zobacz temat "[sondowanie zmian za pomocą formantu DirSync](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)" w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="directorySearcher.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> Jeśli ta metoda zwalnia zasoby zarządzane i niezarządzane; <see langword="false" /> Jeśli zwalnia tylko zasoby niezarządzane.</param>
        <summary>Zwalnia zasoby zarządzane używane przez <see cref="T:System.DirectoryServices.DirectorySearcher" /> obiekt oraz opcjonalnie zwalnia zasoby niezarządzane.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedDN">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ExtendedDN ExtendedDN { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ExtendedDN ExtendedDN" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ExtendedDN" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedDN As ExtendedDN" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ExtendedDN ExtendedDN { System::DirectoryServices::ExtendedDN get(); void set(System::DirectoryServices::ExtendedDN value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedDN : System.DirectoryServices.ExtendedDN with get, set" Usage="System.DirectoryServices.DirectorySearcher.ExtendedDN" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSExtendedDn")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ExtendedDN</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą format nazwy wyróżniającej.</summary>
        <value>Jeden z <see cref="T:System.DirectoryServices.ExtendedDN" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia sposób zwracania kolekcję nazwy wyróżniające w formacie szesnastkowym.  
  
```csharp  
using System.DirectoryServices;  
...  
DirectorySearcher src = new DirectorySearcher("…");  
src.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  
src.ExtendedDN = ExtendedDN.HexString;  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : string with get, set" Usage="System.DirectoryServices.DirectorySearcher.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("(objectClass=*)")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSFilter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą format ciąg filtru dostępu protokołu LDAP (Lightweight Directory).</summary>
        <value>Ciąg filtru wyszukiwania w protokole LDAP formatu, takiego jak "(objectClass=user)". Wartość domyślna to "(objectClass=*)", która pobiera wszystkie obiekty.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Filtr korzysta z poniższych wskazówek:  
  
1.  Ciąg musi być ujęta w nawiasy.  
  
2.  Wyrażenia można używać operatorów relacyjnych: <, \<=, =, > =, a >. Na przykład "(objectClass=user)". Innym przykładem jest "(lastName > = Davis)".  
  
3.  Wyrażenia złożone są tworzone przy użyciu operatorów prefiks & i &#124;. Na przykład "(&(objectClass=user) (lastName = Davis))". Innym przykładem jest "(&(objectClass=printer) (&#124;(building=42)(building=43)))".  
  
 Gdy filtr zawiera atrybut typu ADS_UTC_TIME, jego wartość musi być w formacie yyyymmddhhmmssZ gdzie y, m, d, h, m i pozostawić s rok, miesiąc, dzień, godzina, minuty, a drugi, odpowiednio. Wartość sekund (ss) jest opcjonalna. Końcowe literę Z oznacza nie czas nie różnicowej. W tym formacie "10:20:00 rano Może 13, 1999" staje się"19990513102000Z". Należy pamiętać, że usługi domenowe Active Directory przechowuje datę i godzinę jako uniwersalny czas koordynowany (uniwersalny Greenwich). Jeśli określisz czas bez różnicowej czasu są określający czas w czasem GMT.  
  
 Jeśli nie są w strefie czasowej uniwersalny czas koordynowany można dodać różnicowej wartość do uniwersalnego czasu koordynowanego (zamiast określania Z) do określenia czasu zgodnie z Twoją strefą czasową. Różnicy opiera się na następujących: różnicowej = uniwersalny czas koordynowany - Local. Aby określić różnice, użyj następującego formatu: rrrrmmddggmmss [+/-] hh: mm. Na przykład ": 52:58 20: 00 Marzec 23 1999" Nowa Zelandia czasu Standard (12 godzin jest różnicy) jest określony jako"19990323205258.0 + 1200".  
  
 Aby uzyskać więcej informacji na temat formatu ciągu wyszukiwania LDAP, zobacz "Składnia filtru wyszukiwania" w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchResultCollection FindAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.SearchResultCollection FindAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.FindAll" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll () As SearchResultCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::SearchResultCollection ^ FindAll();" />
      <MemberSignature Language="F#" Value="member this.FindAll : unit -&gt; System.DirectoryServices.SearchResultCollection" Usage="directorySearcher.FindAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchResultCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje wyszukiwanie i zwraca zbiór wpisów, które zostały znalezione.</summary>
        <returns>A <see cref="T:System.DirectoryServices.SearchResultCollection" /> obiektu zawierającego wyniki wyszukiwania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ze względu na ograniczenia implementacji <xref:System.DirectoryServices.SearchResultCollection> klasy nie można zwolnić wszystkie jej zasoby niezarządzane, gdy nadejdzie bezużytecznych. Aby zapobiec przeciek pamięci, należy wywołać <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> metody podczas <xref:System.DirectoryServices.SearchResultCollection> obiektu nie jest już potrzebne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Określony <see cref="T:System.DirectoryServices.DirectoryEntry" /> nie jest kontenerem.</exception>
        <exception cref="T:System.NotSupportedException">Wyszukiwanie nie jest obsługiwane przez dostawcę, który jest używany.</exception>
        <altmember cref="M:System.DirectoryServices.DirectorySearcher.FindOne" />
      </Docs>
    </Member>
    <Member MemberName="FindOne">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchResult FindOne ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.SearchResult FindOne() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.FindOne" />
      <MemberSignature Language="VB.NET" Value="Public Function FindOne () As SearchResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::SearchResult ^ FindOne();" />
      <MemberSignature Language="F#" Value="member this.FindOne : unit -&gt; System.DirectoryServices.SearchResult" Usage="directorySearcher.FindOne " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wykonuje wyszukiwanie i zwraca tylko pierwszy wpis, który można znaleźć.</summary>
        <returns>A <see cref="T:System.DirectoryServices.SearchResult" /> obiekt, który zawiera pierwszej pozycji, która znajduje się podczas wyszukiwania.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli podczas wyszukiwania znajduje się więcej niż jednego wpisu, zwracany jest tylko pierwszy wpis. Jeśli nie są można odnaleźć wpisów do zgodne z kryteriami wyszukiwania, odwołanie o wartości null (`Nothing` w języku Visual Basic) jest zwracany.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DirectoryServices.DirectorySearcher.FindAll" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageSize : int with get, set" Usage="System.DirectoryServices.DirectorySearcher.PageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPageSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą rozmiar strony w wyszukiwaniu stronicowanym.</summary>
        <value>Maksymalna liczba obiektów, których serwer może zwrócić w wyszukiwaniu stronicowanym. Wartością domyślną jest zero, co oznacza, że nie wyszukiwanie stronicowane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po znalezieniu liczbę obiektów, które są określone przez serwer <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> właściwość go zatrzyma wyszukiwanie i zwracają wyniki do klienta. Gdy klient żąda większej ilości danych, serwer zostanie uruchomiony ponownie wyszukiwania, w którym zostało przerwane.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nowa wartość jest mniejsza od zera.</exception>
      </Docs>
    </Member>
    <Member MemberName="PropertiesToLoad">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection PropertiesToLoad { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection PropertiesToLoad" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertiesToLoad As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ PropertiesToLoad { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertiesToLoad : System.Collections.Specialized.StringCollection" Usage="System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPropertiesToLoad")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, listy właściwości do pobrania podczas wyszukiwania.</summary>
        <value>A <see cref="T:System.Collections.Specialized.StringCollection" /> obiekt, który zawiera zbiór właściwości, aby pobrać podczas wyszukiwania.  Wartość domyślna to pusta <see cref="T:System.Collections.Specialized.StringCollection" />, która pobiera wszystkie właściwości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby pobrać określone właściwości, dodaj je do tej kolekcji przed rozpoczęciem wyszukiwania. Na przykład `searcher.PropertiesToLoad.Add("phone");` spowoduje dodanie właściwości telefonu do listy właściwości do pobrania w wyszukiwaniu.  
  
 Właściwość "ADsPath" są zawsze pobierane podczas wyszukiwania. Na [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] i starsze systemy operacyjne konto, które wykonuje wyszukiwania musi być członkiem grupy Administratorzy, aby pobrać właściwość ntSecurityDescriptor. Jeśli nie jest to możliwe, wartość właściwości, która jest zwracana do ntSecurityDescriptor będzie `null`. Aby uzyskać więcej informacji, zobacz temat "NT —-deskryptora zabezpieczeń" w bibliotece MSDN w [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
      </Docs>
    </Member>
    <Member MemberName="PropertyNamesOnly">
      <MemberSignature Language="C#" Value="public bool PropertyNamesOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PropertyNamesOnly" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyNamesOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PropertyNamesOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PropertyNamesOnly : bool with get, set" Usage="System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPropertyNamesOnly")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wyszukiwanie pobiera tylko nazwy atrybutów, na których zostały przypisane wartości.</summary>
        <value>
          <see langword="true" /> Jeśli wyszukiwanie uzyskuje tylko nazwy atrybutów do wartości, które zostały przypisane; <see langword="false" /> wyszukiwanie uzyska nazwy i wartości dla wymaganych atrybutów. Wartość domyślna to <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferralChasing">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ReferralChasingOption ReferralChasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ReferralChasingOption ReferralChasing" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ReferralChasing" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferralChasing As ReferralChasingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ReferralChasingOption ReferralChasing { System::DirectoryServices::ReferralChasingOption get(); void set(System::DirectoryServices::ReferralChasingOption value); };" />
      <MemberSignature Language="F#" Value="member this.ReferralChasing : System.DirectoryServices.ReferralChasingOption with get, set" Usage="System.DirectoryServices.DirectorySearcher.ReferralChasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSReferralChasing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ReferralChasingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą sposób poszukiwania.</summary>
        <value>Jeden z <see cref="T:System.DirectoryServices.ReferralChasingOption" /> wartości. Wartość domyślna to <see cref="F:System.DirectoryServices.ReferralChasingOption.External" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli wyszukiwania głównego nie została określona w kontekście nazewnictwa serwera lub gdy wyniki wyszukiwania przekraczają kontekst nazewnictwa (na przykład, jeśli masz domen podrzędnych i wyszukiwania w domenie nadrzędnej), serwer wysyła komunikat odwołania do klienta, który klient może albo  Ignoruj lub zakupu.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Wartość nie jest jednym z <see cref="T:System.DirectoryServices.ReferralChasingOption" /> wartości.</exception>
        <altmember cref="T:System.DirectoryServices.ReferralChasingOption" />
      </Docs>
    </Member>
    <Member MemberName="SearchRoot">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry SearchRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntry SearchRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchRoot As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntry ^ SearchRoot { System::DirectoryServices::DirectoryEntry ^ get(); void set(System::DirectoryServices::DirectoryEntry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SearchRoot : System.DirectoryServices.DirectoryEntry with get, set" Usage="System.DirectoryServices.DirectorySearcher.SearchRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSearchRoot")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, węzeł w hierarchii usługi Active Directory, w której rozpoczyna się wyszukiwanie.</summary>
        <value>
          <see cref="T:System.DirectoryServices.DirectoryEntry" /> Obiektu w hierarchii usług domenowych w usłudze Active Directory, gdy rozpoczyna się wyszukiwanie. Wartość domyślna to odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> jest odwołanie o wartości null (`Nothing` w języku Visual Basic), głównego wyszukiwania jest ustawiany na katalog główny domeny, która jest obecnie używany przez serwer.  
  
 Istnieje kilka sposobów wyszukiwania w wykazie globalnym:  
  
-   Wyliczanie wykazu globalnego i wybierz pierwszy element podrzędny.  
  
-   Określ nazwę serwera. Funkcja DsGetDcName można odnaleźć wykazu globalnego.  Aby uzyskać więcej informacji o funkcji DsGetDcName, zobacz temat "DsGetDcName" w bibliotece MSDN pod [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
-   Pobierz RootDSE wykazu globalnego i poproś o "rootNamingContext".  
  
-   Korzystając z wykazu globalnego, podając ścieżkę wyszukiwania tak, jakby przy użyciu protokołu LDAP. Na przykład "GC: / / OU =..., DC =..., DC =...".  
  
-   Poniższy kod C# pokazano, jak wyliczyć wykazu globalnego, a następnie wybierz pierwszy element podrzędny.  
  
    ```csharp  
    DirectoryEntry entry = new DirectoryEntry("GC://forestname");  
    IEnumerator ie = entry.Children.GetEnumerator();  
    ie.MoveNext();  
    entry = (DirectoryEntry)ie.Current;  
    DirectorySearcher search = new DirectorySearcher(entry);  
    ```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchScope">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchScope SearchScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.SearchScope SearchScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchScope As SearchScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SearchScope SearchScope { System::DirectoryServices::SearchScope get(); void set(System::DirectoryServices::SearchScope value); };" />
      <MemberSignature Language="F#" Value="member this.SearchScope : System.DirectoryServices.SearchScope with get, set" Usage="System.DirectoryServices.DirectorySearcher.SearchScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSearchScope")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, zakres wyszukiwania, który jest uwzględniony przez serwer.</summary>
        <value>Jeden z <see cref="T:System.DirectoryServices.SearchScope" /> wartości. Wartość domyślna to <see cref="F:System.DirectoryServices.SearchScope.Subtree" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Wartość nie jest jednym z <see cref="T:System.DirectoryServices.SearchScope" /> wartości.</exception>
        <altmember cref="T:System.DirectoryServices.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName="SecurityMasks">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.SecurityMasks SecurityMasks" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SecurityMasks" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityMasks As SecurityMasks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SecurityMasks SecurityMasks { System::DirectoryServices::SecurityMasks get(); void set(System::DirectoryServices::SecurityMasks value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityMasks : System.DirectoryServices.SecurityMasks with get, set" Usage="System.DirectoryServices.DirectorySearcher.SecurityMasks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSecurityMasks")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SecurityMasks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, w których dostęp do informacji o zabezpieczeniach dla określonych atrybutów ma zostać zwrócony przez wyszukiwanie.</summary>
        <value>Jeden z <see cref="T:System.DirectoryServices.SecurityMasks" /> wartości.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
using System.DirectoryServices;  
...  
DirectorySearcher src = new DirectorySearcher("…");  
src.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  
src.SecurityMasks = SecurityMasks.Dacl | SecurityMasks.Owner;  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.SecurityMasks" />
      </Docs>
    </Member>
    <Member MemberName="ServerPageTimeLimit">
      <MemberSignature Language="C#" Value="public TimeSpan ServerPageTimeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ServerPageTimeLimit" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerPageTimeLimit As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ServerPageTimeLimit { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ServerPageTimeLimit : TimeSpan with get, set" Usage="System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSServerPageTimeLimit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą maksymalną ilość czasu, który serwer powinien wyszukiwania dla pojedynczej strony wyników. Nie jest taka sama jak limit czasu całego wyszukiwania.</summary>
        <value>A <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu, należy wyszukać serwera dla strony wyników.  Wartość domyślna to-1 sekund, co oznacza, że wyszukiwanie w nieskończoność.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Minimalna rozdzielczość tej właściwości jest jednej sekundzie. Części sekundy są ignorowane.  
  
 Po osiągnięciu limitu czasu serwera zatrzymuje wyszukiwanie i zwraca wyniki do współdzielenia wskazujące oraz plik cookie zawierający informacje o tym, gdzie można wznowić wyszukiwanie.  
  
> [!NOTE]
>  Ta właściwość ma zastosowanie tylko do wyszukiwania gdzie <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> ma ustawioną wartość, która nie jest to domyślna -1.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="ServerTimeLimit">
      <MemberSignature Language="C#" Value="public TimeSpan ServerTimeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ServerTimeLimit" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerTimeLimit As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ServerTimeLimit { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ServerTimeLimit : TimeSpan with get, set" Usage="System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSServerTimeLimit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" /> Właściwość pobiera lub ustawia wartość określającą maksymalną ilość czasu serwera zużywa wyszukiwania. Po osiągnięciu limitu czasu, zwracane są tylko wpisów, które znajdują się do punktu.</summary>
        <value>A <see cref="T:System.TimeSpan" /> reprezentujący ilość czasu, że serwer powinien wyszukiwania.  Wartość domyślna to-1 sekund, co oznacza, że korzysta z domyślnego określony serwer 120 sekund.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Minimalna rozdzielczość tej właściwości jest jednej sekundzie. Części sekundy są ignorowane.  
  
 W odróżnieniu od <xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> właściwość <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> właściwość wskazuje łączną ilość czasu, który serwer będzie spędzają na wyszukiwanie. Po osiągnięciu limitu czasu serwera zatrzymuje wyszukiwanie i zwraca wyniki, które współdzielenia do tego punktu.  
  
 Ustaw <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> sekundy-1, aby użyć domyślnego ustalić serwera.  
  
> [!NOTE]
>  Jeśli ustawisz <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> na wartość większą niż domyślny serwer ustalił 120 sekund, jest używany domyślny serwer ustalił. Po osiągnięciu limitu czasu serwera nie może kontynuować wyszukiwanie od miejsca, w którym.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
      </Docs>
    </Member>
    <Member MemberName="SizeLimit">
      <MemberSignature Language="C#" Value="public int SizeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SizeLimit" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SizeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SizeLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SizeLimit : int with get, set" Usage="System.DirectoryServices.DirectorySearcher.SizeLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSizeLimit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą maksymalną liczbę obiektów, które serwer zwraca w wyszukiwaniu.</summary>
        <value>Maksymalna liczba obiektów, które serwer zwraca w wyszukiwaniu. Wartością domyślną jest zero, co oznacza korzystanie z ustalić serwera domyślnego limitu rozmiaru 1000 wpisów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zatrzymuje serwer wyszukiwania po osiągnięciu limitu rozmiaru i zwraca wyniki zebranych do tego punktu.  
  
> [!NOTE]
>  Jeśli ustawisz <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> na wartość większą niż wartość domyślna określona serwera 1000 wpisów, jest używana wartość domyślna określona serwera.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Nowa wartość jest mniejsza od zera.</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SortOption Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.SortOption Sort" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As SortOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SortOption ^ Sort { System::DirectoryServices::SortOption ^ get(); void set(System::DirectoryServices::SortOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Sort : System.DirectoryServices.SortOption with get, set" Usage="System.DirectoryServices.DirectorySearcher.Sort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSort")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SortOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, właściwości, na którym wyniki są sortowane.</summary>
        <value>A <see cref="T:System.DirectoryServices.SortOption" /> obiektu, który określa właściwość i kierunku, w którym mają być sortowane wyniki wyszukiwania na.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Wartość właściwości jest <see langword="null" /> (Nothing w języku Visual Basic).</exception>
        <altmember cref="T:System.DirectoryServices.SortOption" />
      </Docs>
    </Member>
    <Member MemberName="Tombstone">
      <MemberSignature Language="C#" Value="public bool Tombstone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tombstone" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Tombstone" />
      <MemberSignature Language="VB.NET" Value="Public Property Tombstone As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Tombstone { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Tombstone : bool with get, set" Usage="System.DirectoryServices.DirectorySearcher.Tombstone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSTombstone")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy wyszukiwanie powinno zwrócić również usunięte obiekty zgodne z filtrem wyszukiwania.</summary>
        <value>
          <see langword="true" /> Jeśli usunięte obiekty powinny być uwzględnione w wyszukiwania; <see langword="false" /> inaczej. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie C# przedstawiono sposób ustawiania <xref:System.DirectoryServices.DirectorySearcher.Tombstone%2A> właściwości `true`.  
  
```csharp  
using System.DirectoryServices;  
...  
// Create a DirectorySearcher object.  
DirectorySearcher src = new DirectorySearcher("(isDeleted=true)");  
//Set the Tombstone property to true.  
src.Tombstone = true;  
//Use the FindAll method to get search results.  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualListView">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryVirtualListView VirtualListView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryVirtualListView VirtualListView" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.VirtualListView" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualListView As DirectoryVirtualListView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryVirtualListView ^ VirtualListView { System::DirectoryServices::DirectoryVirtualListView ^ get(); void set(System::DirectoryServices::DirectoryVirtualListView ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VirtualListView : System.DirectoryServices.DirectoryVirtualListView with get, set" Usage="System.DirectoryServices.DirectorySearcher.VirtualListView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSVirtualListView")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryVirtualListView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą opcji widoku listy wirtualnej wyszukiwania.</summary>
        <value>A <see cref="T:System.DirectoryServices.DirectoryVirtualListView" /> obiekt, który zawiera informacje dotyczące wyszukiwania widoku listy wirtualnej. Wartość domyślna dla tej właściwości to <see langword="null" />, co oznacza, że nie należy używać opcji wyszukiwania widoku listy wirtualnej.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.DirectoryServices.DirectoryVirtualListView" />
      </Docs>
    </Member>
  </Members>
</Type>