<Type Name="ActiveDirectorySecurity" FullName="System.DirectoryServices.ActiveDirectorySecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6069fc13cff4601625a22416c79a97678f9a27fc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37764083" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveDirectorySecurity : System.Security.AccessControl.DirectoryObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectorySecurity extends System.Security.AccessControl.DirectoryObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectorySecurity" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveDirectorySecurity&#xA;Inherits DirectoryObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectorySecurity : System::Security::AccessControl::DirectoryObjectSecurity" />
  <TypeSignature Language="F#" Value="type ActiveDirectorySecurity = class&#xA;    inherit DirectoryObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.DirectoryObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Używa warstwy zabezpieczeń obiektu zarządzanej biblioteki listy ACL, aby opakować funkcji kontroli dostępu dla obiektów katalogu.</summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Security.AccessControl.DirectoryObjectSecurity" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectorySecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectorySecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessRightType">
      <MemberSignature Language="C#" Value="public override Type AccessRightType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRightType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRightType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRightType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRightType : Type" Usage="System.DirectoryServices.ActiveDirectorySecurity.AccessRightType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Type" /> obiekt, który reprezentuje dostępu odpowiednią dla tego obiektu.</summary>
        <value>
          <see cref="T:System.Type" /> Prawo dostępu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość ta zwraca zawsze <xref:System.Type> z <xref:System.DirectoryServices.ActiveDirectoryRights> wyliczenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AccessRuleFactory">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy <see cref="T:System.Security.AccessControl.AccessRule" /> obiektu.</summary>
        <altmember cref="T:System.Security.AccessControl.AccessRule" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="abstract member AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule&#xA;override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.AccessRule" Usage="activeDirectorySecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <see cref="T:System.Security.Principal.IdentityReference" /> Obiektu, takiego jak obiekt elementu NTAccount, który jest rozpoznawany jako identyfikator zabezpieczeń (SID).</param>
        <param name="accessMask">
          <see cref="T:System.Int32" /> Maski bitów, który pokazuje uprawnienia dostępu, aby użyć.</param>
        <param name="isInherited">A <see cref="T:System.Boolean" /> obiekt, który wskazuje, czy wpisy kontroli dostępu są dziedziczone. <see langword="true" /> Jeśli wpisy kontroli dostępu, są dziedziczone. w przeciwnym razie <see langword="false" />.</param>
        <param name="inheritanceFlags">
          <see cref="T:System.Security.AccessControl.InheritanceFlags" /> Obiekt, który zawiera flagi dziedziczenia w obiekcie katalogu.</param>
        <param name="propagationFlags">A <see cref="T:System.Security.AccessControl.PropagationFlags" /> obiekt, który zawiera flagi propagacji dziedziczenia w obiekcie katalogu.</param>
        <param name="type">
          <see cref="T:System.Security.AccessControl.AccessControlType" /> Obiekt, który zawiera typ wpisu kontroli dostępu.</param>
        <summary>Tworzy <see cref="T:System.Security.AccessControl.AccessRule" /> obiektu z określonymi wartościami.</summary>
        <returns>
          <see cref="T:System.Security.AccessControl.AccessRule" /> , Który odpowiada <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> obiektu.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.AccessControl.AccessRule" />
      </Docs>
    </Member>
    <Member MemberName="AccessRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AccessRule AccessRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type, valuetype System.Guid objectGuid, valuetype System.Guid inheritedObjectGuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AccessRule ^ AccessRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type, Guid objectGuid, Guid inheritedObjectGuid);" />
      <MemberSignature Language="F#" Value="abstract member AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType * Guid * Guid -&gt; System.Security.AccessControl.AccessRule&#xA;override this.AccessRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType * Guid * Guid -&gt; System.Security.AccessControl.AccessRule" Usage="activeDirectorySecurity.AccessRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, type, objectGuid, inheritedObjectGuid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AccessRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
        <Parameter Name="objectGuid" Type="System.Guid" />
        <Parameter Name="inheritedObjectGuid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <see cref="T:System.Security.Principal.IdentityReference" /> Obiektu, takiego jak obiekt elementu NTAccount, który jest rozpoznawany jako identyfikator zabezpieczeń (SID).</param>
        <param name="accessMask">
          <see cref="T:System.Int32" /> Maski bitów, który pokazuje uprawnienia dostępu, aby użyć.</param>
        <param name="isInherited">A <see cref="T:System.Boolean" /> obiekt, który wskazuje na to, jeśli ACE są dziedziczone. <see langword="true" /> Jeśli wpisy kontroli dostępu, są dziedziczone. w przeciwnym razie <see langword="false" />.</param>
        <param name="inheritanceFlags">
          <see cref="T:System.Security.AccessControl.InheritanceFlags" /> Obiekt, który zawiera flagi dziedziczenia dla obiektu katalogu.</param>
        <param name="propagationFlags">A <see cref="T:System.Security.AccessControl.PropagationFlags" /> obiekt, który zawiera flagi propagacji dziedziczenia dla obiektu katalogu.</param>
        <param name="type">
          <see cref="T:System.Security.AccessControl.AccessControlType" /> Obiekt, który zawiera typ wpisu kontroli dostępu.</param>
        <param name="objectGuid">A <see cref="T:System.Guid" /> obiekt, który zawiera identyfikator GUID obiektu katalogu.</param>
        <param name="inheritedObjectGuid">A <see cref="T:System.Guid" /> obiekt, który zawiera identyfikator GUID obiektu katalogu dziedziczone.</param>
        <summary>Tworzy <see cref="T:System.Security.AccessControl.AccessRule" /> obiektu z określonymi wartościami.</summary>
        <returns>
          <see cref="T:System.Security.AccessControl.AccessRule" /> , Który odpowiada <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> obiektu.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.AccessControl.AccessRule" />
      </Docs>
    </Member>
    <Member MemberName="AccessRuleType">
      <MemberSignature Language="C#" Value="public override Type AccessRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AccessRuleType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AccessRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessRuleType : Type" Usage="System.DirectoryServices.ActiveDirectorySecurity.AccessRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Type" /> reprezentujący reguły dostępu dla tego obiektu.</summary>
        <value>
          <see cref="T:System.Type" /> Reguły dostępu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość ta zwraca zawsze <xref:System.Type> z <xref:System.DirectoryServices.ActiveDirectoryAccessRule> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccessRule">
      <MemberSignature Language="C#" Value="public void AddAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAccessRule(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAccessRule (rule As ActiveDirectoryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAccessRule(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AddAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; unit" Usage="activeDirectorySecurity.AddAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <see cref="M:System.Security.AccessControl.DirectoryObjectSecurity.AddAccessRule(System.Security.AccessControl.ObjectAccessRule)" /> Obiekt, którego dotyczy ta operacja.</param>
        <summary>Dodaje reguły dostępu do listy DACL obiektu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Docs>
    </Member>
    <Member MemberName="AddAuditRule">
      <MemberSignature Language="C#" Value="public void AddAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAuditRule(class System.DirectoryServices.ActiveDirectoryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAuditRule (rule As ActiveDirectoryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAuditRule(System::DirectoryServices::ActiveDirectoryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AddAuditRule : System.DirectoryServices.ActiveDirectoryAuditRule -&gt; unit" Usage="activeDirectorySecurity.AddAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <see cref="T:System.DirectoryServices.ActiveDirectoryAuditRule" /> Obiekt, którego dotyczy ta operacja.</param>
        <summary>Dodaje regułę inspekcji SACL obiektu.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AuditRuleFactory">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tworzy <see cref="T:System.Security.AccessControl.AuditRule" /> obiektu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="abstract member AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule&#xA;override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.AuditRule" Usage="activeDirectorySecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <see cref="T:System.Security.Principal.IdentityReference" /> Obiektu, takiego jak obiekt elementu NTAccount, który jest rozpoznawany jako identyfikator zabezpieczeń (SID).</param>
        <param name="accessMask">
          <see cref="T:System.Int32" /> Maski bitów, który pokazuje uprawnienia dostępu, aby użyć.</param>
        <param name="isInherited">A <see cref="T:System.Boolean" /> obiekt, który wskazuje na to, jeśli ACE są dziedziczone. <see langword="true" /> Jeśli wpisy kontroli dostępu, są dziedziczone. w przeciwnym razie <see langword="false" />.</param>
        <param name="inheritanceFlags">
          <see cref="T:System.Security.AccessControl.InheritanceFlags" /> Obiekt, który zawiera flagi dziedziczenia w obiekcie katalogu.</param>
        <param name="propagationFlags">A <see cref="T:System.Security.AccessControl.PropagationFlags" /> obiekt, który zawiera flagi propagacji dziedziczenia w obiekcie katalogu.</param>
        <param name="flags">
          <see cref="T:System.Security.AccessControl.AuditFlags" /> Obiekt, który zawiera flagi inspekcji dla tego <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> obiektu.</param>
        <summary>Tworzy <see cref="T:System.Security.AccessControl.AuditRule" /> obiektu z określonymi wartościami.</summary>
        <returns>
          <see cref="T:System.Security.AccessControl.AuditRule" /> , Który odpowiada <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> obiektu.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.AccessControl.AuditRule" />
      </Docs>
    </Member>
    <Member MemberName="AuditRuleFactory">
      <MemberSignature Language="C#" Value="public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.AccessControl.AuditRule AuditRuleFactory(class System.Security.Principal.IdentityReference identityReference, int32 accessMask, bool isInherited, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AuditFlags flags, valuetype System.Guid objectGuid, valuetype System.Guid inheritedObjectGuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::AccessControl::AuditRule ^ AuditRuleFactory(System::Security::Principal::IdentityReference ^ identityReference, int accessMask, bool isInherited, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AuditFlags flags, Guid objectGuid, Guid inheritedObjectGuid);" />
      <MemberSignature Language="F#" Value="abstract member AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags * Guid * Guid -&gt; System.Security.AccessControl.AuditRule&#xA;override this.AuditRuleFactory : System.Security.Principal.IdentityReference * int * bool * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AuditFlags * Guid * Guid -&gt; System.Security.AccessControl.AuditRule" Usage="activeDirectorySecurity.AuditRuleFactory (identityReference, accessMask, isInherited, inheritanceFlags, propagationFlags, flags, objectGuid, inheritedObjectGuid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.AuditRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="accessMask" Type="System.Int32" />
        <Parameter Name="isInherited" Type="System.Boolean" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
        <Parameter Name="objectGuid" Type="System.Guid" />
        <Parameter Name="inheritedObjectGuid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="identityReference">
          <see cref="T:System.Security.Principal.IdentityReference" /> Obiektu, takiego jak obiekt elementu NTAccount, który jest rozpoznawany jako identyfikator zabezpieczeń (SID).</param>
        <param name="accessMask">
          <see cref="T:System.Int32" /> Maski bitów, który pokazuje uprawnienia dostępu, aby użyć.</param>
        <param name="isInherited">A <see cref="T:System.Boolean" /> obiekt, który wskazuje, czy wpisy kontroli dostępu są dziedziczone. <see langword="true" /> Jeśli wpisy kontroli dostępu, są dziedziczone. w przeciwnym razie <see langword="false" />.</param>
        <param name="inheritanceFlags">
          <see cref="T:System.Security.AccessControl.InheritanceFlags" /> Obiekt, który zawiera flagi dziedziczenia w obiekcie katalogu.</param>
        <param name="propagationFlags">A <see cref="T:System.Security.AccessControl.PropagationFlags" /> obiekt, który zawiera flagi propagacji dziedziczenia w obiekcie katalogu.</param>
        <param name="flags">
          <see cref="T:System.Security.AccessControl.AuditFlags" /> Obiekt, który zawiera flagi inspekcji dla tego <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> obiektu.</param>
        <param name="objectGuid">A <see cref="T:System.Guid" /> obiekt, który zawiera Guido obiektu katalogu.</param>
        <param name="inheritedObjectGuid">A <see cref="T:System.Guid" /> obiekt, który zawiera Guido obiektu katalogu dziedziczone.</param>
        <summary>Tworzy <see cref="T:System.Security.AccessControl.AuditRule" /> obiektu z określonymi wartościami.</summary>
        <returns>
          <see cref="T:System.Security.AccessControl.AuditRule" /> , Który odpowiada <see cref="T:System.DirectoryServices.ActiveDirectorySecurity" /> obiektu.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.AccessControl.AuditRule" />
      </Docs>
    </Member>
    <Member MemberName="AuditRuleType">
      <MemberSignature Language="C#" Value="public override Type AuditRuleType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AuditRuleType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AuditRuleType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ AuditRuleType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuditRuleType : Type" Usage="System.DirectoryServices.ActiveDirectorySecurity.AuditRuleType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Type" /> reprezentujący zasady inspekcji dla tego obiektu.</summary>
        <value>
          <see cref="T:System.Type" /> Zasady inspekcji.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość ta zwraca zawsze <xref:System.Type> z <xref:System.DirectoryServices.ActiveDirectoryAuditRule> klasy.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAccessRule">
      <MemberSignature Language="C#" Value="public override bool ModifyAccessRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ModifyAccessRule(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AccessRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ModifyAccessRule (modification As AccessControlModification, rule As AccessRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ModifyAccessRule(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AccessRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="abstract member ModifyAccessRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AccessRule *  -&gt; bool&#xA;override this.ModifyAccessRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AccessRule *  -&gt; bool" Usage="activeDirectorySecurity.ModifyAccessRule (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
        <Parameter Name="modified" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification">Typ modyfikacji kontroli dostępu do wykonania.</param>
        <param name="rule">Reguły dostępu do zmodyfikowania.</param>
        <param name="modified">
          <see langword="true" /> Jeśli pomyślnie zmodyfikował; w przeciwnym razie <see langword="false" />.</param>
        <summary>Dotyczy określonej zmiany do określonego <see cref="T:System.Security.AccessControl.AccessRule" />.</summary>
        <returns>
          <see langword="true" /> Jeśli pomyślnie zmodyfikował; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifyAuditRule">
      <MemberSignature Language="C#" Value="public override bool ModifyAuditRule (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ModifyAuditRule(valuetype System.Security.AccessControl.AccessControlModification modification, class System.Security.AccessControl.AuditRule rule, [out] bool&amp; modified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ModifyAuditRule (modification As AccessControlModification, rule As AuditRule, ByRef modified As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ModifyAuditRule(System::Security::AccessControl::AccessControlModification modification, System::Security::AccessControl::AuditRule ^ rule, [Runtime::InteropServices::Out] bool % modified);" />
      <MemberSignature Language="F#" Value="abstract member ModifyAuditRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AuditRule *  -&gt; bool&#xA;override this.ModifyAuditRule : System.Security.AccessControl.AccessControlModification * System.Security.AccessControl.AuditRule *  -&gt; bool" Usage="activeDirectorySecurity.ModifyAuditRule (modification, rule, modified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
        <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
        <Parameter Name="modified" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="modification">Zmiana do zastosowania.</param>
        <param name="rule">Zasady inspekcji do zmodyfikowania.</param>
        <param name="modified">
          <see langword="true" /> Jeśli pomyślnie zmodyfikował; w przeciwnym razie <see langword="false" />.</param>
        <summary>Dotyczy określonej zmiany do określonego <see cref="T:System.Security.AccessControl.AuditRule" />.</summary>
        <returns>
          <see langword="true" /> Jeśli pomyślnie zmodyfikował; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PurgeAccessRules">
      <MemberSignature Language="C#" Value="public override void PurgeAccessRules (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PurgeAccessRules(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub PurgeAccessRules (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void PurgeAccessRules(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="abstract member PurgeAccessRules : System.Security.Principal.IdentityReference -&gt; unit&#xA;override this.PurgeAccessRules : System.Security.Principal.IdentityReference -&gt; unit" Usage="activeDirectorySecurity.PurgeAccessRules identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity">
          <see cref="T:System.Security.Principal.IdentityReference" /> Dla którego mają zostać usunięte wszystkie reguły dostępu.</param>
        <summary>Usuwa wszystkie reguły dostępu do skojarzonego z określonym <see cref="T:System.Security.Principal.IdentityReference" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Wszystkie reguły dostępu nie są w kolejności canonical.</exception>
      </Docs>
    </Member>
    <Member MemberName="PurgeAuditRules">
      <MemberSignature Language="C#" Value="public override void PurgeAuditRules (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PurgeAuditRules(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub PurgeAuditRules (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void PurgeAuditRules(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="abstract member PurgeAuditRules : System.Security.Principal.IdentityReference -&gt; unit&#xA;override this.PurgeAuditRules : System.Security.Principal.IdentityReference -&gt; unit" Usage="activeDirectorySecurity.PurgeAuditRules identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity">
          <see cref="T:System.Security.Principal.IdentityReference" /> Dla którego mają zostać usunięte wszystkie zasady inspekcji.</param>
        <summary>Usuwa wszystkie inspekcji reguły skojarzone z danym <see cref="T:System.Security.Principal.IdentityReference" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Wszystkie zasady inspekcji nie są w kolejności kanonicznej.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccess">
      <MemberSignature Language="C#" Value="public void RemoveAccess (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccess(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccess (identity As IdentityReference, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccess(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccess : System.Security.Principal.IdentityReference * System.Security.AccessControl.AccessControlType -&gt; unit" Usage="activeDirectorySecurity.RemoveAccess (identity, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <see cref="T:System.Security.Principal.IdentityReference" /> Obiektu, takiego jak obiekt elementu NTAccount, który jest rozpoznawany jako identyfikator zabezpieczeń (SID).</param>
        <param name="type">
          <see cref="T:System.Security.AccessControl.AccessControlType" /> Obiekt, który zawiera typ wpisu kontroli dostępu.</param>
        <summary>Usuwa wszystkie reguły dostępu, które mają określony <see cref="T:System.Security.Principal.IdentityReference" /> obiektu i <see cref="T:System.Security.AccessControl.AccessControlType" /> obiekt z listy DACL obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRule">
      <MemberSignature Language="C#" Value="public bool RemoveAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAccessRule(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAccessRule (rule As ActiveDirectoryAccessRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAccessRule(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; bool" Usage="activeDirectorySecurity.RemoveAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> Obiekt, którego dotyczy ta operacja.</param>
        <summary>Usuwa wszystkie reguły dostępu, które zawierają tę samą zabezpieczeń identyfikator i dostęp maskę jako reguła dostępu określonego z listy DACL obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli operacja się powiedzie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAccessRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAccessRuleSpecific (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAccessRuleSpecific(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAccessRuleSpecific (rule As ActiveDirectoryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAccessRuleSpecific(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAccessRuleSpecific : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; unit" Usage="activeDirectorySecurity.RemoveAccessRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> Obiekt, którego dotyczy ta operacja.</param>
        <summary>Usuwa wszystkie reguły dostępu, które dokładnie pasują reguła dostępu określonego z listy DACL obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAudit">
      <MemberSignature Language="C#" Value="public void RemoveAudit (System.Security.Principal.IdentityReference identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAudit(class System.Security.Principal.IdentityReference identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAudit (identity As IdentityReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAudit(System::Security::Principal::IdentityReference ^ identity);" />
      <MemberSignature Language="F#" Value="member this.RemoveAudit : System.Security.Principal.IdentityReference -&gt; unit" Usage="activeDirectorySecurity.RemoveAudit identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
      </Parameters>
      <Docs>
        <param name="identity">
          <see cref="T:System.Security.Principal.IdentityReference" /> Obiektu, takiego jak obiekt elementu NTAccount, który jest rozpoznawany jako identyfikator zabezpieczeń (SID).</param>
        <summary>Usuwa wszystkie zasady inspekcji, które mają określony <see cref="T:System.Security.Principal.IdentityReference" /> obiekt z SACL obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRule">
      <MemberSignature Language="C#" Value="public bool RemoveAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveAuditRule(class System.DirectoryServices.ActiveDirectoryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveAuditRule (rule As ActiveDirectoryAuditRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveAuditRule(System::DirectoryServices::ActiveDirectoryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRule : System.DirectoryServices.ActiveDirectoryAuditRule -&gt; bool" Usage="activeDirectorySecurity.RemoveAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> Obiekt, którego dotyczy ta operacja.</param>
        <summary>Usuwa wszystkie zasady inspekcji, które zawierają tę samą zabezpieczeń identyfikator i dostęp maskę zasady inspekcji określona z System dostępu do kontrolki listy (SACL) obiektu.</summary>
        <returns>
          <see langword="true" /> Jeśli operacja się powiedzie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAuditRuleSpecific">
      <MemberSignature Language="C#" Value="public void RemoveAuditRuleSpecific (System.DirectoryServices.ActiveDirectoryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAuditRuleSpecific(class System.DirectoryServices.ActiveDirectoryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAuditRuleSpecific (rule As ActiveDirectoryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAuditRuleSpecific(System::DirectoryServices::ActiveDirectoryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.RemoveAuditRuleSpecific : System.DirectoryServices.ActiveDirectoryAuditRule -&gt; unit" Usage="activeDirectorySecurity.RemoveAuditRuleSpecific rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> Obiekt, którego dotyczy ta operacja.</param>
        <summary>Usuwa wszystkie zasady inspekcji, które dokładnie pasują zasady inspekcji określona z SACL obiektu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetAccessRule">
      <MemberSignature Language="C#" Value="public void ResetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAccessRule(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAccessRule (rule As ActiveDirectoryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAccessRule(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.ResetAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; unit" Usage="activeDirectorySecurity.ResetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> Obiekt, którego dotyczy ta operacja.</param>
        <summary>Wyszukuje POUFNEJ jednocześnie uzyskiwać dostęp do zasad, które zawierają identyfikator zabezpieczeń (SID) zgodna z identyfikatora SID określone w <paramref name="rule" /> obiektu i zastępuje wszystkie te dostęp reguły za pomocą reguł dostępu, które są zawarte w <paramref name="rule" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> służy do Zamień wszystkie reguły dostępu do określonego identyfikatora SID DACL obiektu, zarówno Zezwalaj i Odmów typ - zasady są zastępowane.  Aby zastąpić tylko reguł zezwalania na bez wywierania wpływu na regułach odmowy lub Zastąp reguły odmowy bez wywierania wpływu na reguł zezwalania na, użyj <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> zamiast tego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessRule">
      <MemberSignature Language="C#" Value="public void SetAccessRule (System.DirectoryServices.ActiveDirectoryAccessRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessRule(class System.DirectoryServices.ActiveDirectoryAccessRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessRule (rule As ActiveDirectoryAccessRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessRule(System::DirectoryServices::ActiveDirectoryAccessRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.SetAccessRule : System.DirectoryServices.ActiveDirectoryAccessRule -&gt; unit" Usage="activeDirectorySecurity.SetAccessRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAccessRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> Obiekt, którego dotyczy ta operacja.</param>
        <summary>Wyszukuje POUFNEJ jednocześnie uzyskiwać dostęp do zasad, które zawierają identyfikator zabezpieczeń (SID) zgodna z identyfikatora SID określone w <paramref name="rule" /> obiektu i dostępu typ formantu (Zezwalaj lub Odmów) jest zgodna z typem określonym w <paramref name="rule" /> obiektu i zastępuje wszystkie te dostęp reguły za pomocą reguł dostępu, które są zawarte w <paramref name="rule" /> obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy <xref:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule%2A> używany do zastępowania wszystkich reguł dostępu, które pasują do określonego identyfikatora SID i kontrolę dostępu typu (Zezwalaj lub Odmów) DACL obiektu, wszystkie reguły w tym DACL przy użyciu identyfikatora SID i typu, które pasują do identyfikatorów SID i dostęp kontrolować typ zawarty w `rule` obiektu ar e zastąpione.  Za pomocą tej metody, deweloper może zastąpić żadnych reguł zezwalania na dla tego identyfikatora SID dla tego obiektu bez wywierania wpływu na istniejące reguły odmowy lub zastąpienie wszystkich reguł odmowy dla tego identyfikatora SID dla tego obiektu, bez wywierania wpływu na istniejące reguły Zezwalaj.  Aby zamienić wszystkie reguły dla tego obiektu odnoszących się do określonego identyfikatora SID, niezależnie od typu, należy użyć <xref:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule%2A> zamiast tego.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAuditRule">
      <MemberSignature Language="C#" Value="public void SetAuditRule (System.DirectoryServices.ActiveDirectoryAuditRule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAuditRule(class System.DirectoryServices.ActiveDirectoryAuditRule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAuditRule (rule As ActiveDirectoryAuditRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAuditRule(System::DirectoryServices::ActiveDirectoryAuditRule ^ rule);" />
      <MemberSignature Language="F#" Value="member this.SetAuditRule : System.DirectoryServices.ActiveDirectoryAuditRule -&gt; unit" Usage="activeDirectorySecurity.SetAuditRule rule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rule" Type="System.DirectoryServices.ActiveDirectoryAuditRule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <see cref="T:System.DirectoryServices.ActiveDirectoryAccessRule" /> Obiekt, którego dotyczy ta operacja.</param>
        <summary>Zamienia wszystkie reguły inspekcji, które zawierają ten sam identyfikator zabezpieczeń zasady inspekcji określonego w SACL obiektu z regułą określonego inspekcji.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>