<Type Name="JsonReaderWriterFactory" FullName="System.Runtime.Serialization.Json.JsonReaderWriterFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7abf135db94201d393c1e8dbb694ddbcb44f711" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69087673" /></Metadata><TypeSignature Language="C#" Value="public static class JsonReaderWriterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderWriterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonReaderWriterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderWriterFactory abstract sealed" />
  <TypeSignature Language="F#" Value="type JsonReaderWriterFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e6d83-101">Tworzy wystąpienia <see cref="T:System.Xml.XmlDictionaryReader" /> , które mogą odczytywać dane zakodowane za pomocą JavaScript Object Notation (JSON) ze strumienia lub buforu i mapować je na sprawdzonych XML i <see cref="T:System.Xml.XmlDictionaryWriter" /> wystąpienia, które mogą mapować sprawdzonych XML na notację JSON oraz zapisywać dane zakodowane w formacie JSON w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="e6d83-101">Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d83-102">Windows Communication Foundation (WCF) przetwarza komunikaty JSON przy użyciu mapowania między danymi JSON i sprawdzonych XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-102">Windows Communication Foundation (WCF) processes JSON messages using a mapping between JSON data and the XML Infoset.</span></span> <span data-ttu-id="e6d83-103">Zwykle to mapowanie jest ukryte przed wyświetleniem.</span><span class="sxs-lookup"><span data-stu-id="e6d83-103">Normally, this mapping is hidden from view.</span></span> <span data-ttu-id="e6d83-104">Jednak w niektórych zaawansowanych scenariuszach może być konieczne ręczne przekonwertowanie między elementami JSON i XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-104">However, in some advanced scenarios it may be necessary to manually convert between JSON and XML.</span></span> <span data-ttu-id="e6d83-105">W takim przypadku <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> Klasa może służyć do tworzenia niezbędnych czytelników i autorów XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-105">In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers.</span></span> <span data-ttu-id="e6d83-106">Należy zauważyć, że nie każdy element sprawdzonych XML można zamapować do formatu JSON.</span><span class="sxs-lookup"><span data-stu-id="e6d83-106">Note that not every XML Infoset element can be mapped to JSON.</span></span> <span data-ttu-id="e6d83-107">Aby uzyskać więcej informacji na temat mapowania [, zobacz How to: Serializowanie i deserializacja](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md)danych JSON.</span><span class="sxs-lookup"><span data-stu-id="e6d83-107">For more information about mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateJsonReader">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6d83-108">Tworzy obiekt <see cref="T:System.Xml.XmlDictionaryReader" /> , który może mapować strumienie lub bufory zakodowane za pomocą JavaScript Object Notation (JSON) do sprawdzonych XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-108">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map - streams or buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d83-109">Każdy z przeciążeń używa <xref:System.Xml.XmlDictionaryReaderQuotas> programu w celu zapobiegania atakom typu "odmowa usługi" (DOS) podczas odczytywania niezaufanych danych.</span><span class="sxs-lookup"><span data-stu-id="e6d83-109">Each of the overloads uses a <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service (DoS) attacks when reading untrusted data.</span></span> <span data-ttu-id="e6d83-110">Aby uzyskać więcej informacji na <xref:System.Xml.XmlDictionaryReaderQuotas> temat zapobiegania atakom typu "odmowa usługi" podczas odczytywania niezaufanych danych, zobacz [zagadnienia dotyczące zabezpieczeń danych](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="e6d83-110">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e6d83-111">Wejściowa <see cref="T:System.Byte" /> tablica bufora, z której ma zostać odczytana.</span><span class="sxs-lookup"><span data-stu-id="e6d83-111">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="quotas"><span data-ttu-id="e6d83-112"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> Używane do zapobiegania atakom typu "odmowa usługi" podczas odczytu niezaufanych danych.</span><span class="sxs-lookup"><span data-stu-id="e6d83-112">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="e6d83-113">Tworzy obiekt <see cref="T:System.Xml.XmlDictionaryReader" /> , który może mapować bufory zakodowane za pomocą JavaScript Object Notation (JSON) do sprawdzonych XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-113">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="e6d83-114"><see cref="T:System.Xml.XmlDictionaryReader" /> Może przetwarzać dane JavaScript Object Notation (JSON).</span><span class="sxs-lookup"><span data-stu-id="e6d83-114">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d83-115">To Przeciążenie nie akceptuje <xref:System.Text.Encoding> parametru.</span><span class="sxs-lookup"><span data-stu-id="e6d83-115">This overload does not accept an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="e6d83-116">Kodowanie znaków (UTF-8, Unicode lub big-endian Unicode) jest wykrywane podczas odczytywania danych.</span><span class="sxs-lookup"><span data-stu-id="e6d83-116">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="e6d83-117">Aby uzyskać więcej informacji na <xref:System.Xml.XmlDictionaryReaderQuotas> temat zapobiegania atakom typu "odmowa usługi" podczas odczytywania niezaufanych danych, zobacz [zagadnienia dotyczące zabezpieczeń danych](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="e6d83-117">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : System.IO.Stream * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (stream, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="e6d83-118">Dane wejściowe <see cref="T:System.IO.Stream" /> , z których ma zostać odczytany.</span><span class="sxs-lookup"><span data-stu-id="e6d83-118">The input <see cref="T:System.IO.Stream" /> from which to read.</span></span></param>
        <param name="quotas"><span data-ttu-id="e6d83-119"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> Używane do zapobiegania atakom typu "odmowa usługi" podczas odczytu niezaufanych danych.</span><span class="sxs-lookup"><span data-stu-id="e6d83-119">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="e6d83-120">Tworzy obiekt <see cref="T:System.Xml.XmlDictionaryReader" /> , który może mapować strumienie kodowane z JavaScript Object Notation (JSON) do sprawdzonych XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-120">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="e6d83-121"><see cref="T:System.Xml.XmlDictionaryReader" /> Można odczytać JavaScript Object Notation (JSON).</span><span class="sxs-lookup"><span data-stu-id="e6d83-121">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d83-122">To Przeciążenie nie przyjmuje <xref:System.Text.Encoding> parametru.</span><span class="sxs-lookup"><span data-stu-id="e6d83-122">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="e6d83-123">Kodowanie znaków (UTF-8, Unicode lub big-endian Unicode) jest wykrywane podczas odczytywania danych.</span><span class="sxs-lookup"><span data-stu-id="e6d83-123">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="e6d83-124">Aby uzyskać więcej informacji na <xref:System.Xml.XmlDictionaryReaderQuotas> temat zapobiegania atakom typu "odmowa usługi" podczas odczytywania niezaufanych danych, zobacz [zagadnienia dotyczące zabezpieczeń danych](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="e6d83-124">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * int * int * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, offset, count, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e6d83-125">Wejściowa <see cref="T:System.Byte" /> tablica bufora, z której ma zostać odczytana.</span><span class="sxs-lookup"><span data-stu-id="e6d83-125">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="offset"><span data-ttu-id="e6d83-126">Pozycja początkowa, od której ma się <paramref name="buffer" />odczytywać.</span><span class="sxs-lookup"><span data-stu-id="e6d83-126">Starting position from which to read in <paramref name="buffer" />.</span></span></param>
        <param name="count"><span data-ttu-id="e6d83-127">Liczba bajtów, z <paramref name="buffer" />których można odczytywać.</span><span class="sxs-lookup"><span data-stu-id="e6d83-127">Number of bytes that can be read from <paramref name="buffer" />.</span></span></param>
        <param name="quotas"><span data-ttu-id="e6d83-128"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> Używane do zapobiegania atakom typu "odmowa usługi" podczas odczytu niezaufanych danych.</span><span class="sxs-lookup"><span data-stu-id="e6d83-128">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <summary><span data-ttu-id="e6d83-129">Tworzy obiekt <see cref="T:System.Xml.XmlDictionaryReader" /> , który może mapować bufory zakodowane za pomocą JavaScript Object Notation (JSON) o określonym rozmiarze i przesunięciu do sprawdzonych XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-129">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="e6d83-130"><see cref="T:System.Xml.XmlDictionaryReader" /> Można odczytać JavaScript Object Notation (JSON).</span><span class="sxs-lookup"><span data-stu-id="e6d83-130">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d83-131">To Przeciążenie nie przyjmuje <xref:System.Text.Encoding> parametru.</span><span class="sxs-lookup"><span data-stu-id="e6d83-131">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="e6d83-132">Kodowanie znaków (UTF-8, Unicode lub big-endian Unicode) jest wykrywane podczas odczytywania danych.</span><span class="sxs-lookup"><span data-stu-id="e6d83-132">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="e6d83-133">Aby uzyskać więcej informacji na <xref:System.Xml.XmlDictionaryReaderQuotas> temat zapobiegania atakom typu "odmowa usługi" podczas odczytywania niezaufanych danych, zobacz [zagadnienia dotyczące zabezpieczeń danych](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="e6d83-133">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : System.IO.Stream * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (stream, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="e6d83-134">Dane wejściowe <see cref="T:System.IO.Stream" /> , z których ma zostać odczytany.</span><span class="sxs-lookup"><span data-stu-id="e6d83-134">The input <see cref="T:System.IO.Stream" /> from which to read.</span></span></param>
        <param name="encoding"><span data-ttu-id="e6d83-135"><see cref="T:System.Text.Encoding" /> Określa kodowanie znaków używane przez czytelnika.</span><span class="sxs-lookup"><span data-stu-id="e6d83-135">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span></span> <span data-ttu-id="e6d83-136">Jeśli <see langword="null" /> jest określony jako wartość, czytelnik próbuje automatycznie wykryć kodowanie.</span><span class="sxs-lookup"><span data-stu-id="e6d83-136">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span></span></param>
        <param name="quotas"><span data-ttu-id="e6d83-137"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> Używane do zapobiegania atakom typu "odmowa usługi" podczas odczytu niezaufanych danych.</span><span class="sxs-lookup"><span data-stu-id="e6d83-137">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <param name="onClose"><span data-ttu-id="e6d83-138"><see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> Delegat do wywołania, gdy czytnik jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="e6d83-138">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span></span></param>
        <summary><span data-ttu-id="e6d83-139">Tworzy obiekt <see cref="T:System.Xml.XmlDictionaryReader" /> , który może mapować strumienie kodowane z JavaScript Object Notation (JSON) o określonym rozmiarze i przesunięciu do pliku XML sprawdzonych.</span><span class="sxs-lookup"><span data-stu-id="e6d83-139">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="e6d83-140"><see cref="T:System.Xml.XmlDictionaryReader" /> Można odczytać JavaScript Object Notation (JSON).</span><span class="sxs-lookup"><span data-stu-id="e6d83-140">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d83-141">Aby uzyskać więcej informacji na <xref:System.Xml.XmlDictionaryReaderQuotas> temat zapobiegania atakom typu "odmowa usługi" podczas odczytywania niezaufanych danych, zobacz [zagadnienia dotyczące zabezpieczeń danych](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="e6d83-141">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * int * int * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, offset, count, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="e6d83-142">Wejściowa <see cref="T:System.Byte" /> tablica bufora, z której ma zostać odczytana.</span><span class="sxs-lookup"><span data-stu-id="e6d83-142">The input <see cref="T:System.Byte" /> buffer array from which to read.</span></span></param>
        <param name="offset"><span data-ttu-id="e6d83-143">Pozycja początkowa, od której ma się <paramref name="buffer" />odczytywać.</span><span class="sxs-lookup"><span data-stu-id="e6d83-143">Starting position from which to read in <paramref name="buffer" />.</span></span></param>
        <param name="count"><span data-ttu-id="e6d83-144">Liczba bajtów, z <paramref name="buffer" />których można odczytywać.</span><span class="sxs-lookup"><span data-stu-id="e6d83-144">Number of bytes that can be read from <paramref name="buffer" />.</span></span></param>
        <param name="encoding"><span data-ttu-id="e6d83-145"><see cref="T:System.Text.Encoding" /> Określa kodowanie znaków używane przez czytelnika.</span><span class="sxs-lookup"><span data-stu-id="e6d83-145">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span></span> <span data-ttu-id="e6d83-146">Jeśli <see langword="null" /> jest określony jako wartość, czytelnik próbuje automatycznie wykryć kodowanie.</span><span class="sxs-lookup"><span data-stu-id="e6d83-146">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span></span></param>
        <param name="quotas"><span data-ttu-id="e6d83-147"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> Używane do zapobiegania atakom typu "odmowa usługi" podczas odczytu niezaufanych danych.</span><span class="sxs-lookup"><span data-stu-id="e6d83-147">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span></span></param>
        <param name="onClose"><span data-ttu-id="e6d83-148"><see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> Delegat do wywołania, gdy czytnik jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="e6d83-148">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span></span> <span data-ttu-id="e6d83-149">Wartość domyślna to <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e6d83-149">The default value is <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="e6d83-150">Tworzy obiekt <see cref="T:System.Xml.XmlDictionaryReader" /> , który może mapować bufory zakodowane za pomocą JavaScript Object Notation (JSON) o określonym rozmiarze i przesunięciu i kodowaniu znaków, do sprawdzonych XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-150">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.</span></span></summary>
        <returns><span data-ttu-id="e6d83-151"><see cref="T:System.Xml.XmlDictionaryReader" /> Można odczytać JavaScript Object Notation (JSON).</span><span class="sxs-lookup"><span data-stu-id="e6d83-151">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d83-152">Aby uzyskać więcej informacji na <xref:System.Xml.XmlDictionaryReaderQuotas> temat zapobiegania atakom typu "odmowa usługi" podczas odczytywania niezaufanych danych, zobacz [zagadnienia dotyczące zabezpieczeń danych](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="e6d83-152">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateJsonWriter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6d83-153">Tworzy element <see cref="T:System.Xml.XmlDictionaryWriter" /> , który zapisuje dane zakodowane w formacie JSON do strumienia.</span><span class="sxs-lookup"><span data-stu-id="e6d83-153">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d83-154">Metoda statyczna zwraca wystąpienie <xref:System.Xml.XmlDictionaryWriter> , które może mapować sprawdzonych XML na strumień JSON. <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A></span><span class="sxs-lookup"><span data-stu-id="e6d83-154">The <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> static method returns an instance of an <xref:System.Xml.XmlDictionaryWriter> that can map an XML Infoset to a JSON stream.</span></span> <span data-ttu-id="e6d83-155">Nie <xref:System.Xml.XmlDictionaryWriter> ma gwarancji, że jest wytwarzany prawidłowy kod JSON.</span><span class="sxs-lookup"><span data-stu-id="e6d83-155">The <xref:System.Xml.XmlDictionaryWriter> is not guaranteed to produce valid JSON.</span></span> <span data-ttu-id="e6d83-156">Jeśli jest używany w sposób nieobsługiwany przez mapowanie JSON-XML, może zgłosić wyjątek lub napisać nieprawidłowy dokument JSON.</span><span class="sxs-lookup"><span data-stu-id="e6d83-156">If it is used in a way not supported by the JSON-XML mapping, it may either throw an exception or write an invalid JSON document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="e6d83-157">Dane wyjściowe <see cref="T:System.IO.Stream" /> dla składnika zapisywania JSON.</span><span class="sxs-lookup"><span data-stu-id="e6d83-157">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <summary><span data-ttu-id="e6d83-158">Tworzy element <see cref="T:System.Xml.XmlDictionaryWriter" /> , który zapisuje dane zakodowane w formacie JSON do strumienia.</span><span class="sxs-lookup"><span data-stu-id="e6d83-158">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span></span></summary>
        <returns><span data-ttu-id="e6d83-159"><see cref="T:System.Xml.XmlDictionaryWriter" /> Zapisuje dane zakodowane w formacie JSON do strumienia na podstawie sprawdzonych XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-159">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d83-160">Domyślnym kodowaniem znaków jest UTF-8.</span><span class="sxs-lookup"><span data-stu-id="e6d83-160">The default character encoding is UTF-8.</span></span> <span data-ttu-id="e6d83-161">Gdy składnik zapisywania jest zamknięty, strumień jest również zamykany.</span><span class="sxs-lookup"><span data-stu-id="e6d83-161">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="e6d83-162">Dane wyjściowe <see cref="T:System.IO.Stream" /> dla składnika zapisywania JSON.</span><span class="sxs-lookup"><span data-stu-id="e6d83-162">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="e6d83-163"><see cref="T:System.Text.Encoding" /> Określa kodowanie znaków używane przez moduł zapisujący.</span><span class="sxs-lookup"><span data-stu-id="e6d83-163">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="e6d83-164">Domyślne kodowanie to UTF-8.</span><span class="sxs-lookup"><span data-stu-id="e6d83-164">The default encoding is UTF-8.</span></span></param>
        <summary><span data-ttu-id="e6d83-165">Tworzy element <see cref="T:System.Xml.XmlDictionaryWriter" /> , który zapisuje dane zakodowane w formacie JSON do strumienia z określonym kodowaniem znaków.</span><span class="sxs-lookup"><span data-stu-id="e6d83-165">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span></span></summary>
        <returns><span data-ttu-id="e6d83-166"><see cref="T:System.Xml.XmlDictionaryWriter" /> Zapisuje dane zakodowane w formacie JSON do strumienia na podstawie sprawdzonych XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-166">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d83-167">Gdy składnik zapisywania jest zamknięty, strumień jest również zamykany.</span><span class="sxs-lookup"><span data-stu-id="e6d83-167">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="e6d83-168">Dane wyjściowe <see cref="T:System.IO.Stream" /> dla składnika zapisywania JSON.</span><span class="sxs-lookup"><span data-stu-id="e6d83-168">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="e6d83-169"><see cref="T:System.Text.Encoding" /> Określa kodowanie znaków używane przez moduł zapisujący.</span><span class="sxs-lookup"><span data-stu-id="e6d83-169">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="e6d83-170">Domyślne kodowanie to UTF-8.</span><span class="sxs-lookup"><span data-stu-id="e6d83-170">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="e6d83-171">Jeśli <see langword="true" />strumień wyjściowy zostanie zamknięty przez moduł zapisujący po zakończeniu; w przeciwnym <see langword="false" />razie.</span><span class="sxs-lookup"><span data-stu-id="e6d83-171">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="e6d83-172">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e6d83-172">The default value is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="e6d83-173">Tworzy element <see cref="T:System.Xml.XmlDictionaryWriter" /> , który zapisuje dane zakodowane w formacie JSON do strumienia z określonym kodowaniem znaków.</span><span class="sxs-lookup"><span data-stu-id="e6d83-173">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span></span></summary>
        <returns><span data-ttu-id="e6d83-174"><see cref="T:System.Xml.XmlDictionaryWriter" /> Zapisuje dane zakodowane w formacie JSON do strumienia na podstawie sprawdzonych XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-174">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool * bool -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encoding" Type="System.Text.Encoding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ownsStream" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indent" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="e6d83-175">Dane wyjściowe <see cref="T:System.IO.Stream" /> dla składnika zapisywania JSON.</span><span class="sxs-lookup"><span data-stu-id="e6d83-175">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="e6d83-176"><see cref="T:System.Text.Encoding" /> Określa kodowanie znaków używane przez moduł zapisujący.</span><span class="sxs-lookup"><span data-stu-id="e6d83-176">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="e6d83-177">Domyślne kodowanie to UTF-8.</span><span class="sxs-lookup"><span data-stu-id="e6d83-177">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="e6d83-178">Jeśli <see langword="true" />strumień wyjściowy zostanie zamknięty przez moduł zapisujący po zakończeniu; w przeciwnym <see langword="false" />razie.</span><span class="sxs-lookup"><span data-stu-id="e6d83-178">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="e6d83-179">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e6d83-179">The default value is <see langword="true" />.</span></span></param>
        <param name="indent"><span data-ttu-id="e6d83-180">Jeśli <see langword="true" />dane wyjściowe używają formatu wielowierszowego, wcięcie poszczególnych poziomów jest prawidłowe; w <see langword="false" />przeciwnym razie,.</span><span class="sxs-lookup"><span data-stu-id="e6d83-180">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e6d83-181">Tworzy element <see cref="T:System.Xml.XmlDictionaryWriter" /> , który zapisuje dane zakodowane w formacie JSON do strumienia o określonym znaku.</span><span class="sxs-lookup"><span data-stu-id="e6d83-181">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span></span></summary>
        <returns><span data-ttu-id="e6d83-182"><see cref="T:System.Xml.XmlDictionaryWriter" /> Zapisuje dane zakodowane w formacie JSON do strumienia na podstawie sprawdzonych XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-182">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent, System::String ^ indentChars);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool * bool * string -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream, indent, indentChars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encoding" Type="System.Text.Encoding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ownsStream" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indent" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="indentChars" Type="System.String" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="e6d83-183">Dane wyjściowe <see cref="T:System.IO.Stream" /> dla składnika zapisywania JSON.</span><span class="sxs-lookup"><span data-stu-id="e6d83-183">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span></span></param>
        <param name="encoding"><span data-ttu-id="e6d83-184"><see cref="T:System.Text.Encoding" /> Określa kodowanie znaków używane przez moduł zapisujący.</span><span class="sxs-lookup"><span data-stu-id="e6d83-184">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span></span> <span data-ttu-id="e6d83-185">Domyślne kodowanie to UTF-8.</span><span class="sxs-lookup"><span data-stu-id="e6d83-185">The default encoding is UTF-8.</span></span></param>
        <param name="ownsStream"><span data-ttu-id="e6d83-186">Jeśli <see langword="true" />strumień wyjściowy zostanie zamknięty przez moduł zapisujący po zakończeniu; w przeciwnym <see langword="false" />razie.</span><span class="sxs-lookup"><span data-stu-id="e6d83-186">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span></span> <span data-ttu-id="e6d83-187">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e6d83-187">The default value is <see langword="true" />.</span></span></param>
        <param name="indent"><span data-ttu-id="e6d83-188">Jeśli <see langword="true" />dane wyjściowe używają formatu wielowierszowego, wcięcie poszczególnych poziomów jest prawidłowe; w <see langword="false" />przeciwnym razie,.</span><span class="sxs-lookup"><span data-stu-id="e6d83-188">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span></span></param>
        <param name="indentChars"><span data-ttu-id="e6d83-189">Ciąg używany do wcięcia poszczególnych poziomów.</span><span class="sxs-lookup"><span data-stu-id="e6d83-189">The string used to indent each level.</span></span></param>
        <summary><span data-ttu-id="e6d83-190">Tworzy element <see cref="T:System.Xml.XmlDictionaryWriter" /> , który zapisuje dane zakodowane w formacie JSON do strumienia o określonym znaku.</span><span class="sxs-lookup"><span data-stu-id="e6d83-190">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span></span></summary>
        <returns><span data-ttu-id="e6d83-191"><see cref="T:System.Xml.XmlDictionaryWriter" /> Zapisuje dane zakodowane w formacie JSON do strumienia na podstawie sprawdzonych XML.</span><span class="sxs-lookup"><span data-stu-id="e6d83-191">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
