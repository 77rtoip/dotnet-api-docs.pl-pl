<Type Name="JsonReaderWriterFactory" FullName="System.Runtime.Serialization.Json.JsonReaderWriterFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="04cbcdf2ae5c02e194d7d965a95554ed637dbcde" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39755849" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class JsonReaderWriterFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonReaderWriterFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.JsonReaderWriterFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonReaderWriterFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonReaderWriterFactory abstract sealed" />
  <TypeSignature Language="F#" Value="type JsonReaderWriterFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5877d-101">Tworzy wystąpienia elementu <see cref="T:System.Xml.XmlDictionaryReader" /> który może odczytywać zakodowanych przy użyciu języka JavaScript Object Notation (JSON) ze strumienia lub buforu danych i zamapuj ją zestaw informacji XML i wystąpienia <see cref="T:System.Xml.XmlDictionaryWriter" /> umożliwiające mapowanie zestaw informacji XML do formatu JSON i zapisywać dane zakodowane w formacie JSON w strumieniu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5877d-101">Produces instances of <see cref="T:System.Xml.XmlDictionaryReader" /> that can read data encoded with JavaScript Object Notation (JSON) from a stream or buffer and map it to an XML Infoset and instances of <see cref="T:System.Xml.XmlDictionaryWriter" /> that can map an XML Infoset to JSON and write JSON-encoded data to a stream.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5877d-102">Windows Communication Foundation (WCF) przetwarza wiadomości JSON przy użyciu mapowania między danymi w formacie JSON i zestaw informacji XML.</span><span class="sxs-lookup"><span data-stu-id="5877d-102">Windows Communication Foundation (WCF) processes JSON messages using a mapping between JSON data and the XML Infoset.</span></span> <span data-ttu-id="5877d-103">Zwykle to mapowanie jest ukryty.</span><span class="sxs-lookup"><span data-stu-id="5877d-103">Normally, this mapping is hidden from view.</span></span> <span data-ttu-id="5877d-104">Jednak w niektórych zaawansowanych scenariuszach może być konieczne ręczne konwersji między formatami JSON i XML.</span><span class="sxs-lookup"><span data-stu-id="5877d-104">However, in some advanced scenarios it may be necessary to manually convert between JSON and XML.</span></span> <span data-ttu-id="5877d-105">W tym przypadku <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> klasa może być używana do utworzenia niezbędnych czytników XML i składników zapisywania.</span><span class="sxs-lookup"><span data-stu-id="5877d-105">In this case, the <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> class can be used to create the necessary XML readers and writers.</span></span> <span data-ttu-id="5877d-106">Należy pamiętać, że nie każdy element zestaw informacji XML mogą być mapowane do formatu JSON.</span><span class="sxs-lookup"><span data-stu-id="5877d-106">Note that not every XML Infoset element can be mapped to JSON.</span></span> <span data-ttu-id="5877d-107">Aby uzyskać więcej informacji na temat mapowania, zobacz [jak: serializacji i deserializacji danych JSON](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span><span class="sxs-lookup"><span data-stu-id="5877d-107">For more information about mapping, see [How to: Serialize and Deserialize JSON Data](~/docs/framework/wcf/feature-details/how-to-serialize-and-deserialize-json-data.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateJsonReader">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5877d-108">Tworzy <see cref="T:System.Xml.XmlDictionaryReader" /> , można mapować - strumienie lub buforów zakodowane przy użyciu języka JavaScript Object Notation (JSON) na zestaw informacji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-108">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map - streams or buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5877d-109">Każda z przeciążeń używa <xref:System.Xml.XmlDictionaryReaderQuotas> zapobiegające przeprowadzenie ataku typu "odmowa usługi" (DoS) ataki przy odczycie niezaufanych danych.</span><span class="sxs-lookup"><span data-stu-id="5877d-109">Each of the overloads uses a <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service (DoS) attacks when reading untrusted data.</span></span> <span data-ttu-id="5877d-110">Aby uzyskać więcej informacji o korzystaniu z <xref:System.Xml.XmlDictionaryReaderQuotas> przed atakami "odmowa usługi", podczas odczytywania niezaufanych danych, zobacz [zagadnienia dotyczące zabezpieczeń dla danych](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="5877d-110">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5877d-111">Dane wejściowe <see cref="T:System.Byte" /> bufor tablicy, z której mają zostać odczytane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-111">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="5877d-112">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> Wykorzystane do zapobieżenia "odmowa usługi" ataków przy odczycie niezaufanych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-112">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5877d-113">Tworzy <see cref="T:System.Xml.XmlDictionaryReader" /> , można mapować buforów zakodowane przy użyciu języka JavaScript Object Notation (JSON) na zestaw informacji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-113">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5877d-114">
            <see cref="T:System.Xml.XmlDictionaryReader" /> , Może przetwarzać dane JavaScript Object Notation (JSON).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-114">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can process JavaScript Object Notation (JSON) data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5877d-115">To przeciążenie nie akceptuje <xref:System.Text.Encoding> parametru.</span><span class="sxs-lookup"><span data-stu-id="5877d-115">This overload does not accept an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="5877d-116">Znak kodowaniu (UTF-8, Unicode lub Big-Endian Unicode) auto wykryto podczas odczytywania danych.</span><span class="sxs-lookup"><span data-stu-id="5877d-116">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="5877d-117">Aby uzyskać więcej informacji o korzystaniu z <xref:System.Xml.XmlDictionaryReaderQuotas> przed atakami "odmowa usługi", podczas odczytywania niezaufanych danych, zobacz [zagadnienia dotyczące zabezpieczeń dla danych](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="5877d-117">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : System.IO.Stream * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (stream, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="5877d-118">Dane wejściowe <see cref="T:System.IO.Stream" /> z którego można odczytać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-118">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="5877d-119">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> Wykorzystane do zapobieżenia "odmowa usługi" ataków przy odczycie niezaufanych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-119">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5877d-120">Tworzy <see cref="T:System.Xml.XmlDictionaryReader" /> , można mapować strumieni zakodowane przy użyciu języka JavaScript Object Notation (JSON) na zestaw informacji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-120">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON) to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5877d-121">
            <see cref="T:System.Xml.XmlDictionaryReader" /> Który może odczytywać JavaScript Object Notation (JSON).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-121">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5877d-122">To przeciążenie nie przyjmuje <xref:System.Text.Encoding> parametru.</span><span class="sxs-lookup"><span data-stu-id="5877d-122">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="5877d-123">Znak kodowaniu (UTF-8, Unicode lub Big-Endian Unicode) auto wykryto podczas odczytywania danych.</span><span class="sxs-lookup"><span data-stu-id="5877d-123">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="5877d-124">Aby uzyskać więcej informacji o korzystaniu z <xref:System.Xml.XmlDictionaryReaderQuotas> przed atakami "odmowa usługi", podczas odczytywania niezaufanych danych, zobacz [zagadnienia dotyczące zabezpieczeń dla danych](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="5877d-124">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Xml.XmlDictionaryReaderQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Xml.XmlDictionaryReaderQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Xml.XmlDictionaryReaderQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateJsonReader (buffer As Byte(), offset As Integer, count As Integer, quotas As XmlDictionaryReaderQuotas) As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Xml::XmlDictionaryReaderQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * int * int * System.Xml.XmlDictionaryReaderQuotas -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, offset, count, quotas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5877d-125">Dane wejściowe <see cref="T:System.Byte" /> bufor tablicy, z której mają zostać odczytane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-125">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="5877d-126">Pozycji, z której mają być odczytywane w początkowej <c>buforu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-126">Starting position from which to read in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5877d-127">Liczba bajtów, które mogą być odczytywane z <c>buforu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-127">Number of bytes that can be read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="5877d-128">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> Wykorzystane do zapobieżenia "odmowa usługi" ataków przy odczycie niezaufanych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-128">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5877d-129">Tworzy <see cref="T:System.Xml.XmlDictionaryReader" /> , można mapować buforów zakodowane przy użyciu języka JavaScript Object Notation (JSON), określony rozmiar i przesunięcia zestaw informacji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-129">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5877d-130">
            <see cref="T:System.Xml.XmlDictionaryReader" /> Który może odczytywać JavaScript Object Notation (JSON).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-130">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5877d-131">To przeciążenie nie przyjmuje <xref:System.Text.Encoding> parametru.</span><span class="sxs-lookup"><span data-stu-id="5877d-131">This overload does not take an <xref:System.Text.Encoding> parameter.</span></span> <span data-ttu-id="5877d-132">Znak kodowaniu (UTF-8, Unicode lub Big-Endian Unicode) auto wykryto podczas odczytywania danych.</span><span class="sxs-lookup"><span data-stu-id="5877d-132">The character encoding (UTF-8, Unicode or Big-Endian Unicode) is auto-detected when the data is read.</span></span>  
  
 <span data-ttu-id="5877d-133">Aby uzyskać więcej informacji o korzystaniu z <xref:System.Xml.XmlDictionaryReaderQuotas> przed atakami "odmowa usługi", podczas odczytywania niezaufanych danych, zobacz [zagadnienia dotyczące zabezpieczeń dla danych](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="5877d-133">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (System.IO.Stream stream, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(class System.IO.Stream stream, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.IO.Stream,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : System.IO.Stream * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (stream, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="5877d-134">Dane wejściowe <see cref="T:System.IO.Stream" /> z którego można odczytać.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-134">The input <see cref="T:System.IO.Stream" /> from which to read.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="5877d-135">
            <see cref="T:System.Text.Encoding" /> , Który określa kodowanie znaków używany przez czytnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-135">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span>
          </span>
          <span data-ttu-id="5877d-136">Jeśli <see langword="null" /> jest określony z wartością czytnik próbuje automatyczne wykrywanie kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-136">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="5877d-137">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> Wykorzystane do zapobieżenia "odmowa usługi" ataków przy odczycie niezaufanych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-137">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <param name="onClose">
          <span data-ttu-id="5877d-138">
            <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> Pełnomocnika do wywołania, gdy proces czytający jest zamykany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-138">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5877d-139">Tworzy <see cref="T:System.Xml.XmlDictionaryReader" /> , można mapować strumieni zakodowane przy użyciu języka JavaScript Object Notation (JSON), określony rozmiar i przesunięcia zestaw informacji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-139">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map streams encoded with JavaScript Object Notation (JSON), of a specified size and offset, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5877d-140">
            <see cref="T:System.Xml.XmlDictionaryReader" /> Który może odczytywać JavaScript Object Notation (JSON).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-140">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5877d-141">Aby uzyskać więcej informacji o korzystaniu z <xref:System.Xml.XmlDictionaryReaderQuotas> przed atakami "odmowa usługi", podczas odczytywania niezaufanych danych, zobacz [zagadnienia dotyczące zabezpieczeń dla danych](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="5877d-141">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryReader CreateJsonReader (byte[] buffer, int offset, int count, System.Text.Encoding encoding, System.Xml.XmlDictionaryReaderQuotas quotas, System.Xml.OnXmlDictionaryReaderClose onClose);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryReader CreateJsonReader(unsigned int8[] buffer, int32 offset, int32 count, class System.Text.Encoding encoding, class System.Xml.XmlDictionaryReaderQuotas quotas, class System.Xml.OnXmlDictionaryReaderClose onClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader(System.Byte[],System.Int32,System.Int32,System.Text.Encoding,System.Xml.XmlDictionaryReaderQuotas,System.Xml.OnXmlDictionaryReaderClose)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryReader ^ CreateJsonReader(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Text::Encoding ^ encoding, System::Xml::XmlDictionaryReaderQuotas ^ quotas, System::Xml::OnXmlDictionaryReaderClose ^ onClose);" />
      <MemberSignature Language="F#" Value="static member CreateJsonReader : byte[] * int * int * System.Text.Encoding * System.Xml.XmlDictionaryReaderQuotas * System.Xml.OnXmlDictionaryReaderClose -&gt; System.Xml.XmlDictionaryReader" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonReader (buffer, offset, count, encoding, quotas, onClose)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="quotas" Type="System.Xml.XmlDictionaryReaderQuotas" />
        <Parameter Name="onClose" Type="System.Xml.OnXmlDictionaryReaderClose" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5877d-142">Dane wejściowe <see cref="T:System.Byte" /> bufor tablicy, z której mają zostać odczytane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-142">The input <see cref="T:System.Byte" /> buffer array from which to read.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="5877d-143">Pozycji, z której mają być odczytywane w początkowej <c>buforu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-143">Starting position from which to read in <c>buffer</c>.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5877d-144">Liczba bajtów, które mogą być odczytywane z <c>buforu</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-144">Number of bytes that can be read from <c>buffer</c>.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="5877d-145">
            <see cref="T:System.Text.Encoding" /> , Który określa kodowanie znaków używany przez czytnik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-145">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the reader.</span>
          </span>
          <span data-ttu-id="5877d-146">Jeśli <see langword="null" /> jest określony z wartością czytnik próbuje automatyczne wykrywanie kodowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-146">If <see langword="null" /> is specified as the value, the reader attempts to auto-detect the encoding.</span>
          </span>
        </param>
        <param name="quotas">
          <span data-ttu-id="5877d-147">
            <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> Wykorzystane do zapobieżenia "odmowa usługi" ataków przy odczycie niezaufanych danych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-147">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> used to prevent Denial of Service attacks when reading untrusted data.</span>
          </span>
        </param>
        <param name="onClose">
          <span data-ttu-id="5877d-148">
            <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> Pełnomocnika do wywołania, gdy proces czytający jest zamykany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-148">The <see cref="T:System.Xml.OnXmlDictionaryReaderClose" /> delegate to call when the reader is closed.</span>
          </span>
          <span data-ttu-id="5877d-149">Wartość domyślna to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-149">The default value is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5877d-150">Tworzy <see cref="T:System.Xml.XmlDictionaryReader" /> , można mapować buforów zakodowane przy użyciu konsoli JavaScript Object Notation (JSON) za pomocą określonego rozmiaru i przesunięcia i kodowanie znaków na zestaw informacji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-150">Creates an <see cref="T:System.Xml.XmlDictionaryReader" /> that can map buffers encoded with JavaScript Object Notation (JSON), with a specified size and offset and character encoding, to an XML Infoset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5877d-151">
            <see cref="T:System.Xml.XmlDictionaryReader" /> Który może odczytywać JavaScript Object Notation (JSON).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-151">An <see cref="T:System.Xml.XmlDictionaryReader" /> that can read JavaScript Object Notation (JSON).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5877d-152">Aby uzyskać więcej informacji o korzystaniu z <xref:System.Xml.XmlDictionaryReaderQuotas> przed atakami "odmowa usługi", podczas odczytywania niezaufanych danych, zobacz [zagadnienia dotyczące zabezpieczeń dla danych](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span><span class="sxs-lookup"><span data-stu-id="5877d-152">For more information about using <xref:System.Xml.XmlDictionaryReaderQuotas> to prevent Denial of Service attacks when reading untrusted data, see [Security Considerations for Data](~/docs/framework/wcf/feature-details/security-considerations-for-data.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateJsonWriter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5877d-153">Tworzy <see cref="T:System.Xml.XmlDictionaryWriter" /> która zapisuje dane zakodowane za pomocą formatu JSON do strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-153">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5877d-154"><xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> Metoda statyczna Zwraca wystąpienie <xref:System.Xml.XmlDictionaryWriter> , można mapować zestaw informacji XML w strumieniu w formacie JSON.</span><span class="sxs-lookup"><span data-stu-id="5877d-154">The <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> static method returns an instance of an <xref:System.Xml.XmlDictionaryWriter> that can map an XML Infoset to a JSON stream.</span></span> <span data-ttu-id="5877d-155"><xref:System.Xml.XmlDictionaryWriter> Nie musi być prawidłowym kodem JSON.</span><span class="sxs-lookup"><span data-stu-id="5877d-155">The <xref:System.Xml.XmlDictionaryWriter> is not guaranteed to produce valid JSON.</span></span> <span data-ttu-id="5877d-156">Jeśli jest używana w taki sposób, nie są obsługiwane przez mapowanie JSON XML, jego może zgłosić wyjątek lub zapisu nieprawidłowy dokument JSON.</span><span class="sxs-lookup"><span data-stu-id="5877d-156">If it is used in a way not supported by the JSON-XML mapping, it may either throw an exception or write an invalid JSON document.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="5877d-157">Dane wyjściowe <see cref="T:System.IO.Stream" /> dla edytora JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-157">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5877d-158">Tworzy <see cref="T:System.Xml.XmlDictionaryWriter" /> która zapisuje dane zakodowane za pomocą formatu JSON do strumienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-158">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5877d-159">
            <see cref="T:System.Xml.XmlDictionaryWriter" /> Która zapisuje dane zakodowane za pomocą formatu JSON do strumienia, w oparciu o zestaw informacji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-159">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5877d-160">Domyślne kodowanie znaków to UTF-8.</span><span class="sxs-lookup"><span data-stu-id="5877d-160">The default character encoding is UTF-8.</span></span> <span data-ttu-id="5877d-161">Gdy element writer jest zamknięty, strumień jest zamknięty także.</span><span class="sxs-lookup"><span data-stu-id="5877d-161">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="5877d-162">Dane wyjściowe <see cref="T:System.IO.Stream" /> dla edytora JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-162">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="5877d-163">
            <see cref="T:System.Text.Encoding" /> , Który określa kodowanie znaków używanego przez edytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-163">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="5877d-164">Kodowanie domyślne to UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-164">The default encoding is UTF-8.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5877d-165">Tworzy <see cref="T:System.Xml.XmlDictionaryWriter" /> która zapisuje dane zakodowane przy użyciu formatu JSON do strumienia z kodowaniem określonego znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-165">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5877d-166">
            <see cref="T:System.Xml.XmlDictionaryWriter" /> Która zapisuje dane zakodowane za pomocą formatu JSON do strumienia, w oparciu o zestaw informacji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-166">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5877d-167">Gdy element writer jest zamknięty, strumień jest zamknięty także.</span><span class="sxs-lookup"><span data-stu-id="5877d-167">When the writer is closed, the stream is closed as well.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="5877d-168">Dane wyjściowe <see cref="T:System.IO.Stream" /> dla edytora JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-168">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="5877d-169">
            <see cref="T:System.Text.Encoding" /> , Który określa kodowanie znaków używanego przez edytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-169">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="5877d-170">Kodowanie domyślne to UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-170">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="5877d-171">Jeśli <see langword="true" />, strumień wyjściowy jest zamknięty przez moduł zapisujący po zakończeniu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-171">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5877d-172">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-172">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5877d-173">Tworzy <see cref="T:System.Xml.XmlDictionaryWriter" /> która zapisuje dane zakodowane przy użyciu formatu JSON do strumienia z kodowaniem określonego znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-173">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character encoding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5877d-174">
            <see cref="T:System.Xml.XmlDictionaryWriter" /> Która zapisuje dane zakodowane za pomocą formatu JSON do strumienia, w oparciu o zestaw informacji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-174">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool * bool -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream, indent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="5877d-175">Dane wyjściowe <see cref="T:System.IO.Stream" /> dla edytora JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-175">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="5877d-176">
            <see cref="T:System.Text.Encoding" /> , Który określa kodowanie znaków używanego przez edytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-176">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="5877d-177">Kodowanie domyślne to UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-177">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="5877d-178">Jeśli <see langword="true" />, strumień wyjściowy jest zamknięty przez moduł zapisujący po zakończeniu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-178">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5877d-179">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-179">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="indent">
          <span data-ttu-id="5877d-180">Jeśli <see langword="true" />, dane wyjściowe w formacie wielowierszowym, każdy poziom wcięcia, prawidłowo; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-180">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5877d-181">Tworzy <see cref="T:System.Xml.XmlDictionaryWriter" /> która zapisuje dane zakodowane za pomocą formatu JSON do strumienia do określonego znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-181">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5877d-182">
            <see cref="T:System.Xml.XmlDictionaryWriter" /> Która zapisuje dane zakodowane za pomocą formatu JSON do strumienia, w oparciu o zestaw informacji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-182">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateJsonWriter">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlDictionaryWriter CreateJsonWriter (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlDictionaryWriter CreateJsonWriter(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream, bool indent, string indentChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlDictionaryWriter ^ CreateJsonWriter(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream, bool indent, System::String ^ indentChars);" />
      <MemberSignature Language="F#" Value="static member CreateJsonWriter : System.IO.Stream * System.Text.Encoding * bool * bool * string -&gt; System.Xml.XmlDictionaryWriter" Usage="System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter (stream, encoding, ownsStream, indent, indentChars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
        <Parameter Name="indent" Type="System.Boolean" />
        <Parameter Name="indentChars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="5877d-183">Dane wyjściowe <see cref="T:System.IO.Stream" /> dla edytora JSON.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-183">The output <see cref="T:System.IO.Stream" /> for the JSON writer.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="5877d-184">
            <see cref="T:System.Text.Encoding" /> , Który określa kodowanie znaków używanego przez edytor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-184">The <see cref="T:System.Text.Encoding" /> that specifies the character encoding used by the writer.</span>
          </span>
          <span data-ttu-id="5877d-185">Kodowanie domyślne to UTF-8.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-185">The default encoding is UTF-8.</span>
          </span>
        </param>
        <param name="ownsStream">
          <span data-ttu-id="5877d-186">Jeśli <see langword="true" />, strumień wyjściowy jest zamknięty przez moduł zapisujący po zakończeniu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-186">If <see langword="true" />, the output stream is closed by the writer when done; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5877d-187">Wartość domyślna to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-187">The default value is <see langword="true" />.</span>
          </span>
        </param>
        <param name="indent">
          <span data-ttu-id="5877d-188">Jeśli <see langword="true" />, dane wyjściowe w formacie wielowierszowym, każdy poziom wcięcia, prawidłowo; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-188">If <see langword="true" />, the output uses multiline format, indenting each level properly; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="indentChars">
          <span data-ttu-id="5877d-189">Ciąg używany każdy poziom wcięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-189">The string used to indent each level.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5877d-190">Tworzy <see cref="T:System.Xml.XmlDictionaryWriter" /> która zapisuje dane zakodowane za pomocą formatu JSON do strumienia do określonego znaku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-190">Creates an <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to a stream with a specified character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5877d-191">
            <see cref="T:System.Xml.XmlDictionaryWriter" /> Która zapisuje dane zakodowane za pomocą formatu JSON do strumienia, w oparciu o zestaw informacji XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5877d-191">An <see cref="T:System.Xml.XmlDictionaryWriter" /> that writes data encoded with JSON to the stream based on an XML Infoset.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>