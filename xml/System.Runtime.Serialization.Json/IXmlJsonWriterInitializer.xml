<Type Name="IXmlJsonWriterInitializer" FullName="System.Runtime.Serialization.Json.IXmlJsonWriterInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="491bc19db12ac297dcca28539fe02d8bb96c46eb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30566416" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IXmlJsonWriterInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlJsonWriterInitializer" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlJsonWriterInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlJsonWriterInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa Inicjowanie modułu zapisującego JavaScript Object Notation (JSON), gdy ponowne użycie je zapisać do strumienia wyjściowego określonego dla interfejsu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlDictionaryWriter> Obiekty utworzone przez <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> metody implementuje ten interfejs, gdy tworzone są natychmiast już przystąpić do pisania dane zakodowane w formacie JSON. Jednak jeśli użytkownik chce, aby ponownie użyj tego samego <xref:System.Xml.XmlDictionaryWriter> obiektu do zapisania nowy dokument JSON do innego strumienia wyjściowego, a następnie modułu zapisującego musi zostać zainicjowany do odpowiedniego strumienia za pomocą <xref:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Boolean%29> metody.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetOutput">
      <MemberSignature Language="C#" Value="public void SetOutput (System.IO.Stream stream, System.Text.Encoding encoding, bool ownsStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutput(class System.IO.Stream stream, class System.Text.Encoding encoding, bool ownsStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOutput(System::IO::Stream ^ stream, System::Text::Encoding ^ encoding, bool ownsStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Json</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
        <Parameter Name="ownsStream" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Dane wyjściowe <see cref="T:System.IO.Stream" /> w których zapisuje modułu zapisującego.</param>
        <param name="encoding">
          <see cref="T:System.Text.Encoding" /> Określający kodowanie znaków w strumieniu wyjściowym.</param>
        <param name="ownsStream">Jeśli <see langword="true" />, strumień wyjściowy jest zamknięte przez moduł zapisujący po zakończeniu; w przeciwnym razie <see langword="false" />.</param>
        <summary>Inicjuje lub ponownie inicjuje Edytor JavaScript Object Notation (JSON) do strumienia wyjściowego określonego kodowania określony znak.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlDictionaryWriter> Obiekty utworzone przez <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory.CreateJsonWriter%2A> metody implementuje ten interfejs, gdy tworzone są natychmiast już przystąpić do pisania dane zakodowane w formacie JSON. Jednak jeśli użytkownik chce, aby ponownie użyj tego samego <xref:System.Xml.XmlDictionaryWriter> obiektu do zapisania nowy dokument JSON do innego strumienia wyjściowego, a następnie modułu zapisującego musi zostać zainicjowany do odpowiedniego strumienia za pomocą <xref:System.Runtime.Serialization.Json.IXmlJsonWriterInitializer.SetOutput%28System.IO.Stream%2CSystem.Text.Encoding%2CSystem.Boolean%29> metody.  
  
 Utworzone przez moduły zapisujące <xref:System.Runtime.Serialization.Json.JsonReaderWriterFactory> może obsłużyć UTF-8 i kodowania UTF-16 (big - lub małego endian).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>