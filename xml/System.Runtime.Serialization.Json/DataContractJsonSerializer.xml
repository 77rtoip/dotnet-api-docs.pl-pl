<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataContractJsonSerializer.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f9383ae5dc3a861d89d32ed9383aadf1042967705.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9383ae5dc3a861d89d32ed9383aadf1042967705</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Serializes objects to the JavaScript Object Notation (JSON) and deserializes JSON data to objects.</source>
          <target state="translated">Serializuje obiektów do JavaScript Object Notation (JSON) i deserializuje dane JSON do obiektów.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>This class cannot be inherited.</source>
          <target state="translated">Klasa ta nie może być dziedziczona.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> class to serialize instances of a type into a JSON document and to deserialize a JSON document into an instance of a type.</source>
          <target state="translated">Użyj <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer&gt;</ph> klasy do serializacji wystąpień typu w dokumencie JSON i do deserializacji do wystąpienia typu dokumentu JSON.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>For example, you can create a type named <ph id="ph1">`Person`</ph> with properties that contain essential data, such as a name and address.</source>
          <target state="translated">Na przykład można utworzyć typu o nazwie <ph id="ph1">`Person`</ph> z właściwościami, które zawierają istotne dane, takie jak nazwy i adresu.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>You can then create and manipulate an instance of the <ph id="ph1">`Person`</ph> class and write all of its property values in a JSON document for later retrieval.</source>
          <target state="translated">Można tworzyć i manipulowania wystąpienia <ph id="ph1">`Person`</ph> klasy i zapisanie wszystkich jej wartości właściwości w dokumencie JSON dla nowszej pobierania.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>This JSON document can later be deserialized into the <ph id="ph1">`Person`</ph> class or another class with an equivalent data contract.</source>
          <target state="translated">Ten dokument JSON później może zostać przeprowadzona deserializacja <ph id="ph1">`Person`</ph> klasy lub innego z kontraktem danych równoważne.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>If an error occurs during the serialization of an outgoing reply on the server or the reply operation throws an exception for some other reason, it may not get returned to the client as a fault.</source>
          <target state="translated">Jeśli wystąpi błąd podczas serializacji odpowiedzi wychodzących na serwerze lub operacji odpowiedzi zgłasza wyjątek innego powodu, może nie pobrać zwróceniem klientowi jako błąd.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>At least one of the types being serialized or deserialized does not conform to data contract rules.</source>
          <target state="translated">Co najmniej jeden z typów jest serializowany lub deserializowany za nie jest zgodna z regułami kontraktu danych.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> atrybutu nie została zastosowana do typu.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">Typ wystąpienia, które jest serializowany lub deserializowany.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> klasy do serializacji lub deserializacji obiektu określonego typu.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">Typ wystąpienia, które serializowany lub deserializowany.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> z <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> zawiera typy, które mogą znajdować się na grafie obiektu.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type, with a collection of known types that may be present in the object graph.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> klasy do serializacji lub deserializacji obiektu określonego typu z kolekcji znanych typów, które mogą znajdować się na grafie obiektu.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">Typ wystąpienia, które jest serializowany lub deserializowany.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
          <source>The serializer settings for the JSON serializer.</source>
          <target state="translated">Ustawienia serializatora serializator JSON.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type and serializer settings.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> klasy do serializacji lub deserializacji obiektu określonego typu i serializator ustawienia.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">Typ wystąpienia, które jest serializowany lub deserializowany.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
          <source>The name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">Nazwa elementu XML, który umieszcza zawartości do serializacji lub deserializacji.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> klasy do serializacji lub deserializacji obiektu określonego typu za pomocą elementu głównego XML określony przez parametr.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">Typ wystąpienia, które jest serializowany lub deserializowany.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the root element name of the content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> Zawierającą nazwę elementu głównego zawartości.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> klasy do serializacji lub deserializacji obiektu określonego typu za pomocą elementu głównego XML określonej przez parametr typu <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">Typ wystąpienia, które jest serializowany lub deserializowany.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">Nazwa elementu XML, który umieszcza zawartości do serializacji lub deserializacji.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The default is "root".</source>
          <target state="translated">Wartość domyślna to "root".</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> z <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> zawiera typy, które mogą znajdować się na grafie obiektu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter, with a collection of known types that may be present in the object graph.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> klasy do serializacji lub deserializacji obiektu określonego typu za pomocą elementu głównego XML określonej przez parametr w kolekcji znanych typów, które mogą znajdować się na grafie obiektu.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">Typ wystąpienia, które jest serializowany lub deserializowany.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the root element name of the content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> Zawierającą nazwę elementu głównego zawartości.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> z <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> zawiera typy, które mogą znajdować się na grafie obiektu.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of a specified type using the XML root element specified by a parameter of type <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>, with a collection of known types that may be present in the object graph.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> klasy do serializacji lub deserializacji obiektu określonego typu za pomocą elementu głównego XML określonej przez parametr typu <ph id="ph2">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph>, z typem kolekcji znanych typów, które mogą znajdować się na grafie obiektu.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">Typ wystąpienia, które jest serializowany lub deserializowany.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the root element name of the content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> Zawierającą nazwę elementu głównego zawartości.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> z <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> zawiera typy, które mogą znajdować się na grafie obiektu.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> interface upon serialization and ignore unexpected data upon deserialization; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> ignorowanie <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> interfejsu podczas serializacji i Ignoruj nieoczekiwane dane podczas deserializacji; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to customize the serialization process.</source>
          <target state="translated">Implementacja interfejsu <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> do dostosowania procesu serializacji.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to emit type information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> można wyemitować informacji o typie; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> klasy do serializacji lub deserializacji obiektu określonego typu.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>This method also specifies a list of known types that may be present in the object graph, the maximum number of graph items to serialize or deserialize, whether to ignore unexpected data or emit type information, and a surrogate for custom serialization.</source>
          <target state="translated">Ta metoda określa również listę znanych typów, które mogą znajdować się na grafie obiektu maksymalną liczbę elementów wykresu do serializacji lub deserializacji, czy Ignoruj nieoczekiwane dane lub Emituj informacje o typie i dwuskładnikowego do szeregowania niestandardowego.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The type of the instances that is serialized or deserialized.</source>
          <target state="translated">Typ wystąpienia, które jest serializowany lub deserializowany.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The name of the XML element that encloses the content to serialize or deserialize.</source>
          <target state="translated">Nazwa elementu XML, który umieszcza zawartości do serializacji lub deserializacji.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is "root".</source>
          <target state="translated">Wartość domyślna to "root".</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> z <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> zawiera typy, które mogą znajdować się na grafie obiektu.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">Maksymalna liczba elementów na wykresie do serializacji lub deserializacji.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is the value returned by the <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> property.</source>
          <target state="translated">Wartość domyślna to wartość zwracana przez <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> interface upon serialization and ignore unexpected data upon deserialization; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> ignorowanie <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> interfejsu podczas serializacji i Ignoruj nieoczekiwane dane podczas deserializacji; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to customize the serialization process.</source>
          <target state="translated">Implementacja interfejsu <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> do dostosowania procesu serializacji.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to emit type information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> można wyemitować informacji o typie; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> klasy do serializacji lub deserializacji obiektu określonego typu.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>This method also specifies the root name of the XML element, a list of known types that may be present in the object graph, the maximum number of graph items to serialize or deserialize, whether to ignore unexpected data or emit type information, and a surrogate for custom serialization.</source>
          <target state="translated">Ta metoda określa także nazwę katalogu głównego elementu XML, listę znanych typów, które mogą znajdować się na grafie obiektu maksymalną liczbę elementów wykresu do serializacji lub deserializacji, czy Ignoruj nieoczekiwane dane lub Emituj informacje o typie i surogatu niestandardowej serializacji.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The type of the instances that are serialized or deserialized.</source>
          <target state="translated">Typ wystąpienia, które serializowany lub deserializowany.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> that contains the root element name of the content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryString" /&gt;</ph> Zawierającą nazwę elementu głównego zawartości.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that contains the known types that may be present in the object graph.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> z <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> zawierający znane typy, które mogą znajdować się na grafie obiektu.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The maximum number of items in the graph to serialize or deserialize.</source>
          <target state="translated">Maksymalna liczba elementów na wykresie do serializacji lub deserializacji.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is the value returned by the <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> property.</source>
          <target state="translated">Wartość domyślna to wartość zwracana przez <ph id="ph1">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> interface upon serialization and ignore unexpected data upon deserialization; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> ignorowanie <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> interfejsu podczas serializacji i Ignoruj nieoczekiwane dane podczas deserializacji; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> to customize the serialization process.</source>
          <target state="translated">Implementacja interfejsu <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> do dostosowania procesu serializacji.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to emit type information; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> można wyemitować informacji o typie; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> class to serialize or deserialize an object of the specified type.</source>
          <target state="translated">Inicjuje nowe wystąpienie klasy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> klasy do serializacji lub deserializacji obiektu określonego typu.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.#ctor(System.Type,System.Xml.XmlDictionaryString,System.Collections.Generic.IEnumerable{System.Type},System.Int32,System.Boolean,System.Runtime.Serialization.IDataContractSurrogate,System.Boolean)">
          <source>This method also specifies the root name of the XML element, a list of known types that may be present in the object graph, the maximum number of graph items to serialize or deserialize, whether to ignore unexpected data or emit type information, and a surrogate for custom serialization.</source>
          <target state="translated">Ta metoda określa także nazwę katalogu głównego elementu XML, listę znanych typów, które mogą znajdować się na grafie obiektu maksymalną liczbę elementów wykresu do serializacji lub deserializacji, czy Ignoruj nieoczekiwane dane lub Emituj informacje o typie i surogatu niestandardowej serializacji.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractSurrogate">
          <source>Gets a surrogate type that is currently active for a given <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> instance.</source>
          <target state="translated">Pobiera typ Surogat, który jest obecnie aktywny dla danego <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> wystąpienia.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractSurrogate">
          <source>Surrogates can extend the serialization or deserialization process.</source>
          <target state="translated">Części znaku dwuskładnikowego można rozszerzyć procesu serializacji lub deserializacji.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractSurrogate">
          <source>An implementation of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> class.</source>
          <target state="translated">Implementacja interfejsu <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /&gt;</ph> klasy.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractSurrogate">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> can be used to customize how instances of a type are serialized and deserialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.IDataContractSurrogate&gt;</ph> Można dostosować sposób serializacji i deserializacji wystąpienia typu.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DataContractSurrogate">
          <source>For example, it can be used to enable serialization of legacy types that are not serializable, that is, types to which the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute has not been applied.</source>
          <target state="translated">Na przykład może służyć do serializacji typów starszej wersji, które nie są serializacji, oznacza to, że typy, do których włączyć <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> nie zastosowano atrybutu.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
          <source>Gets the format of the date and time type items in object graph.</source>
          <target state="translated">Pobiera format elementów typu Data i godzina w grafie obiektu.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.DateTimeFormat">
          <source>The format of the date and time type items in object graph.</source>
          <target state="translated">Format elementów wykresu obiektu typu Data i godzina.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
          <source>Gets or sets the data contract JSON serializer settings to emit type information.</source>
          <target state="translated">Pobiera lub ustawia ustawienia serializator JSON kontraktu danych do wysyłania informacji o typie.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.EmitTypeInformation">
          <source>The data contract JSON serializer settings to emit type information.</source>
          <target state="translated">Ustawienia serializatora JSON można wyemitować informacji o typie kontraktu danych.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
          <source>Gets a value that specifies whether unknown data is ignored on deserialization and whether the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> interface is ignored on serialization.</source>
          <target state="translated">Pobiera wartość, która określa, czy nieznane dane jest ignorowany w deserializacji i czy <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph> interfejsu jest ignorowany w serializacji.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore unknown data and <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> ignorowanie nieznane dane i <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.IExtensibleDataObject" /&gt;</ph>; w przeciwnym razie <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject%2A&gt;</ph> property affects types to which a <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute has been applied and that also implement the <ph id="ph3">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject%2A&gt;</ph> Właściwość ma wpływ na typy, do których <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> zastosowano atrybut i również implementują <ph id="ph3">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interfejsu.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
          <source>In this case when <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> is <ph id="ph2">`true`</ph>, data added in future versions of the contract is ignored on read and write.</source>
          <target state="translated">W takim przypadku, gdy <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> jest <ph id="ph2">`true`</ph>, danych dodana w przyszłych wersjach kontrakt jest ignorowana na odczyt i zapis.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.IgnoreExtensionDataObject">
          <source>For more information, see <bpt id="p1">[</bpt>Forward-Compatible Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>kontrakty danych zgodne z nowszymi<ept id="p1">](~/docs/framework/wcf/feature-details/forward-compatible-data-contracts.md)</ept>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Gets a value that specifies whether the serializer can read the object.</source>
          <target state="translated">Pobiera wartość określającą, czy serializator może odczytać ten obiekt.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> used to read the XML stream mapped from JSON.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> Używany do odczytu strumień XML zamapowana z formatu JSON.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>Gets a value that specifies whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> is positioned over an XML element that represents an object the serializer can deserialize from.</source>
          <target state="translated">Pobiera wartość, która określa, czy <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> znajduje się za pośrednictwem elementu XML, który reprezentuje serializator może wykonywać deserializację z obiektu.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned correctly; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli czytnik jest ustawiony prawidłowo; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject%2A&gt;</ph> determines whether it can read a object by checking that it is positioned on an XML element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject%2A&gt;</ph> Określa, czy obiekt może odczytywać przez sprawdzenie, czy jest umieszczony w elemencie XML.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>It also examines the name and namespace of the XML element that the reader is positioned at and compares the values to the expected name and namespace.</source>
          <target state="translated">Sprawdza także nazwę i przestrzeń nazw elementu XML, czy czytnik znajduje się w i porównuje wartości do oczekiwanej nazwy i przestrzeni nazw.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The expected name can be set with the <ph id="ph1">`rootName`</ph> value passed into the constructor (if present), or is "root" if absent.</source>
          <target state="translated">Oczekiwano nazwy można ustawić za pomocą <ph id="ph1">`rootName`</ph> wartość przekazany do konstruktora (jeśli istnieje) lub jest "root" Jeśli go nie ma.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>The expected namespace is the empty string.</source>
          <target state="translated">Oczekiwano przestrzeni nazw jest pustym ciągiem.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlDictionaryReader)">
          <source>Note that this method is intended for advanced scenarios when working with XML mapped from JSON.</source>
          <target state="translated">Należy pamiętać, że ta metoda jest przeznaczony dla zaawansowanych scenariuszy podczas pracy z XML zamapowana z formatu JSON.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the XML stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> Używany do odczytu strumień XML.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>Determines whether the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> is positioned on an object that can be deserialized.</source>
          <target state="translated">Określa, czy <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> jest umieszczony na obiekcie, który może być zdeserializowany.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reader is positioned correctly; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Jeśli czytnik jest ustawiony prawidłowo; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>This method checks whether the reader is positioned on an element that can be deserialized, and returns <ph id="ph1">`true`</ph> if it is.</source>
          <target state="translated">Ta metoda sprawdza, czy czytnik jest ustawiony na element, który może być zdeserializowany i zwraca <ph id="ph1">`true`</ph> przypadku.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.IsStartObject(System.Xml.XmlReader)">
          <source>To return <ph id="ph1">`true`</ph>, the found element must have the expected name.</source>
          <target state="translated">Aby przywrócić <ph id="ph1">`true`</ph>, znaleziono element musi mieć oczekiwanej nazwy.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
          <source>Gets a collection of types that may be present in the object graph serialized using this instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph>.</source>
          <target state="translated">Pobiera kolekcję typów, które mogą znajdować się na grafie obiektu zserializowanym przy użyciu tego wystąpienia <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.KnownTypes">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> that contains the expected types passed in as known types to the <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> constructor.</source>
          <target state="translated">A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> zawiera oczekiwanych typów przekazany jako znanych typów do <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer" /&gt;</ph> konstruktora.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>Gets the maximum number of items in an object graph that the serializer serializes or deserializes in one read or write call.</source>
          <target state="translated">Pobiera maksymalną liczbę elementów na wykresie obiektu, który serializator serializuje i deserializuje w jednym wywołania odczytu lub zapisu.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>The maximum number of items to serialize or deserialize.</source>
          <target state="translated">Maksymalna liczba elementów do serializacji lub deserializacji.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>This property can be set using a constructor.</source>
          <target state="translated">Tej właściwości można ustawić za pomocą konstruktora.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>For a list, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.%23ctor%2A&gt;</ph>.</source>
          <target state="translated">Aby uzyskać listę, zobacz <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.%23ctor%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph%2A&gt;</ph> property specifies the maximum number of objects that the serializer serializes or deserializes in a single <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject%2A&gt;</ph> method call.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph%2A&gt;</ph> Właściwość określa maksymalną liczbę obiektów, które serializator serializuje i deserializuje w jednej <ph id="ph2">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject%2A&gt;</ph> lub <ph id="ph3">&lt;xref:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject%2A&gt;</ph> wywołania metody.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>The method always reads one root object, but this object may have other objects in its data members.</source>
          <target state="translated">Metoda odczytuje zawsze jednego obiektu głównego, ale ten obiekt może mieć inne obiekty w jej elementów członkowskich danych.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>Those objects may have other objects.</source>
          <target state="translated">Te obiekty mogą mieć inne obiekty.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>The default is <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;xref:System.Int32.MaxValue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>Note that when serializing or deserializing arrays, every array entry counts as a separate object.</source>
          <target state="translated">Należy pamiętać, że podczas serializacji lub deserializacji tablic, każdy wpis tablicy jest traktowana jako oddzielny obiekt.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>Also, note that some objects may have a large memory representation, so this quota alone may not be sufficient to prevent Denial of Service attacks.</source>
          <target state="translated">Należy również zauważyć, że niektóre obiekty może mieć reprezentacja dużej ilości pamięci, dlatego tego samego przydziału nie może być wystarczające, aby zapobiec atakom "odmowa usługi".</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>For more information, see <bpt id="p1">[</bpt>Security Considerations for Data<ept id="p1">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji, zobacz <bpt id="p1">[</bpt>zagadnienia dotyczące zabezpieczeń dla danych<ept id="p1">](~/docs/framework/wcf/feature-details/security-considerations-for-data.md)</ept>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>If you need to increase this quota beyond its default value, it is important to do so both on the sending (serializing) and receiving (deserializing) sides.</source>
          <target state="translated">Jeśli konieczne jest zwiększenie przydziału ponad wartość domyślną, należy to zrobić zarówno na wysyłanie (serializację) i odbieranie strony (deserializacja).</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>It applies both when reading and writing data.</source>
          <target state="translated">Ma to zastosowanie zarówno podczas odczytywania i zapisywania danych.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.MaxItemsInObjectGraph">
          <source>The number of items exceeds the maximum value.</source>
          <target state="translated">Liczba elementów przekracza maksymalną wartość.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Deserializes JSON (JavaScript Object Notation) data and returns the deserialized object.</source>
          <target state="translated">Deserializuje dane JSON (JavaScript Object Notation) i zwraca obiekt zdeserializowany.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to be read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> Do odczytu.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
          <source>Reads a document stream in the JSON (JavaScript Object Notation) format and returns the deserialized object.</source>
          <target state="translated">Odczytuje strumienia dokumentu w formacie JSON (JavaScript Object Notation) i zwraca obiekt zdeserializowany.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.IO.Stream)">
          <source>The deserialized object.</source>
          <target state="translated">Obiekt po deserializacji.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> used to read the XML document mapped from JSON.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> Używany do odczytu dokumentu XML zamapowana z formatu JSON.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
          <source>Reads the XML document mapped from JSON (JavaScript Object Notation) with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> and returns the deserialized object.</source>
          <target state="translated">Odczytuje dokument XML jest zamapowany z JSON (JavaScript Object Notation) z <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> i zwraca obiekt zdeserializowany.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader)">
          <source>The deserialized object.</source>
          <target state="translated">Obiekt po deserializacji.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the XML document mapped from JSON.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> Używany do odczytu dokumentu XML zamapowana z formatu JSON.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
          <source>Reads the XML document mapped from JSON (JavaScript Object Notation) with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and returns the deserialized object.</source>
          <target state="translated">Odczytuje dokument XML jest zamapowany z JSON (JavaScript Object Notation) z <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> i zwraca obiekt zdeserializowany.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader)">
          <source>The deserialized object.</source>
          <target state="translated">Obiekt po deserializacji.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> used to read the XML document mapped from JSON.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> Używany do odczytu dokumentu XML zamapowana z formatu JSON.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to skip the verification.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby sprawdzić, czy nazwa elementu XML otaczającego i przestrzeni nazw odpowiada oczekiwanej nazwy i przestrzeni nazw; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph> do pominięcia weryfikacji.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>Reads the XML document mapped from JSON with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.</source>
          <target state="translated">Odczytuje dokument XML jest zamapowany z JSON z <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryReader" /&gt;</ph> i zwraca obiekt zdeserializowany; można również określić, czy element serializujący powinien sprawdzić, czy jest on ustawiony na odpowiedni element przed podjęciem próby deserializacji.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlDictionaryReader,System.Boolean)">
          <source>The deserialized object.</source>
          <target state="translated">Obiekt po deserializacji.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> used to read the XML document mapped from JSON.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> Używany do odczytu dokumentu XML zamapowana z formatu JSON.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to check whether the enclosing XML element name and namespace correspond to the expected name and namespace; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, which skips the verification.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby sprawdzić, czy nazwa elementu XML otaczającego i przestrzeni nazw odpowiada oczekiwanej nazwy i przestrzeni nazw; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>, które Pomija weryfikację.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Wartość domyślna to <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>Reads an XML document mapped from JSON with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and returns the deserialized object; it also enables you to specify whether the serializer should verify that it is positioned on an appropriate element before attempting to deserialize.</source>
          <target state="translated">Odczytuje dokument XML jest zamapowany z JSON z <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> i zwraca obiekt zdeserializowany; można również określić, czy element serializujący powinien sprawdzić, czy jest on ustawiony na odpowiedni element przed podjęciem próby deserializacji.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.ReadObject(System.Xml.XmlReader,System.Boolean)">
          <source>The deserialized object.</source>
          <target state="translated">Obiekt po deserializacji.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
          <source>Gets or sets a value that specifies whether to serialize read only types.</source>
          <target state="translated">Pobiera lub ustawia wartość określającą, czy do serializacji odczytać tylko typy.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.SerializeReadOnlyTypes">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to serialize read only types; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> do serializacji odczytać tylko typy; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
          <source>Gets or sets a value that specifies whether to use a simple dictionary format.</source>
          <target state="translated">Pobiera lub ustawia wartość określającą, czy ma być używany format słownika prostego.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.Json.DataContractJsonSerializer.UseSimpleDictionaryFormat">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to use a simple dictionary format; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Aby użyć formatu słownika prostego; w przeciwnym razie <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Writes the closing XML element to an XML document that can be mapped to JavaScript Object Notation (JSON).</source>
          <target state="translated">Zapisuje zamknięcia — element XML dokumentu XML, które mogą być mapowane do JavaScript Object Notation (JSON).</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the XML document to map to JSON.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> Używany do zapisywania dokumentu XML do mapowania do formatu JSON.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>Writes the closing XML element to an XML document, using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>, which can be mapped to JavaScript Object Notation (JSON).</source>
          <target state="translated">Zapisuje zamknięcia — element XML w pliku XML dokumentu za pomocą <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>, które mogą być mapowane do JavaScript Object Notation (JSON).</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlDictionaryWriter)">
          <source>Note that this method is intended for advanced scenarios when working with XML mapped from JSON.</source>
          <target state="translated">Należy pamiętać, że ta metoda jest przeznaczony dla zaawansowanych scenariuszy podczas pracy z XML zamapowana z formatu JSON.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document mapped to JSON.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> Używany do zapisywania dokumentu XML zamapowane do formatu JSON.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteEndObject(System.Xml.XmlWriter)">
          <source>Writes the closing XML element to an XML document, using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, which can be mapped to JavaScript Object Notation (JSON).</source>
          <target state="translated">Zapisuje zamknięcia — element XML w pliku XML dokumentu za pomocą <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, które mogą być mapowane do JavaScript Object Notation (JSON).</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Serializes an object to a JavaScript Object Notation (JSON) document.</source>
          <target state="translated">Serializuje obiekt do dokumentu JavaScript Object Notation (JSON).</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> that is written to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> Napisano w celu.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>The object that contains the data to write to the stream.</source>
          <target state="translated">Obiekt, który zawiera dane do zapisania w strumieniu.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>Serializes a specified object to JavaScript Object Notation (JSON) data and writes the resulting JSON to a stream.</source>
          <target state="translated">Serializuje określony obiekt do danych JavaScript Object Notation (JSON) i zapisuje dane wynikowe JSON strumienia.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">Typ poddany serializacji niezgodne z zasadami kontraktu danych.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> atrybutu nie została zastosowana do typu.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">Istnieje problem z wystąpienie zapisywanej.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>The maximum number of objects to serialize has been exceeded.</source>
          <target state="translated">Przekroczono maksymalną liczbę obiektów do serializacji.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.IO.Stream,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated">Sprawdź <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the XML document or stream to map to JSON.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> Używany do zapisywania dokumentu XML lub strumienia do mapowania do formatu JSON.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The object that contains the data to write.</source>
          <target state="translated">Obiekt, który zawiera dane do zapisania.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON).</source>
          <target state="translated">Serializuje obiekt do formatu XML, który może być mapowany do JavaScript Object Notation (JSON).</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Writes all the object data, including the starting XML element, content, and closing element, with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated">Zapisuje wszystkie dane obiektów, w tym początkowy — element XML, zawartość i elementu zamykającego z <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">Typ poddany serializacji niezgodne z zasadami kontraktu danych.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> atrybutu nie została zastosowana do typu.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">Istnieje problem z wystąpienie zapisywanej.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The maximum number of objects to serialize has been exceeded.</source>
          <target state="translated">Przekroczono maksymalną liczbę obiektów do serializacji.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated">Sprawdź <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML document to map to JSON.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> Używany do zapisywania dokumentu XML do mapowania do formatu JSON.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>The object that contains the data to write.</source>
          <target state="translated">Obiekt, który zawiera dane do zapisania.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>Serializes an object to XML that may be mapped to JavaScript Object Notation (JSON).</source>
          <target state="translated">Serializuje obiekt do formatu XML, który może być mapowany do JavaScript Object Notation (JSON).</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>Writes all the object data, including the starting XML element, content, and closing element, with an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Zapisuje wszystkie dane obiektów, w tym początkowy — element XML, zawartość i elementu zamykającego z <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">Typ poddany serializacji niezgodne z zasadami kontraktu danych.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> atrybutu nie została zastosowana do typu.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">Istnieje problem z wystąpienie zapisywanej.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>The maximum number of objects to serialize has been exceeded.</source>
          <target state="translated">Przekroczono maksymalną liczbę obiektów do serializacji.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObject(System.Xml.XmlWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated">Sprawdź <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Writes the content of an object to XML that may be mapped to JavaScript Object Notation (JSON)., without writing the wrapping element.</source>
          <target state="translated">Zapisuje zawartość obiektu do formatu XML, który może być mapowany do JavaScript Object Notation (JSON)., bez zapisywania elementu zawijania.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> to write to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> Do zapisu.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The object to write.</source>
          <target state="translated">Obiekt do zapisania.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated">Zapisuje zawartość XML, które mogą być mapowane do JavaScript Object Notation (JSON) za pomocą <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">Typ poddany serializacji niezgodne z zasadami kontraktu danych.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> atrybutu nie została zastosowana do typu.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">Istnieje problem z wystąpienie zapisywanej.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The maximum number of objects to serialize has been exceeded.</source>
          <target state="translated">Przekroczono maksymalną liczbę obiektów do serializacji.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated">Sprawdź <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> Używana podczas zapisu.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The object to write.</source>
          <target state="translated">Obiekt do zapisania.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>Writes the XML content that can be mapped to JavaScript Object Notation (JSON) using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Zapisuje zawartość XML, które mogą być mapowane do JavaScript Object Notation (JSON) za pomocą <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The type being serialized does not conform to data contract rules.</source>
          <target state="translated">Typ poddany serializacji niezgodne z zasadami kontraktu danych.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>For example, the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> attribute has not been applied to the type.</source>
          <target state="translated">Na przykład <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> atrybutu nie została zastosowana do typu.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>There is a problem with the instance being written.</source>
          <target state="translated">Istnieje problem z wystąpienie zapisywanej.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>The maximum number of objects to serialize has been exceeded.</source>
          <target state="translated">Przekroczono maksymalną liczbę obiektów do serializacji.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteObjectContent(System.Xml.XmlWriter,System.Object)">
          <source>Check the <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> property.</source>
          <target state="translated">Sprawdź <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractSerializer.MaxItemsInObjectGraph" /&gt;</ph> właściwości.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.Json.DataContractJsonSerializer">
          <source>Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON).</source>
          <target state="translated">Zapisuje otwierający — element XML do serializowania obiektu do formatu XML, które mogą być mapowane do JavaScript Object Notation (JSON).</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> used to write the XML start element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph> Używany do zapisywania elementu początkowego XML.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>The object to write.</source>
          <target state="translated">Obiekt do zapisania.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlDictionaryWriter,System.Object)">
          <source>Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</source>
          <target state="translated">Zapisuje otwierający — element XML do serializowania obiektu do formatu XML, które mogą być mapowane na JavaScript Object Notation (JSON) za pomocą <ph id="ph1">&lt;see cref="T:System.Xml.XmlDictionaryWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> used to write the XML start element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> Używany do zapisywania elementu początkowego XML.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>The object to write.</source>
          <target state="translated">Obiekt do zapisania.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.Json.DataContractJsonSerializer.WriteStartObject(System.Xml.XmlWriter,System.Object)">
          <source>Writes the opening XML element for serializing an object to XML that can be mapped to JavaScript Object Notation (JSON) using an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Zapisuje otwierający — element XML do serializowania obiektu do formatu XML, które mogą być mapowane na JavaScript Object Notation (JSON) za pomocą <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>