<Type Name="JsonReaderState" FullName="System.Text.Json.JsonReaderState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="134658575824ec7ab34ef310d545b4b8914b9306" /><Meta Name="ms.sourcegitcommit" Value="ef1f0c8985003a14413f66c3de381b8f3b6e4436" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="05/30/2019" /><Meta Name="ms.locfileid" Value="66380643" /></Metadata><TypeSignature Language="C#" Value="public struct JsonReaderState" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonReaderState extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonReaderState" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonReaderState" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonReaderState" />
  <TypeSignature Language="F#" Value="type JsonReaderState = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9c512-101">Definiuje typ nieprzezroczyste, która przechowuje i zapisuje wszystkie istotne informacje o stanie, który należy podać w celu <see cref="T:System.Text.Json.Utf8JsonReader" /> kontynuować odczytywanie po przetworzeniu niepełne dane.</span><span class="sxs-lookup"><span data-stu-id="9c512-101">Defines an opaque type that holds and saves all the relevant state information, which must be provided to the <see cref="T:System.Text.Json.Utf8JsonReader" /> to continue reading after processing incomplete data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="9c512-102">`JsonReaderState` jest wymagany do obsługi współużytkowania wątkowości, odczytując niekompletne dane i Czytaj dalej, gdy dostępnych jest więcej danych.</span><span class="sxs-lookup"><span data-stu-id="9c512-102">`JsonReaderState` is required to support reentrancy when reading incomplete data, and to continue reading once more data is available.</span></span> <span data-ttu-id="9c512-103">W odróżnieniu od <xref:System.Text.Json.Utf8JsonReader> struktury, która jest strukturą ref tego typu mogą przetrwać w granicach async/await i dlatego są wymagane, aby zapewnić obsługę dla asynchronicznego odczytywania większej ilości danych, przed kontynuowaniem nowe wystąpienie klasy <xref:System.Text.Json.Utf8JsonReader>.</span><span class="sxs-lookup"><span data-stu-id="9c512-103">Unlike the <xref:System.Text.Json.Utf8JsonReader> struct, which is a ref struct, this type can survive across async/await boundaries, and hence it's required to provide support for reading more data asynchronously before continuing with a new instance of the <xref:System.Text.Json.Utf8JsonReader>.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonReaderState (System.Text.Json.JsonReaderOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Text.Json.JsonReaderOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonReaderState.#ctor(System.Text.Json.JsonReaderOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional options As JsonReaderOptions = null)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonReaderState : System.Text.Json.JsonReaderOptions -&gt; System.Text.Json.JsonReaderState" Usage="new System.Text.Json.JsonReaderState options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Text.Json.JsonReaderOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="9c512-104">Definiuje niestandardowe zachowanie <see cref="T:System.Text.Json.Utf8JsonReader" /> różni się od RFC JSON (na przykład sposobu obsługi komentarze lub maksymalną głębokość dozwoloną podczas odczytu).</span><span class="sxs-lookup"><span data-stu-id="9c512-104">Defines the customized behavior of the <see cref="T:System.Text.Json.Utf8JsonReader" /> that is different from the JSON RFC (for example how to handle comments, or the maximum depth allowed when reading).</span></span> <span data-ttu-id="9c512-105">Domyślnie <see cref="T:System.Text.Json.Utf8JsonReader" /> JSON RFC jest ściśle zgodna (komentarze w kodzie JSON jest nieprawidłowy) i operacji odczytu do maksymalnej głębokości 64.</span><span class="sxs-lookup"><span data-stu-id="9c512-105">By default, the <see cref="T:System.Text.Json.Utf8JsonReader" /> follows the JSON RFC strictly (comments within the JSON are invalid) and reads up to a maximum depth of 64.</span></span></param>
        <summary><span data-ttu-id="9c512-106">Tworzy nowy <see cref="T:System.Text.Json.JsonReaderState" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="9c512-106">Constructs a new <see cref="T:System.Text.Json.JsonReaderState" /> instance.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="9c512-107">Wystąpienie tego stanu muszą zostać przekazane do <xref:System.Text.Json.Utf8JsonReader> konstruktora z danych JSON.</span><span class="sxs-lookup"><span data-stu-id="9c512-107">An instance of this state must be passed to the <xref:System.Text.Json.Utf8JsonReader> constructor with the JSON data.</span></span> <span data-ttu-id="9c512-108">W odróżnieniu od <xref:System.Text.Json.Utf8JsonReader>, która jest strukturą ref, stan mogą przetrwać w granicach async/await i dlatego tego typu są wymagane do świadczenia pomocy technicznej do odczytu w większej ilości danych asynchronicznie przed kontynuowaniem nowe wystąpienie klasy <xref:System.Text.Json.Utf8JsonReader>.</span><span class="sxs-lookup"><span data-stu-id="9c512-108">Unlike the <xref:System.Text.Json.Utf8JsonReader>, which is a ref struct, the state can survive across async/await boundaries and hence this type is required to provide support for reading in more data asynchronously before continuing with a new instance of the <xref:System.Text.Json.Utf8JsonReader>.</span></span>
            
            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9c512-109">Maksymalna głębokość ma ustawioną wartość ujemna (&lt; 0).</span><span class="sxs-lookup"><span data-stu-id="9c512-109">The maximum depth is set to a non-positive value (&lt; 0).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BytesConsumed">
      <MemberSignature Language="C#" Value="public long BytesConsumed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BytesConsumed" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderState.BytesConsumed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesConsumed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long BytesConsumed { long get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesConsumed : int64" Usage="System.Text.Json.JsonReaderState.BytesConsumed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c512-110">Pobiera liczba bajtów, używane przez <see cref="T:System.Text.Json.Utf8JsonReader" /> do tej pory dla danego UTF-8 kodowany tekst wejściowy.</span><span class="sxs-lookup"><span data-stu-id="9c512-110">Gets the total number of bytes consumed by the <see cref="T:System.Text.Json.Utf8JsonReader" /> so far for the given UTF-8 encoded input text.</span></span></summary>
        <value><span data-ttu-id="9c512-111">Całkowita liczba bajtów, używane przez <see cref="T:System.Text.Json.Utf8JsonReader" /> do tej pory.</span><span class="sxs-lookup"><span data-stu-id="9c512-111">The total number of bytes consumed by the <see cref="T:System.Text.Json.Utf8JsonReader" /> so far.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonReaderOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonReaderOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderState.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As JsonReaderOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonReaderOptions Options { System::Text::Json::JsonReaderOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.Json.JsonReaderOptions" Usage="System.Text.Json.JsonReaderState.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonReaderOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c512-112">Pobiera zachowanie niestandardowe do użycia podczas odczytywania danych JSON przy użyciu <see cref="T:System.Text.Json.Utf8JsonReader" /> struktury, która może różnić się od postępowania zgodnie ze specyfikacją formatu JSON, który jest zachowaniem domyślnym.</span><span class="sxs-lookup"><span data-stu-id="9c512-112">Gets the custom behavior to use when reading JSON data using the <see cref="T:System.Text.Json.Utf8JsonReader" /> struct that may deviate from strict adherence to the JSON specification, which is the default behavior.</span></span></summary>
        <value><span data-ttu-id="9c512-113">Niestandardowe zachowanie do użycia podczas odczytywania danych JSON.</span><span class="sxs-lookup"><span data-stu-id="9c512-113">The custom behavior to use when reading JSON data.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public SequencePosition Position { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.SequencePosition Position" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderState.Position" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Position As SequencePosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property SequencePosition Position { SequencePosition get(); };" />
      <MemberSignature Language="F#" Value="member this.Position : SequencePosition" Usage="System.Text.Json.JsonReaderState.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SequencePosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9c512-114">Pobiera bieżący <see cref="T:System.SequencePosition" /> w podanej UTF-8 zakodowany w danych wejściowych ReadOnlySequence&lt;bajt&gt;.</span><span class="sxs-lookup"><span data-stu-id="9c512-114">Gets the current <see cref="T:System.SequencePosition" /> within the provided UTF-8 encoded input ReadOnlySequence&lt;byte&gt;.</span></span> <span data-ttu-id="9c512-115">Jeśli <see cref="T:System.Text.Json.Utf8JsonReader" /> struktury został skonstruowany przy użyciu ReadOnlySpan&lt;bajtów&gt; zamiast tego należy zawsze spowoduje zwrócenie domyślny <see cref="T:System.SequencePosition" />.</span><span class="sxs-lookup"><span data-stu-id="9c512-115">If the <see cref="T:System.Text.Json.Utf8JsonReader" /> struct was constructed with a ReadOnlySpan&lt;byte&gt; instead, this will always return a default <see cref="T:System.SequencePosition" />.</span></span></summary>
        <value><span data-ttu-id="9c512-116">Bieżący <see cref="T:System.SequencePosition" /> w podanej UTF-8 zakodowany w danych wejściowych ReadOnlySequence&lt;bajt&gt;.</span><span class="sxs-lookup"><span data-stu-id="9c512-116">The current <see cref="T:System.SequencePosition" /> within the provided UTF-8 encoded input ReadOnlySequence&lt;byte&gt;.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>