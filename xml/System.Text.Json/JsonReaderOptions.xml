<Type Name="JsonReaderOptions" FullName="System.Text.Json.JsonReaderOptions">
  <TypeSignature Language="C#" Value="public struct JsonReaderOptions" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonReaderOptions extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonReaderOptions" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonReaderOptions" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonReaderOptions" />
  <TypeSignature Language="F#" Value="type JsonReaderOptions = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Umożliwia użytkownikowi Definiowanie zachowania niestandardowego podczas odczytywania kodu JSON.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowTrailingCommas">
      <MemberSignature Language="C#" Value="public bool AllowTrailingCommas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTrailingCommas" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderOptions.AllowTrailingCommas" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTrailingCommas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTrailingCommas { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowTrailingCommas : bool with get, set" Usage="System.Text.Json.JsonReaderOptions.AllowTrailingCommas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, czy dodatkowy przecinek na końcu listy wartości JSON w obiekcie lub tablicy jest dozwolony (i ignorowany) w ramach odczytywanego ładunku JSON.</summary>
        <value><see langword="true" />Jeśli dozwolony jest przecinek exra; w przeciwnym razie. <see langword="false" /></value>
        <remarks>
          <format type="text/markdown">
        

## Remarks

Domyślnie ta właściwość jest ustawiona na `false`, <xref:System.Text.Json.JsonException> a jest zgłaszany w przypadku napotkania końcowego przecinka.

               </format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommentHandling">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonCommentHandling CommentHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonCommentHandling CommentHandling" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderOptions.CommentHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property CommentHandling As JsonCommentHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonCommentHandling CommentHandling { System::Text::Json::JsonCommentHandling get(); void set(System::Text::Json::JsonCommentHandling value); };" />
      <MemberSignature Language="F#" Value="member this.CommentHandling : System.Text.Json.JsonCommentHandling with get, set" Usage="System.Text.Json.JsonReaderOptions.CommentHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonCommentHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość określającą, w jaki <see cref="T:System.Text.Json.Utf8JsonReader" /> sposób Komentarze są obsługiwane podczas odczytywania danych JSON.</summary>
        <value>Jedna z wartości wyliczenia, która wskazuje sposób obsługi komentarzy.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Domyślnie czytnik zgłasza <xref:System.Text.Json.JsonException> , jeśli napotka komentarz.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Właściwość jest ustawiana na wartość, która nie jest elementem członkowskim <see cref="T:System.Text.Json.JsonCommentHandling" /> wyliczenia.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxDepth">
      <MemberSignature Language="C#" Value="public int MaxDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDepth" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonReaderOptions.MaxDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDepth : int with get, set" Usage="System.Text.Json.JsonReaderOptions.MaxDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia maksymalną głębokość dozwoloną podczas odczytywania danych JSON, z wartością domyślną (0) wskazującą maksymalną głębokość wynoszącą 64.</summary>
        <value>Maksymalna głębokość dozwolona podczas odczytywania kodu JSON.</value>
        <remarks>
          <format type="text/markdown">
        

## Remarks

Odczyt z ostatniej tej głębokości spowoduje zgłoszenie wyjątku < cref = "T:System.Text.Json.JsonException >.

               </format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Maksymalna głębokość jest ustawiana na wartość ujemną.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
