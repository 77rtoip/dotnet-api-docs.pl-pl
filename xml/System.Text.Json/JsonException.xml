<Type Name="JsonException" FullName="System.Text.Json.JsonException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4394d2454358d7b011d78e530918e4daa393e564" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69145164" /></Metadata><TypeSignature Language="C#" Value="public class JsonException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JsonException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonException" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonException : Exception" />
  <TypeSignature Language="F#" Value="type JsonException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a97f8-101">Definiuje niestandardowy obiekt wyjątku, który jest generowany po napotkaniu nieprawidłowego tekstu JSON, gdy zostanie osiągnięta zdefiniowana Maksymalna głębokość lub tekst JSON jest niezgodny z typem właściwości obiektu.</span><span class="sxs-lookup"><span data-stu-id="a97f8-101">Defines a custom exception object that is thrown when invalid JSON text is encountered, when the defined maximum depth is passed, or the JSON text is not compatible with the type of a property on an object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a97f8-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.Json.JsonException" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="a97f8-102">Initializes a new instance of the <see cref="T:System.Text.Json.JsonException" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : string -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a97f8-103">Kontekstowy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="a97f8-103">The context-specific error message.</span></span></param>
        <summary><span data-ttu-id="a97f8-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Text.Json.JsonException" /> klasy przy użyciu określonego komunikatu o błędzie.</span><span class="sxs-lookup"><span data-stu-id="a97f8-104">Initializes a new instance of the <see cref="T:System.Text.Json.JsonException" /> class with a specified error message.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JsonException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JsonException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="a97f8-105">Serializowane dane obiektu dotyczące zgłaszanego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a97f8-105">The serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="a97f8-106">Obiekt, który zawiera informacje kontekstowe o źródle lub miejscu docelowym.</span><span class="sxs-lookup"><span data-stu-id="a97f8-106">An object that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="a97f8-107">Tworzy nowy obiekt wyjątku z danymi serializowanymi.</span><span class="sxs-lookup"><span data-stu-id="a97f8-107">Creates a new exception object with serialized data.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a97f8-108"><paramref name="info" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a97f8-108"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : string * Exception -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a97f8-109">Kontekstowy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="a97f8-109">The context-specific error message.</span></span></param>
        <param name="innerException"><span data-ttu-id="a97f8-110">Wyjątek, który spowodował bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a97f8-110">The exception that caused the current exception.</span></span></param>
        <summary><span data-ttu-id="a97f8-111">Inicjuje nowe wystąpienie <see cref="T:System.Text.Json.JsonException" /> klasy, z określonym komunikatem o błędzie i odwołaniem do wyjątku wewnętrznego, który jest przyczyną tego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a97f8-111">Initializes a new instance of the <see cref="T:System.Text.Json.JsonException" /> class, with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException (string message, string path, Nullable&lt;long&gt; lineNumber, Nullable&lt;long&gt; bytePositionInLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, string path, valuetype System.Nullable`1&lt;int64&gt; lineNumber, valuetype System.Nullable`1&lt;int64&gt; bytePositionInLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, path As String, lineNumber As Nullable(Of Long), bytePositionInLine As Nullable(Of Long))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException(System::String ^ message, System::String ^ path, Nullable&lt;long&gt; lineNumber, Nullable&lt;long&gt; bytePositionInLine);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : string * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException (message, path, lineNumber, bytePositionInLine)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="bytePositionInLine" Type="System.Nullable&lt;System.Int64&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a97f8-112">Kontekstowy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="a97f8-112">The context-specific error message.</span></span></param>
        <param name="path"><span data-ttu-id="a97f8-113">Ścieżka, w której napotkano nieprawidłowy kod JSON.</span><span class="sxs-lookup"><span data-stu-id="a97f8-113">The path where the invalid JSON was encountered.</span></span></param>
        <param name="lineNumber"><span data-ttu-id="a97f8-114">Numer wiersza (Zaczynając od 0), w którym napotkano nieprawidłowy kod JSON podczas deserializacji.</span><span class="sxs-lookup"><span data-stu-id="a97f8-114">The line number (starting at 0) at which the invalid JSON was encountered when deserializing.</span></span></param>
        <param name="bytePositionInLine"><span data-ttu-id="a97f8-115">Liczba bajtów w bieżącym wierszu (rozpoczynając od 0), w których napotkano nieprawidłowy kod JSON.</span><span class="sxs-lookup"><span data-stu-id="a97f8-115">The byte count within the current line (starting at 0) where the invalid JSON was encountered.</span></span></param>
        <summary><span data-ttu-id="a97f8-116">Tworzy nowy obiekt wyjątku, aby przekazać użytkownikowi informacje o błędzie.</span><span class="sxs-lookup"><span data-stu-id="a97f8-116">Creates a new exception object to relay error information to the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a97f8-117">Należy pamiętać `bytePositionInLine` , że zlicza liczbę bajtów (czyli jednostki kodu UTF-8), a nie znaków ani wartości skalarnych.</span><span class="sxs-lookup"><span data-stu-id="a97f8-117">Note that `bytePositionInLine` counts the number of bytes (that is,  UTF-8 code units), and not characters or scalars.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JsonException (string message, string path, Nullable&lt;long&gt; lineNumber, Nullable&lt;long&gt; bytePositionInLine, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, string path, valuetype System.Nullable`1&lt;int64&gt; lineNumber, valuetype System.Nullable`1&lt;int64&gt; bytePositionInLine, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.#ctor(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, path As String, lineNumber As Nullable(Of Long), bytePositionInLine As Nullable(Of Long), innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JsonException(System::String ^ message, System::String ^ path, Nullable&lt;long&gt; lineNumber, Nullable&lt;long&gt; bytePositionInLine, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Text.Json.JsonException : string * string * Nullable&lt;int64&gt; * Nullable&lt;int64&gt; * Exception -&gt; System.Text.Json.JsonException" Usage="new System.Text.Json.JsonException (message, path, lineNumber, bytePositionInLine, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="bytePositionInLine" Type="System.Nullable&lt;System.Int64&gt;" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="a97f8-118">Kontekstowy komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="a97f8-118">The context-specific error message.</span></span></param>
        <param name="path"><span data-ttu-id="a97f8-119">Ścieżka, w której napotkano nieprawidłowy kod JSON.</span><span class="sxs-lookup"><span data-stu-id="a97f8-119">The path where the invalid JSON was encountered.</span></span></param>
        <param name="lineNumber"><span data-ttu-id="a97f8-120">Numer wiersza (Zaczynając od 0), w którym napotkano nieprawidłowy kod JSON podczas deserializacji.</span><span class="sxs-lookup"><span data-stu-id="a97f8-120">The line number (starting at 0) at which the invalid JSON was encountered when deserializing.</span></span></param>
        <param name="bytePositionInLine"><span data-ttu-id="a97f8-121">Liczba bajtów (rozpoczynająca się od 0) w bieżącym wierszu, w którym napotkano nieprawidłowy kod JSON.</span><span class="sxs-lookup"><span data-stu-id="a97f8-121">The byte count (starting at 0) within the current line where the invalid JSON was encountered.</span></span></param>
        <param name="innerException"><span data-ttu-id="a97f8-122">Wyjątek, który spowodował bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a97f8-122">The exception that caused the current exception.</span></span></param>
        <summary><span data-ttu-id="a97f8-123">Tworzy nowy obiekt wyjątku, aby przekazać użytkownikowi informacje o błędzie, który zawiera określony wyjątek wewnętrzny.</span><span class="sxs-lookup"><span data-stu-id="a97f8-123">Creates a new exception object to relay error information to the user that includes a specified inner exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a97f8-124">Należy zauważyć, `bytePositionInLine` że licznik zlicza liczbę bajtów (czyli jednostki kodu UTF-8), a nie znaki ani wartości skalarne.</span><span class="sxs-lookup"><span data-stu-id="a97f8-124">Note that the `bytePositionInLine` counts the number of bytes (that is, UTF-8 code units), and not characters or scalars.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytePositionInLine">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; BytePositionInLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; BytePositionInLine" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonException.BytePositionInLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytePositionInLine As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; BytePositionInLine { Nullable&lt;long&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.BytePositionInLine : Nullable&lt;int64&gt;" Usage="System.Text.Json.JsonException.BytePositionInLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a97f8-125">Pobiera liczbę bajtów odczytanych od zera w bieżącym wierszu przed wyjątkiem wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a97f8-125">Gets the zero-based number of bytes read within the current line before the exception.</span></span></summary>
        <value><span data-ttu-id="a97f8-126">Liczba bajtów odczytanych od zera w bieżącym wierszu przed wyjątkiem wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a97f8-126">The zero-based number of bytes read within the current line before the exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="jsonException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="a97f8-127">Serializowane dane obiektu dotyczące zgłaszanego wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a97f8-127">The serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="a97f8-128">Obiekt, który zawiera informacje kontekstowe o źródle lub miejscu docelowym.</span><span class="sxs-lookup"><span data-stu-id="a97f8-128">An object that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="a97f8-129"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> Ustawia informacje o wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a97f8-129">Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public Nullable&lt;long&gt; LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int64&gt; LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Nullable(Of Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;long&gt; LineNumber { Nullable&lt;long&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : Nullable&lt;int64&gt;" Usage="System.Text.Json.JsonException.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int64&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a97f8-130">Pobiera liczbę wierszy (liczonych od zera) odczytywanych przed wyjątkiem wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a97f8-130">Gets the zero-based number of lines read before the exception.</span></span></summary>
        <value><span data-ttu-id="a97f8-131">Liczba wierszy, które są odczytywane od zera przed wyjątkiem wyjątku.</span><span class="sxs-lookup"><span data-stu-id="a97f8-131">The zero-based number of lines read before the exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Text.Json.JsonException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a97f8-132">Pobiera komunikat, który opisuje bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a97f8-132">Gets a message that describes the current exception.</span></span></summary>
        <value><span data-ttu-id="a97f8-133">Komunikat o błędzie, który opisuje bieżący wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a97f8-133">The error message that describes the current exception.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonException.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Text.Json.JsonException.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a97f8-134">Pobiera ścieżkę w formacie JSON, w której wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a97f8-134">Gets The path within the JSON where the exception was encountered.</span></span></summary>
        <value><span data-ttu-id="a97f8-135">Ścieżka w formacie JSON, w której wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="a97f8-135">The path within the JSON where the exception was encountered.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
