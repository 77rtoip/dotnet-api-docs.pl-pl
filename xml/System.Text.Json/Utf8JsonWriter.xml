<Type Name="Utf8JsonWriter" FullName="System.Text.Json.Utf8JsonWriter">
  <TypeSignature Language="C#" Value="public sealed class Utf8JsonWriter : IAsyncDisposable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Utf8JsonWriter extends System.Object implements class System.IAsyncDisposable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Utf8JsonWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Utf8JsonWriter&#xA;Implements IAsyncDisposable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8JsonWriter sealed : IAsyncDisposable, IDisposable" />
  <TypeSignature Language="F#" Value="type Utf8JsonWriter = class&#xA;    interface IAsyncDisposable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netcore-3.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7fcfd-101">Zapewnia wysoką wydajność interfejsu API do przesyłania w niebuforowanej postaci tekstu JSON zakodowanego w formacie UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-101">Provides a high-performance API for forward-only, non-cached writing of UTF-8 encoded JSON text.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="7fcfd-102">`Utf8JsonWriter`zapisuje tekst sekwencyjnie bez buforowania i domyślnie stosuje [kod RFC JSON](https://tools.ietf.org/html/rfc8259), z wyjątkiem pisania komentarzy.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-102">`Utf8JsonWriter` writes the text sequentially with no caching and by default adheres to the [JSON RFC](https://tools.ietf.org/html/rfc8259), with the exception of writing comments.</span></span>

<span data-ttu-id="7fcfd-103">Metoda, która próbuje zapisać nieprawidłowy kod JSON, gdy Walidacja jest <xref:System.InvalidOperationException> włączona, zgłasza komunikat o błędzie związany z kontekstem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-103">A method that attempts to write invalid JSON when validation is enabled throws a <xref:System.InvalidOperationException> with a context-specific error message.</span></span>

<span data-ttu-id="7fcfd-104">Ponieważ ten typ jest strukturą ref, nie obsługuje bezpośrednio asynchronicznej.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-104">Since this type is a ref struct, it does not directly support async.</span></span> <span data-ttu-id="7fcfd-105">Jednak zapewnia obsługę współużytkowania wątkowości do zapisywania częściowych danych i dalszego zapisywania w fragmentach.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-105">However, it does provide support for reentrancy to write partial data and to continue writing in chunks.</span></span>

<span data-ttu-id="7fcfd-106">Aby można było sformatować dane wyjściowe z wcięciem i białym znakiem lub pominąć walidację, Utwórz wystąpienie <xref:System.Text.Json.JsonWriterOptions> i przekaż je do składnika zapisywania.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-106">To be able to format the output with indentation and white space OR to skip validation, create an instance of <xref:System.Text.Json.JsonWriterOptions> and pass it in to the writer.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Utf8JsonWriter (System.Buffers.IBufferWriter&lt;byte&gt; bufferWriter, System.Text.Json.JsonWriterOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt; bufferWriter, valuetype System.Text.Json.JsonWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.#ctor(System.Buffers.IBufferWriter{System.Byte},System.Text.Json.JsonWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bufferWriter As IBufferWriter(Of Byte), Optional options As JsonWriterOptions = null)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Utf8JsonWriter : System.Buffers.IBufferWriter&lt;byte&gt; * System.Text.Json.JsonWriterOptions -&gt; System.Text.Json.Utf8JsonWriter" Usage="new System.Text.Json.Utf8JsonWriter (bufferWriter, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bufferWriter" Type="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonWriterOptions" />
      </Parameters>
      <Docs>
        <param name="bufferWriter"><span data-ttu-id="7fcfd-107">Miejsce docelowe zapisywania tekstu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-107">The destination for writing JSON text.</span></span></param>
        <param name="options"><span data-ttu-id="7fcfd-108">Definiuje dostosowane zachowanie <see cref="T:System.Text.Json.Utf8JsonWriter" /> domyślnie, zapisuje zminimalizowany kod JSON (bez dodatkowych odstępów) i sprawdza, czy zapisany kod JSON jest strukturalnie ważny zgodnie z dokumentem RFC JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-108">Defines the customized behavior of the <see cref="T:System.Text.Json.Utf8JsonWriter" /> By default, it writes minimized JSON (with no extra whitespace) and validates that the JSON being written is structurally valid according to the JSON RFC.</span></span></param>
        <summary><span data-ttu-id="7fcfd-109">Tworzy nowe <see cref="T:System.Text.Json.Utf8JsonWriter" /> wystąpienie o określonym <see langword="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-109">Constructs a new <see cref="T:System.Text.Json.Utf8JsonWriter" /> instance with a specified <see langword="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fcfd-110"><paramref name="bufferWriter" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-110"><paramref name="bufferWriter" />  is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Utf8JsonWriter (System.IO.Stream utf8Json, System.Text.Json.JsonWriterOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream utf8Json, valuetype System.Text.Json.JsonWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.#ctor(System.IO.Stream,System.Text.Json.JsonWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (utf8Json As Stream, Optional options As JsonWriterOptions = null)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Utf8JsonWriter : System.IO.Stream * System.Text.Json.JsonWriterOptions -&gt; System.Text.Json.Utf8JsonWriter" Usage="new System.Text.Json.Utf8JsonWriter (utf8Json, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Text.Json.JsonWriterOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="7fcfd-111">Miejsce docelowe zapisywania tekstu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-111">The destination for writing JSON text.</span></span></param>
        <param name="options"><span data-ttu-id="7fcfd-112">Definiuje dostosowane zachowanie <see cref="T:System.Text.Json.Utf8JsonWriter" /> domyślnie, zapisuje zminimalizowany kod JSON (bez dodatkowych odstępów) i sprawdza, czy zapisany kod JSON jest strukturalnie ważny zgodnie z dokumentem RFC JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-112">Defines the customized behavior of the <see cref="T:System.Text.Json.Utf8JsonWriter" /> By default, it writes minimized JSON (with no extra whitespace) and validates that the JSON being written is structurally valid according to the JSON RFC.</span></span></param>
        <summary><span data-ttu-id="7fcfd-113">Tworzy nowe <see cref="T:System.Text.Json.Utf8JsonWriter" /> wystąpienie o określonym <paramref name="utf8Json" />.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-113">Constructs a new <see cref="T:System.Text.Json.Utf8JsonWriter" /> instance with a specified <paramref name="utf8Json" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fcfd-114"><paramref name="utf8Json" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-114"><paramref name="utf8Json" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BytesCommitted">
      <MemberSignature Language="C#" Value="public long BytesCommitted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BytesCommitted" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.BytesCommitted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesCommitted As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long BytesCommitted { long get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesCommitted : int64" Usage="System.Text.Json.Utf8JsonWriter.BytesCommitted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7fcfd-115">Pobiera łączną liczbę bajtów przekazanych do danych wyjściowych przez bieżące wystąpienie do tej pory.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-115">Gets the total number of bytes committed to the output by the current instance so far.</span></span></summary>
        <value><span data-ttu-id="7fcfd-116">Całkowita liczba bajtów przekazanych do danych wyjściowych przez te <see cref="T:System.Text.Json.Utf8JsonWriter" /> pory.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-116">The total number of bytes committed to the output by the <see cref="T:System.Text.Json.Utf8JsonWriter" /> so far.</span></span></value>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-117">W przypadku <xref:System.Buffers.IBufferWriter%601>, ta właściwość wskazuje, jak dużo IBufferWriter ma zaawansowaną.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-117">In the case of an <xref:System.Buffers.IBufferWriter%601>, this property indicates how much the IBufferWriter has advanced.</span></span>

<span data-ttu-id="7fcfd-118">W przypadku <xref:System.IO.Stream>, ta właściwość wskazuje, ile danych Zapisano w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-118">In the case of a <xref:System.IO.Stream>, this property indicates how much data has been written to the stream.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesPending">
      <MemberSignature Language="C#" Value="public int BytesPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesPending" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.BytesPending" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesPending As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesPending { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesPending : int" Usage="System.Text.Json.Utf8JsonWriter.BytesPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7fcfd-119">Pobiera liczbę bajtów zapisanych <see cref="T:System.Text.Json.Utf8JsonWriter" /> do tej pory, które nie zostały jeszcze opróżnione do danych wyjściowych i zostały zatwierdzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-119">Gets the number of bytes written by the <see cref="T:System.Text.Json.Utf8JsonWriter" /> so far that have not yet been flushed to the output and committed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDepth">
      <MemberSignature Language="C#" Value="public int CurrentDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentDepth" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.CurrentDepth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDepth : int" Usage="System.Text.Json.Utf8JsonWriter.CurrentDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7fcfd-120">Pobiera głębokość bieżącego tokenu.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-120">Gets the depth of the current token.</span></span></summary>
        <value><span data-ttu-id="7fcfd-121">Głębokość bieżącego tokenu.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-121">The depth of the current token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="7fcfd-122">`CurrentDepth` Właściwość śledzi głębokość rekursywną zagnieżdżonych obiektów/tablic w tekście JSON, który został przez siebie zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-122">The `CurrentDepth` property tracks the recursive depth of the nested objects / arrays within the JSON text written so far.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="utf8JsonWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fcfd-123">Zatwierdza wszystkie pozostałości tekstu JSON, które nie zostały jeszcze opróżnione i zwalnia wszystkie zasoby używane przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-123">Commits any leftover JSON text that has not yet been flushed and releases all resources used by the current instance.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-124">W przypadku IBufferWriter jest to zasunięte w <xref:System.Buffers.IBufferWriter`1> zależności od tego, co zostało wcześniej zrobione.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-124">In the case of IBufferWriter, this advances the underlying <xref:System.Buffers.IBufferWriter`1> based on what has been written so far.</span></span>

<span data-ttu-id="7fcfd-125">W przypadku strumienia zapisuje dane w strumieniu i opróżnia je.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-125">In the case of Stream, this writes the data to the stream and flushes it.</span></span>

<span data-ttu-id="7fcfd-126">Nie można ponownie użyć wystąpieniapousunięciu.<xref:System.Text.Json.Utf8JsonWriter></span><span class="sxs-lookup"><span data-stu-id="7fcfd-126">The <xref:System.Text.Json.Utf8JsonWriter> instance cannot be reused after disposing.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="utf8JsonWriter.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fcfd-127">Asynchronicznie zatwierdza wszystkie pozostałości tekstu JSON, które nie zostały jeszcze opróżnione i zwalnia wszystkie zasoby używane przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-127">Asynchronously commits any leftover JSON text that has not yet been flushed and releases all resources used by the current instance.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-128">W przypadku IBufferWriter jest to zasunięte w <xref:System.Buffers.IBufferWriter`1> zależności od tego, co zostało wcześniej zrobione.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-128">In the case of IBufferWriter, this advances the underlying <xref:System.Buffers.IBufferWriter`1> based on what has been written so far.</span></span>
          
<span data-ttu-id="7fcfd-129">W przypadku strumienia zapisuje dane w strumieniu i opróżnia je.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-129">In the case of Stream, this writes the data to the stream and flushes it.</span></span>

<span data-ttu-id="7fcfd-130">Nie można ponownie użyć wystąpieniapousunięciu.<xref:System.Text.Json.Utf8JsonWriter></span><span class="sxs-lookup"><span data-stu-id="7fcfd-130">The <xref:System.Text.Json.Utf8JsonWriter> instance cannot be reused after disposing.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="utf8JsonWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fcfd-131">Zatwierdza do tej pory tekst JSON, który umożliwia wyświetlanie danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-131">Commits the JSON text written so far, which makes it visible to the output destination.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-132">W przypadku IBufferWriter jest to zasunięte w <xref:System.Buffers.IBufferWriter`1> zależności od tego, co zostało wcześniej zrobione.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-132">In the case of IBufferWriter, this advances the underlying <xref:System.Buffers.IBufferWriter`1> based on what has been written so far.</span></span>

<span data-ttu-id="7fcfd-133">W przypadku <xref:System.IO.Stream>, spowoduje to zapisanie danych do strumienia i opróżnienie go.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-133">In the case of <xref:System.IO.Stream>, this writes the data to the stream and flushes it.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="7fcfd-134">To wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-134">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="utf8JsonWriter.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary><span data-ttu-id="7fcfd-135">Asynchronicznie zatwierdza tekst JSON, który został przez siebie zapisany, co sprawia, że jest on widoczny dla wyjściowej lokalizacji docelowej.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-135">Asynchronously commits the JSON text written so far, which makes it visible to the output destination.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-136">W przypadku IBufferWriter jest to zasunięte w <xref:System.Buffers.IBufferWriter`1> zależności od tego, co zostało wcześniej zrobione.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-136">In the case of IBufferWriter, this advances the underlying <xref:System.Buffers.IBufferWriter`1> based on what has been written so far.</span></span>

<span data-ttu-id="7fcfd-137">W przypadku <xref:System.IO.Stream>, zapisuje dane do strumienia i opróżnia je asynchronicznie, jednocześnie monitorując żądania anulowania.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-137">In the case of <xref:System.IO.Stream>, this writes the data to the stream and flushes it asynchronously, while monitoring cancellation requests.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="7fcfd-138">To wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-138">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonWriterOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonWriterOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As JsonWriterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonWriterOptions Options { System::Text::Json::JsonWriterOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.Json.JsonWriterOptions" Usage="System.Text.Json.Utf8JsonWriter.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonWriterOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7fcfd-139">Pobiera zachowanie niestandardowe podczas zapisywania JSON przy użyciu tego wystąpienia, które wskazuje, czy formatować dane wyjściowe podczas pisania i czy pominąć strukturalną walidację JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-139">Gets the custom behavior when writing JSON using this instance, which indicates whether to format the output while writing and whether to skip structural JSON validation.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="utf8JsonWriter.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fcfd-140">Resetuje stan wewnętrzny tego wystąpienia, aby można go było ponownie użyć.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-140">Resets the internal state of this instance so that it can be reused.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-141">Program będzie nadal używać oryginalnych opcji składnika zapisywania i oryginalnego wyjścia ( <xref:System.IO.Stream>albo <xref:System.Buffers.IBufferWriter`1> ) jako miejsca docelowego. <xref:System.Text.Json.Utf8JsonWriter></span><span class="sxs-lookup"><span data-stu-id="7fcfd-141">The <xref:System.Text.Json.Utf8JsonWriter> will continue to use the original writer options and the original output (either <xref:System.Buffers.IBufferWriter`1> or <xref:System.IO.Stream>) as the destination.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="7fcfd-142">To wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-142">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Buffers.IBufferWriter&lt;byte&gt; bufferWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt; bufferWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Reset(System.Buffers.IBufferWriter{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (bufferWriter As IBufferWriter(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Buffers::IBufferWriter&lt;System::Byte&gt; ^ bufferWriter);" />
      <MemberSignature Language="F#" Value="member this.Reset : System.Buffers.IBufferWriter&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.Reset bufferWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferWriter" Type="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bufferWriter"><span data-ttu-id="7fcfd-143">Miejsce docelowe zapisywania tekstu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-143">The destination for writing JSON text.</span></span></param>
        <summary><span data-ttu-id="7fcfd-144">Resetuje stan wewnętrzny tego wystąpienia, aby można go było ponownie użyć z nowym wystąpieniem <see cref="T:System.Buffers.IBufferWriter`1" />.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-144">Resets the internal state of this instance so that it can be reused with a new instance of <see cref="T:System.Buffers.IBufferWriter`1" />.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-145">Program będzie nadal używać oryginalnych opcji składnika zapisywania, ale teraz `bufferWriter` zapisuje jako nowe miejsce docelowe. <xref:System.Text.Json.Utf8JsonWriter></span><span class="sxs-lookup"><span data-stu-id="7fcfd-145">The <xref:System.Text.Json.Utf8JsonWriter> will continue to use the original writer options but now writes to `bufferWriter` as the new destination.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fcfd-146"><paramref name="bufferWriter" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-146"><paramref name="bufferWriter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="7fcfd-147">To wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-147">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.IO.Stream utf8Json);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(class System.IO.Stream utf8Json) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Reset(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (utf8Json As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::IO::Stream ^ utf8Json);" />
      <MemberSignature Language="F#" Value="member this.Reset : System.IO.Stream -&gt; unit" Usage="utf8JsonWriter.Reset utf8Json" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="7fcfd-148">Miejsce docelowe zapisywania tekstu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-148">The destination for writing JSON text.</span></span></param>
        <summary><span data-ttu-id="7fcfd-149">Resetuje stan wewnętrzny tego wystąpienia, aby można go było ponownie użyć z nowym wystąpieniem <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-149">Resets the internal state of this instance so that it can be reused with a new instance of <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-150">Program będzie kontynuował Używanie oryginalnych opcji składnika zapisywania, ale teraz `utf8Json` zapisuje jako nowe miejsce docelowe. <xref:System.Text.Json.Utf8JsonWriter></span><span class="sxs-lookup"><span data-stu-id="7fcfd-150">The <xref:System.Text.Json.Utf8JsonWriter> will continue to use the original writer options but now write to `utf8Json` as the new destination.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7fcfd-151"><paramref name="utf8Json" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-151"><paramref name="utf8Json" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="7fcfd-152">To wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-152">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64String">
      <MemberSignature Language="C#" Value="public void WriteBase64String (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64String(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64String (utf8PropertyName As ReadOnlySpan(Of Byte), bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64String(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64String : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64String (utf8PropertyName, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-153">Zakodowana w formacie UTF-8 nazwa właściwości do zapisania.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-153">The UTF-8 encoded name of the property to write.</span></span></param>
        <param name="bytes"><span data-ttu-id="7fcfd-154">Dane binarne, które mają być zapisywane jako podstawowy zakodowany ciąg JSON 64 jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-154">The binary data to be written as a base 64 encoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-155">Zapisuje wartość nazwy właściwości i nieprzetworzonych bajtów (jako podstawowy, zakodowany ciąg JSON 64) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-155">Writes the property name and raw bytes value (as a base 64 encoded JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-156">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-156">The property name is escaped before writing.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-157">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-157">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-158">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-158">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64String">
      <MemberSignature Language="C#" Value="public void WriteBase64String (ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64String(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64String (propertyName As ReadOnlySpan(Of Char), bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64String(ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64String : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64String (propertyName, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-159">Nazwa właściwości obiektu JSON, który ma być transkodowane i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-159">The property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="bytes"><span data-ttu-id="7fcfd-160">Dane binarne, które mają być zapisywane jako podstawowy zakodowany ciąg JSON 64 jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-160">The binary data to be written as a base 64 encoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-161">Zapisuje wartość nazwy właściwości i nieprzetworzonych bajtów (jako podstawowy, zakodowany ciąg JSON 64) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-161">Writes the property name and raw bytes value (as a base 64 encoded JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-162">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-162">The property name is escaped before writing.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-163">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-163">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-164">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-164">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64String">
      <MemberSignature Language="C#" Value="public void WriteBase64String (string propertyName, ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64String(string propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.String,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64String (propertyName As String, bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64String(System::String ^ propertyName, ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64String : string * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64String (propertyName, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-165">Nazwa właściwości obiektu JSON, który ma być transkodowane i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-165">The property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="bytes"><span data-ttu-id="7fcfd-166">Dane binarne, które mają być zapisywane jako podstawowy zakodowany ciąg JSON 64 jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-166">The binary data to be written as a base 64 encoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-167">Zapisuje wartość nazwy właściwości i nieprzetworzonych bajtów (jako ciąg JSON kodowane algorytmem Base64) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-167">Writes the property name and raw bytes value (as a Base64 encoded JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-168">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-168">The property name is escaped before writing.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-169">Gdy określona nazwa właściwości jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-169">when the specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-170">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-170">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64String">
      <MemberSignature Language="C#" Value="public void WriteBase64String (System.Text.Json.JsonEncodedText propertyName, ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64String(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.Text.Json.JsonEncodedText,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64String (propertyName As JsonEncodedText, bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64String(System::Text::Json::JsonEncodedText propertyName, ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64String : System.Text.Json.JsonEncodedText * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64String (propertyName, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-171">Nazwa właściwości, która ma zostać zapisana w formacie JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-171">The JSON-encoded name of the property to write.</span></span></param>
        <param name="bytes"><span data-ttu-id="7fcfd-172">Dane binarne, które mają być zapisywane jako podstawowy zakodowany ciąg JSON 64 jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-172">The binary data to be written as a base 64 encoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-173">Zapisuje wstępnie zakodowaną nazwę właściwości i wartość nieprzetworzonych bajtów (jako podstawowy ciąg JSON zakodowany zgodnie z 64) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-173">Writes the pre-encoded property name and raw bytes value (as a base 64 encoded JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-174">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-174">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-175">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-175">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64StringValue">
      <MemberSignature Language="C#" Value="public void WriteBase64StringValue (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64StringValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64StringValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64StringValue (bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64StringValue(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64StringValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64StringValue bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="7fcfd-176">Dane binarne, które mają być zapisywane jako podstawowy, zakodowany w formacie notacji JSON 64 element w tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-176">The binary data to be written as a base 64 encoded JSON string element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-177">Zapisuje wartość RAW Bytes jako podstawowy 64 ciąg JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-177">Writes the raw bytes value as base 64 encoded JSON string as an element of a JSON array.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-178">Bajty są kodowane przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-178">The bytes are encoded before writing.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-179">Określona wartość jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-179">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-180">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-180">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (ReadOnlySpan&lt;byte&gt; utf8PropertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.ReadOnlySpan{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (utf8PropertyName As ReadOnlySpan(Of Byte), value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : ReadOnlySpan&lt;byte&gt; * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-181">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-181">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-182">Wartość, która ma zostać zapisywana jako literał JSON <b>true</b> lub <b>false</b> w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-182">The value to be written as a JSON literal <b>true</b> or <b>false</b> as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-183">Zapisuje nazwę właściwości określoną jako zakres tylko do odczytu bajtów i <see cref="T:System.Boolean" /> wartość (jako literał JSON <b>true</b> lub <b>false</b>) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-183">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Boolean" /> value (as a JSON literal <b>true</b> or <b>false</b>) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-184">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-184">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-185">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-185">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-186">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-186">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (ReadOnlySpan&lt;char&gt; propertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.ReadOnlySpan{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (propertyName As ReadOnlySpan(Of Char), value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(ReadOnlySpan&lt;char&gt; propertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : ReadOnlySpan&lt;char&gt; * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-187">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-187">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-188">Wartość, która ma zostać zapisywana jako literał JSON <b>true</b> lub <b>false</b> w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-188">The value to be written as a JSON literal <b>true</b> or <b>false</b> as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-189">Zapisuje nazwę właściwości określoną jako zakres znaków tylko do odczytu i <see cref="T:System.Boolean" /> wartość (jako literał JSON <b>true</b> lub <b>false</b>) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-189">Writes a property name specified as a read-only character span and a <see cref="T:System.Boolean" /> value (as a JSON literal <b>true</b> or <b>false</b>) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-190">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-190">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-191">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-191">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-192">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-192">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (string propertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(string propertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (propertyName As String, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(System::String ^ propertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : string * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-193">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-193">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-194">Wartość, która ma zostać zapisywana jako literał JSON <b>true</b> lub <b>false</b> w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-194">The value to be written as a JSON literal <b>true</b> or <b>false</b> as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-195">Zapisuje nazwę właściwości określoną jako ciąg i <see cref="T:System.Boolean" /> wartość (jako literał JSON <b>true</b> lub <b>false</b>) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-195">Writes a property name specified as a string and a <see cref="T:System.Boolean" /> value (as a JSON literal <b>true</b> or <b>false</b>) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-196">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-196">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-197">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-197">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-198">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-198">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (System.Text.Json.JsonEncodedText propertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(valuetype System.Text.Json.JsonEncodedText propertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.Text.Json.JsonEncodedText,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (propertyName As JsonEncodedText, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(System::Text::Json::JsonEncodedText propertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : System.Text.Json.JsonEncodedText * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-199">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-199">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-200">Wartość, która ma zostać zapisywana jako literał JSON <b>true</b> lub <b>false</b> w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-200">The value to be written as a JSON literal <b>true</b> or <b>false</b> as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-201">Zapisuje wstępnie zakodowaną nazwę i <see cref="T:System.Boolean" /> wartość właściwości (jako literał JSON <b>true</b> lub <b>false</b>) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-201">Writes the pre-encoded property name and <see cref="T:System.Boolean" /> value (as a JSON literal <b>true</b> or <b>false</b>) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-202">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-202">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-203">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-203">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBooleanValue">
      <MemberSignature Language="C#" Value="public void WriteBooleanValue (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBooleanValue(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBooleanValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBooleanValue (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBooleanValue(bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBooleanValue : bool -&gt; unit" Usage="utf8JsonWriter.WriteBooleanValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-204">Wartość, która ma zostać zapisywana jako literał JSON <b>true</b> lub <b>false</b> jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-204">The value to be written as a JSON literal <b>true</b> or <b>false</b> as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-205">Zapisuje wartość (jako literał JSON true lub <b>false</b>) jako element tablicy JSON. <b></b> <see cref="T:System.Boolean" /></span><span class="sxs-lookup"><span data-stu-id="7fcfd-205">Writes a <see cref="T:System.Boolean" /> value (as a JSON literal <b>true</b> or <b>false</b>) as an element of a JSON array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-206">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-206">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentValue">
      <MemberSignature Language="C#" Value="public void WriteCommentValue (ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCommentValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCommentValue (utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCommentValue(ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteCommentValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteCommentValue utf8Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8Value"><span data-ttu-id="7fcfd-207">Wartość zakodowana UTF-8, która ma być zapisywana jako komentarz JSON w obrębie/*..* /.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-207">The UTF-8 encoded value to be written as a JSON comment within /*..*/.</span></span></param>
        <summary><span data-ttu-id="7fcfd-208">Zapisuje wartość tekstową w formacie UTF-8 jako komentarz JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-208">Writes a UTF-8 text value as a JSON comment.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-209">Wartość komentarza nie jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-209">The comment value is not escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-210">Określona wartość jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-210">The specified value is too large.</span></span>
        
<span data-ttu-id="7fcfd-211">—lub—</span><span class="sxs-lookup"><span data-stu-id="7fcfd-211">-or-</span></span>

<span data-ttu-id="7fcfd-212"><paramref name="utf8Value" />zawiera ogranicznik komentarza (czyli \*/).</span><span class="sxs-lookup"><span data-stu-id="7fcfd-212"><paramref name="utf8Value" /> contains a comment delimiter (that is, \*/).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentValue">
      <MemberSignature Language="C#" Value="public void WriteCommentValue (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCommentValue(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCommentValue (value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCommentValue(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteCommentValue : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteCommentValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-213">Zakodowana wartość UTF-16 jest zapisywana jako niekodowane w formacie UTF-8 komentarz JSON w obrębie/*..* /.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-213">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON comment within /*..*/.</span></span></param>
        <summary><span data-ttu-id="7fcfd-214">Zapisuje wartość tekstową w formacie UTF-16 jako komentarz JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-214">Writes a UTF-16 text value as a JSON comment.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-215">Wartość komentarza nie jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-215">The comment value is not escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-216">Określona wartość jest za duża lub.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-216">The specified value is too large OR.</span></span>
        
<span data-ttu-id="7fcfd-217">—lub—</span><span class="sxs-lookup"><span data-stu-id="7fcfd-217">-or-</span></span>

<span data-ttu-id="7fcfd-218"><paramref name="value" />zawiera ogranicznik komentarza (czyli \*/).</span><span class="sxs-lookup"><span data-stu-id="7fcfd-218"><paramref name="value" /> contains a comment delimiter (that is, \*/).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentValue">
      <MemberSignature Language="C#" Value="public void WriteCommentValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCommentValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCommentValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCommentValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteCommentValue : string -&gt; unit" Usage="utf8JsonWriter.WriteCommentValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-219">Zakodowana wartość UTF-16 jest zapisywana jako niekodowane w formacie UTF-8 komentarz JSON w obrębie/*..* /.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-219">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON comment within /*..*/.</span></span></param>
        <summary><span data-ttu-id="7fcfd-220">Zapisuje wartość tekstową ciągu jako komentarz JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-220">Writes a string text value as a JSON comment.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-221">Wartość komentarza nie jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-221">The comment value is not escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-222">Określona wartość jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-222">The specified value is too large.</span></span>
        
<span data-ttu-id="7fcfd-223">—lub—</span><span class="sxs-lookup"><span data-stu-id="7fcfd-223">-or-</span></span>

<span data-ttu-id="7fcfd-224"><paramref name="value" />zawiera ogranicznik komentarza (czyli \*/).</span><span class="sxs-lookup"><span data-stu-id="7fcfd-224"><paramref name="value" /> contains a comment delimiter (that is, \*/).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndArray">
      <MemberSignature Language="C#" Value="public void WriteEndArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEndArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteEndArray" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEndArray ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEndArray();" />
      <MemberSignature Language="F#" Value="member this.WriteEndArray : unit -&gt; unit" Usage="utf8JsonWriter.WriteEndArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fcfd-225">Zapisuje koniec tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-225">Writes the end of a JSON array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-226">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-226">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEndObject();" />
      <MemberSignature Language="F#" Value="member this.WriteEndObject : unit -&gt; unit" Usage="utf8JsonWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fcfd-227">Zapisuje koniec obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-227">Writes the end of a JSON object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-228">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-228">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteNull utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-229">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-229">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <summary><span data-ttu-id="7fcfd-230">Zapisuje nazwę właściwości określoną jako zakres tylko do odczytu bajtów i literał JSON <b>null</b> w ramach pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-230">Writes a property name specified as a read-only span of bytes and the JSON literal <b>null</b> as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-231">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-231">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-232">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-232">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-233">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-233">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteNull propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-234">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-234">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="7fcfd-235">Zapisuje nazwę właściwości określoną jako zakres znaków tylko do odczytu i literał JSON <b>null</b> jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-235">Writes a property name specified as a read-only character span and the JSON literal <b>null</b> as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-236">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-236">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-237">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-237">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-238">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-238">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : string -&gt; unit" Usage="utf8JsonWriter.WriteNull propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-239">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-239">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="7fcfd-240">Zapisuje nazwę właściwości określoną jako ciąg i literał JSON <b>null</b> jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-240">Writes a property name specified as a string and the JSON literal <b>null</b> as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="7fcfd-241">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-241">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-242">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-242">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-243">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-243">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (System.Text.Json.JsonEncodedText propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.Text.Json.JsonEncodedText propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (propertyName As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(System::Text::Json::JsonEncodedText propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteNull propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-244">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-244">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="7fcfd-245">Zapisuje wstępnie zakodowaną nazwę właściwości i literał JSON <b>null</b> jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-245">Writes the pre-encoded property name and the JSON literal <b>null</b> as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-246">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-246">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-247">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-247">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNullValue">
      <MemberSignature Language="C#" Value="public void WriteNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNullValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNullValue();" />
      <MemberSignature Language="F#" Value="member this.WriteNullValue : unit -&gt; unit" Usage="utf8JsonWriter.WriteNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fcfd-248">Zapisuje literał JSON o <b>wartości null</b> jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-248">Writes the JSON literal <b>null</b> as an element of a JSON array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-249">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-249">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-250">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-250">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-251">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-251">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-252">Zapisuje nazwę właściwości określoną jako zakres tylko do odczytu bajtów i <see cref="T:System.Decimal" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-252">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-253">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"). <xref:System.Decimal></span><span class="sxs-lookup"><span data-stu-id="7fcfd-253">Writes the <xref:System.Decimal> using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

<span data-ttu-id="7fcfd-254">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-254">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-255">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-255">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-256">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-256">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-257">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-257">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-258">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-258">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-259">Zapisuje nazwę właściwości określoną jako zakres tylko do odczytu bajtów i <see cref="T:System.Double" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-259">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-260">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"). <xref:System.Double></span><span class="sxs-lookup"><span data-stu-id="7fcfd-260">Writes the <xref:System.Double> using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

<span data-ttu-id="7fcfd-261">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-261">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-262">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-262">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-263">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-263">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-264">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-264">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-265">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-265">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-266">Zapisuje nazwę właściwości określoną jako zakres tylko do odczytu bajtów i <see cref="T:System.Int32" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-266">Writes a property name specified as a read-only span of bytes and an <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-267">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.Int32></span><span class="sxs-lookup"><span data-stu-id="7fcfd-267">Writes the <xref:System.Int32> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-268">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-268">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-269">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-269">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-270">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-270">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-271">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-271">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-272">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-272">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-273">Zapisuje nazwę właściwości określoną jako zakres tylko do odczytu bajtów i <see cref="T:System.Int64" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-273">Writes a property name specified as a read-only span of bytes and an <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-274">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.Int64></span><span class="sxs-lookup"><span data-stu-id="7fcfd-274">Writes the <xref:System.Int64> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-275">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-275">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-276">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-276">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-277">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-277">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-278">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-278">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-279">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-279">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-280">Zapisuje nazwę właściwości określoną jako zakres tylko do odczytu bajtów i <see cref="T:System.Single" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-280">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-281">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"). <xref:System.Single></span><span class="sxs-lookup"><span data-stu-id="7fcfd-281">Writes the <xref:System.Single> using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

<span data-ttu-id="7fcfd-282">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-282">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-283">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-283">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-284">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-284">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-285">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-285">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-286">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-286">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-287">Zapisuje nazwę właściwości określoną jako zakres tylko do odczytu bajtów i <see cref="T:System.UInt32" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-287">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-288">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.UInt32></span><span class="sxs-lookup"><span data-stu-id="7fcfd-288">Writes the <xref:System.UInt32> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-289">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-289">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-290">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-290">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-291">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-291">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-292">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-292">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-293">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-293">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-294">Zapisuje nazwę właściwości określoną jako zakres tylko do odczytu bajtów i <see cref="T:System.UInt64" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-294">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-295">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.UInt64></span><span class="sxs-lookup"><span data-stu-id="7fcfd-295">Writes the <xref:System.UInt64> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-296">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-296">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-297">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-297">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-298">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-298">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-299">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-299">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-300">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-300">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-301">Zapisuje nazwę właściwości określoną jako zakres znaków tylko do odczytu i <see cref="T:System.Decimal" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-301">Writes a property name specified as a read-only character span and a <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-302">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"). <xref:System.Decimal></span><span class="sxs-lookup"><span data-stu-id="7fcfd-302">Writes the <xref:System.Decimal> using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

<span data-ttu-id="7fcfd-303">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-303">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-304">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-304">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-305">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-305">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-306">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-306">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-307">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-307">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-308">Zapisuje nazwę właściwości określoną jako zakres znaków tylko do odczytu i <see cref="T:System.Double" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-308">Writes a property name specified as a read-only character span and a <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-309">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"). <xref:System.Double></span><span class="sxs-lookup"><span data-stu-id="7fcfd-309">Writes the <xref:System.Double> using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

<span data-ttu-id="7fcfd-310">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-310">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-311">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-311">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-312">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-312">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-313">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-313">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-314">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-314">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-315">Zapisuje nazwę właściwości określoną jako zakres znaków tylko do odczytu i <see cref="T:System.Int32" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-315">Writes a property name specified as a read-only character span and an <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-316">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.Int32></span><span class="sxs-lookup"><span data-stu-id="7fcfd-316">Writes the <xref:System.Int32> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-317">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-317">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-318">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-318">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-319">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-319">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-320">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-320">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-321">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-321">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-322">Zapisuje nazwę właściwości określoną jako zakres znaków tylko do odczytu i <see cref="T:System.Int64" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-322">Writes a property name specified as a read-only character span and an <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-323">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.Int64></span><span class="sxs-lookup"><span data-stu-id="7fcfd-323">Writes the <xref:System.Int64> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-324">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-324">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-325">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-325">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-326">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-326">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-327">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-327">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-328">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-328">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-329">Zapisuje nazwę właściwości określoną jako zakres znaków tylko do odczytu i <see cref="T:System.Single" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-329">Writes a property name specified as a read-only character span and a <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-330">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"). <xref:System.Single></span><span class="sxs-lookup"><span data-stu-id="7fcfd-330">Writes the <xref:System.Single> using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

<span data-ttu-id="7fcfd-331">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-331">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-332">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-332">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-333">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-333">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-334">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-334">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-335">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-335">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-336">Zapisuje nazwę właściwości określoną jako zakres znaków tylko do odczytu i <see cref="T:System.UInt32" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-336">Writes a property name specified as a read-only character span and a <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-337">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.UInt32></span><span class="sxs-lookup"><span data-stu-id="7fcfd-337">Writes the <xref:System.UInt32> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-338">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-338">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-339">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-339">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-340">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-340">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-341">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-341">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-342">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-342">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-343">Zapisuje nazwę właściwości określoną jako zakres znaków tylko do odczytu i <see cref="T:System.UInt64" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-343">Writes a property name specified as a read-only character span and a <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-344">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.UInt64></span><span class="sxs-lookup"><span data-stu-id="7fcfd-344">Writes the <xref:System.UInt64> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-345">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-345">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-346">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-346">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-347">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-347">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-348">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-348">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-349">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-349">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-350">Zapisuje nazwę właściwości określoną jako ciąg i <see cref="T:System.Decimal" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-350">Writes a property name specified as a string and a <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-351">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"). <xref:System.Decimal></span><span class="sxs-lookup"><span data-stu-id="7fcfd-351">Writes the <xref:System.Decimal> using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

<span data-ttu-id="7fcfd-352">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-352">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-353">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-353">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-354">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-354">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-355">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-355">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-356">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-356">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-357">Zapisuje nazwę właściwości określoną jako ciąg i <see cref="T:System.Double" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-357">Writes a property name specified as a string and a <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-358">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"). <xref:System.Double></span><span class="sxs-lookup"><span data-stu-id="7fcfd-358">Writes the <xref:System.Double> using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

<span data-ttu-id="7fcfd-359">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-359">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-360">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-360">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-361">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-361">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-362">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-362">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-363">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-363">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-364">Zapisuje nazwę właściwości określoną jako ciąg i <see cref="T:System.Int32" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-364">Writes a property name specified as a string and an <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-365">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.Int32></span><span class="sxs-lookup"><span data-stu-id="7fcfd-365">Writes the <xref:System.Int32> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-366">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-366">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-367">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-367">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-368">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-368">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-369">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-369">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-370">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-370">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-371">Zapisuje nazwę właściwości określoną jako ciąg i <see cref="T:System.Int64" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-371">Writes a property name specified as a string and an <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-372">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.Int64></span><span class="sxs-lookup"><span data-stu-id="7fcfd-372">Writes the <xref:System.Int64> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-373">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-373">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-374">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-374">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-375">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-375">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-376">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-376">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-377">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-377">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-378">Zapisuje nazwę właściwości określoną jako ciąg i <see cref="T:System.Single" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-378">Writes a property name specified as a string and a <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-379">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"). <xref:System.Single></span><span class="sxs-lookup"><span data-stu-id="7fcfd-379">Writes the <xref:System.Single> using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

<span data-ttu-id="7fcfd-380">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-380">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-381">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-381">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-382">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-382">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-383">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-383">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-384">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-384">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-385">Zapisuje nazwę właściwości określoną jako ciąg i <see cref="T:System.UInt32" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-385">Writes a property name specified as a string and a <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-386">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.UInt32></span><span class="sxs-lookup"><span data-stu-id="7fcfd-386">Writes the <xref:System.UInt32> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-387">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-387">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-388">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-388">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-389">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-389">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-390">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-390">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-391">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-391">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-392">Zapisuje nazwę właściwości określoną jako ciąg i <see cref="T:System.UInt64" /> wartość (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-392">Writes a property name specified as a string and a <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-393">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.UInt64></span><span class="sxs-lookup"><span data-stu-id="7fcfd-393">Writes the <xref:System.UInt64> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-394">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-394">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-395">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-395">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-396">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-396">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-397">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-397">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-398">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-398">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-399">Zapisuje wstępnie zakodowaną nazwę i <see cref="T:System.Decimal" /> wartość właściwości (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-399">Writes the pre-encoded property name and <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-400">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"). <xref:System.Decimal></span><span class="sxs-lookup"><span data-stu-id="7fcfd-400">Writes the <xref:System.Decimal> using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

<span data-ttu-id="7fcfd-401">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-401">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-402">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-402">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-403">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-403">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-404">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-404">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-405">Zapisuje wstępnie zakodowaną nazwę i <see cref="T:System.Double" /> wartość właściwości (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-405">Writes the pre-encoded property name and <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-406">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"). <xref:System.Double></span><span class="sxs-lookup"><span data-stu-id="7fcfd-406">Writes the <xref:System.Double> using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

<span data-ttu-id="7fcfd-407">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-407">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-408">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-408">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-409">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-409">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-410">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-410">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-411">Zapisuje wstępnie zakodowaną nazwę i <see cref="T:System.Int32" /> wartość właściwości (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-411">Writes the pre-encoded property name and <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-412">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.Int32></span><span class="sxs-lookup"><span data-stu-id="7fcfd-412">Writes the <xref:System.Int32> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-413">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-413">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-414">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-414">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-415">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-415">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-416">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-416">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-417">Zapisuje wstępnie zakodowaną nazwę i <see cref="T:System.Int64" /> wartość właściwości (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-417">Writes the pre-encoded property name and <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-418">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (to jest "G"), na przykład 32767. <xref:System.Int64></span><span class="sxs-lookup"><span data-stu-id="7fcfd-418">Writes the <xref:System.Int64> using the default <xref:System.Buffers.StandardFormat> (this is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-419">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-419">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-420">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-420">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-421">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-421">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-422">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-422">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-423">Zapisuje wstępnie zakodowaną nazwę i <see cref="T:System.Single" /> wartość właściwości (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-423">Writes the pre-encoded property name and <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-424">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"). <xref:System.Single></span><span class="sxs-lookup"><span data-stu-id="7fcfd-424">Writes the <xref:System.Single> using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

<span data-ttu-id="7fcfd-425">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-425">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-426">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-426">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-427">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-427">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-428">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-428">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-429">Zapisuje wstępnie zakodowaną nazwę i <see cref="T:System.UInt32" /> wartość właściwości (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-429">Writes the pre-encoded property name and <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-430">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.UInt32></span><span class="sxs-lookup"><span data-stu-id="7fcfd-430">Writes the <xref:System.UInt32> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-431">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-431">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-432">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-432">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-433">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-433">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-434">Wartość, która ma zostać zapisywana jako liczba JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-434">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-435">Zapisuje wstępnie zakodowaną nazwę i <see cref="T:System.UInt64" /> wartość właściwości (jako numer JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-435">Writes the pre-encoded property name and <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-436">Zapisuje przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G"), na przykład 32767. <xref:System.UInt64></span><span class="sxs-lookup"><span data-stu-id="7fcfd-436">Writes the <xref:System.UInt64> using the default <xref:System.Buffers.StandardFormat> (that is, 'G'); for example, 32767.</span></span>

<span data-ttu-id="7fcfd-437">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-437">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-438">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-438">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-439">Wartość, która ma być zapisywana jako liczba JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-439">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-440"><see cref="T:System.Decimal" /> Zapisuje wartość (jako liczbę JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-440">Writes a <see cref="T:System.Decimal" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-441">Ta metoda zapisuje <xref:System.Decimal> wartość przy użyciu wartości domyślnej <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="7fcfd-441">This method writes the <xref:System.Decimal> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-442">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-442">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : double -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-443">Wartość, która ma być zapisywana jako liczba JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-443">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-444"><see cref="T:System.Double" /> Zapisuje wartość (jako liczbę JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-444">Writes a <see cref="T:System.Double" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-445">Ta metoda zapisuje <xref:System.Double> wartość przy użyciu wartości domyślnej <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="7fcfd-445">This method writes the <xref:System.Double> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-446">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-446">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : int -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-447">Wartość, która ma być zapisywana jako liczba JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-447">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-448"><see cref="T:System.Int32" /> Zapisuje wartość (jako liczbę JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-448">Writes an <see cref="T:System.Int32" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-449">Ta metoda zapisuje <xref:System.Int32> wartość przy użyciu wartości domyślnej <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="7fcfd-449">This method writes the <xref:System.Int32> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span> <span data-ttu-id="7fcfd-450">Na przykład 32767.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-450">For example, 32767.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-451">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-451">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-452">Wartość, która ma być zapisywana jako liczba JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-452">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-453"><see cref="T:System.Int64" /> Zapisuje wartość (jako liczbę JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-453">Writes an <see cref="T:System.Int64" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-454">Ta metoda zapisuje <xref:System.Int64> wartość przy użyciu wartości domyślnej <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="7fcfd-454">This method writes the <xref:System.Int64> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span> <span data-ttu-id="7fcfd-455">Na przykład 32767.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-455">For example, 32767.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-456">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-456">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : single -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-457">Wartość, która ma być zapisywana jako liczba JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-457">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-458"><see cref="T:System.Single" /> Zapisuje wartość (jako liczbę JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-458">Writes a <see cref="T:System.Single" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-459">Ta metoda zapisuje <xref:System.Single> wartość przy użyciu wartości domyślnej <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="7fcfd-459">This method writes the <xref:System.Single> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-460">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-460">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-461">Wartość, która ma być zapisywana jako liczba JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-461">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-462"><see cref="T:System.UInt32" /> Zapisuje wartość (jako liczbę JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-462">Writes a <see cref="T:System.UInt32" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-463">Ta metoda zapisuje <xref:System.UInt32> wartość przy użyciu wartości domyślnej <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="7fcfd-463">This method writes the <xref:System.UInt32> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span> <span data-ttu-id="7fcfd-464">Na przykład 32767.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-464">For example, 32767.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-465">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-465">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-466">Wartość, która ma być zapisywana jako liczba JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-466">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-467"><see cref="T:System.UInt64" /> Zapisuje wartość (jako liczbę JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-467">Writes a <see cref="T:System.UInt64" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-468">Ta metoda zapisuje <xref:System.UInt64> wartość przy użyciu wartości domyślnej <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="7fcfd-468">This method writes the <xref:System.UInt64> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span> <span data-ttu-id="7fcfd-469">Na przykład 32767.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-469">For example, 32767.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-470">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-470">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WritePropertyName">
      <MemberSignature Language="C#" Value="public void WritePropertyName (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WritePropertyName(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WritePropertyName (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WritePropertyName(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WritePropertyName : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WritePropertyName utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePropertyName">
      <MemberSignature Language="C#" Value="public void WritePropertyName (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WritePropertyName(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WritePropertyName (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WritePropertyName(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WritePropertyName : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WritePropertyName propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePropertyName">
      <MemberSignature Language="C#" Value="public void WritePropertyName (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WritePropertyName(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WritePropertyName (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WritePropertyName(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WritePropertyName : string -&gt; unit" Usage="utf8JsonWriter.WritePropertyName propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePropertyName">
      <MemberSignature Language="C#" Value="public void WritePropertyName (System.Text.Json.JsonEncodedText propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WritePropertyName(valuetype System.Text.Json.JsonEncodedText propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WritePropertyName(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WritePropertyName (propertyName As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WritePropertyName(System::Text::Json::JsonEncodedText propertyName);" />
      <MemberSignature Language="F#" Value="member this.WritePropertyName : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WritePropertyName propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray();" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : unit -&gt; unit" Usage="utf8JsonWriter.WriteStartArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fcfd-471">Zapisuje początek tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-471">Writes the beginning of a JSON array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-472">Głębokość JSON przekracza maksymalną głębokość wynoszącą 1000.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-472">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="7fcfd-473">—lub—</span><span class="sxs-lookup"><span data-stu-id="7fcfd-473">-or-</span></span>

<span data-ttu-id="7fcfd-474">Sprawdzanie poprawności jest włączone, a ta operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-474">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartArray utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-475">Zakodowana w formacie UTF-8 nazwa właściwości tablicy JSON do zapisania.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-475">The UTF-8 encoded property name of the JSON array to be written.</span></span></param>
        <summary><span data-ttu-id="7fcfd-476">Zapisuje początkową tablicę JSON z nazwą właściwości określoną jako klucz tylko do odczytu w bajtach.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-476">Writes the beginning of a JSON array with a property name specified as a read-only span of bytes as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-477">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-477">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-478">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-478">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-479">Głębokość JSON przekracza maksymalną głębokość wynoszącą 1000.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-479">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="7fcfd-480">—lub—</span><span class="sxs-lookup"><span data-stu-id="7fcfd-480">-or-</span></span>
       
<span data-ttu-id="7fcfd-481">Sprawdzanie poprawności jest włączone, a ta operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-481">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartArray propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-482">Zakodowana w formacie UTF-16 nazwa właściwości tablicy JSON do przekodowania i pisania jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-482">The UTF-16 encoded property name of the JSON array to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="7fcfd-483">Zapisuje początek tablicy JSON z nazwą właściwości określoną jako klucz tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-483">Writes the beginning of a JSON array with a property name specified as a read-only character span as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-484">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-484">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-485">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-485">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-486">Głębokość JSON przekracza maksymalną głębokość wynoszącą 1000.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-486">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="7fcfd-487">—lub—</span><span class="sxs-lookup"><span data-stu-id="7fcfd-487">-or-</span></span>
       
<span data-ttu-id="7fcfd-488">Sprawdzanie poprawności jest włączone, a ta operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-488">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : string -&gt; unit" Usage="utf8JsonWriter.WriteStartArray propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-489">Zakodowana w formacie UTF-16 nazwa właściwości tablicy JSON do przekodowania i pisania jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-489">The UTF-16 encoded property name of the JSON array to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="7fcfd-490">Zapisuje początek tablicy JSON o nazwie właściwości określonej jako ciąg jako klucz.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-490">Writes the beginning of a JSON array with a property name specified as a string as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-491">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-491">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-492">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-492">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-493">Głębokość JSON przekracza maksymalną głębokość wynoszącą 1000.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-493">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="7fcfd-494">—lub—</span><span class="sxs-lookup"><span data-stu-id="7fcfd-494">-or-</span></span>
       
<span data-ttu-id="7fcfd-495">Sprawdzanie poprawności jest włączone, a ta operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-495">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (System.Text.Json.JsonEncodedText propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(valuetype System.Text.Json.JsonEncodedText propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (propertyName As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(System::Text::Json::JsonEncodedText propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteStartArray propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-496">Nazwa właściwości kodowanej w formacie JSON tablicy JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-496">The JSON encoded property name of the JSON array to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="7fcfd-497">Zapisuje początek tablicy JSON z wstępnie zakodowaną nazwą właściwości jako kluczem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-497">Writes the beginning of a JSON array with a pre-encoded property name as the key.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-498">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-498">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-499">Głębokość JSON przekroczyła maksymalną głębokość wynoszącą 1000.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-499">The depth of the JSON has exceeded the maximum depth of 1000.</span></span>
    
<span data-ttu-id="7fcfd-500">oraz</span><span class="sxs-lookup"><span data-stu-id="7fcfd-500">- or -</span></span>

<span data-ttu-id="7fcfd-501">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-501">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject();" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : unit -&gt; unit" Usage="utf8JsonWriter.WriteStartObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7fcfd-502">Zapisuje początek obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-502">Writes the beginning of a JSON object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-503">Głębokość JSON przekracza maksymalną głębokość wynoszącą 1000.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-503">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="7fcfd-504">—lub—</span><span class="sxs-lookup"><span data-stu-id="7fcfd-504">-or-</span></span>

<span data-ttu-id="7fcfd-505">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-505">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartObject utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-506">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-506">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <summary><span data-ttu-id="7fcfd-507">Zapisuje początek obiektu JSON z nazwą właściwości określoną jako klucz tylko do odczytu w postaci bajtów.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-507">Writes the beginning of a JSON object with a property name specified as a read-only span of bytes as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-508">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-508">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-509">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-509">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-510">Głębokość JSON przekracza maksymalną głębokość wynoszącą 1000.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-510">The depth of the JSON exceeds the maximum depth of 1000.</span></span> 

<span data-ttu-id="7fcfd-511">—lub—</span><span class="sxs-lookup"><span data-stu-id="7fcfd-511">-or-</span></span>
       
<span data-ttu-id="7fcfd-512">Sprawdzanie poprawności jest włączone, a ta operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-512">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartObject propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-513">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-513">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="7fcfd-514">Zapisuje początek obiektu JSON z nazwą właściwości specififed jako klucz, który jest tylko do odczytu.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-514">Writes the beginning of a JSON object with a property name specififed as a read-only character span as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-515">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-515">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-516">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-516">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-517">Głębokość JSON przekracza maksymalną głębokość wynoszącą 1000.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-517">The depth of the JSON exceeds the maximum depth of 1000.</span></span> 

<span data-ttu-id="7fcfd-518">—lub—</span><span class="sxs-lookup"><span data-stu-id="7fcfd-518">-or-</span></span>
       
<span data-ttu-id="7fcfd-519">Sprawdzanie poprawności jest włączone, a ta operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-519">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : string -&gt; unit" Usage="utf8JsonWriter.WriteStartObject propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-520">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-520">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="7fcfd-521">Zapisuje początek obiektu JSON z nazwą właściwości określoną jako ciąg jako klucz.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-521">Writes the beginning of a JSON object with a property name specified as a string as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-522">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-522">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-523">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-523">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-524">Głębokość JSON przekracza maksymalną głębokość wynoszącą 1000.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-524">The depth of the JSON exceeds the maximum depth of 1000.</span></span> 

<span data-ttu-id="7fcfd-525">—lub—</span><span class="sxs-lookup"><span data-stu-id="7fcfd-525">-or-</span></span>
       
<span data-ttu-id="7fcfd-526">Sprawdzanie poprawności jest włączone, a ta operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-526">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (System.Text.Json.JsonEncodedText propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(valuetype System.Text.Json.JsonEncodedText propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (propertyName As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(System::Text::Json::JsonEncodedText propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteStartObject propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-527">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-527">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="7fcfd-528">Zapisuje początek obiektu JSON z wstępnie zakodowaną nazwą właściwości jako kluczem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-528">Writes the beginning of a JSON object with a pre-encoded property name as the key.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-529">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-529">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-530">Głębokość JSON przekroczyła maksymalną głębokość wynoszącą 1000.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-530">The depth of the JSON has exceeded the maximum depth of 1000.</span></span>
          
<span data-ttu-id="7fcfd-531">oraz</span><span class="sxs-lookup"><span data-stu-id="7fcfd-531">- or -</span></span>

<span data-ttu-id="7fcfd-532">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-532">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-533">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-533">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-534">Wartość, która ma być zapisywana jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-534">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-535">Zapisuje nazwę właściwości UTF-8 i <see cref="T:System.DateTime" /> wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-535">Writes a UTF-8 property name and a <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-536">Zapisuje przy użyciu funkcji Round-----------("O") <xref:System.Buffers.StandardFormat>. <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="7fcfd-536">Writes the <xref:System.DateTime> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>.</span></span> <span data-ttu-id="7fcfd-537">Na przykład 2017-06-12T05:30:45.7680000.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-537">For example, 2017-06-12T05:30:45.7680000.</span></span> <span data-ttu-id="7fcfd-538">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-538">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-539">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-539">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-540">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-540">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-541">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-541">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-542">Wartość, która ma być zapisywana jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-542">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-543">Zapisuje nazwę właściwości UTF-8 i <see cref="T:System.DateTimeOffset" /> wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-543">Writes a UTF-8 property name and a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-544">Zapisuje przy użyciu funkcji Round-------------------------------------- <xref:System.Buffers.StandardFormat> <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="7fcfd-544">Writes the <xref:System.DateTimeOffset> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>; for example, 2017-06-12T05:30:45.7680000-07:00.</span></span> <span data-ttu-id="7fcfd-545">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-545">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-546">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-546">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-547">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-547">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-548">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-548">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-549">Wartość, która ma być zapisywana jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-549">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-550">Zapisuje nazwę właściwości UTF-8 i <see cref="T:System.Guid" /> wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-550">Writes a UTF-8 property name and a <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-551">Zapisuje przy użyciu wartości domyślnej <xref:System.Buffers.StandardFormat> (czyli ")", w postaci: nnnnnnnn-nnnn-nnnn-nnnnnnnnnnnn. <xref:System.Guid></span><span class="sxs-lookup"><span data-stu-id="7fcfd-551">Writes the <xref:System.Guid> using the default <xref:System.Buffers.StandardFormat> (that is, 'D'), in the form: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span></span> <span data-ttu-id="7fcfd-552">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-552">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-553">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-553">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-554">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-554">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-555">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-555">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="utf8Value"><span data-ttu-id="7fcfd-556">Zakodowana wartość UTF-8 jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-556">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-557">Zapisuje nazwę właściwości UTF-8 i wartość tekstową UTF-8 (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-557">Writes a UTF-8 property name and UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-558">Przed zapisaniem nazwa właściwości i wartość są wyprowadzane.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-558">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-559">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-559">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-560">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-560">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-561">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-561">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-562">Zakodowana wartość UTF-16 jest zapisywana jako ciąg JSON z kodowaniem UTF-8 w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-562">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-563">Zapisuje nazwy właściwości UTF-8 i UTF-16 (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-563">Writes a UTF-8 property name and UTF-16 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-564">Przed zapisaniem nazwa właściwości i wartość są wyprowadzane.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-564">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-565">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-565">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-566">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-566">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * string -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-567">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-567">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-568">Zakodowana wartość UTF-16 jest zapisywana jako ciąg JSON z kodowaniem UTF-8 w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-568">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-569">Zapisuje nazwę właściwości UTF-8 i tekst (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-569">Writes a UTF-8 property name and string text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-570">Przed zapisaniem nazwa właściwości i wartość są wyprowadzane.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-570">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-571">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-571">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-572">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-572">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="7fcfd-573">Zakodowana w formacie UTF-8 nazwa właściwości obiektu JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-573">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-574">Zakodowana wartość JSON jest zapisywana jako ciąg JSON w formacie UTF-8 w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-574">The JSON encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-575">Zapisuje nazwę właściwości UTF-8 i wstępnie zakodowaną wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-575">Writes the UTF-8 property name and pre-encoded value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-576">Wartość powinna mieć już zmieniony znak ucieczki podczas tworzenia wystąpienia <xref:System.Text.Json.JsonEncodedText> .</span><span class="sxs-lookup"><span data-stu-id="7fcfd-576">The value should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

<span data-ttu-id="7fcfd-577">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-577">The property name is escaped before writing.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-578">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-578">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-579">Sprawdzanie poprawności jest włączone, a ta metoda spowoduje zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-579">Validation is enabled, and this method would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-580">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-580">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-581">Wartość, która ma być zapisywana jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-581">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-582">Zapisuje nazwę właściwości określoną jako zakres znaków tylko do odczytu i <see cref="T:System.DateTime" /> wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-582">Writes a property name specified as a read-only character span and a <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-583">Zapisuje przy użyciu funkcji Round---------------------------------- <xref:System.Buffers.StandardFormat> <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="7fcfd-583">Writes the <xref:System.DateTime> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>; for example, 2017-06-12T05:30:45.7680000.</span></span> <span data-ttu-id="7fcfd-584">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-584">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-585">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-585">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-586">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-586">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-587">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-587">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-588">Wartość, która ma być zapisywana jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-588">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-589">Zapisuje nazwę właściwości określoną jako zakres znaków tylko do odczytu i <see cref="T:System.DateTimeOffset" /> wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-589">Writes a property name specified as a read-only character span and a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-590">Zapisuje przy użyciu funkcji Round-------------------------------------- <xref:System.Buffers.StandardFormat> <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="7fcfd-590">Writes the <xref:System.DateTimeOffset> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>; for example, 2017-06-12T05:30:45.7680000-07:00.</span></span> <span data-ttu-id="7fcfd-591">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-591">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-592">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-592">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-593">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-593">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-594">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-594">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-595">Wartość, która ma być zapisywana jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-595">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-596">Zapisuje nazwę właściwości określoną jako zakres znaków tylko do odczytu i <see cref="T:System.Guid" /> wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-596">Writes a property name specified as a read-only character span and a <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-597">Zapisuje przy użyciu wartości domyślnej <xref:System.Buffers.StandardFormat> (czyli ")", w postaci: nnnnnnnn-nnnn-nnnn-nnnnnnnnnnnn. <xref:System.Guid></span><span class="sxs-lookup"><span data-stu-id="7fcfd-597">Writes the <xref:System.Guid> using the default <xref:System.Buffers.StandardFormat> (that is, 'D'), in the form: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span></span> <span data-ttu-id="7fcfd-598">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-598">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-599">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-599">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-600">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-600">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-601">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-601">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="utf8Value"><span data-ttu-id="7fcfd-602">Zakodowana wartość UTF-8 jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-602">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-603">Zapisuje nazwę właściwości UTF-16 i wartość tekstową UTF-8 (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-603">Writes a UTF-16 property name and UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-604">Przed zapisaniem nazwa właściwości i wartość są wyprowadzane.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-604">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-605">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-605">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-606">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-606">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-607">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-607">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-608">Zakodowana wartość UTF-16 jest zapisywana jako ciąg JSON z kodowaniem UTF-8 w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-608">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-609">Zapisuje nazwę właściwości UTF-16 i wartość tekstową UTF-16 (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-609">Writes a UTF-16 property name and UTF-16 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-610">Przed zapisaniem nazwa właściwości i wartość są wyprowadzane.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-610">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-611">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-611">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-612">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-612">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * string -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-613">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-613">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-614">Zakodowana wartość UTF-16 jest zapisywana jako ciąg JSON z kodowaniem UTF-8 w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-614">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-615">Zapisuje nazwę właściwości UTF-16 i tekst (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-615">Writes a UTF-16 property name and string text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-616">Przed zapisaniem nazwa właściwości i wartość są wyprowadzane.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-616">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-617">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-617">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-618">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-618">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-619">Nazwa właściwości obiektu JSON, który ma być transkodowane i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-619">The property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-620">Zakodowana wartość JSON jest zapisywana jako ciąg JSON w formacie UTF-8 w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-620">The JSON encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-621">Zapisuje nazwę właściwości i wstępnie zakodowaną wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-621">Writes the property name and pre-encoded value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-622">Wartość powinna mieć już zmieniony znak ucieczki podczas tworzenia wystąpienia <xref:System.Text.Json.JsonEncodedText> .</span><span class="sxs-lookup"><span data-stu-id="7fcfd-622">The value should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

<span data-ttu-id="7fcfd-623">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-623">The property name is escaped before writing.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-624">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-624">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-625">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-625">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-626">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-626">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-627">Wartość, która ma być zapisywana jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-627">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-628">Zapisuje nazwę właściwości określoną jako ciąg i <see cref="T:System.DateTime" /> wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-628">Writes a property name specified as a string and a <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-629">Zapisuje przy użyciu funkcji Round---------------------------------- <xref:System.Buffers.StandardFormat> <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="7fcfd-629">Writes the <xref:System.DateTime> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>; for example, 2017-06-12T05:30:45.7680000.</span></span> <span data-ttu-id="7fcfd-630">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-630">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-631">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-631">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-632">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-632">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-633">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-633">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-634">Wartość, która ma być zapisywana jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-634">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-635">Zapisuje nazwę właściwości określoną jako ciąg i <see cref="T:System.DateTimeOffset" /> wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-635">Writes a property name specified as a string and a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-636">Zapisuje przy użyciu funkcji Round-------------------------------------- <xref:System.Buffers.StandardFormat> <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="7fcfd-636">Writes the <xref:System.DateTimeOffset> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>; for example, 2017-06-12T05:30:45.7680000-07:00.</span></span> <span data-ttu-id="7fcfd-637">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-637">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-638">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-638">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-639">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-639">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-640">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-640">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-641">Wartość, która ma być zapisywana jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-641">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-642">Zapisuje nazwę właściwości określoną jako ciąg i <see cref="T:System.Guid" /> wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-642">Writes a property name specified as a string and a <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-643">Zapisuje przy użyciu wartości domyślnej <xref:System.Buffers.StandardFormat> (czyli ")", w postaci: nnnnnnnn-nnnn-nnnn-nnnnnnnnnnnn. <xref:System.Guid></span><span class="sxs-lookup"><span data-stu-id="7fcfd-643">Writes the <xref:System.Guid> using the default <xref:System.Buffers.StandardFormat> (that is, 'D'), in the form: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span></span> <span data-ttu-id="7fcfd-644">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-644">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-645">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-645">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-646">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-646">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-647">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-647">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="utf8Value"><span data-ttu-id="7fcfd-648">Zakodowana wartość UTF-8 jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-648">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-649">Zapisuje nazwę właściwości określoną jako ciąg i wartość tekstową UTF-8 (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-649">Writes a property name specified as a string and a UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-650">Przed zapisaniem nazwa właściwości i wartość są wyprowadzane.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-650">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-651">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-651">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-652">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-652">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-653">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-653">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-654">Zakodowana wartość UTF-16 jest zapisywana jako ciąg JSON z kodowaniem UTF-8 w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-654">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-655">Zapisuje nazwę właściwości określoną jako ciąg i wartość tekstową UTF-16 (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-655">Writes a property name specified as a string and a UTF-16 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-656">Przed zapisaniem nazwa właściwości i wartość są wyprowadzane.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-656">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-657">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-657">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-658">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-658">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * string -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-659">Zakodowana w formacie UTF-16 nazwa właściwości obiektu JSON, który ma być transzakodowany i zapisany jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-659">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-660">Zakodowana wartość UTF-16 jest zapisywana jako ciąg JSON z kodowaniem UTF-8 w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-660">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-661">Zapisuje nazwę właściwości określoną jako ciąg i ciąg wartości tekstowej (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-661">Writes a property name specified as a string and a string text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-662">Przed zapisaniem nazwa właściwości i wartość są wyprowadzane.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-662">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-663">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-663">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-664">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-664">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-665">Nazwa właściwości obiektu JSON, który ma być transkodowane i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-665">The property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-666">Zakodowana wartość JSON jest zapisywana jako ciąg JSON w formacie UTF-8 w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-666">The JSON encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-667">Zapisuje nazwę właściwości i wstępnie zakodowaną wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-667">Writes the property name and pre-encoded value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-668">Wartość powinna mieć już zmieniony znak ucieczki podczas tworzenia wystąpienia <xref:System.Text.Json.JsonEncodedText> .</span><span class="sxs-lookup"><span data-stu-id="7fcfd-668">The value should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

<span data-ttu-id="7fcfd-669">Nazwa właściwości jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-669">The property name is escaped before writing.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-670">Określona nazwa właściwości jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-670">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-671">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-671">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-672">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-672">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-673">Wartość, która ma być zapisywana jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-673">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-674">Zapisuje wstępnie zakodowaną nazwę i <see cref="T:System.DateTime" /> wartość właściwości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-674">Writes the pre-encoded property name and <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-675">Zapisuje przy użyciu funkcji Round---------------------------------- <xref:System.Buffers.StandardFormat> <xref:System.DateTime></span><span class="sxs-lookup"><span data-stu-id="7fcfd-675">Writes the <xref:System.DateTime> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>; for example, 2017-06-12T05:30:45.7680000.</span></span>

<span data-ttu-id="7fcfd-676">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-676">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-677">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-677">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-678">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-678">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-679">Wartość, która ma być zapisywana jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-679">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-680">Zapisuje wstępnie zakodowaną nazwę i <see cref="T:System.DateTimeOffset" /> wartość właściwości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-680">Writes the pre-encoded property name and <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-681">Zapisuje przy użyciu funkcji Round-------------------------------------- <xref:System.Buffers.StandardFormat> <xref:System.DateTimeOffset></span><span class="sxs-lookup"><span data-stu-id="7fcfd-681">Writes the <xref:System.DateTimeOffset> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>; for example, 2017-06-12T05:30:45.7680000-07:00.</span></span>

<span data-ttu-id="7fcfd-682">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-682">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-683">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-683">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-684">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-684">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-685">Wartość, która ma być zapisywana jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-685">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-686">Zapisuje wstępnie zakodowaną nazwę i <see cref="T:System.Guid" /> wartość właściwości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-686">Writes the pre-encoded property name and <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-687">Zapisuje przy użyciu wartości domyślnej <xref:System.Buffers.StandardFormat> (czyli ")", w postaci: nnnnnnnn-nnnn-nnnn-nnnnnnnnnnnn. <xref:System.Guid></span><span class="sxs-lookup"><span data-stu-id="7fcfd-687">Writes the <xref:System.Guid> using the default <xref:System.Buffers.StandardFormat> (that is, 'D'), in the form: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span></span>

<span data-ttu-id="7fcfd-688">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-688">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-689">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-689">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-690">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-690">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="utf8Value"><span data-ttu-id="7fcfd-691">Zakodowana wartość UTF-8 jako ciąg JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-691">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-692">Zapisuje wstępnie zakodowaną nazwę właściwości i wartość tekstową UTF-8 (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-692">Writes the pre-encoded property name and UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-693">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-693">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

<span data-ttu-id="7fcfd-694">Wartość jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-694">The value is escaped before writing.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-695">Określona wartość jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-695">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-696">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-696">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-697">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-697">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-698">Wartość, która ma być zapisywana jako ciąg JSON z kodowaniem UTF-8 w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-698">The value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-699">Zapisuje wstępnie zakodowaną nazwę właściwości i wartość tekstową (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-699">Writes the pre-encoded property name and text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-700">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-700">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

<span data-ttu-id="7fcfd-701">Wartość jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-701">The value is escaped before writing.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-702">Określona wartość jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-702">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-703">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-703">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * string -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-704">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-704">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-705">Wartość, która ma być zapisywana jako ciąg JSON z kodowaniem UTF-8 w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-705">The value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-706">Zapisuje wstępnie zakodowaną nazwę właściwości i wartość tekstową ciągu (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-706">Writes the pre-encoded property name and string text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-707">Nazwę właściwości należy już zmienić, gdy wystąpienie <xref:System.Text.Json.JsonEncodedText> zostało utworzone.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-707">The property name should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

<span data-ttu-id="7fcfd-708">Wartość jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-708">The value is escaped before writing.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-709">Określona wartość jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-709">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-710">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-710">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="7fcfd-711">Nazwa właściwości kodowanej w formacie JSON obiektu JSON, która ma zostać poddana transkodowaniem i zapisywana jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-711">The JSON encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="7fcfd-712">Zakodowana wartość JSON jest zapisywana jako ciąg JSON w formacie UTF-8 w ramach pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-712">The JSON encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="7fcfd-713">Zapisuje wstępnie zakodowaną nazwę właściwości i wstępnie zakodowaną wartość (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-713">Writes the pre-encoded property name and pre-encoded value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-714">Nazwa właściwości i wartość powinna być już zmieniana podczas tworzenia wystąpienia <xref:System.Text.Json.JsonEncodedText> .</span><span class="sxs-lookup"><span data-stu-id="7fcfd-714">The property name and value should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-715">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-715">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : DateTime -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-716">Wartość, która ma być zapisywana jako ciąg JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-716">The value to be written as a JSON string as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-717"><see cref="T:System.DateTime" /> Zapisuje wartość (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-717">Writes a <see cref="T:System.DateTime" /> value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-718">Ta metoda zapisuje <xref:System.DateTime> przy użyciu funkcji okrężnej ("O") <xref:System.Buffers.StandardFormat>.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-718">This method writes the <xref:System.DateTime> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>.</span></span> <span data-ttu-id="7fcfd-719">Na przykład 2017-06-12T05:30:45.7680000.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-719">For example, 2017-06-12T05:30:45.7680000.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-720">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-720">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-721">Wartość, która ma być zapisywana jako ciąg JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-721">The value to be written as a JSON string as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-722"><see cref="T:System.DateTimeOffset" /> Zapisuje wartość (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-722">Writes a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-723">Ta metoda zapisuje <xref:System.DateTimeOffset> przy użyciu funkcji okrężnej ("O") <xref:System.Buffers.StandardFormat>.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-723">This method writes the <xref:System.DateTimeOffset> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>.</span></span> <span data-ttu-id="7fcfd-724">Na przykład 2017-06-12T05:30:45.7680000-07:00.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-724">For example, 2017-06-12T05:30:45.7680000-07:00.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-725">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-725">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : Guid -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-726">Wartość, która ma być zapisywana jako ciąg JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-726">The value to be written as a JSON string as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-727"><see cref="T:System.Guid" /> Zapisuje wartość (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-727">Writes a <see cref="T:System.Guid" /> value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="7fcfd-728">Ta metoda zapisuje <xref:System.Guid> wartość przy użyciu wartości domyślnej <xref:System.Buffers.StandardFormat> (czyli "'d"), w postaci: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-728">This method writes the <xref:System.Guid> value using the default <xref:System.Buffers.StandardFormat> (that is, 'D'), as the form: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-729">Sprawdzanie poprawności jest włączone, a operacja spowodowałaby zapisanie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-729">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStringValue utf8Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8Value"><span data-ttu-id="7fcfd-730">Zakodowana wartość UTF-8, która ma być zapisywana jako element ciągu JSON tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-730">The UTF-8 encoded value to be written as a JSON string element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-731">Zapisuje wartość tekstową UTF-8 (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-731">Writes a UTF-8 text value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-732">Wartość jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-732">The value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-733">Określona wartość jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-733">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-734">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-734">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-735">Zakodowana wartość UTF-16, która ma być zapisywana jako element ciągu JSON w formacie UTF-8 w tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-735">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-736">Zapisuje wartość tekstową w formacie UTF-16 (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-736">Writes a UTF-16 text value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-737">Wartość jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-737">The value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-738">Określona wartość jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-738">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-739">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-739">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : string -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-740">Zakodowana wartość UTF-16, która ma być zapisywana jako element ciągu JSON w formacie UTF-8 w tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-740">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-741">Zapisuje wartość tekstową ciągu (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-741">Writes a string text value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="7fcfd-742">Wartość jest wyprowadzana przed zapisem.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-742">The value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7fcfd-743">Określona wartość jest za duża.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-743">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-744">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-744">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="7fcfd-745">Zakodowana wartość JSON jest zapisywana jako element ciągu JSON w formacie UTF-8 w tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-745">The JSON encoded value to be written as a UTF-8 transcoded JSON string element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="7fcfd-746">Zapisuje wstępnie zakodowaną wartość tekstową (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-746">Writes the pre-encoded text value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format type="text/markdown">
        

## Remarks

<span data-ttu-id="7fcfd-747">Wartość powinna mieć już zmieniony znak ucieczki podczas tworzenia wystąpienia <xref:System.Text.Json.JsonEncodedText> .</span><span class="sxs-lookup"><span data-stu-id="7fcfd-747">The value should already be escaped when the instance of <xref:System.Text.Json.JsonEncodedText> was created.</span></span>

               </format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7fcfd-748">Sprawdzanie poprawności jest włączone, a operacja zapisu spowodowałaby utworzenie nieprawidłowego kodu JSON.</span><span class="sxs-lookup"><span data-stu-id="7fcfd-748">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
