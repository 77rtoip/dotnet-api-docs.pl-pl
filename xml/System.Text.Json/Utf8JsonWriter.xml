<Type Name="Utf8JsonWriter" FullName="System.Text.Json.Utf8JsonWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="385cb760a73c83246471a467d05aea4d0123e51b" /><Meta Name="ms.sourcegitcommit" Value="61757d0366a172cdbc11436deb1c1ffa49d97238" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="06/28/2019" /><Meta Name="ms.locfileid" Value="67458299" /></Metadata><TypeSignature Language="C#" Value="public sealed class Utf8JsonWriter : IAsyncDisposable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Utf8JsonWriter extends System.Object implements class System.IAsyncDisposable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.Utf8JsonWriter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Utf8JsonWriter&#xA;Implements IAsyncDisposable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8JsonWriter sealed : IAsyncDisposable, IDisposable" />
  <TypeSignature Language="F#" Value="type Utf8JsonWriter = class&#xA;    interface IDisposable&#xA;    interface IAsyncDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netcore-3.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1fdbd-101">Udostępnia interfejs API o wysokiej wydajności dla zapisu tylko do przodu, Niebuforowana UTF-8 kodowany w formacie JSON tekst.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-101">Provides a high-performance API for forward-only, non-cached writing of UTF-8 encoded JSON text.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1fdbd-102">`Utf8JsonWriter` Zapisuje tekst sekwencyjnie z Brak buforowania i domyślnie działa zgodnie z [JSON RFC](https://tools.ietf.org/html/rfc8259), z wyjątkiem pisania komentarzy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-102">`Utf8JsonWriter` writes the text sequentially with no caching and by default adheres to the [JSON RFC](https://tools.ietf.org/html/rfc8259), with the exception of writing comments.</span></span>

<span data-ttu-id="1fdbd-103">Metoda, która próbuje zapisać obiekt JSON jest nieprawidłowy, gdy sprawdzanie poprawności jest włączone zgłasza <xref:System.InvalidOperationException> kontekstowych komunikat o błędzie.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-103">A method that attempts to write invalid JSON when validation is enabled throws a <xref:System.InvalidOperationException> with a context-specific error message.</span></span>

<span data-ttu-id="1fdbd-104">Ponieważ ten typ jest strukturą ref, go nie obsługuje bezpośrednio async.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-104">Since this type is a ref struct, it does not directly support async.</span></span> <span data-ttu-id="1fdbd-105">Jednak zapewnia obsługę współużytkowania wątkowości zapisu częściowe dane i kontynuować pisanie we fragmentach.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-105">However, it does provide support for reentrancy to write partial data and to continue writing in chunks.</span></span>

<span data-ttu-id="1fdbd-106">Aby można było, aby sformatować dane wyjściowe z wcięcia i biały znak lub Pomiń sprawdzanie poprawności, Utwórz wystąpienie obiektu <xref:System.Text.Json.JsonWriterOptions> i przekazać go do składnika zapisywania programu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-106">To be able to format the output with indentation and white space OR to skip validation, create an instance of <xref:System.Text.Json.JsonWriterOptions> and pass it in to the writer.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Utf8JsonWriter (System.Buffers.IBufferWriter&lt;byte&gt; bufferWriter, System.Text.Json.JsonWriterOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt; bufferWriter, valuetype System.Text.Json.JsonWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.#ctor(System.Buffers.IBufferWriter{System.Byte},System.Text.Json.JsonWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bufferWriter As IBufferWriter(Of Byte), Optional options As JsonWriterOptions = null)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Utf8JsonWriter : System.Buffers.IBufferWriter&lt;byte&gt; * System.Text.Json.JsonWriterOptions -&gt; System.Text.Json.Utf8JsonWriter" Usage="new System.Text.Json.Utf8JsonWriter (bufferWriter, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bufferWriter" Type="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonWriterOptions" />
      </Parameters>
      <Docs>
        <param name="bufferWriter"><span data-ttu-id="1fdbd-107">Miejsce docelowe dla zapisu tekst JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-107">The destination for writing JSON text.</span></span></param>
        <param name="options"><span data-ttu-id="1fdbd-108">Definiuje niestandardowe zachowanie <see cref="T:System.Text.Json.Utf8JsonWriter" /> domyślnie zapisuje w trybie zminimalizowanym JSON (z bez dodatkowych białych znaków) i sprawdza, czy dane JSON zapisywana jest o prawidłowej strukturze zgodnie z JSON RFC.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-108">Defines the customized behavior of the <see cref="T:System.Text.Json.Utf8JsonWriter" /> By default, it writes minimized JSON (with no extra whitespace) and validates that the JSON being written is structurally valid according to the JSON RFC.</span></span></param>
        <summary><span data-ttu-id="1fdbd-109">Tworzy nowy <see cref="T:System.Text.Json.Utf8JsonWriter" /> wystąpienie z określonym <see langword="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-109">Constructs a new <see cref="T:System.Text.Json.Utf8JsonWriter" /> instance with a specified <see langword="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1fdbd-110"><paramref name="bufferWriter" />  jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-110"><paramref name="bufferWriter" />  is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Utf8JsonWriter (System.IO.Stream utf8Json, System.Text.Json.JsonWriterOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream utf8Json, valuetype System.Text.Json.JsonWriterOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.#ctor(System.IO.Stream,System.Text.Json.JsonWriterOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (utf8Json As Stream, Optional options As JsonWriterOptions = null)" />
      <MemberSignature Language="F#" Value="new System.Text.Json.Utf8JsonWriter : System.IO.Stream * System.Text.Json.JsonWriterOptions -&gt; System.Text.Json.Utf8JsonWriter" Usage="new System.Text.Json.Utf8JsonWriter (utf8Json, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Text.Json.JsonWriterOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="1fdbd-111">Miejsce docelowe dla zapisu tekst JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-111">The destination for writing JSON text.</span></span></param>
        <param name="options"><span data-ttu-id="1fdbd-112">Definiuje niestandardowe zachowanie <see cref="T:System.Text.Json.Utf8JsonWriter" /> domyślnie zapisuje w trybie zminimalizowanym JSON (z bez dodatkowych białych znaków) i sprawdza, czy dane JSON zapisywana jest o prawidłowej strukturze zgodnie z JSON RFC.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-112">Defines the customized behavior of the <see cref="T:System.Text.Json.Utf8JsonWriter" /> By default, it writes minimized JSON (with no extra whitespace) and validates that the JSON being written is structurally valid according to the JSON RFC.</span></span></param>
        <summary><span data-ttu-id="1fdbd-113">Tworzy nowy <see cref="T:System.Text.Json.Utf8JsonWriter" /> wystąpienie z określonym <paramref name="utf8Json" />.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-113">Constructs a new <see cref="T:System.Text.Json.Utf8JsonWriter" /> instance with a specified <paramref name="utf8Json" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1fdbd-114"><paramref name="utf8Json" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-114"><paramref name="utf8Json" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BytesCommitted">
      <MemberSignature Language="C#" Value="public long BytesCommitted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 BytesCommitted" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.BytesCommitted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesCommitted As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long BytesCommitted { long get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesCommitted : int64" Usage="System.Text.Json.Utf8JsonWriter.BytesCommitted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fdbd-115">Pobiera całkowitą liczbę bajtów zadeklarowanych w typie danych wyjściowych przez bieżące wystąpienie do tej pory.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-115">Gets the total number of bytes committed to the output by the current instance so far.</span></span></summary>
        <value><span data-ttu-id="1fdbd-116">Całkowita liczba bajtów zadeklarowane w typie danych wyjściowych przez <see cref="T:System.Text.Json.Utf8JsonWriter" /> do tej pory.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-116">The total number of bytes committed to the output by the <see cref="T:System.Text.Json.Utf8JsonWriter" /> so far.</span></span></value>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-117">W przypadku właściwości <xref:System.Buffers.IBufferWriter%601>, ta właściwość wskazuje, ile IBufferWriter udostępnia zaawansowane.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-117">In the case of an <xref:System.Buffers.IBufferWriter%601>, this property indicates how much the IBufferWriter has advanced.</span></span>

<span data-ttu-id="1fdbd-118">W przypadku właściwości <xref:System.IO.Stream>, ta właściwość wskazuje, ile danych została zapisana w strumieniu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-118">In the case of a <xref:System.IO.Stream>, this property indicates how much data has been written to the stream.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesPending">
      <MemberSignature Language="C#" Value="public int BytesPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesPending" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.BytesPending" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesPending As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesPending { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesPending : int" Usage="System.Text.Json.Utf8JsonWriter.BytesPending" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fdbd-119">Pobiera liczba bajtów zapisanych przez <see cref="T:System.Text.Json.Utf8JsonWriter" /> do tej pory, jeszcze nie zostały opróżniany do danych wyjściowych i zatwierdzone.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-119">Gets the number of bytes written by the <see cref="T:System.Text.Json.Utf8JsonWriter" /> so far that have not yet been flushed to the output and committed.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDepth">
      <MemberSignature Language="C#" Value="public int CurrentDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentDepth" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.CurrentDepth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDepth : int" Usage="System.Text.Json.Utf8JsonWriter.CurrentDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fdbd-120">Pobiera głębokość bieżącego tokenu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-120">Gets the depth of the current token.</span></span></summary>
        <value><span data-ttu-id="1fdbd-121">Głębokość bieżącego tokenu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-121">The depth of the current token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1fdbd-122">`CurrentDepth` Właściwość śledzi cyklicznego głębokość zagnieżdżonych obiektów / tablic w tekście JSON zapisane do tej pory.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-122">The `CurrentDepth` property tracks the recursive depth of the nested objects / arrays within the JSON text written so far.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="utf8JsonWriter.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fdbd-123">Zatwierdza pozostawionych tekst JSON, który jeszcze nie został opróżniony i zwalnia wszystkie zasoby używane przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-123">Commits any leftover JSON text that has not yet been flushed and releases all resources used by the current instance.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-124">W przypadku IBufferWriter, to prowadzi bazowego <xref:System.Buffers.IBufferWriter`1> oparte na co została zapisana do tej pory.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-124">In the case of IBufferWriter, this advances the underlying <xref:System.Buffers.IBufferWriter`1> based on what has been written so far.</span></span>

<span data-ttu-id="1fdbd-125">W przypadku Stream zapisuje dane w strumieniu i opróżnia je.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-125">In the case of Stream, this writes the data to the stream and flushes it.</span></span>

<span data-ttu-id="1fdbd-126"><xref:System.Text.Json.Utf8JsonWriter> Wystąpienia nie może zostać ponownie użyte po usuwania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-126">The <xref:System.Text.Json.Utf8JsonWriter> instance cannot be reused after disposing.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="utf8JsonWriter.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fdbd-127">Asynchronicznie zatwierdzeń pozostawionych tekst JSON, który jeszcze nie został opróżniony i zwalnia wszystkie zasoby używane przez bieżące wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-127">Asynchronously commits any leftover JSON text that has not yet been flushed and releases all resources used by the current instance.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-128">W przypadku IBufferWriter, to prowadzi bazowego <xref:System.Buffers.IBufferWriter`1> oparte na co została zapisana do tej pory.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-128">In the case of IBufferWriter, this advances the underlying <xref:System.Buffers.IBufferWriter`1> based on what has been written so far.</span></span>
          
<span data-ttu-id="1fdbd-129">W przypadku Stream zapisuje dane w strumieniu i opróżnia je.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-129">In the case of Stream, this writes the data to the stream and flushes it.</span></span>

<span data-ttu-id="1fdbd-130"><xref:System.Text.Json.Utf8JsonWriter> Wystąpienia nie może zostać ponownie użyte po usuwania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-130">The <xref:System.Text.Json.Utf8JsonWriter> instance cannot be reused after disposing.</span></span>
            
            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="utf8JsonWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fdbd-131">Zatwierdza tekstu JSON zapisane do tej pory, co czyni go widoczne miejsce docelowe danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-131">Commits the JSON text written so far, which makes it visible to the output destination.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-132">W przypadku IBufferWriter, to prowadzi bazowego <xref:System.Buffers.IBufferWriter`1> oparte na co została zapisana do tej pory.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-132">In the case of IBufferWriter, this advances the underlying <xref:System.Buffers.IBufferWriter`1> based on what has been written so far.</span></span>

<span data-ttu-id="1fdbd-133">W przypadku właściwości <xref:System.IO.Stream>, to zapisuje dane w strumieniu i opróżnia je.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-133">In the case of <xref:System.IO.Stream>, this writes the data to the stream and flushes it.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1fdbd-134">To wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-134">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="utf8JsonWriter.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary><span data-ttu-id="1fdbd-135">Asynchronicznie zatwierdzeń tekstu JSON zapisane do tej pory, co czyni go widoczne miejsce docelowe danych wyjściowych.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-135">Asynchronously commits the JSON text written so far, which makes it visible to the output destination.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-136">W przypadku IBufferWriter, to prowadzi bazowego <xref:System.Buffers.IBufferWriter`1> oparte na co została zapisana do tej pory.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-136">In the case of IBufferWriter, this advances the underlying <xref:System.Buffers.IBufferWriter`1> based on what has been written so far.</span></span>

<span data-ttu-id="1fdbd-137">W przypadku właściwości <xref:System.IO.Stream>, to zapisuje dane w strumieniu i opróżnia je asynchronicznie, podczas monitorowania żądań anulowania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-137">In the case of <xref:System.IO.Stream>, this writes the data to the stream and flushes it asynchronously, while monitoring cancellation requests.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1fdbd-138">To wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-138">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonWriterOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonWriterOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.Utf8JsonWriter.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As JsonWriterOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonWriterOptions Options { System::Text::Json::JsonWriterOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.Json.JsonWriterOptions" Usage="System.Text.Json.Utf8JsonWriter.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonWriterOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fdbd-139">Pobiera zachowanie niestandardowe, podczas zapisywania ciągu JSON przy użyciu tego wystąpienia, która wskazuje, czy chcesz sformatować dane wyjściowe podczas zapisywania i czy ma pomijać strukturalnych weryfikację JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-139">Gets the custom behavior when writing JSON using this instance, which indicates whether to format the output while writing and whether to skip structural JSON validation.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="utf8JsonWriter.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fdbd-140">Resetuje stan wewnętrzny tego wystąpienia, mogą być ponownie używane.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-140">Resets the internal state of this instance so that it can be reused.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-141"><xref:System.Text.Json.Utf8JsonWriter> Będą w dalszym ciągu używać oryginalnego opcje zapisywania i oryginalne dane wyjściowe (albo <xref:System.Buffers.IBufferWriter`1> lub <xref:System.IO.Stream>) jako miejsca docelowego.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-141">The <xref:System.Text.Json.Utf8JsonWriter> will continue to use the original writer options and the original output (either <xref:System.Buffers.IBufferWriter`1> or <xref:System.IO.Stream>) as the destination.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1fdbd-142">To wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-142">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.Buffers.IBufferWriter&lt;byte&gt; bufferWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(class System.Buffers.IBufferWriter`1&lt;unsigned int8&gt; bufferWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Reset(System.Buffers.IBufferWriter{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (bufferWriter As IBufferWriter(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::Buffers::IBufferWriter&lt;System::Byte&gt; ^ bufferWriter);" />
      <MemberSignature Language="F#" Value="member this.Reset : System.Buffers.IBufferWriter&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.Reset bufferWriter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferWriter" Type="System.Buffers.IBufferWriter&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bufferWriter"><span data-ttu-id="1fdbd-143">Miejsce docelowe dla zapisu tekst JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-143">The destination for writing JSON text.</span></span></param>
        <summary><span data-ttu-id="1fdbd-144">Resetuje stan wewnętrzny tego wystąpienia, dzięki czemu mogą być ponownie używane, za pomocą nowego wystąpienia programu <see cref="T:System.Buffers.IBufferWriter`1" />.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-144">Resets the internal state of this instance so that it can be reused with a new instance of <see cref="T:System.Buffers.IBufferWriter`1" />.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-145"><xref:System.Text.Json.Utf8JsonWriter> Będą w dalszym ciągu używać oryginalnego opcje zapisywania, ale teraz zapisuje `bufferWriter` jako nowego miejsca docelowego.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-145">The <xref:System.Text.Json.Utf8JsonWriter> will continue to use the original writer options but now writes to `bufferWriter` as the new destination.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1fdbd-146"><paramref name="bufferWriter" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-146"><paramref name="bufferWriter" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1fdbd-147">To wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-147">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (System.IO.Stream utf8Json);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(class System.IO.Stream utf8Json) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.Reset(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (utf8Json As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::IO::Stream ^ utf8Json);" />
      <MemberSignature Language="F#" Value="member this.Reset : System.IO.Stream -&gt; unit" Usage="utf8JsonWriter.Reset utf8Json" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="1fdbd-148">Miejsce docelowe dla zapisu tekst JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-148">The destination for writing JSON text.</span></span></param>
        <summary><span data-ttu-id="1fdbd-149">Resetuje stan wewnętrzny tego wystąpienia, dzięki czemu mogą być ponownie używane, za pomocą nowego wystąpienia programu <see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-149">Resets the internal state of this instance so that it can be reused with a new instance of <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-150"><xref:System.Text.Json.Utf8JsonWriter> Będą nadal używają oryginalnej opcje zapisywania, ale teraz zapisać `utf8Json` jako nowego miejsca docelowego.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-150">The <xref:System.Text.Json.Utf8JsonWriter> will continue to use the original writer options but now write to `utf8Json` as the new destination.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1fdbd-151"><paramref name="utf8Json" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-151"><paramref name="utf8Json" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1fdbd-152">To wystąpienie zostało usunięte.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-152">This instance has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64String">
      <MemberSignature Language="C#" Value="public void WriteBase64String (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64String(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64String (utf8PropertyName As ReadOnlySpan(Of Byte), bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64String(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64String : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64String (utf8PropertyName, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64String">
      <MemberSignature Language="C#" Value="public void WriteBase64String (ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64String(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64String (propertyName As ReadOnlySpan(Of Char), bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64String(ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64String : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64String (propertyName, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64String">
      <MemberSignature Language="C#" Value="public void WriteBase64String (string propertyName, ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64String(string propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.String,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64String (propertyName As String, bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64String(System::String ^ propertyName, ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64String : string * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64String (propertyName, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64String">
      <MemberSignature Language="C#" Value="public void WriteBase64String (System.Text.Json.JsonEncodedText propertyName, ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64String(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64String(System.Text.Json.JsonEncodedText,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64String (propertyName As JsonEncodedText, bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64String(System::Text::Json::JsonEncodedText propertyName, ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64String : System.Text.Json.JsonEncodedText * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64String (propertyName, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64StringValue">
      <MemberSignature Language="C#" Value="public void WriteBase64StringValue (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBase64StringValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBase64StringValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBase64StringValue (bytes As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBase64StringValue(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="member this.WriteBase64StringValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteBase64StringValue bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (ReadOnlySpan&lt;byte&gt; utf8PropertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.ReadOnlySpan{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (utf8PropertyName As ReadOnlySpan(Of Byte), value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : ReadOnlySpan&lt;byte&gt; * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-153">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-153">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-154">Wartość do zapisania jako JSON literału "true" lub "fałsz", jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-154">The value to be written as a JSON literal "true" or "false" as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-155">Zapisuje określony jako tylko do odczytu zakres bajtów nazwy właściwości i <see cref="T:System.Boolean" /> wartości (jako JSON literału "true" lub "false") jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-155">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Boolean" /> value (as a JSON literal "true" or "false") as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-156">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-156">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-157">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-157">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-158">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-158">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (ReadOnlySpan&lt;char&gt; propertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.ReadOnlySpan{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (propertyName As ReadOnlySpan(Of Char), value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(ReadOnlySpan&lt;char&gt; propertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : ReadOnlySpan&lt;char&gt; * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-159">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-159">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-160">Wartość do zapisania jako JSON literału "true" lub "fałsz", jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-160">The value to be written as a JSON literal "true" or "false" as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-161">Zapisuje określony jako zakres tylko do odczytu znaków nazwy właściwości i <see cref="T:System.Boolean" /> wartości (jako JSON literału "true" lub "false") jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-161">Writes a property name specified as a read-only character span and a <see cref="T:System.Boolean" /> value (as a JSON literal "true" or "false") as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-162">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-162">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-163">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-163">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-164">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-164">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (string propertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(string propertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (propertyName As String, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(System::String ^ propertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : string * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-165">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-165">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-166">Wartość do zapisania jako JSON literału "true" lub "fałsz", jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-166">The value to be written as a JSON literal "true" or "false" as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-167">Zapisuje określone jako ciąg nazwy właściwości i <see cref="T:System.Boolean" /> wartości (jako JSON literału "true" lub "false") jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-167">Writes a property name specified as a string and a <see cref="T:System.Boolean" /> value (as a JSON literal "true" or "false") as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-168">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-168">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-169">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-169">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-170">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-170">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBoolean">
      <MemberSignature Language="C#" Value="public void WriteBoolean (System.Text.Json.JsonEncodedText propertyName, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBoolean(valuetype System.Text.Json.JsonEncodedText propertyName, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBoolean(System.Text.Json.JsonEncodedText,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBoolean (propertyName As JsonEncodedText, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBoolean(System::Text::Json::JsonEncodedText propertyName, bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBoolean : System.Text.Json.JsonEncodedText * bool -&gt; unit" Usage="utf8JsonWriter.WriteBoolean (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBooleanValue">
      <MemberSignature Language="C#" Value="public void WriteBooleanValue (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBooleanValue(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteBooleanValue(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBooleanValue (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBooleanValue(bool value);" />
      <MemberSignature Language="F#" Value="member this.WriteBooleanValue : bool -&gt; unit" Usage="utf8JsonWriter.WriteBooleanValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-171">Wartość do zapisania jako JSON literału "true" lub "false" jako elementu tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-171">The value to be written as a JSON literal "true" or "false" as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-172">Zapisuje <see cref="T:System.Boolean" /> wartości (jako JSON literału "true" lub "false") jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-172">Writes a <see cref="T:System.Boolean" /> value (as a JSON literal "true" or "false") as an element of a JSON array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-173">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-173">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentValue">
      <MemberSignature Language="C#" Value="public void WriteCommentValue (ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCommentValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCommentValue (utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCommentValue(ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteCommentValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteCommentValue utf8Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8Value"><span data-ttu-id="1fdbd-174">Wartość do zapisania jako komentarz JSON w ramach zakodowany w UTF-8 /*...* /.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-174">The UTF-8 encoded value to be written as a JSON comment within /*..*/.</span></span></param>
        <summary><span data-ttu-id="1fdbd-175">Zapisuje wartości tekstowej UTF-8 jako komentarz JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-175">Writes a UTF-8 text value as a JSON comment.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-176">Wartość komentarza nie jest zmieniane, zanim.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-176">The comment value is not escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-177">Określona wartość jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-177">The specified value is too large.</span></span>
        
<span data-ttu-id="1fdbd-178">—lub—</span><span class="sxs-lookup"><span data-stu-id="1fdbd-178">-or-</span></span>

<span data-ttu-id="1fdbd-179"><paramref name="utf8Value" /> zawiera ogranicznik komentarza (czyli \* /).</span><span class="sxs-lookup"><span data-stu-id="1fdbd-179"><paramref name="utf8Value" /> contains a comment delimiter (i.e. \*/).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentValue">
      <MemberSignature Language="C#" Value="public void WriteCommentValue (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCommentValue(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCommentValue (value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCommentValue(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteCommentValue : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteCommentValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-180">UTF-16 zakodowanych wartości do zapisania jako transkodowane UTF-8 JSON komentarza, w ramach /*...* /.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-180">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON comment within /*..*/.</span></span></param>
        <summary><span data-ttu-id="1fdbd-181">Zapisuje wartości tekstowej UTF-16 jako komentarz JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-181">Writes a UTF-16 text value as a JSON comment.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-182">Wartość komentarza nie jest zmieniane, zanim.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-182">The comment value is not escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-183">Podana wartość jest za duży lub.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-183">The specified value is too large OR.</span></span>
        
<span data-ttu-id="1fdbd-184">—lub—</span><span class="sxs-lookup"><span data-stu-id="1fdbd-184">-or-</span></span>

<span data-ttu-id="1fdbd-185"><paramref name="value" /> zawiera ogranicznik komentarza (czyli \* /).</span><span class="sxs-lookup"><span data-stu-id="1fdbd-185"><paramref name="value" /> contains a comment delimiter (i.e. \*/).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCommentValue">
      <MemberSignature Language="C#" Value="public void WriteCommentValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteCommentValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteCommentValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteCommentValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteCommentValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteCommentValue : string -&gt; unit" Usage="utf8JsonWriter.WriteCommentValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-186">UTF-16 zakodowanych wartości do zapisania jako transkodowane UTF-8 JSON komentarza, w ramach /*...* /.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-186">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON comment within /*..*/.</span></span></param>
        <summary><span data-ttu-id="1fdbd-187">Zapisuje wartość ciągu tekstowego jako komentarz JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-187">Writes a string text value as a JSON comment.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-188">Wartość komentarza nie jest zmieniane, zanim.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-188">The comment value is not escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-189">Określona wartość jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-189">The specified value is too large.</span></span>
        
<span data-ttu-id="1fdbd-190">—lub—</span><span class="sxs-lookup"><span data-stu-id="1fdbd-190">-or-</span></span>

<span data-ttu-id="1fdbd-191"><paramref name="value" /> zawiera ogranicznik komentarza (czyli \* /).</span><span class="sxs-lookup"><span data-stu-id="1fdbd-191"><paramref name="value" /> contains a comment delimiter (i.e. \*/).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndArray">
      <MemberSignature Language="C#" Value="public void WriteEndArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEndArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteEndArray" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEndArray ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEndArray();" />
      <MemberSignature Language="F#" Value="member this.WriteEndArray : unit -&gt; unit" Usage="utf8JsonWriter.WriteEndArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fdbd-192">Zapisuje końca tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-192">Writes the end of a JSON array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-193">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-193">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndObject">
      <MemberSignature Language="C#" Value="public void WriteEndObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteEndObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteEndObject" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteEndObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteEndObject();" />
      <MemberSignature Language="F#" Value="member this.WriteEndObject : unit -&gt; unit" Usage="utf8JsonWriter.WriteEndObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fdbd-194">Zapisuje koniec obiekt JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-194">Writes the end of a JSON object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-195">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-195">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteNull utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-196">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-196">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <summary><span data-ttu-id="1fdbd-197">Zapisuje, nazwa właściwości określony jako tylko do odczytu zakres bajtów i JSON literału "null" jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-197">Writes a property name specified as a read-only span of bytes and the JSON literal "null" as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-198">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-198">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-199">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-199">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-200">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-200">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteNull propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-201">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-201">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="1fdbd-202">Zapisuje określony jako zakres znaków tylko do odczytu i JSON literału "null", jako część pary nazwa/wartość obiektu JSON nazwy właściwości.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-202">Writes a property name specified as a read-only character span and the JSON literal "null" as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-203">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-203">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-204">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-204">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-205">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-205">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : string -&gt; unit" Usage="utf8JsonWriter.WriteNull propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-206">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-206">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="1fdbd-207">Zapisuje, nazwa właściwości określony jako ciąg i JSON literału "null" jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-207">Writes a property name specified as a string and the JSON literal "null" as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[
          
<span data-ttu-id="1fdbd-208">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-208">The property name is escaped before writing.</span></span>
          
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-209">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-209">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-210">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-210">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNull">
      <MemberSignature Language="C#" Value="public void WriteNull (System.Text.Json.JsonEncodedText propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNull(valuetype System.Text.Json.JsonEncodedText propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNull(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNull (propertyName As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNull(System::Text::Json::JsonEncodedText propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteNull : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteNull propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNullValue">
      <MemberSignature Language="C#" Value="public void WriteNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNullValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNullValue();" />
      <MemberSignature Language="F#" Value="member this.WriteNullValue : unit -&gt; unit" Usage="utf8JsonWriter.WriteNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fdbd-211">Zapisuje dane JSON literału "null" jako elementu tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-211">Writes the JSON literal "null" as an element of a JSON array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-212">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-212">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-213">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-213">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-214">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-214">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-215">Zapisuje określony jako tylko do odczytu zakres bajtów nazwy właściwości i <see cref="T:System.Decimal" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-215">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-216">Zapisuje <xref:System.Decimal> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) 'G').</span><span class="sxs-lookup"><span data-stu-id="1fdbd-216">Writes the <xref:System.Decimal> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G').</span></span> <span data-ttu-id="1fdbd-217">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-217">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-218">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-218">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-219">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-219">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-220">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-220">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-221">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-221">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-222">Zapisuje określony jako tylko do odczytu zakres bajtów nazwy właściwości i <see cref="T:System.Double" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-222">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-223">Zapisuje <xref:System.Double> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) 'G').</span><span class="sxs-lookup"><span data-stu-id="1fdbd-223">Writes the <xref:System.Double> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G').</span></span> <span data-ttu-id="1fdbd-224">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-224">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-225">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-225">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-226">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-226">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-227">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-227">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-228">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-228">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-229">Zapisuje określony jako tylko do odczytu zakres bajtów nazwy właściwości i <see cref="T:System.Int32" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-229">Writes a property name specified as a read-only span of bytes and an <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-230">Zapisuje <xref:System.Int32> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) "G"), na przykład: 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-230">Writes the <xref:System.Int32> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G'), for example: 32767.</span></span> <span data-ttu-id="1fdbd-231">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-231">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-232">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-232">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-233">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-233">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-234">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-234">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-235">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-235">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-236">Zapisuje określony jako tylko do odczytu zakres bajtów nazwy właściwości i <see cref="T:System.Int64" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-236">Writes a property name specified as a read-only span of bytes and an <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-237">Zapisuje <xref:System.Int64> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) "G"), na przykład: 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-237">Writes the <xref:System.Int64> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G'), for example: 32767.</span></span> <span data-ttu-id="1fdbd-238">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-238">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-239">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-239">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-240">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-240">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-241">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-241">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-242">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-242">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-243">Zapisuje określony jako tylko do odczytu zakres bajtów nazwy właściwości i <see cref="T:System.Single" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-243">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-244">Zapisuje <xref:System.Single> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) 'G').</span><span class="sxs-lookup"><span data-stu-id="1fdbd-244">Writes the <xref:System.Single> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G').</span></span> <span data-ttu-id="1fdbd-245">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-245">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-246">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-246">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-247">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-247">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-248">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-248">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-249">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-249">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-250">Zapisuje określony jako tylko do odczytu zakres bajtów nazwy właściwości i <see cref="T:System.UInt32" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-250">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-251">Zapisuje <xref:System.UInt32> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) "G"), na przykład: 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-251">Writes the <xref:System.UInt32> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G'), for example: 32767.</span></span> <span data-ttu-id="1fdbd-252">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-252">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-253">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-253">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-254">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-254">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Byte},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (utf8PropertyName As ReadOnlySpan(Of Byte), value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;byte&gt; * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-255">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-255">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-256">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-256">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-257">Zapisuje określony jako tylko do odczytu zakres bajtów nazwy właściwości i <see cref="T:System.UInt64" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-257">Writes a property name specified as a read-only span of bytes and a <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-258">Zapisuje <xref:System.UInt64> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) "G"), na przykład: 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-258">Writes the <xref:System.UInt64> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G'), for example: 32767.</span></span> <span data-ttu-id="1fdbd-259">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-259">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-260">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-260">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-261">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-261">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-262">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-262">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-263">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-263">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-264">Zapisuje określony jako zakres tylko do odczytu znaków nazwy właściwości i <see cref="T:System.Decimal" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-264">Writes a property name specified as a read-only character span and a <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-265">Zapisuje <xref:System.Decimal> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) 'G').</span><span class="sxs-lookup"><span data-stu-id="1fdbd-265">Writes the <xref:System.Decimal> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G').</span></span> <span data-ttu-id="1fdbd-266">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-266">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-267">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-267">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-268">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-268">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-269">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-269">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-270">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-270">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-271">Zapisuje określony jako zakres tylko do odczytu znaków nazwy właściwości i <see cref="T:System.Double" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-271">Writes a property name specified as a read-only character span and a <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-272">Zapisuje <xref:System.Double> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) 'G').</span><span class="sxs-lookup"><span data-stu-id="1fdbd-272">Writes the <xref:System.Double> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G').</span></span> <span data-ttu-id="1fdbd-273">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-273">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-274">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-274">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-275">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-275">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-276">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-276">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-277">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-277">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-278">Zapisuje określony jako zakres tylko do odczytu znaków nazwy właściwości oraz element <see cref="T:System.Int32" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-278">Writes a property name specified as a read-only character span and an <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-279">Zapisuje <xref:System.Int32> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) "G"), na przykład: 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-279">Writes the <xref:System.Int32> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G'), for example: 32767.</span></span> <span data-ttu-id="1fdbd-280">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-280">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-281">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-281">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-282">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-282">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-283">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-283">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-284">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-284">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-285">Zapisuje określony jako zakres tylko do odczytu znaków nazwy właściwości oraz element <see cref="T:System.Int64" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-285">Writes a property name specified as a read-only character span and an <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-286">Zapisuje <xref:System.Int64> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) "G"), na przykład: 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-286">Writes the <xref:System.Int64> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G'), for example: 32767.</span></span> <span data-ttu-id="1fdbd-287">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-287">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-288">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-288">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-289">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-289">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-290">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-290">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-291">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-291">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-292">Zapisuje określony jako zakres tylko do odczytu znaków nazwy właściwości i <see cref="T:System.Single" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-292">Writes a property name specified as a read-only character span and a <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-293">Zapisuje <xref:System.Single> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) 'G').</span><span class="sxs-lookup"><span data-stu-id="1fdbd-293">Writes the <xref:System.Single> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G').</span></span> <span data-ttu-id="1fdbd-294">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-294">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-295">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-295">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-296">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-296">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-297">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-297">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-298">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-298">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-299">Zapisuje określony jako zakres tylko do odczytu znaków nazwy właściwości i <see cref="T:System.UInt32" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-299">Writes a property name specified as a read-only character span and a <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-300">Zapisuje <xref:System.UInt32> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) "G"), na przykład: 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-300">Writes the <xref:System.UInt32> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G'), for example: 32767.</span></span> <span data-ttu-id="1fdbd-301">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-301">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-302">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-302">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-303">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-303">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (ReadOnlySpan&lt;char&gt; propertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.ReadOnlySpan{System.Char},System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As ReadOnlySpan(Of Char), value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(ReadOnlySpan&lt;char&gt; propertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : ReadOnlySpan&lt;char&gt; * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-304">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-304">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-305">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-305">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-306">Zapisuje określony jako zakres tylko do odczytu znaków nazwy właściwości i <see cref="T:System.UInt64" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-306">Writes a property name specified as a read-only character span and a <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-307">Zapisuje <xref:System.UInt64> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) "G"), na przykład: 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-307">Writes the <xref:System.UInt64> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G'), for example: 32767.</span></span> <span data-ttu-id="1fdbd-308">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-308">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-309">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-309">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-310">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-310">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-311">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-311">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-312">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-312">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-313">Zapisuje określone jako ciąg nazwy właściwości i <see cref="T:System.Decimal" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-313">Writes a property name specified as a string and a <see cref="T:System.Decimal" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-314">Zapisuje <xref:System.Decimal> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) 'G').</span><span class="sxs-lookup"><span data-stu-id="1fdbd-314">Writes the <xref:System.Decimal> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G').</span></span> <span data-ttu-id="1fdbd-315">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-315">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-316">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-316">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-317">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-317">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-318">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-318">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-319">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-319">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-320">Zapisuje określone jako ciąg nazwy właściwości i <see cref="T:System.Double" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-320">Writes a property name specified as a string and a <see cref="T:System.Double" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-321">Zapisuje <xref:System.Double> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) 'G').</span><span class="sxs-lookup"><span data-stu-id="1fdbd-321">Writes the <xref:System.Double> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G').</span></span> <span data-ttu-id="1fdbd-322">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-322">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-323">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-323">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-324">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-324">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-325">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-325">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-326">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-326">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-327">Zapisuje określone jako ciąg nazwy właściwości oraz element <see cref="T:System.Int32" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-327">Writes a property name specified as a string and an <see cref="T:System.Int32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-328">Zapisuje <xref:System.Int32> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) "G"), na przykład: 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-328">Writes the <xref:System.Int32> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G'), for example: 32767.</span></span> <span data-ttu-id="1fdbd-329">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-329">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-330">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-330">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-331">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-331">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-332">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-332">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-333">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-333">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-334">Zapisuje określone jako ciąg nazwy właściwości oraz element <see cref="T:System.Int64" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-334">Writes a property name specified as a string and an <see cref="T:System.Int64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-335">Zapisuje <xref:System.Int64> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) "G"), na przykład: 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-335">Writes the <xref:System.Int64> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G'), for example: 32767.</span></span> <span data-ttu-id="1fdbd-336">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-336">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-337">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-337">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-338">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-338">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-339">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-339">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-340">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-340">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-341">Zapisuje określone jako ciąg nazwy właściwości i <see cref="T:System.Single" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-341">Writes a property name specified as a string and a <see cref="T:System.Single" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-342">Zapisuje <xref:System.Single> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) 'G').</span><span class="sxs-lookup"><span data-stu-id="1fdbd-342">Writes the <xref:System.Single> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G').</span></span> <span data-ttu-id="1fdbd-343">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-343">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-344">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-344">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-345">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-345">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-346">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-346">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-347">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-347">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-348">Zapisuje określone jako ciąg nazwy właściwości i <see cref="T:System.UInt32" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-348">Writes a property name specified as a string and a <see cref="T:System.UInt32" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-349">Zapisuje <xref:System.UInt32> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) "G"), na przykład: 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-349">Writes the <xref:System.UInt32> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G'), for example: 32767.</span></span> <span data-ttu-id="1fdbd-350">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-350">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-351">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-351">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-352">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-352">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (string propertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(string propertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.String,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As String, value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::String ^ propertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : string * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-353">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-353">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-354">Wartość do zapisania jako liczbę JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-354">The value to be written as a JSON number as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-355">Zapisuje określone jako ciąg nazwy właściwości i <see cref="T:System.UInt64" /> wartości (jako liczba JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-355">Writes a property name specified as a string and a <see cref="T:System.UInt64" /> value (as a JSON number) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-356">Zapisuje <xref:System.UInt64> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) "G"), na przykład: 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-356">Writes the <xref:System.UInt64> using the default <xref:System.Buffers.StandardFormat> (i.e. 'G'), for example: 32767.</span></span> <span data-ttu-id="1fdbd-357">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-357">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-358">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-358">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-359">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-359">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * double -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * int -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * single -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumber">
      <MemberSignature Language="C#" Value="public void WriteNumber (System.Text.Json.JsonEncodedText propertyName, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumber(valuetype System.Text.Json.JsonEncodedText propertyName, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumber(System.Text.Json.JsonEncodedText,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumber (propertyName As JsonEncodedText, value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumber(System::Text::Json::JsonEncodedText propertyName, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumber : System.Text.Json.JsonEncodedText * uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumber (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : decimal -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-360">Wartość do zapisania jako liczbę JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-360">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-361">Zapisuje <see cref="T:System.Decimal" /> wartości (jako liczba JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-361">Writes a <see cref="T:System.Decimal" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-362">Ta metoda zapisuje <xref:System.Decimal> wartości przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="1fdbd-362">This method writes the <xref:System.Decimal> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-363">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-363">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(double value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : double -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-364">Wartość do zapisania jako liczbę JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-364">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-365">Zapisuje <see cref="T:System.Double" /> wartości (jako liczba JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-365">Writes a <see cref="T:System.Double" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-366">Ta metoda zapisuje <xref:System.Double> wartości przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="1fdbd-366">This method writes the <xref:System.Double> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-367">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-367">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(int value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : int -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-368">Wartość do zapisania jako liczbę JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-368">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-369">Zapisuje <see cref="T:System.Int32" /> wartości (jako liczba JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-369">Writes an <see cref="T:System.Int32" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-370">Ta metoda zapisuje <xref:System.Int32> wartości przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="1fdbd-370">This method writes the <xref:System.Int32> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span> <span data-ttu-id="1fdbd-371">Na przykład 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-371">For example, 32767.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-372">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-372">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(long value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : int64 -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-373">Wartość do zapisania jako liczbę JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-373">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-374">Zapisuje <see cref="T:System.Int64" /> wartości (jako liczba JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-374">Writes an <see cref="T:System.Int64" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-375">Ta metoda zapisuje <xref:System.Int64> wartości przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="1fdbd-375">This method writes the <xref:System.Int64> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span> <span data-ttu-id="1fdbd-376">Na przykład 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-376">For example, 32767.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-377">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-377">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(float value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : single -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-378">Wartość do zapisania jako liczbę JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-378">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-379">Zapisuje <see cref="T:System.Single" /> wartości (jako liczba JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-379">Writes a <see cref="T:System.Single" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-380">Ta metoda zapisuje <xref:System.Single> wartości przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="1fdbd-380">This method writes the <xref:System.Single> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-381">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-381">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : uint32 -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-382">Wartość do zapisania jako liczbę JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-382">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-383">Zapisuje <see cref="T:System.UInt32" /> wartości (jako liczba JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-383">Writes a <see cref="T:System.UInt32" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-384">Ta metoda zapisuje <xref:System.UInt32> wartości przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="1fdbd-384">This method writes the <xref:System.UInt32> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span> <span data-ttu-id="1fdbd-385">Na przykład 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-385">For example, 32767.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-386">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-386">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNumberValue">
      <MemberSignature Language="C#" Value="public void WriteNumberValue (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteNumberValue(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteNumberValue(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteNumberValue (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteNumberValue(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.WriteNumberValue : uint64 -&gt; unit" Usage="utf8JsonWriter.WriteNumberValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-387">Wartość do zapisania jako liczbę JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-387">The value to be written as a JSON number as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-388">Zapisuje <see cref="T:System.UInt64" /> wartości (jako liczba JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-388">Writes a <see cref="T:System.UInt64" /> value (as a JSON number) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-389">Ta metoda zapisuje <xref:System.UInt64> wartości przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (czyli "G").</span><span class="sxs-lookup"><span data-stu-id="1fdbd-389">This method writes the <xref:System.UInt64> value using the default <xref:System.Buffers.StandardFormat> (that is, 'G').</span></span> <span data-ttu-id="1fdbd-390">Na przykład 32767.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-390">For example, 32767.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-391">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-391">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray();" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : unit -&gt; unit" Usage="utf8JsonWriter.WriteStartArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fdbd-392">Zapisuje początku tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-392">Writes the beginning of a JSON array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-393">Głębokość JSON przekracza maksymalną głębokość 1000.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-393">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="1fdbd-394">—lub—</span><span class="sxs-lookup"><span data-stu-id="1fdbd-394">-or-</span></span>

<span data-ttu-id="1fdbd-395">Weryfikacja jest włączona, a ta operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-395">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartArray utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-396">UTF-8 zakodowane nazwę właściwości tablicy JSON, który ma zostać zapisany.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-396">The UTF-8 encoded property name of the JSON array to be written.</span></span></param>
        <summary><span data-ttu-id="1fdbd-397">Zapisuje początku tablicę JSON o nazwie właściwość określona jako tylko do odczytu zakres bajtów jako klucz.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-397">Writes the beginning of a JSON array with a property name specified as a read-only span of bytes as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-398">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-398">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-399">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-399">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-400">Głębokość JSON przekracza maksymalną głębokość 1000.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-400">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="1fdbd-401">—lub—</span><span class="sxs-lookup"><span data-stu-id="1fdbd-401">-or-</span></span>
       
<span data-ttu-id="1fdbd-402">Weryfikacja jest włączona, a ta operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-402">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartArray propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-403">UTF-16 zakodowane Właściwość Nazwa tablicę JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-403">The UTF-16 encoded property name of the JSON array to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="1fdbd-404">Zapisuje początku tablicę JSON o nazwie właściwości, określony jako zakres znaków tylko do odczytu jako klucz.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-404">Writes the beginning of a JSON array with a property name specified as a read-only character span as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-405">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-405">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-406">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-406">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-407">Głębokość JSON przekracza maksymalną głębokość 1000.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-407">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="1fdbd-408">—lub—</span><span class="sxs-lookup"><span data-stu-id="1fdbd-408">-or-</span></span>
       
<span data-ttu-id="1fdbd-409">Weryfikacja jest włączona, a ta operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-409">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : string -&gt; unit" Usage="utf8JsonWriter.WriteStartArray propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-410">UTF-16 zakodowane Właściwość Nazwa tablicę JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-410">The UTF-16 encoded property name of the JSON array to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="1fdbd-411">Zapisuje początku tablicy JSON z użyciem nazwy właściwości określone w postaci ciągu jako klucz.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-411">Writes the beginning of a JSON array with a property name specified as a string as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-412">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-412">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-413">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-413">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-414">Głębokość JSON przekracza maksymalną głębokość 1000.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-414">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="1fdbd-415">—lub—</span><span class="sxs-lookup"><span data-stu-id="1fdbd-415">-or-</span></span>
       
<span data-ttu-id="1fdbd-416">Weryfikacja jest włączona, a ta operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-416">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartArray">
      <MemberSignature Language="C#" Value="public void WriteStartArray (System.Text.Json.JsonEncodedText propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartArray(valuetype System.Text.Json.JsonEncodedText propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartArray(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartArray (propertyName As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartArray(System::Text::Json::JsonEncodedText propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartArray : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteStartArray propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject();" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : unit -&gt; unit" Usage="utf8JsonWriter.WriteStartObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fdbd-417">Zapisuje początku obiekt JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-417">Writes the beginning of a JSON object.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-418">Głębokość JSON przekracza maksymalną głębokość 1000.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-418">The depth of the JSON exceeds the maximum depth of 1000.</span></span>

<span data-ttu-id="1fdbd-419">—lub—</span><span class="sxs-lookup"><span data-stu-id="1fdbd-419">-or-</span></span>

<span data-ttu-id="1fdbd-420">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-420">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (ReadOnlySpan&lt;byte&gt; utf8PropertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (utf8PropertyName As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartObject utf8PropertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-421">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-421">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <summary><span data-ttu-id="1fdbd-422">Zapisuje początku obiekt JSON z użyciem nazwy właściwości określony jako tylko do odczytu zakres bajtów jako klucz.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-422">Writes the beginning of a JSON object with a property name specified as a read-only span of bytes as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-423">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-423">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-424">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-424">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-425">Głębokość JSON przekracza maksymalną głębokość 1000.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-425">The depth of the JSON exceeds the maximum depth of 1000.</span></span> 

<span data-ttu-id="1fdbd-426">—lub—</span><span class="sxs-lookup"><span data-stu-id="1fdbd-426">-or-</span></span>
       
<span data-ttu-id="1fdbd-427">Weryfikacja jest włączona, a ta operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-427">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (propertyName As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(ReadOnlySpan&lt;char&gt; propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStartObject propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-428">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-428">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="1fdbd-429">Zapisuje początku obiekt JSON z specififed nazwy właściwości jako zakres znaków tylko do odczytu jako klucz.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-429">Writes the beginning of a JSON object with a property name specififed as a read-only character span as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-430">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-430">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-431">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-431">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-432">Głębokość JSON przekracza maksymalną głębokość 1000.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-432">The depth of the JSON exceeds the maximum depth of 1000.</span></span> 

<span data-ttu-id="1fdbd-433">—lub—</span><span class="sxs-lookup"><span data-stu-id="1fdbd-433">-or-</span></span>
       
<span data-ttu-id="1fdbd-434">Weryfikacja jest włączona, a ta operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-434">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : string -&gt; unit" Usage="utf8JsonWriter.WriteStartObject propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-435">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-435">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <summary><span data-ttu-id="1fdbd-436">Zapisuje początku obiekt JSON z użyciem nazwy właściwości określone w postaci ciągu jako klucz.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-436">Writes the beginning of a JSON object with a property name specified as a string as the key.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-437">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-437">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-438">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-438">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-439">Głębokość JSON przekracza maksymalną głębokość 1000.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-439">The depth of the JSON exceeds the maximum depth of 1000.</span></span> 

<span data-ttu-id="1fdbd-440">—lub—</span><span class="sxs-lookup"><span data-stu-id="1fdbd-440">-or-</span></span>
       
<span data-ttu-id="1fdbd-441">Weryfikacja jest włączona, a ta operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-441">Validation is enabled, and this write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartObject">
      <MemberSignature Language="C#" Value="public void WriteStartObject (System.Text.Json.JsonEncodedText propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartObject(valuetype System.Text.Json.JsonEncodedText propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStartObject(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartObject (propertyName As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartObject(System::Text::Json::JsonEncodedText propertyName);" />
      <MemberSignature Language="F#" Value="member this.WriteStartObject : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteStartObject propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-442">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-442">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-443">Wartość do zapisania jako ciągu JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-443">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-444">Zapisuje nazwę właściwości UTF-8 a <see cref="T:System.DateTime" /> wartości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-444">Writes a UTF-8 property name and a <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-445">Zapisuje <xref:System.DateTime> przy użyciu wysyłanych ('O') <xref:System.Buffers.StandardFormat>.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-445">Writes the <xref:System.DateTime> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>.</span></span> <span data-ttu-id="1fdbd-446">Na przykład 2017-06-12T05:30:45.7680000.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-446">For example, 2017-06-12T05:30:45.7680000.</span></span> <span data-ttu-id="1fdbd-447">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-447">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-448">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-448">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-449">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-449">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-450">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-450">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-451">Wartość do zapisania jako ciągu JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-451">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-452">Zapisuje nazwę właściwości UTF-8 a <see cref="T:System.DateTimeOffset" /> wartości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-452">Writes a UTF-8 property name and a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-453">Zapisuje <xref:System.DateTimeOffset> przy użyciu wysyłanych ('O') <xref:System.Buffers.StandardFormat> , na przykład: 2017-06-12T05:30:45.7680000-07:00.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-453">Writes the <xref:System.DateTimeOffset> using the round-trippable ('O') <xref:System.Buffers.StandardFormat> , for example: 2017-06-12T05:30:45.7680000-07:00.</span></span> <span data-ttu-id="1fdbd-454">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-454">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-455">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-455">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-456">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-456">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-457">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-457">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-458">Wartość do zapisania jako ciągu JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-458">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-459">Zapisuje nazwę właściwości UTF-8 a <see cref="T:System.Guid" /> wartości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-459">Writes a UTF-8 property name and a <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-460">Zapisuje <xref:System.Guid> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) Gdyby "), jak formularz: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-460">Writes the <xref:System.Guid> using the default <xref:System.Buffers.StandardFormat> (i.e. 'D'), as the form: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span></span> <span data-ttu-id="1fdbd-461">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-461">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-462">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-462">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-463">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-463">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-464">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-464">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="utf8Value"><span data-ttu-id="1fdbd-465">UTF-8 zakodowana wartość do zapisania jako ciągu JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-465">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-466">Zapisuje nazwy właściwości UTF-8 i UTF-8 wartości tekstowej (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-466">Writes a UTF-8 property name and UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-467">Nazwa właściwości i wartości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-467">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-468">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-468">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-469">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-469">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-470">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-470">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-471">Wartość do zapisania jako transkodowane UTF-8 ciągu JSON jako część pary nazwa/wartość kodowany w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-471">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-472">Zapisuje nazwy właściwości UTF-8 i UTF-16 wartości tekstowej (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-472">Writes a UTF-8 property name and UTF-16 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-473">Nazwa właściwości i wartości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-473">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-474">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-474">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-475">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-475">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * string -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName"><span data-ttu-id="1fdbd-476">UTF-8 zakodowane nazwy właściwości JSON obiektu do zapisania.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-476">The UTF-8 encoded property name of the JSON object to be written.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-477">Wartość do zapisania jako transkodowane UTF-8 ciągu JSON jako część pary nazwa/wartość kodowany w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-477">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-478">Zapisuje UTF-8 nazwy i ciąg tekstu wartość właściwości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-478">Writes a UTF-8 property name and string text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-479">Nazwa właściwości i wartości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-479">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-480">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-480">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-481">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-481">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;byte&gt; utf8PropertyName, System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8PropertyName, valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (utf8PropertyName As ReadOnlySpan(Of Byte), value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;System::Byte&gt; utf8PropertyName, System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;byte&gt; * System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteString (utf8PropertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8PropertyName" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="utf8PropertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-482">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-482">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-483">Wartość do zapisania jako ciągu JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-483">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-484">Zapisuje określony jako zakres tylko do odczytu znaków nazwy właściwości i <see cref="T:System.DateTime" /> wartości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-484">Writes a property name specified as a read-only character span and a <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-485">Zapisuje <xref:System.DateTime> przy użyciu wysyłanych ('O') <xref:System.Buffers.StandardFormat> , na przykład: 2017-06-12T05:30:45.7680000.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-485">Writes the <xref:System.DateTime> using the round-trippable ('O') <xref:System.Buffers.StandardFormat> , for example: 2017-06-12T05:30:45.7680000.</span></span> <span data-ttu-id="1fdbd-486">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-486">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-487">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-487">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-488">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-488">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-489">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-489">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-490">Wartość do zapisania jako ciągu JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-490">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-491">Zapisuje określony jako zakres tylko do odczytu znaków nazwy właściwości i <see cref="T:System.DateTimeOffset" /> wartości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-491">Writes a property name specified as a read-only character span and a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-492">Zapisuje <xref:System.DateTimeOffset> przy użyciu wysyłanych ('O') <xref:System.Buffers.StandardFormat> , na przykład: 2017-06-12T05:30:45.7680000-07:00.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-492">Writes the <xref:System.DateTimeOffset> using the round-trippable ('O') <xref:System.Buffers.StandardFormat> , for example: 2017-06-12T05:30:45.7680000-07:00.</span></span> <span data-ttu-id="1fdbd-493">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-493">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-494">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-494">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-495">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-495">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-496">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-496">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-497">Wartość do zapisania jako ciągu JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-497">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-498">Zapisuje określony jako zakres tylko do odczytu znaków nazwy właściwości i <see cref="T:System.Guid" /> wartości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-498">Writes a property name specified as a read-only character span and a <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-499">Zapisuje <xref:System.Guid> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) Gdyby "), jak formularz: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-499">Writes the <xref:System.Guid> using the default <xref:System.Buffers.StandardFormat> (i.e. 'D'), as the form: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span></span> <span data-ttu-id="1fdbd-500">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-500">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-501">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-501">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-502">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-502">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-503">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-503">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="utf8Value"><span data-ttu-id="1fdbd-504">UTF-8 zakodowana wartość do zapisania jako ciągu JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-504">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-505">Zapisuje nazwy właściwości UTF-16 i UTF-8 wartości tekstowej (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-505">Writes a UTF-16 property name and UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-506">Nazwa właściwości i wartości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-506">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-507">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-507">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-508">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-508">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-509">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-509">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-510">Wartość do zapisania jako transkodowane UTF-8 ciągu JSON jako część pary nazwa/wartość kodowany w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-510">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-511">Zapisuje nazwy właściwości UTF-16 i UTF-16 wartości tekstowej (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-511">Writes a UTF-16 property name and UTF-16 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-512">Nazwa właściwości i wartości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-512">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-513">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-513">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-514">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-514">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * string -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-515">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-515">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-516">Wartość do zapisania jako transkodowane UTF-8 ciągu JSON jako część pary nazwa/wartość kodowany w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-516">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-517">Zapisuje UTF-16 nazwy i ciąg tekstu wartość właściwości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-517">Writes a UTF-16 property name and string text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-518">Nazwa właściwości i wartości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-518">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-519">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-519">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-520">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-520">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (ReadOnlySpan&lt;char&gt; propertyName, System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.ReadOnlySpan`1&lt;char&gt; propertyName, valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.ReadOnlySpan{System.Char},System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As ReadOnlySpan(Of Char), value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(ReadOnlySpan&lt;char&gt; propertyName, System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : ReadOnlySpan&lt;char&gt; * System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-521">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-521">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-522">Wartość do zapisania jako ciągu JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-522">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-523">Zapisuje określone jako ciąg nazwy właściwości i <see cref="T:System.DateTime" /> wartości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-523">Writes a property name specified as a string and a <see cref="T:System.DateTime" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-524">Zapisuje <xref:System.DateTime> przy użyciu wysyłanych ('O') <xref:System.Buffers.StandardFormat> , na przykład: 2017-06-12T05:30:45.7680000.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-524">Writes the <xref:System.DateTime> using the round-trippable ('O') <xref:System.Buffers.StandardFormat> , for example: 2017-06-12T05:30:45.7680000.</span></span> <span data-ttu-id="1fdbd-525">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-525">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-526">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-526">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-527">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-527">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-528">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-528">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-529">Wartość do zapisania jako ciągu JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-529">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-530">Zapisuje określone jako ciąg nazwy właściwości i <see cref="T:System.DateTimeOffset" /> wartości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-530">Writes a property name specified as a string and a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-531">Zapisuje <xref:System.DateTimeOffset> przy użyciu wysyłanych ('O') <xref:System.Buffers.StandardFormat> , na przykład: 2017-06-12T05:30:45.7680000-07:00.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-531">Writes the <xref:System.DateTimeOffset> using the round-trippable ('O') <xref:System.Buffers.StandardFormat> , for example: 2017-06-12T05:30:45.7680000-07:00.</span></span> <span data-ttu-id="1fdbd-532">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-532">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-533">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-533">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-534">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-534">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-535">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-535">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-536">Wartość do zapisania jako ciągu JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-536">The value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-537">Zapisuje określone jako ciąg nazwy właściwości i <see cref="T:System.Guid" /> wartości (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-537">Writes a property name specified as a string and a <see cref="T:System.Guid" /> value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-538">Zapisuje <xref:System.Guid> przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (tj.) Gdyby "), jak formularz: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-538">Writes the <xref:System.Guid> using the default <xref:System.Buffers.StandardFormat> (i.e. 'D'), as the form: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span></span> <span data-ttu-id="1fdbd-539">Nazwa właściwości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-539">The property name is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-540">Określona nazwa właściwości jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-540">The specified property name is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-541">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-541">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-542">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-542">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="utf8Value"><span data-ttu-id="1fdbd-543">UTF-8 zakodowana wartość do zapisania jako ciągu JSON jako część pary nazwa/wartość.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-543">The UTF-8 encoded value to be written as a JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-544">Zapisuje określony jako ciąg i wartości tekstowej UTF-8 (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON nazwy właściwości.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-544">Writes a property name specified as a string and a UTF-8 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-545">Nazwa właściwości i wartości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-545">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-546">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-546">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-547">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-547">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-548">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-548">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-549">Wartość do zapisania jako transkodowane UTF-8 ciągu JSON jako część pary nazwa/wartość kodowany w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-549">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-550">Zapisuje określony jako ciąg i wartości tekstowej UTF-16 (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON nazwy właściwości.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-550">Writes a property name specified as a string and a UTF-16 text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-551">Nazwa właściwości i wartości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-551">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-552">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-552">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-553">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-553">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * string -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="1fdbd-554">UTF-16 zakodowane Właściwość Nazwa obiektu JSON do transkodowania i zapis jako UTF-8.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-554">The UTF-16 encoded property name of the JSON object to be transcoded and written as UTF-8.</span></span></param>
        <param name="value"><span data-ttu-id="1fdbd-555">Wartość do zapisania jako transkodowane UTF-8 ciągu JSON jako część pary nazwa/wartość kodowany w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-555">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string as part of the name/value pair.</span></span></param>
        <summary><span data-ttu-id="1fdbd-556">Zapisuje nazwę właściwości, określony jako ciągu i wartość ciągu tekstowego (jako ciąg JSON) jako część pary nazwa/wartość obiektu JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-556">Writes a property name specified as a string and a string text value (as a JSON string) as part of a name/value pair of a JSON object.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-557">Nazwa właściwości i wartości jest poprzedzone znakiem zmiany znaczenia przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-557">The property name and value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-558">Określona nazwa właściwości lub wartość jest zbyt duża.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-558">The specified property name or value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-559">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-559">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (string propertyName, System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(string propertyName, valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.String,System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As String, value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::String ^ propertyName, System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : string * System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * DateTime -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * Guid -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, utf8Value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="utf8Value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * string -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public void WriteString (System.Text.Json.JsonEncodedText propertyName, System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteString(valuetype System.Text.Json.JsonEncodedText propertyName, valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteString(System.Text.Json.JsonEncodedText,System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteString (propertyName As JsonEncodedText, value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteString(System::Text::Json::JsonEncodedText propertyName, System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteString : System.Text.Json.JsonEncodedText * System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.Text.Json.JsonEncodedText" />
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(DateTime value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : DateTime -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-560">Wartość do zapisania jako ciągu JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-560">The value to be written as a JSON string as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-561">Zapisuje <see cref="T:System.DateTime" /> wartości (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-561">Writes a <see cref="T:System.DateTime" /> value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-562">Ta metoda zapisuje <xref:System.DateTime> przy użyciu wysyłanych ('O') <xref:System.Buffers.StandardFormat>.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-562">This method writes the <xref:System.DateTime> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>.</span></span> <span data-ttu-id="1fdbd-563">Na przykład 2017-06-12T05:30:45.7680000.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-563">For example, 2017-06-12T05:30:45.7680000.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-564">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-564">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As DateTimeOffset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : DateTimeOffset -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-565">Wartość do zapisania jako ciągu JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-565">The value to be written as a JSON string as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-566">Zapisuje <see cref="T:System.DateTimeOffset" /> wartości (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-566">Writes a <see cref="T:System.DateTimeOffset" /> value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-567">Ta metoda zapisuje <xref:System.DateTimeOffset> przy użyciu wysyłanych ('O') <xref:System.Buffers.StandardFormat>.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-567">This method writes the <xref:System.DateTimeOffset> using the round-trippable ('O') <xref:System.Buffers.StandardFormat>.</span></span> <span data-ttu-id="1fdbd-568">Na przykład 2017-06-12T05:30:45.7680000-07:00.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-568">For example, 2017-06-12T05:30:45.7680000-07:00.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-569">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-569">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(Guid value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : Guid -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-570">Wartość do zapisania jako ciągu JSON jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-570">The value to be written as a JSON string as an element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-571">Zapisuje <see cref="T:System.Guid" /> wartości (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-571">Writes a <see cref="T:System.Guid" /> value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[  

<span data-ttu-id="1fdbd-572">Zapisuje tę metodę <xref:System.Guid> wartości przy użyciu domyślnego <xref:System.Buffers.StandardFormat> (oznacza to, miał "), jak formularz: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-572">This method writes the <xref:System.Guid> value using the default <xref:System.Buffers.StandardFormat> (that is, 'D'), as the form: nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-573">Włączono weryfikację, a operacja mogłoby spowodować zapisywanie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-573">Validation is enabled, and the operation would result in writing invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (ReadOnlySpan&lt;byte&gt; utf8Value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (utf8Value As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(ReadOnlySpan&lt;System::Byte&gt; utf8Value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStringValue utf8Value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="utf8Value"><span data-ttu-id="1fdbd-574">UTF-8 zakodowana wartość ma zostać zapisany jako element ciągu JSON w tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-574">The UTF-8 encoded value to be written as a JSON string element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-575">Zapisuje wartość tekstową UTF-8 (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-575">Writes a UTF-8 text value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-576">Wartość została zmieniona przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-576">The value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-577">Określona wartość jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-577">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-578">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-578">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-579">Wartość do zapisania jako element ciągu UTF-8 transkodowane JSON w tablicy JSON kodowany w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-579">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-580">Zapisuje wartość tekstową UTF-16 (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-580">Writes a UTF-16 text value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-581">Wartość została zmieniona przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-581">The value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-582">Określona wartość jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-582">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-583">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-583">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : string -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1fdbd-584">Wartość do zapisania jako element ciągu UTF-8 transkodowane JSON w tablicy JSON kodowany w formacie UTF-16.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-584">The UTF-16 encoded value to be written as a UTF-8 transcoded JSON string element of a JSON array.</span></span></param>
        <summary><span data-ttu-id="1fdbd-585">Zapisuje ciąg wartości tekstowej (jako ciąg JSON) jako element tablicy JSON.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-585">Writes a string text value (as a JSON string) as an element of a JSON array.</span></span></summary>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="1fdbd-586">Wartość została zmieniona przed zapisu.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-586">The value is escaped before writing.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1fdbd-587">Określona wartość jest zbyt duży.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-587">The specified value is too large.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fdbd-588">Włączono weryfikację, a operacja zapisu dałby w efekcie obiekt JSON jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="1fdbd-588">Validation is enabled, and the write operation would produce invalid JSON.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStringValue">
      <MemberSignature Language="C#" Value="public void WriteStringValue (System.Text.Json.JsonEncodedText value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStringValue(valuetype System.Text.Json.JsonEncodedText value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.Utf8JsonWriter.WriteStringValue(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStringValue (value As JsonEncodedText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStringValue(System::Text::Json::JsonEncodedText value);" />
      <MemberSignature Language="F#" Value="member this.WriteStringValue : System.Text.Json.JsonEncodedText -&gt; unit" Usage="utf8JsonWriter.WriteStringValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>