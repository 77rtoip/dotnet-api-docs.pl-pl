<Type Name="FreezableCollection&lt;T&gt;" FullName="System.Windows.FreezableCollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2e048a4b30d5bdeda6c34018bbb5231b91a0d8ec" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444598" /></Metadata><TypeSignature Language="C#" Value="public class FreezableCollection&lt;T&gt; : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged where T : DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FreezableCollection`1&lt;(class System.Windows.DependencyObject) T&gt; extends System.Windows.Media.Animation.Animatable implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FreezableCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class FreezableCollection(Of T)&#xA;Inherits Animatable&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), INotifyCollectionChanged, INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : DependencyObjectpublic ref class FreezableCollection : System::Windows::Media::Animation::Animatable, System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList, System::Collections::Specialized::INotifyCollectionChanged, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type FreezableCollection&lt;'T (requires 'T :&gt; DependencyObject)&gt; = class&#xA;    inherit Animatable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface ICollection&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface seq&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface INotifyCollectionChanged&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="db7f9-101">Typ kolekcji.</span><span class="sxs-lookup"><span data-stu-id="db7f9-101">The type of collection.</span></span> <span data-ttu-id="db7f9-102">Ten typ musi być <see cref="T:System.Windows.DependencyObject" /> klasą lub klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="db7f9-102">This type must be a <see cref="T:System.Windows.DependencyObject" /> or a derived class.</span></span></typeparam>
    <summary><span data-ttu-id="db7f9-103">Reprezentuje kolekcję <see cref="T:System.Windows.DependencyObject" />obiektów, <see cref="T:System.Windows.Freezable" />lub <see cref="T:System.Windows.Media.Animation.Animatable" /> .</span><span class="sxs-lookup"><span data-stu-id="db7f9-103">Represents a collection of <see cref="T:System.Windows.DependencyObject" />, <see cref="T:System.Windows.Freezable" />, or <see cref="T:System.Windows.Media.Animation.Animatable" /> objects.</span></span> <span data-ttu-id="db7f9-104"><see cref="T:System.Windows.FreezableCollection`1" />jest własnym <see cref="T:System.Windows.Media.Animation.Animatable" /> typem.</span><span class="sxs-lookup"><span data-stu-id="db7f9-104"><see cref="T:System.Windows.FreezableCollection`1" /> is itself an <see cref="T:System.Windows.Media.Animation.Animatable" /> type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-105">Ta klasa jest dostarczana, aby umożliwić tworzenie niestandardowych typów kolekcji, które w pełni obsługują powiązanie danych, powiadomienia o zmianach, unieważnienie właściwości i animację jego zawartości.</span><span class="sxs-lookup"><span data-stu-id="db7f9-105">This class is provided to enable the creation of custom collection types that fully support data binding, change notification, property invalidation, and animation of its contents.</span></span>  
  
### <a name="xaml-usage-for-freezablecollection"></a><span data-ttu-id="db7f9-106">Użycie XAML dla FreezableCollection</span><span class="sxs-lookup"><span data-stu-id="db7f9-106">XAML Usage for FreezableCollection</span></span>  
 <span data-ttu-id="db7f9-107"><xref:System.Windows.FreezableCollection%601>obsługuje ograniczoną [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] składnię.</span><span class="sxs-lookup"><span data-stu-id="db7f9-107"><xref:System.Windows.FreezableCollection%601> supports a limited [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span>  
  
-   <span data-ttu-id="db7f9-108">Jako element obiektu w katalogu głównym, można teoretycznie określić nieograniczonego <xref:System.Windows.FreezableCollection%601> elementu obiektu, który musi również określać [dyrektywę x:TypeArguments —](~/docs/framework/xaml-services/x-typearguments-directive.md) , aby zadeklarować ograniczenie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-108">As an object element at the root, you can theoretically specify an unconstrained <xref:System.Windows.FreezableCollection%601> object element, which must also specify the [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) to declare the constraint.</span></span> <span data-ttu-id="db7f9-109">Nie jest to jednak typowy scenariusz, dlatego <xref:System.Windows.FreezableCollection%601> musi być elementem głównym elementu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-109">However, this is not a common scenario, because to do this, the <xref:System.Windows.FreezableCollection%601> must be the root element.</span></span> <span data-ttu-id="db7f9-110">To ograniczenie istnieje, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ponieważ implementacja procesora w programie [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] może obsługiwać tylko [dyrektywę x:TypeArguments —](~/docs/framework/xaml-services/x-typearguments-directive.md) , gdy element, w którym jest ustawiana, jest elementem głównym, a użytkownik musi użyć dowolnego typu Open ograniczenia ogólnego, jeśli chcesz Tworzenie wystąpienia typu ogólnego w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="db7f9-110">This limitation exists because the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor implementation in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can only support [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) when the element it is being set on is the root element, and you must use  on any open constraint generic if you want to instantiate a generic type in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="db7f9-111">Jest mało prawdopodobne, że element ma <xref:System.Windows.FreezableCollection%601> być elementem głównym, nawet jako luźny [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="db7f9-111">It is unlikely that you want a <xref:System.Windows.FreezableCollection%601> as the root element, even as loose [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
-   <span data-ttu-id="db7f9-112">Jeśli użytkownik dziedziczy z <xref:System.Windows.FreezableCollection%601> i zastosuje ograniczenie typu w kolekcji pochodnej, kolekcja pochodna może obsługiwać różne użycia.</span><span class="sxs-lookup"><span data-stu-id="db7f9-112">If you derive from <xref:System.Windows.FreezableCollection%601> and apply a type constraint in the derived collection, the derived collection can support a variety of usages.</span></span> <span data-ttu-id="db7f9-113">Jest to możliwe, ponieważ ograniczenie w wyprowadzenia wyprowadzania eliminuje konieczność przekazania.</span><span class="sxs-lookup"><span data-stu-id="db7f9-113">This is possible because the constraint in your derivation eliminates the need to pass .</span></span>  
  
    -   <span data-ttu-id="db7f9-114">Typowym [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] użyciem tej kolekcji pochodnej jest niejawna składnia kolekcji.</span><span class="sxs-lookup"><span data-stu-id="db7f9-114">The typical [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage for such a derived collection is through implicit collection syntax.</span></span> <span data-ttu-id="db7f9-115">Kolekcje obsługujące określone interfejsy nie muszą określać samej kolekcji jako elementu obiektu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-115">Collections that support certain interfaces do not need to specify the collection itself as an object element.</span></span> <span data-ttu-id="db7f9-116">Aby uzyskać szczegółowe informacje na temat [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]składni kolekcji w, zobacz [Szczegóły składni języka XAML](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="db7f9-116">For details on collection syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span> <span data-ttu-id="db7f9-117">Na przykład *obiekt* z właściwością, \*\* w której *Właściwość* jest typu <xref:System.Windows.FreezableCollection%601> ograniczonego przez <xref:System.Windows.DependencyObject> może obsługiwać następującą składnię:</span><span class="sxs-lookup"><span data-stu-id="db7f9-117">For instance, an *object* with a *property* where the *property* was of type <xref:System.Windows.FreezableCollection%601> constrained by <xref:System.Windows.DependencyObject> could support the following syntax:</span></span>  
  
        ```  
        <object>  
          <object.property>  
            oneOrMoreDependencyObjectElements  
          </object.property>  
        </object>  
        ```  
  
    -   <span data-ttu-id="db7f9-118">Dopóki nie ukryjesz konstruktora bez parametrów, kolekcja pochodna może również obsługiwać składnię elementu obiektu (gdzie element obiektu jest jawny, w przeciwieństwie do niejawnego użycia pokazanego powyżej).</span><span class="sxs-lookup"><span data-stu-id="db7f9-118">As long as you do not hide the parameterless constructor, the derived collection can also support an object element syntax (where the object element is explicit, as opposed to the implicit usage shown above).</span></span> <span data-ttu-id="db7f9-119">Nie musi to być element główny.</span><span class="sxs-lookup"><span data-stu-id="db7f9-119">It does not need to be the root element.</span></span> <span data-ttu-id="db7f9-120">Lub można również użyć kolekcji pochodnej jako elementu głównego, bez konieczności określania, Chociaż użycie kolekcji jako elementu głównego jest nietypowe.</span><span class="sxs-lookup"><span data-stu-id="db7f9-120">Or, you can also use the derived collection as a root element, without needing to specify , although using a collection as a root element is uncommon.</span></span>  
  
-   <span data-ttu-id="db7f9-121">Wszystkie elementy podrzędne kolekcji w każdym z powyższych scenariuszy muszą być typu ograniczenia implementowanego lub określone przez.</span><span class="sxs-lookup"><span data-stu-id="db7f9-121">Any child elements of the collection in either of the above scenarios must be of the type of either the implemented constraint, or as specified by .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db7f9-122">Inicjuje nowe wystąpienie <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-122">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db7f9-123">Inicjuje nowe wystąpienie <see cref="T:System.Windows.FreezableCollection`1" /> , które jest puste i ma domyślną pojemność początkową.</span><span class="sxs-lookup"><span data-stu-id="db7f9-123">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the default initial capacity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; : seq&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="db7f9-124">Kolekcja, której elementy należy dodać do nowego <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-124">The collection whose items should be added to the new <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="db7f9-125">Inicjuje nowe wystąpienie <see cref="T:System.Windows.FreezableCollection`1" /> klasy, która zawiera te same elementy co określona kolekcja.</span><span class="sxs-lookup"><span data-stu-id="db7f9-125">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> class that contains the same elements as the specified collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-126">Ta operacja wykonuje kopię skróconą w określonej kolekcji; tylko odwołania do elementów kolekcji są kopiowane, same elementy nie są klonowane.</span><span class="sxs-lookup"><span data-stu-id="db7f9-126">This operation performs a shallow copy on the specified collection; only references to the collection's elements are copied, the elements themselves are not cloned.</span></span> <span data-ttu-id="db7f9-127">Modyfikowanie elementu nowego <xref:System.Windows.FreezableCollection%601> powoduje także modyfikację tego `collection`elementu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-127">Modifying an element of the new <xref:System.Windows.FreezableCollection%601> also modifies that element for `collection`.</span></span>  
  
 <span data-ttu-id="db7f9-128">Elementy są umieszczane w nowym <xref:System.Windows.FreezableCollection%601> w takiej samej kolejności, w jakiej są odczytywane przez moduł wyliczający określonej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="db7f9-128">The elements are placed in the new <xref:System.Windows.FreezableCollection%601> in the same order they are read by the enumerator of the specified collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db7f9-129"><paramref name="collection" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-129"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; : int -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="db7f9-130">Wartość, która jest większa lub równa 0, która określa liczbę elementów, które mogą być początkowo przechowywane w nowej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="db7f9-130">A value that is greater than or equal to 0 that specifies the number of elements the new collection can initially store.</span></span></param>
        <summary><span data-ttu-id="db7f9-131">Inicjuje nowe wystąpienie <see cref="T:System.Windows.FreezableCollection`1" /> , które jest puste i ma określoną pojemność początkową.</span><span class="sxs-lookup"><span data-stu-id="db7f9-131">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the specified initial capacity.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="db7f9-132"><paramref name="capacity" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="db7f9-132"><paramref name="capacity" /> is less than 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T value);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="freezableCollection.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="db7f9-133">Obiekt, który ma zostać dodany na końcu <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-133">The object to be added to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span> <span data-ttu-id="db7f9-134">Ta wartość nie może <see langword="null" />być.</span><span class="sxs-lookup"><span data-stu-id="db7f9-134">This value cannot be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="db7f9-135">Dodaje określony obiekt na końcu <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-135">Adds the specified object to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db7f9-136"><paramref name="value" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-136"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="db7f9-137">Jest zamrożony ( <see cref="P:System.Windows.Freezable.IsFrozen" /> jej właściwość <see langword="true" />to). <see cref="T:System.Windows.FreezableCollection`1" /></span><span class="sxs-lookup"><span data-stu-id="db7f9-137">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="freezableCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db7f9-138">Usuwa wszystkie elementy z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="db7f9-138">Removes all elements from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt; Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FreezableCollection`1&lt;!T&gt; Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As FreezableCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt; ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="freezableCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db7f9-139">Tworzy modyfikowalny klon tej <see cref="T:System.Windows.FreezableCollection`1" /> i jej zawartości, tworząc kopie głębokie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-139">Creates a modifiable clone of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies.</span></span> <span data-ttu-id="db7f9-140">Jeśli ta kolekcja (lub jej zawartość) ma animowane właściwości zależności, wartość podstawowa właściwości jest kopiowana, a nie jej bieżąca wartość animowana.</span><span class="sxs-lookup"><span data-stu-id="db7f9-140">If this collection (or its contents) has animated dependency properties, the property's base value is copied, not its current animated value.</span></span></summary>
        <returns><span data-ttu-id="db7f9-141">Modyfikowalna kopia tej kolekcji i jej zawartość.</span><span class="sxs-lookup"><span data-stu-id="db7f9-141">A modifiable copy of this collection and its contents.</span></span> <span data-ttu-id="db7f9-142"><see cref="P:System.Windows.Freezable.IsFrozen" /> Wartość kopii jest <see langword="false" />równa.</span><span class="sxs-lookup"><span data-stu-id="db7f9-142">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> value is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-143">Ta metoda przesłania metodę dziedziczonej <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=nameWithType> silnie wpisaną implementacją dla wygody.</span><span class="sxs-lookup"><span data-stu-id="db7f9-143">This method shadows the inherited <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=nameWithType> method with a strongly typed implementation for convenience.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.CloneCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="db7f9-144"><see cref="T:System.Windows.FreezableCollection`1" /> Do kopiowania.</span><span class="sxs-lookup"><span data-stu-id="db7f9-144">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span></span></param>
        <summary><span data-ttu-id="db7f9-145">Sprawia, że to wystąpienie jest klonem (głębokiej kopii <see cref="T:System.Windows.FreezableCollection`1" /> ) dla określonych wartości właściwości Base (Nieanimowane).</span><span class="sxs-lookup"><span data-stu-id="db7f9-145">Makes this instance a clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-146">Ta metoda jest wywoływana przez <xref:System.Windows.FreezableCollection%601.Clone%2A> metodę i nie powinna być wywoływana bezpośrednio z kodu, chyba że podczas wywoływania implementacji podstawowej podczas zastępowania tej metody.</span><span class="sxs-lookup"><span data-stu-id="db7f9-146">This method is called by the <xref:System.Windows.FreezableCollection%601.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="db7f9-147">Aby utworzyć modyfikowalną kopię bieżącego obiektu, wywołaj <xref:System.Windows.FreezableCollection%601.Clone%2A> zamiast wywołania tej metody bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="db7f9-147">To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.Clone%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="db7f9-148">Zobacz stronę <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> , aby uzyskać informacje o tym, kiedy należy zastąpić tę metodę.</span><span class="sxs-lookup"><span data-stu-id="db7f9-148">See the <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> page for information about when you should override this method.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt; CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FreezableCollection`1&lt;!T&gt; CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As FreezableCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt; ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="freezableCollection.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db7f9-149">Tworzy modyfikowalną kopię tej <see cref="T:System.Windows.FreezableCollection`1" /> zawartości i jej zawartość, tworząc głębokie kopie bieżących wartości tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-149">Creates a modifiable copy of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies of this object's current values.</span></span> <span data-ttu-id="db7f9-150">Jeśli ten obiekt (lub zawarte w nim obiekty) zawiera animowane właściwości zależności, zostaną skopiowane ich bieżące wartości.</span><span class="sxs-lookup"><span data-stu-id="db7f9-150">If this object (or the objects it contains) contains animated dependency properties, their current animated values are copied.</span></span></summary>
        <returns><span data-ttu-id="db7f9-151">Modyfikowalny klon kolekcji i jej zawartości.</span><span class="sxs-lookup"><span data-stu-id="db7f9-151">A modifiable clone of the collection and its contents.</span></span> <span data-ttu-id="db7f9-152"><see cref="P:System.Windows.Freezable.IsFrozen" /> Właściwość sklonowanego obiektu <see langword="false" /> będzie <see cref="P:System.Windows.Freezable.IsFrozen" /> nawet wtedy, gdy właściwość źródła była<see langword="true." /></span><span class="sxs-lookup"><span data-stu-id="db7f9-152">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-153">Ta metoda przesłania metodę dziedziczonej <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType> silnie wpisaną implementacją dla wygody.</span><span class="sxs-lookup"><span data-stu-id="db7f9-153">This method shadows the inherited <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType> method with a strongly typed implementation for convenience.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Animatable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.CloneCurrentValueCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="db7f9-154"><see cref="T:System.Windows.FreezableCollection`1" /> Do klonowania.</span><span class="sxs-lookup"><span data-stu-id="db7f9-154">The <see cref="T:System.Windows.FreezableCollection`1" /> to clone.</span></span></param>
        <summary><span data-ttu-id="db7f9-155">Sprawia, że to wystąpienie jest modyfikowalnym klonem (głębokiej <see cref="T:System.Windows.FreezableCollection`1" /> kopii) określonej przy użyciu bieżących wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="db7f9-155">Makes this instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using current property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-156">Ta metoda jest wywoływana przez <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> metodę i nie powinna być wywoływana bezpośrednio z kodu, chyba że podczas wywoływania implementacji podstawowej podczas zastępowania tej metody.</span><span class="sxs-lookup"><span data-stu-id="db7f9-156">This method is called by the <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="db7f9-157">Aby utworzyć modyfikowalną kopię bieżącego obiektu, wywołaj <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> zamiast wywołania tej metody bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="db7f9-157">To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="db7f9-158">Zobacz stronę <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> , aby uzyskać informacje o tym, kiedy należy zastąpić tę metodę.</span><span class="sxs-lookup"><span data-stu-id="db7f9-158">See the <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> page for information about when you should override this method.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="freezableCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="db7f9-159">Obiekt, który ma zostać zlokalizowany w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="db7f9-159">The object to locate in this collection.</span></span> <span data-ttu-id="db7f9-160">Ten obiekt może być <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-160">This object may be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="db7f9-161">Określa, czy <see cref="T:System.Windows.FreezableCollection`1" /> zawiera określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="db7f9-161">Determines whether this <see cref="T:System.Windows.FreezableCollection`1" /> contains the specified value.</span></span></summary>
        <returns><span data-ttu-id="db7f9-162"><see langword="true" />Jeśli wartość zostanie znaleziona w <see cref="T:System.Windows.FreezableCollection`1" />; w <see langword="false" />przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-162"><see langword="true" /> if value is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="freezableCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="db7f9-163">Jednowymiarowa tablica, która jest miejscem docelowym elementów skopiowanych z <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-163">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <param name="index"><span data-ttu-id="db7f9-164">Indeks (liczony od zera) <paramref name="array" /> , w którym rozpoczyna się kopiowanie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-164">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="db7f9-165">Kopiuje cały <see cref="T:System.Windows.FreezableCollection`1" /> do zgodnej jednowymiarowej tablicy, rozpoczynając od określonego indeksu tablicy docelowej.</span><span class="sxs-lookup"><span data-stu-id="db7f9-165">Copies the entire <see cref="T:System.Windows.FreezableCollection`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-166">Należy zauważyć, że ta operacja wykonuje kopię skróconą.</span><span class="sxs-lookup"><span data-stu-id="db7f9-166">Note that this operation performs a shallow copy.</span></span> <span data-ttu-id="db7f9-167">Elementy są kopiowane do tablicy docelowej w tej samej kolejności, w której moduł wyliczający wykonuje iterację <xref:System.Windows.FreezableCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="db7f9-167">The elements are copied to the target array in the same order in which the enumerator iterates through this <xref:System.Windows.FreezableCollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="db7f9-168"><paramref name="array" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-168"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="db7f9-169"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="db7f9-169"><paramref name="index" /> is less than 0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db7f9-170">Liczba elementów w źródle <see cref="T:System.Windows.FreezableCollection`1" /> jest większa niż dostępne miejsce od indeksu do końca miejsca docelowego. <paramref name="array" /></span><span class="sxs-lookup"><span data-stu-id="db7f9-170">The number of elements in the source <see cref="T:System.Windows.FreezableCollection`1" /> is greater than the available space from index to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db7f9-171">Pobiera liczbę elementów zawartych w tym <see cref="T:System.Windows.FreezableCollection`1" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-171">Gets the number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <value><span data-ttu-id="db7f9-172">Liczba elementów zawartych w tym <see cref="T:System.Windows.FreezableCollection`1" />elemencie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-172">The number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="freezableCollection.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db7f9-173">Tworzy nowe wystąpienie <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-173">Creates a new instance of the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="db7f9-174">Nowe wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-174">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-175">Nie wywołuj tej metody bezpośrednio (z wyjątkiem sytuacji, w której jest wywoływana baza w implementacji).</span><span class="sxs-lookup"><span data-stu-id="db7f9-175">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="db7f9-176">Ta metoda jest wywoływana wewnętrznie przez <xref:System.Windows.Freezable.CreateInstance%2A>, za każdym razem, gdy tworzone <xref:System.Windows.Freezable> jest nowe wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-176">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A>, whenever a new instance of the <xref:System.Windows.Freezable> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db7f9-177">W poniższym przykładzie przedstawiono typową implementację <xref:System.Windows.Freezable.CreateInstanceCore%2A>programu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-177">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="db7f9-178">Każda <see cref="T:System.Windows.Freezable" /> podklasa musi implementować tę metodę.</span><span class="sxs-lookup"><span data-stu-id="db7f9-178">Every <see cref="T:System.Windows.Freezable" /> subclass must implement this method.</span></span> <span data-ttu-id="db7f9-179">Typową implementacją jest po prostu wywołanie konstruktora bez parametrów klasy i zwrócenie wyniku.</span><span class="sxs-lookup"><span data-stu-id="db7f9-179">Typical implementation is to simply call the class parameterless constructor and return the result.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="freezableCollection.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking"><span data-ttu-id="db7f9-180"><see langword="true" />Jeśli należy <see cref="T:System.Windows.FreezableCollection`1" /> po prostu zwrócić, czy można go zablokować.</span><span class="sxs-lookup"><span data-stu-id="db7f9-180"><see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> should simply return whether it can be frozen.</span></span> <span data-ttu-id="db7f9-181"><see langword="false" />Jeśli wystąpienie <see cref="T:System.Windows.FreezableCollection`1" /> powinno być rzeczywiście zawieszać się, gdy ta metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="db7f9-181"><see langword="false" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> instance should actually freeze itself when this method is called.</span></span></param>
        <summary><span data-ttu-id="db7f9-182">Sprawia, <see cref="T:System.Windows.FreezableCollection`1" /> że ten obiekt jest niemodyfikowalny lub określa, czy można go nie modyfikować.</span><span class="sxs-lookup"><span data-stu-id="db7f9-182">Makes this <see cref="T:System.Windows.FreezableCollection`1" /> object unmodifiable or determines whether it can be made unmodifiable.</span></span></summary>
        <returns><span data-ttu-id="db7f9-183">Jeśli <paramref name="isChecking" /> <see langword="true" /> jest <see langword="true" />, Tametoda<see langword="false" /> zwraca wartość, jeśli niemożnajejmodyfikowaćlubniemożnajejzmodyfikować.<see cref="T:System.Windows.FreezableCollection`1" /></span><span class="sxs-lookup"><span data-stu-id="db7f9-183">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if this <see cref="T:System.Windows.FreezableCollection`1" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span></span>  
  
<span data-ttu-id="db7f9-184">Jeśli <paramref name="isChecking" /> <see langword="true" /> jest <see langword="false" />, ta metoda zwraca wartość, jeśli określony <see cref="T:System.Windows.FreezableCollection`1" /> element jest teraz niemodyfikowalny, <see langword="false" /> lub jeśli nie można dokonać jego edycji, z efektem ubocznym rozpoczętego zmiany stanu zamrożonego tego obiektu .</span><span class="sxs-lookup"><span data-stu-id="db7f9-184">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.FreezableCollection`1" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-185">Nie wywołuj tej metody bezpośrednio (z wyjątkiem sytuacji, w której jest wywoływana baza w implementacji).</span><span class="sxs-lookup"><span data-stu-id="db7f9-185">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="db7f9-186">Ta metoda jest wywoływana wewnętrznie przez <xref:System.Windows.Freezable.CanFreeze%2A> (z `isChecking` równą `true`) i <xref:System.Windows.Freezable.Freeze%2A> (z `isChecking` równą `false`).</span><span class="sxs-lookup"><span data-stu-id="db7f9-186">This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="db7f9-187">Informacje o tym, kiedy przesłonić tę metodę <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />, można znaleźć w temacie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-187">For information about when to override this method, see <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.GetAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="db7f9-188"><see cref="T:System.Windows.FreezableCollection`1" /> Do kopiowania.</span><span class="sxs-lookup"><span data-stu-id="db7f9-188">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span></span></param>
        <summary><span data-ttu-id="db7f9-189">Sprawia, że to wystąpienie jest zablokowanym klonem określonego <see cref="T:System.Windows.FreezableCollection`1" /> przy użyciu wartości właściwości Base (Nieanimowane).</span><span class="sxs-lookup"><span data-stu-id="db7f9-189">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-190">Ta metoda jest wywoływana przez <xref:System.Windows.Freezable.GetAsFrozen%2A> polecenie i nie powinna być wywoływana bezpośrednio z kodu, chyba że podczas wywoływania implementacji podstawowej podczas zastępowania tej metody.</span><span class="sxs-lookup"><span data-stu-id="db7f9-190">This method is called by <xref:System.Windows.Freezable.GetAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="db7f9-191">Aby utworzyć zamrożoną kopię bieżącego obiektu, wywołaj <xref:System.Windows.Freezable.GetAsFrozen%2A> zamiast wywołania tej metody bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="db7f9-191">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="db7f9-192">Informacje o tym, kiedy przesłonić tę metodę <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />, można znaleźć w temacie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-192">For information about when to override this method, see <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.GetCurrentValueAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="db7f9-193"><see cref="T:System.Windows.FreezableCollection`1" /> Do kopiowania.</span><span class="sxs-lookup"><span data-stu-id="db7f9-193">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span></span></param>
        <summary><span data-ttu-id="db7f9-194">Sprawia, że to wystąpienie jest zablokowanym klonem określonego <see cref="T:System.Windows.Freezable" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-194">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="db7f9-195">Jeśli ten obiekt ma animowane właściwości zależności, są kopiowane bieżące wartości animacyjne.</span><span class="sxs-lookup"><span data-stu-id="db7f9-195">If this object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-196">Ta metoda jest wywoływana przez <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> polecenie i nie powinna być wywoływana bezpośrednio z kodu, chyba że podczas wywoływania implementacji podstawowej podczas zastępowania tej metody.</span><span class="sxs-lookup"><span data-stu-id="db7f9-196">This method is called by <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="db7f9-197">Aby utworzyć zamrożoną kopię bieżącego obiektu, wywołaj <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> zamiast wywołania tej metody bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="db7f9-197">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="db7f9-198">Informacje o tym, kiedy przesłonić tę metodę <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />, można znaleźć w temacie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-198">For information about when to override this method, see <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.FreezableCollection`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As FreezableCollection(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Enumerator" Usage="freezableCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db7f9-199">Zwraca moduł wyliczający dla całego <see cref="T:System.Windows.FreezableCollection`1" />elementu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-199">Returns an enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="db7f9-200">Moduł wyliczający dla całego <see cref="T:System.Windows.FreezableCollection`1" />elementu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-200">An enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="freezableCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="db7f9-201">Obiekt, który ma zostać zlokalizowany w <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-201">The object to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="db7f9-202">Wyszukuje określony obiekt i zwraca indeks (liczony od zera) pierwszego wystąpienia w całości <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-202">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="db7f9-203">Indeks (liczony od zera) pierwszego wystąpienia <paramref name="value" /> w całości <see cref="T:System.Windows.FreezableCollection`1" />, jeśli został znaleziony; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="db7f9-203">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Windows.FreezableCollection`1" />, if found; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="freezableCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="db7f9-204">Indeks (liczony od zera), <paramref name="value" /> który powinien zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="db7f9-204">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="db7f9-205">Obiekt do wstawienia.</span><span class="sxs-lookup"><span data-stu-id="db7f9-205">The object to insert.</span></span></param>
        <summary><span data-ttu-id="db7f9-206">Wstawia określony obiekt do <see cref="T:System.Windows.FreezableCollection`1" /> obiektu o określonym indeksie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-206">Inserts the specified object into the <see cref="T:System.Windows.FreezableCollection`1" /> at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db7f9-207"><paramref name="value" />jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-207"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="db7f9-208"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="db7f9-208"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="db7f9-209">—lub—</span><span class="sxs-lookup"><span data-stu-id="db7f9-209">-or-</span></span> 
 <span data-ttu-id="db7f9-210"><paramref name="index" />jest większa niż <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-210"><paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="db7f9-211">Jest zamrożony ( <see cref="P:System.Windows.Freezable.IsFrozen" /> jej właściwość <see langword="true" />to). <see cref="T:System.Windows.FreezableCollection`1" /></span><span class="sxs-lookup"><span data-stu-id="db7f9-211">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="db7f9-212">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</span><span class="sxs-lookup"><span data-stu-id="db7f9-212">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="db7f9-213">Pobieranie lub konfigurowanie elementów pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="db7f9-213">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="db7f9-214">Element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="db7f9-214">The element at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="db7f9-215"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="db7f9-215"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="db7f9-216">—lub—</span><span class="sxs-lookup"><span data-stu-id="db7f9-216">-or-</span></span> 
 <span data-ttu-id="db7f9-217"><paramref name="index" />jest równa lub większa niż <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-217"><paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="db7f9-218">Określony element ma wartość <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-218">The specified element is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="db7f9-219">Podjęto próbę ustawienia elementu w kolekcji, gdy kolekcja jest zamrożona ( <see cref="P:System.Windows.Freezable.IsFrozen" /> jej właściwość <see langword="true" />to).</span><span class="sxs-lookup"><span data-stu-id="db7f9-219">Attempting to set an item in the collection when the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="freezableCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="db7f9-220">Obiekt do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="db7f9-220">The object to remove.</span></span></param>
        <summary><span data-ttu-id="db7f9-221">Usuwa pierwsze wystąpienie określonego obiektu z <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-221">Removes the first occurrence of the specified object from the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <returns><span data-ttu-id="db7f9-222"><see langword="true" />Jeśli wystąpienie <paramref name="value" /> zostało znalezione w kolekcji i usunięte; <see langword="false" /> Jeśli<paramref name="value" /> nie można odnaleźć w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="db7f9-222"><see langword="true" /> if an occurrence of <paramref name="value" /> was found in the collection and removed; <see langword="false" /> if <paramref name="value" /> could not be found in the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="db7f9-223">Jest zamrożony ( <see cref="P:System.Windows.Freezable.IsFrozen" /> jej właściwość <see langword="true" />to). <see cref="T:System.Windows.FreezableCollection`1" /></span><span class="sxs-lookup"><span data-stu-id="db7f9-223">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="freezableCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="db7f9-224">Indeks (liczony od zera) obiektu do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="db7f9-224">The zero-based index of the object to remove.</span></span></param>
        <summary><span data-ttu-id="db7f9-225">Usuwa obiekt w określonym indeksie <see cref="T:System.Windows.FreezableCollection`1" />liczonym od zera.</span><span class="sxs-lookup"><span data-stu-id="db7f9-225">Removes the object at the specified zero-based index of the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="db7f9-226"><paramref name="index" />jest mniejsza niż 0.</span><span class="sxs-lookup"><span data-stu-id="db7f9-226"><paramref name="index" /> is less than 0.</span></span>  
  
<span data-ttu-id="db7f9-227">—lub—</span><span class="sxs-lookup"><span data-stu-id="db7f9-227">-or-</span></span> 
 <span data-ttu-id="db7f9-228"><paramref name="index" />jest większa niż <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-228"><paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="db7f9-229">Jest zamrożony ( <see cref="P:System.Windows.Freezable.IsFrozen" /> jej właściwość <see langword="true" />to). <see cref="T:System.Windows.FreezableCollection`1" /></span><span class="sxs-lookup"><span data-stu-id="db7f9-229">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;T&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db7f9-230">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-230">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span></span></summary>
        <value><span data-ttu-id="db7f9-231"><see langword="true" />Jeśli jest <see cref="T:System.Windows.FreezableCollection`1" /> tylko do odczytu; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-231"><see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-232">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-232">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-233">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.Generic.ICollection%601> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-233">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db7f9-234">Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-234">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="db7f9-235"><see cref="T:System.Collections.Generic.IEnumerator`1" /> Obiekt, którego można użyć do iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="db7f9-235">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-236">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-236">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-237">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.Generic.IEnumerable%601> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-237">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="db7f9-238">Wartość zerowa <see cref="T:System.Array" /> , która odbiera skopiowane elementy <see cref="T:System.Windows.FreezableCollection`1" />z.</span><span class="sxs-lookup"><span data-stu-id="db7f9-238">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <param name="index"><span data-ttu-id="db7f9-239">Pierwsza pozycja w określonym <see cref="T:System.Array" /> do odebrania skopiowanej zawartości.</span><span class="sxs-lookup"><span data-stu-id="db7f9-239">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span></span></param>
        <summary><span data-ttu-id="db7f9-240">Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-240">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-241">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-241">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-242">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.ICollection> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-242">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db7f9-243">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.ICollection.IsSynchronized" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-243">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span></span></summary>
        <value><span data-ttu-id="db7f9-244"><see langword="true" />Jeśli dostęp do programu <see cref="T:System.Windows.FreezableCollection`1" /> jest synchronizowany (wątek bezpieczny); <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-244"><see langword="true" /> if access to the <see cref="T:System.Windows.FreezableCollection`1" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-245">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-245">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-246">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.ICollection> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-246">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db7f9-247">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.ICollection.SyncRoot" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-247">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span></span></summary>
        <value><span data-ttu-id="db7f9-248">Obiekt, który może służyć do synchronizowania dostępu do <see cref="T:System.Windows.FreezableCollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-248">An object that can be used to synchronize access to the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-249">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-249">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-250">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.ICollection> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-250">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db7f9-251">Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IEnumerable.GetEnumerator" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-251">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="db7f9-252"><see cref="T:System.Collections.IEnumerator" /> Obiekt, którego można użyć do iteracji w kolekcji.</span><span class="sxs-lookup"><span data-stu-id="db7f9-252">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-253">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-253">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-254">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.IEnumerable> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-254">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="db7f9-255">, <see cref="T:System.Object" /> Aby dodać <see cref="T:System.Windows.FreezableCollection`1" />do.</span><span class="sxs-lookup"><span data-stu-id="db7f9-255">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="db7f9-256">Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.Add(System.Object)" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-256">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="db7f9-257">Położenie, do którego wstawiono nowy element.</span><span class="sxs-lookup"><span data-stu-id="db7f9-257">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-258">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-258">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-259">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-259">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Add(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="db7f9-260"><see cref="T:System.Object" /> Aby zlokalizować <see cref="T:System.Windows.FreezableCollection`1" />w.</span><span class="sxs-lookup"><span data-stu-id="db7f9-260">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="db7f9-261">Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.Contains(System.Object)" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-261">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="db7f9-262"><see langword="true" />Jeśli znajduje się <see cref="T:System.Windows.FreezableCollection`1" />w; w przeciwnym razie, <see langword="false" />. <see cref="T:System.Object" /></span><span class="sxs-lookup"><span data-stu-id="db7f9-262"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-263">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-263">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-264">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-264">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="db7f9-265"><see cref="T:System.Object" /> Aby zlokalizować <see cref="T:System.Windows.FreezableCollection`1" />w.</span><span class="sxs-lookup"><span data-stu-id="db7f9-265">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="db7f9-266">Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.IndexOf(System.Object)" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-266">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="db7f9-267">Indeks elementu <paramref name="value" /> if znajduje się na liście; w przeciwnym razie-1.</span><span class="sxs-lookup"><span data-stu-id="db7f9-267">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-268">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-268">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-269">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-269">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="db7f9-270">Indeks (liczony od zera), w którym ma <see cref="T:System.Object" />zostać wstawiony.</span><span class="sxs-lookup"><span data-stu-id="db7f9-270">The zero-based index at which to insert the <see cref="T:System.Object" />.</span></span></param>
        <param name="value"><span data-ttu-id="db7f9-271">, <see cref="T:System.Object" /> Aby wstawić <see cref="T:System.Windows.FreezableCollection`1" />do.</span><span class="sxs-lookup"><span data-stu-id="db7f9-271">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="db7f9-272">Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-272">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-273">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-273">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-274">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-274">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db7f9-275">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.IList.IsFixedSize" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-275">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span></span></summary>
        <value><span data-ttu-id="db7f9-276"><see langword="true" />Jeśli ma stały rozmiar; <see langword="false" />w przeciwnym razie. <see cref="T:System.Windows.FreezableCollection`1" /></span><span class="sxs-lookup"><span data-stu-id="db7f9-276"><see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-277">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-277">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-278">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-278">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db7f9-279">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.IList.IsReadOnly" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-279">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span></span></summary>
        <value><span data-ttu-id="db7f9-280"><see langword="true" />Jeśli jest <see cref="T:System.Windows.FreezableCollection`1" /> tylko do odczytu; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="db7f9-280"><see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-281">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-281">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-282">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-282">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="db7f9-283">Liczony od zera indeks elementu, który ma zostać pobrany lub skonfigurowany.</span><span class="sxs-lookup"><span data-stu-id="db7f9-283">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="db7f9-284">Aby uzyskać opis tego elementu członkowskiego, <see cref="P:System.Collections.IList.Item(System.Int32)" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-284">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span></span></summary>
        <value><span data-ttu-id="db7f9-285">Element pod określonym indeksem.</span><span class="sxs-lookup"><span data-stu-id="db7f9-285">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-286">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-286">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-287">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-287">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FreezableCollection`1.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="db7f9-288"><see cref="T:System.Object" /> Do usunięcia <see cref="T:System.Windows.FreezableCollection`1" />z.</span><span class="sxs-lookup"><span data-stu-id="db7f9-288">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.FreezableCollection`1" />.</span></span></param>
        <summary><span data-ttu-id="db7f9-289">Aby uzyskać opis tego elementu członkowskiego, <see cref="M:System.Collections.IList.Remove(System.Object)" />Zobacz.</span><span class="sxs-lookup"><span data-stu-id="db7f9-289">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db7f9-290">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-290">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-291">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.IList> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-291">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
      <MemberSignature Language="C#" Value="event System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FreezableCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event CollectionChanged As NotifyCollectionChangedEventHandler Implements System.Collections.Specialized.INotifyCollectionChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db7f9-292">Opis tych elementów członkowskich można znaleźć w temacie <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-292">For a description of this members, see <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="db7f9-293">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-293">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-294">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.Collections.Specialized.INotifyCollectionChanged> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-294">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Specialized.INotifyCollectionChanged> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
      <MemberSignature Language="C#" Value="event System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FreezableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db7f9-295">Opis tych elementów członkowskich można znaleźć w temacie <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span><span class="sxs-lookup"><span data-stu-id="db7f9-295">For a description of this members, see <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="db7f9-296">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="db7f9-296">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="db7f9-297">Może być używana tylko wtedy, <xref:System.Windows.FreezableCollection%601> gdy wystąpienie jest rzutowane <xref:System.ComponentModel.INotifyPropertyChanged> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="db7f9-297">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.ComponentModel.INotifyPropertyChanged> interface.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
