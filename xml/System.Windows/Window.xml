<Type Name="Window" FullName="System.Windows.Window">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eae82f38da2db6642d1be7c07faa5b5a64322578" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69443616" /></Metadata><TypeSignature Language="C#" Value="public class Window : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Window extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Window" />
  <TypeSignature Language="VB.NET" Value="Public Class Window&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Window : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type Window = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="13c2f-101">Zapewnia możliwość tworzenia, konfigurowania, wyświetlania i zarządzania okresem istnienia systemu Windows i okien dialogowych.</span><span class="sxs-lookup"><span data-stu-id="13c2f-101">Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-102">Punktem interakcji między użytkownikiem a aplikacją autonomiczną jest okno.</span><span class="sxs-lookup"><span data-stu-id="13c2f-102">The point of interaction between a user and a standalone application is a window.</span></span> <span data-ttu-id="13c2f-103">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Okno składa się z dwóch odrębnych obszarów:</span><span class="sxs-lookup"><span data-stu-id="13c2f-103">A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window consists of two distinct areas:</span></span>  
  
-   <span data-ttu-id="13c2f-104">Obszar niebędący klientem, który hostuje zakończenia systemu Windows, łącznie z ikoną, tytułem, menu systemowym, przyciskiem Minimalizuj, przyciskiem Maksymalizuj, przyciskiem Przywróć, przyciskiem Zamknij i obramowaniem.</span><span class="sxs-lookup"><span data-stu-id="13c2f-104">A non-client area, which hosts the windows adornments, including an icon, title, System menu, minimize button, maximize button, restore button, close button, and a border.</span></span>  
  
-   <span data-ttu-id="13c2f-105">Obszar klienta, który hostuje zawartość specyficzną dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-105">A client area, which hosts application-specific content.</span></span>  
  
 <span data-ttu-id="13c2f-106">Standardowe okno jest pokazane na poniższym rysunku:</span><span class="sxs-lookup"><span data-stu-id="13c2f-106">A standard window is shown in the following figure:</span></span>  
  
 <span data-ttu-id="13c2f-107">![Elementy okna] (~/add/media/windowoverviewfigure1.PNG "Elementy okna")</span><span class="sxs-lookup"><span data-stu-id="13c2f-107">![Window elements](~/add/media/windowoverviewfigure1.PNG "Window elements")</span></span>  
  
 <span data-ttu-id="13c2f-108"><xref:System.Windows.Window>hermetyzuje możliwość tworzenia, konfigurowania, wyświetlania i zarządzania okresem istnienia okien i okien dialogowych, a także udostępnia następujące kluczowe usługi:</span><span class="sxs-lookup"><span data-stu-id="13c2f-108"><xref:System.Windows.Window> encapsulates the ability to create, configure, show, and manage the lifetime of both windows and dialog boxes, and provides the following key services:</span></span>  
  
 <span data-ttu-id="13c2f-109">**Zarządzanie**okresem <xref:System.Windows.Window.Activate%2A>istnienia: <xref:System.Windows.Window.Closed> <xref:System.Windows.Window.Close%2A> <xref:System.Windows.Window.Activated> ,<xref:System.Windows.Window.Deactivated>, ,<xref:System.Windows.Window.Hide%2A>,,,, ,<xref:System.Windows.Window.SourceInitialized>,. <xref:System.Windows.Window.Show%2A> <xref:System.Windows.Window.Closing> <xref:System.Windows.Window.IsActive%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-109">**Lifetime Management**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span></span>  
  
 <span data-ttu-id="13c2f-110">**Zarządzanie oknem**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-110">**Window Management**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span></span>  
  
 <span data-ttu-id="13c2f-111">**Wygląd i zachowanie**: <xref:System.Windows.Window.AllowsTransparency%2A> <xref:System.Windows.Window.DragMove%2A> ,<xref:System.Windows.Window.ResizeMode%2A> ,<xref:System.Windows.Window.StateChanged> ,,,,,,,, ,<xref:System.Windows.Window.SizeToContent%2A> <xref:System.Windows.Window.Icon%2A> <xref:System.Windows.Window.Left%2A> <xref:System.Windows.Window.ContentRendered> <xref:System.Windows.Window.LocationChanged> <xref:System.Windows.Window.RestoreBounds%2A> <xref:System.Windows.Window.ShowActivated%2A> <xref:System.Windows.Window.ShowInTaskbar%2A> , <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>,<xref:System.Windows.Window.WindowStyle%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-111">**Appearance and Behavior**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span></span>  
  
 <span data-ttu-id="13c2f-112">**Okna dialogowe**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-112">**Dialog Boxes**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="13c2f-113">Ponadto program <xref:System.Windows.Application> udostępnia specjalną pomoc techniczną dotyczącą zarządzania wszystkimi oknami w aplikacji:</span><span class="sxs-lookup"><span data-stu-id="13c2f-113">Additionally, <xref:System.Windows.Application> exposes special support for managing all of the windows in an application:</span></span>  
  
-   <span data-ttu-id="13c2f-114">Aplikacja przechowuje listę wszystkich okien, które są aktualnie tworzone w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-114">Application maintains a list of all the windows that are currently instantiated in the application.</span></span> <span data-ttu-id="13c2f-115">Ta lista jest udostępniana przez <xref:System.Windows.Application.Windows%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="13c2f-115">This list is exposed by the <xref:System.Windows.Application.Windows%2A> property.</span></span>  
  
-   <span data-ttu-id="13c2f-116">Domyślnie <xref:System.Windows.Application.MainWindow%2A> jest automatycznie ustawiany z odwołaniem do pierwszego <xref:System.Windows.Window> wystąpienia, które jest tworzone w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-116">By default, <xref:System.Windows.Application.MainWindow%2A> is automatically set with a reference to the first <xref:System.Windows.Window> that is instantiated in an application.</span></span> <span data-ttu-id="13c2f-117">Spowoduje to przetworzenie okna w oknie głównym aplikacji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-117">This thereby making the window the main application window.</span></span>  
  
 <span data-ttu-id="13c2f-118"><xref:System.Windows.Window> Można zaimplementować przy użyciu znaczników, znaczników i kodu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-118">A <xref:System.Windows.Window> can be implemented using markup, markup and code-behind, or code.</span></span>  
  
 <span data-ttu-id="13c2f-119"><xref:System.Windows.Window>służy głównie do wyświetlania okna i okien dialogowych aplikacji autonomicznych.</span><span class="sxs-lookup"><span data-stu-id="13c2f-119"><xref:System.Windows.Window> is primarily used to display windows and dialog boxes for standalone applications.</span></span> <span data-ttu-id="13c2f-120">Jednak w przypadku aplikacji, które wymagają nawigowania na poziomie okna, takich jak kreatory, można <xref:System.Windows.Navigation.NavigationWindow> użyć zamiast tego. <xref:System.Windows.Navigation.NavigationWindow> pochodzi z<xref:System.Windows.Window> i rozszerza je za pomocą obsługi nawigacji w stylu przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="13c2f-120">However, for applications that require navigation at the window level, such as wizards, you can use <xref:System.Windows.Navigation.NavigationWindow> instead; <xref:System.Windows.Navigation.NavigationWindow> derives from <xref:System.Windows.Window> and extends it with browser-style navigation support.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-121">Wyspy zawartości nawigacji mogą być dołączone do innych kontenerów zawartości i zawartości przy <xref:System.Windows.Controls.Frame>użyciu programu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-121">Islands of navigable content can be incorporated into other content and content containers using <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="13c2f-122"><xref:System.Windows.Window>wymaga `UnmanagedCode` uprawnienia zabezpieczeń do wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-122"><xref:System.Windows.Window> needs `UnmanagedCode` security permission to be instantiated.</span></span> <span data-ttu-id="13c2f-123">Ma to następujące konsekwencje:</span><span class="sxs-lookup"><span data-stu-id="13c2f-123">This has the following consequences:</span></span>  
  
-   [!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)]<span data-ttu-id="13c2f-124">-wdrożone Aplikacje autonomiczne będą żądać podniesienia uprawnień w przypadku uruchomienia z Internetu lub lokalnych stref intranetowych.</span><span class="sxs-lookup"><span data-stu-id="13c2f-124">-deployed standalone applications will request permission elevation when launched from either the Internet or Local Intranet zones.</span></span>  
  
-   [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]<span data-ttu-id="13c2f-125">to żądanie nie jest możliwe, ponieważ nie będzie można utworzyć wystąpienia okien dialogowych ani okna dialogowego.</span><span class="sxs-lookup"><span data-stu-id="13c2f-125">that request anything less than full permissions will not be able to instantiate windows or dialog boxes.</span></span>  
  
 <span data-ttu-id="13c2f-126">Informacje o wdrażaniu aplikacji autonomicznej i zagadnieniach dotyczących zabezpieczeń znajdują się w temacie [strategia zabezpieczeń WPF — zabezpieczenia platformy](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span><span class="sxs-lookup"><span data-stu-id="13c2f-126">For information about standalone application deployment and security considerations, see [WPF Security Strategy - Platform Security](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span></span>  
  
 <span data-ttu-id="13c2f-127"><xref:System.Windows.Window> A<xref:System.Windows.Controls.ContentControl>jest, co oznacza, że może zawierać pojedynczy obiekt dowolnego typu (na przykład ciąg, obraz lub panel).</span><span class="sxs-lookup"><span data-stu-id="13c2f-127">A <xref:System.Windows.Window> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="13c2f-128">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.ContentControl> Klasa.</span><span class="sxs-lookup"><span data-stu-id="13c2f-128">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span> <span data-ttu-id="13c2f-129"><xref:System.Windows.Window> Ponadto jest elementem głównym, dlatego nie może być częścią zawartości innego elementu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-129">Also, <xref:System.Windows.Window> is a root element and, therefore, cannot be part of another element's content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-130"><xref:System.Windows.FrameworkElement.Height%2A>Właściwości, <xref:System.Windows.FrameworkElement.Width%2A>, i<xref:System.Windows.Window.Top%2A> ustawionena<xref:System.Windows.Window> podstawie stylu nie będą stosowane w czasie wykonywania. <xref:System.Windows.Window.Left%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-130">The <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties set on a <xref:System.Windows.Window> through a style will not be applied at run time.</span></span>  
  
## <a name="customizing-the-window-control"></a><span data-ttu-id="13c2f-131">Dostosowywanie kontrolki okna</span><span class="sxs-lookup"><span data-stu-id="13c2f-131">Customizing the Window Control</span></span>  
 <span data-ttu-id="13c2f-132">Aby zastosować te same ustawienia właściwości do wielu <xref:System.Windows.Window> formantów, <xref:System.Windows.FrameworkElement.Style%2A> Użyj właściwości.</span><span class="sxs-lookup"><span data-stu-id="13c2f-132">To apply the same property settings to multiple <xref:System.Windows.Window> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="13c2f-133">Można zmienić wartość domyślną <xref:System.Windows.Controls.ControlTemplate> , aby dać formantowi unikatowy wygląd.</span><span class="sxs-lookup"><span data-stu-id="13c2f-133">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="13c2f-134">Aby uzyskać więcej informacji na temat <xref:System.Windows.Controls.ControlTemplate>tworzenia, zobacz [Dostosowywanie wyglądu istniejącej kontrolki przez utworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="13c2f-134">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="13c2f-135">Aby zobaczyć części i Stany, które są specyficzne dla programu <xref:System.Windows.Window>, zobacz [Style okna i szablony](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="13c2f-135">To see the parts and states that are specific to the <xref:System.Windows.Window>, see [Window Styles and Templates](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="13c2f-136">Właściwości zależności dla tego formantu można ustawić przy użyciu domyślnego stylu kontrolki.</span><span class="sxs-lookup"><span data-stu-id="13c2f-136">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="13c2f-137">Jeśli właściwość jest ustawiana za pomocą stylu domyślnego, właściwość może ulec zmianie z wartości domyślnej, gdy kontrolka pojawi się w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-137">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="13c2f-138">Domyślny styl jest określany na podstawie tego, który Motyw pulpitu jest używany, gdy aplikacja jest uruchomiona.</span><span class="sxs-lookup"><span data-stu-id="13c2f-138">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="13c2f-139">Aby uzyskać więcej informacji, zobacz [domyślne motywy WPF](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="13c2f-139">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="13c2f-140">Poniższy przykład pokazuje, jak standardowe okno jest zdefiniowane tylko przy użyciu znaczników:</span><span class="sxs-lookup"><span data-stu-id="13c2f-140">The following example shows how a standard window is defined using only markup:</span></span>  
  
 [!code-xaml[WindowSnippets#WindowMARKUPONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MarkupOnlyWindow.xaml#windowmarkuponly)]  
  
 <span data-ttu-id="13c2f-141">W poniższym przykładzie przedstawiono sposób definiowania standardowego okna przy użyciu tylko kodu:</span><span class="sxs-lookup"><span data-stu-id="13c2f-141">The following example shows how a standard window is defined using only code:</span></span>  
  
 [!code-csharp[WindowSnippets#WindowCODEONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/CodeOnlyWindow.cs#windowcodeonly)]
 [!code-vb[WindowSnippets#WindowCODEONLY](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/codeonlywindow.vb#windowcodeonly)]  
  
 <span data-ttu-id="13c2f-142">Poniższy przykład pokazuje, jak standardowe okno jest zdefiniowane przy użyciu kombinacji znaczników i kodu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-142">The following example shows how a standard window is defined using a combination of markup and code-behind.</span></span>  
  
 [!code-xaml[WindowSnippets#WindowXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml#windowxaml)]  
  
 [!code-csharp[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml.cs#windowcodebehind)]
 [!code-vb[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/mainwindow.xaml.vb#windowcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Window.Show" />
    <altmember cref="M:System.Windows.Window.ShowDialog" />
    <altmember cref="P:System.Windows.Window.DialogResult" />
    <altmember cref="T:System.Windows.Application" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Window ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Window();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13c2f-143">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Window" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="13c2f-143">Initializes a new instance of the <see cref="T:System.Windows.Window" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-144"><xref:System.Windows.FrameworkElement.Width%2A>Konstruktor inicjuje <xref:System.Windows.Window> właściwości, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>i <xref:System.Windows.Window.Left%2A> do ich wartości domyślnych.</span><span class="sxs-lookup"><span data-stu-id="13c2f-144">The constructor initializes the <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties to their default <xref:System.Windows.Window> values.</span></span>  
  
 <span data-ttu-id="13c2f-145">Jeśli okno jest tworzone <xref:System.AppDomain> w ramach <xref:System.Windows.Application> obiektu <xref:System.Windows.Window> , który ma obiekt, Konstruktor dodaje obiekt do zestawu <xref:System.Windows.Application>systemu Windows za pośrednictwem <xref:System.Windows.Application.Windows%2A> właściwości <xref:System.Windows.Application> obiektu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-145">If a window is created within an <xref:System.AppDomain> that has an <xref:System.Windows.Application> object, the constructor adds the <xref:System.Windows.Window> object to the set of <xref:System.Windows.Application>-managed windows via the <xref:System.Windows.Application.Windows%2A> property of the <xref:System.Windows.Application> object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="13c2f-146">w przypadku uprawnienia dla tego obiektu do wywoływania niebezpiecznych metod natywnych.</span><span class="sxs-lookup"><span data-stu-id="13c2f-146">for permission for this object to call unsafe native methods.</span></span> <span data-ttu-id="13c2f-147">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-147">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public bool Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; bool" Usage="window.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13c2f-148">Podejmuje próbę przełączenia okna na pierwszy plan i aktywuje go.</span><span class="sxs-lookup"><span data-stu-id="13c2f-148">Attempts to bring the window to the foreground and activates it.</span></span></summary>
        <returns><span data-ttu-id="13c2f-149"><see langword="true" />Jeśli program <see cref="T:System.Windows.Window" /> <see langword="false" />został pomyślnie aktywowany; w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-149"><see langword="true" /> if the <see cref="T:System.Windows.Window" /> was successfully activated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-150">Reguły określające, czy okno jest aktywowane, są takie same jak te, które są [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] używane przez `SetForegroundWindow` funkcję (User32. dll).</span><span class="sxs-lookup"><span data-stu-id="13c2f-150">The rules that determine whether the window is activated are the same as those used by the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` function (User32.dll).</span></span>  
  
 <span data-ttu-id="13c2f-151">Jeśli okno jest aktywowane w aplikacji Windows Presentation Foundation, która nie jest aplikacją na pierwszym planie użytkownika, <xref:System.Windows.Application.Activated> zdarzenie jest zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-151">If the window is activated in a Windows Presentation Foundation application that is not the user's foreground application, <xref:System.Windows.Application.Activated> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-152">Nie można wywołać tej metody, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-152">This method cannot be called when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="13c2f-153">dla uprawnienia do uaktywnienia okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-153">for permission to activate a window.</span></span> <span data-ttu-id="13c2f-154">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-154">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-155">Występuje, gdy okno stanie się oknem pierwszego planu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-155">Occurs when a window becomes the foreground window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-156">Okno zostanie uaktywnione (przejdzie do okna pierwszego planu), gdy:</span><span class="sxs-lookup"><span data-stu-id="13c2f-156">A window is activated (becomes the foreground window) when:</span></span>  
  
-   <span data-ttu-id="13c2f-157">Okno jest otwierane po raz pierwszy.</span><span class="sxs-lookup"><span data-stu-id="13c2f-157">The window is first opened.</span></span>  
  
-   <span data-ttu-id="13c2f-158">Użytkownik przełącza się do okna, zaznaczając go za pomocą myszy, naciskając klawisze ALT + TAB lub z Menedżera zadań.</span><span class="sxs-lookup"><span data-stu-id="13c2f-158">A user switches to a window by selecting it with the mouse, pressing ALT+TAB, or from Task Manager.</span></span>  
  
-   <span data-ttu-id="13c2f-159">Użytkownik klika przycisk Pasek zadań okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-159">A user clicks the window's taskbar button.</span></span>  
  
 <span data-ttu-id="13c2f-160">System Windows, który musi wykryć, gdy staną się aktywowane, <xref:System.Windows.Window.Activated> może obsłużyć zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-160">Windows that need to detect when they become activate can handle the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="13c2f-161">Po pierwszym aktywowaniu okna może ono zostać zdezaktywowane i ponownie uaktywnione wielokrotnie w okresie istnienia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-161">After a window is first activated, it may be deactivated and reactivated many times during its lifetime.</span></span> <span data-ttu-id="13c2f-162">Jeśli zachowanie lub stan aplikacji zależy od jej stanu aktywacji, może <xref:System.Windows.Window.IsActive%2A> ona sprawdzić, czy stan aktywacji, w której się znajduje.</span><span class="sxs-lookup"><span data-stu-id="13c2f-162">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="13c2f-163">Aplikacja może być <xref:System.Windows.Application.Activated>również.</span><span class="sxs-lookup"><span data-stu-id="13c2f-163">An application can also be <xref:System.Windows.Application.Activated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparency">
      <MemberSignature Language="C#" Value="public bool AllowsTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.AllowsTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowsTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowsTransparency : bool with get, set" Usage="System.Windows.Window.AllowsTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-164">Pobiera lub ustawia wartość wskazującą, czy obszar klienta okna obsługuje przezroczystość.</span><span class="sxs-lookup"><span data-stu-id="13c2f-164">Gets or sets a value that indicates whether a window's client area supports transparency.</span></span></summary>
        <value><span data-ttu-id="13c2f-165"><see langword="true" />Jeśli okno obsługuje przezroczystość; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-165"><see langword="true" /> if the window supports transparency; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-166">Gdy właściwość okna ma ustawiony kolor przezroczysty, przy użyciu <xref:System.Windows.Media.Brushes.Transparent%2A> na przykład okno pozostaje nieprzezroczyste. <xref:System.Windows.Controls.Control.Background%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-166">When the <xref:System.Windows.Controls.Control.Background%2A> property of a window is set to a transparent color, using <xref:System.Windows.Media.Brushes.Transparent%2A> for example, the window remains opaque.</span></span> <span data-ttu-id="13c2f-167">Oznacza to, że pulpit i wszystkie uruchomione aplikacje "poniżej" nie mogą być widoczne.</span><span class="sxs-lookup"><span data-stu-id="13c2f-167">This means that the desktop and any running applications "beneath" the window cannot be seen.</span></span> <span data-ttu-id="13c2f-168">Aby włączyć przezroczystość tego typu, <xref:System.Windows.Window.AllowsTransparency%2A> należy `true`ustawić wartość.</span><span class="sxs-lookup"><span data-stu-id="13c2f-168">To enable this type of transparency, <xref:System.Windows.Window.AllowsTransparency%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="13c2f-169"><xref:System.Windows.Window.AllowsTransparency%2A>istnieje, aby ułatwić tworzenie okien bez prostokątów, a w związku z tym, gdy <xref:System.Windows.Window.AllowsTransparency%2A> jest ustawiony na `true`, <xref:System.Windows.Window.WindowStyle%2A> Właściwość okna musi być ustawiona na <xref:System.Windows.WindowStyle.None>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-169"><xref:System.Windows.Window.AllowsTransparency%2A> exists to facilitate the creation of non-rectangular windows, and, consequently, when <xref:System.Windows.Window.AllowsTransparency%2A> is set to `true`, a window's <xref:System.Windows.Window.WindowStyle%2A> property must be set to <xref:System.Windows.WindowStyle.None>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowAllowsTransparency"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-170">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-170">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-171">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-171">Identifier field</span></span>|<xref:System.Windows.Window.AllowsTransparencyProperty>|  
|<span data-ttu-id="13c2f-172">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-172">Metadata properties set to `true`</span></span>|<span data-ttu-id="13c2f-173">Brak</span><span class="sxs-lookup"><span data-stu-id="13c2f-173">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13c2f-174">Okno, które ma <see cref="P:System.Windows.Window.WindowStyle" /> wartość inną niż. <see cref="F:System.Windows.WindowStyle.None" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-174">A window that has a <see cref="P:System.Windows.Window.WindowStyle" /> value of anything other than <see cref="F:System.Windows.WindowStyle.None" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparencyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowsTransparencyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowsTransparencyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.AllowsTransparencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowsTransparencyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowsTransparencyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowsTransparencyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.AllowsTransparencyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-175">Identyfikuje właściwość <see cref="P:System.Windows.Window.AllowsTransparency" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-175">Identifies the <see cref="P:System.Windows.Window.AllowsTransparency" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeBounds As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeBounds);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.ArrangeOverride arrangeBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeBounds" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeBounds"><span data-ttu-id="13c2f-176"><see cref="T:System.Windows.Size" /> Odzwierciedla końcowy rozmiar, którego okno powinno użyć do rozmieszczenia siebie i jego elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="13c2f-176">A <see cref="T:System.Windows.Size" /> that reflects the final size that the window should use to arrange itself and its children.</span></span></param>
        <summary><span data-ttu-id="13c2f-177">Zastąp tę metodę, aby rozmieścić i zmienić rozmiar okna i jego elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="13c2f-177">Override this method to arrange and size a window and its child elements.</span></span></summary>
        <returns><span data-ttu-id="13c2f-178"><see cref="T:System.Windows.Size" /> Odzwierciedla rzeczywisty używany rozmiar.</span><span class="sxs-lookup"><span data-stu-id="13c2f-178">A <see cref="T:System.Windows.Size" /> that reflects the actual size that was used.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-179"><xref:System.Windows.Window.ArrangeOverride%2A>nie jest wywoływana, <xref:System.Windows.UIElement.Visibility%2A> Jeśli właściwość ma <xref:System.Windows.Visibility.Collapsed>wartość.</span><span class="sxs-lookup"><span data-stu-id="13c2f-179"><xref:System.Windows.Window.ArrangeOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="13c2f-180">Jeśli wartość <xref:System.Windows.UIElement.Visibility%2A> właściwości <xref:System.Windows.Visibility.Hidden> jest <xref:System.Windows.Visibility.Visible>albo ,<xref:System.Windows.Window.ArrangeOverride%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="13c2f-180">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-181"><xref:System.Windows.UIElement.Visibility%2A> <xref:System.Windows.Visibility.Visible>Gdy lub są<xref:System.Windows.Window.ShowDialog%2A> wywoływane ,właściwośćobiektumaustawionąwartość.<xref:System.Windows.Window> <xref:System.Windows.Window.Show%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-181">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="window.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13c2f-182">Ręcznie zamyka <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="13c2f-182">Manually closes a <see cref="T:System.Windows.Window" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-183"><xref:System.Windows.Window> Można zamknąć przy użyciu jednego z kilku, dobrze znanych mechanizmów zapewnianych przez system, które znajdują się na pasku tytułu, w tym:</span><span class="sxs-lookup"><span data-stu-id="13c2f-183">A <xref:System.Windows.Window> can be closed using one of several, well-known, system-provided mechanisms located in its title bar, including:</span></span>  
  
-   <span data-ttu-id="13c2f-184">ALT+F4.</span><span class="sxs-lookup"><span data-stu-id="13c2f-184">ALT+F4.</span></span>  
  
-   <span data-ttu-id="13c2f-185">&#124; **Zamknij**menu systemowe.</span><span class="sxs-lookup"><span data-stu-id="13c2f-185">System menu &#124; **Close**.</span></span>  
  
-   <span data-ttu-id="13c2f-186">Przycisk **Zamknij** .</span><span class="sxs-lookup"><span data-stu-id="13c2f-186">**Close** button.</span></span>  
  
 <span data-ttu-id="13c2f-187"><xref:System.Windows.Window> Można również zamknąć przy użyciu jednego z kilku dobrze znanych mechanizmów w obszarze klienta udostępnianym przez deweloperów, w tym:</span><span class="sxs-lookup"><span data-stu-id="13c2f-187">A <xref:System.Windows.Window> can also be closed using one of several well-known mechanisms within the client area that are provided by developers, including:</span></span>  
  
-   <span data-ttu-id="13c2f-188">**Plik** &#124; **Wyjdź** z okna głównego.</span><span class="sxs-lookup"><span data-stu-id="13c2f-188">**File** &#124; **Exit** on a main window.</span></span>  
  
-   <span data-ttu-id="13c2f-189">**Plik** &#124; **Zamknij** lub przycisk **Zamknij** w oknie podrzędnym.</span><span class="sxs-lookup"><span data-stu-id="13c2f-189">**File** &#124; **Close** or a **Close** button on a child window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-190">Przyciski **OK** i **Anuluj** w oknie dialogowym są również udostępniane przez dewelopera, chociaż prawdopodobnie zostaną ustawione <xref:System.Windows.Window.DialogResult%2A>, co spowoduje automatyczne zamknięcie okna otwartego przez wywołanie <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-190">**OK** and **Cancel** buttons on a dialog box are also developer-provided, although will likely set <xref:System.Windows.Window.DialogResult%2A>, which automatically closes a window that was opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="13c2f-191">Te mechanizmy wymagają jawnie wywołania <xref:System.Windows.Window.Close%2A> , aby zamknąć okno.</span><span class="sxs-lookup"><span data-stu-id="13c2f-191">These mechanisms require you to explicitly call <xref:System.Windows.Window.Close%2A> to close a window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-192">Jeśli okno otwierane przez wywołanie <xref:System.Windows.Window.ShowDialog%2A>, i <xref:System.Windows.Controls.Button> z jego <xref:System.Windows.Controls.Button.IsCancel%2A> właściwością ustawioną na wartość true, zostanie automatycznie zamknięte po kliknięciu przycisku lub naciśnięciu klawisza ESC.</span><span class="sxs-lookup"><span data-stu-id="13c2f-192">If a window, opened by calling <xref:System.Windows.Window.ShowDialog%2A>, and with a <xref:System.Windows.Controls.Button> with its <xref:System.Windows.Controls.Button.IsCancel%2A> property set to true, will automatically close when the button is either clicked, or ESC is pressed.</span></span> <span data-ttu-id="13c2f-193">Jeśli okno zostało otwarte przy użyciu <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.Close%2A> jednak musi być jawnie wywołana, na przykład <xref:System.Windows.Controls.Button>z <xref:System.Windows.Controls.Primitives.ButtonBase.Click> programu obsługi zdarzeń dla.</span><span class="sxs-lookup"><span data-stu-id="13c2f-193">If the window was opened using <xref:System.Windows.Window.Show%2A>, however, <xref:System.Windows.Window.Close%2A> must be explicitly called, such as from <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="13c2f-194">Zamknięcie okna powoduje <xref:System.Windows.Window.Closing> podniesienie zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-194">Closing a window causes the <xref:System.Windows.Window.Closing> event to be raised.</span></span> <span data-ttu-id="13c2f-195"><xref:System.Windows.Window.Closing> Jeśli zdarzenie nie zostanie anulowane, występują następujące sytuacje:</span><span class="sxs-lookup"><span data-stu-id="13c2f-195">If the <xref:System.Windows.Window.Closing> event isn't canceled, the following occurs:</span></span>  
  
-   <span data-ttu-id="13c2f-196"><xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> Element <xref:System.Windows.Window> zostanieusuniętyz(Jeśli<xref:System.Windows.Application> obiekt istnieje).</span><span class="sxs-lookup"><span data-stu-id="13c2f-196">The <xref:System.Windows.Window> is removed from <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (if an <xref:System.Windows.Application> object exists).</span></span>  
  
-   <span data-ttu-id="13c2f-197">Jest usuwany z właściciela <xref:System.Windows.Window> , jeśli relacja właściciela/własności <xref:System.Windows.Window> została ustanowiona przed wyświetleniem właściciela <xref:System.Windows.Window> i po jego otwarciu. <xref:System.Windows.Window></span><span class="sxs-lookup"><span data-stu-id="13c2f-197">The <xref:System.Windows.Window> is removed from the owner <xref:System.Windows.Window> if the owner/owned relationship was established before the owned <xref:System.Windows.Window> was shown and after the owner <xref:System.Windows.Window> was opened.</span></span>  
  
-   <span data-ttu-id="13c2f-198"><xref:System.Windows.Window.Closed> Zdarzenie jest zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-198">The <xref:System.Windows.Window.Closed> event is raised.</span></span>  
  
-   <span data-ttu-id="13c2f-199">Niezarządzane zasoby utworzone przez <xref:System.Windows.Window> są usuwane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-199">Unmanaged resources created by the <xref:System.Windows.Window> are disposed.</span></span>  
  
-   <span data-ttu-id="13c2f-200">Jeśli <xref:System.Windows.Window.ShowDialog%2A> został wywołany <xref:System.Windows.Window>, aby pokazać <xref:System.Windows.Window.ShowDialog%2A> , zwraca.</span><span class="sxs-lookup"><span data-stu-id="13c2f-200">If <xref:System.Windows.Window.ShowDialog%2A> was called to show the <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> returns.</span></span>  
  
 <span data-ttu-id="13c2f-201"><xref:System.Windows.Window> Zamknięcie powoduje, że wszystkie okna, które należy zamknąć.</span><span class="sxs-lookup"><span data-stu-id="13c2f-201">Closing a <xref:System.Windows.Window> causes any windows that it owns to be closed.</span></span> <span data-ttu-id="13c2f-202">Ponadto zamknięcie programu <xref:System.Windows.Window> może spowodować, że aplikacja przestanie działać w zależności od <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> sposobu ustawienia właściwości.</span><span class="sxs-lookup"><span data-stu-id="13c2f-202">Furthermore, closing a <xref:System.Windows.Window> may cause an application to stop running depending on how the <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-203">Nie można wywołać tej metody, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-203">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13c2f-204">Poniższy przykład pokazuje menu wyjścia **pliku** &#124; \*\*\*\* , które jest obsługiwane do jawnego <xref:System.Windows.Window.Close%2A>wywołania.</span><span class="sxs-lookup"><span data-stu-id="13c2f-204">The following example shows a **File** &#124; **Exit** menu being handled to explicitly call <xref:System.Windows.Window.Close%2A>.</span></span>  
  
 [!code-xaml[WindowCloseSnippets#WindowCloseXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml#windowclosexaml)]  
  
 [!code-csharp[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml.cs#windowclosecodebehind)]
 [!code-vb[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowCloseSnippets/visualbasic/mainwindow.xaml.vb#windowclosecodebehind)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="13c2f-205">w celu zezwolenia na używanie wszystkich zdarzeń systemu Windows i danych wejściowych użytkownika bez ograniczeń.</span><span class="sxs-lookup"><span data-stu-id="13c2f-205">for permission to use all windows and user input events without restriction.</span></span> <span data-ttu-id="13c2f-206">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-206">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="P:System.Windows.Window.DialogResult" />
        <altmember cref="P:System.Windows.Window.Owner" />
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-207">Występuje, gdy okno zostanie zamknięte.</span><span class="sxs-lookup"><span data-stu-id="13c2f-207">Occurs when the window is about to close.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-208">Po podniesieniu tego zdarzenia nie można uniemożliwić zamykania okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-208">Once this event is raised, a window cannot be prevented from closing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13c2f-209"><see cref="P:System.Windows.UIElement.Visibility" />jest ustawiana, <see cref="M:System.Windows.Window.Show" />lub <see cref="M:System.Windows.Window.ShowDialog" />, lub <see cref="M:System.Windows.Window.Hide" /> jest wywoływana podczas zamykania okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-209"><see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Hide" /> is called while a window is closing.</span></span></exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closing" />
        <altmember cref="M:System.Windows.Application.Shutdown" />
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="E:System.Windows.Application.SessionEnding" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : System.ComponentModel.CancelEventHandler " Usage="member this.Closing : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-210">Występuje bezpośrednio po <see cref="M:System.Windows.Window.Close" /> wywołaniu i może być obsłużone w celu anulowania zamknięcia okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-210">Occurs directly after <see cref="M:System.Windows.Window.Close" /> is called, and can be handled to cancel window closure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-211"><xref:System.Windows.Window.Closing>mogą być obsługiwane w celu wykrywania czasu zamykania okna (na przykład gdy <xref:System.Windows.Window.Close%2A> jest wywoływana).</span><span class="sxs-lookup"><span data-stu-id="13c2f-211"><xref:System.Windows.Window.Closing> can be handled to detect when a window is being closed (for example, when <xref:System.Windows.Window.Close%2A> is called).</span></span> <span data-ttu-id="13c2f-212">Ponadto, <xref:System.Windows.Window.Closing> można użyć, aby zapobiec zamykaniu okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-212">Furthermore, <xref:System.Windows.Window.Closing> can be used to prevent a window from closing.</span></span> <span data-ttu-id="13c2f-213">Aby zapobiec zamykaniu okna, można ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Właściwość <xref:System.ComponentModel.CancelEventArgs> argumentu na `true`.</span><span class="sxs-lookup"><span data-stu-id="13c2f-213">To prevent a window from closing, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.</span></span>  
  
 <span data-ttu-id="13c2f-214">Zdarzenie jest wywoływane, gdy <xref:System.Windows.Window.Close%2A> zostanie wywołany przycisk zamykania okna lub użytkownik naciśnie klawisz Alt + F4. <xref:System.Windows.Window.Closing></span><span class="sxs-lookup"><span data-stu-id="13c2f-214">The <xref:System.Windows.Window.Closing> event is raised when <xref:System.Windows.Window.Close%2A> is called, if a window's Close button is clicked, or if the user presses ALT+F4.</span></span>  
  
 <span data-ttu-id="13c2f-215">Jeśli posiadane okno zostało otwarte przez okno jego właściciela przy <xref:System.Windows.Window.Show%2A>użyciu, a okno właściciela zostało zamknięte, nie zostanie zgłoszone <xref:System.Windows.Window.Closing> zdarzenie danego okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-215">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span> <span data-ttu-id="13c2f-216">Jeśli właściciel okna jest zamknięty (zobacz <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> nie jest wywoływany w oknie należącym do użytkownika.</span><span class="sxs-lookup"><span data-stu-id="13c2f-216">If the owner of a window is closed (see <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> is not raised on the owned window.</span></span>  
  
 <span data-ttu-id="13c2f-217">Jeśli <xref:System.Windows.Application.Shutdown%2A> jest wywoływana <xref:System.Windows.Window.Closing> , zostanie wywołane zdarzenie dla każdego okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-217">If <xref:System.Windows.Application.Shutdown%2A> is called, the <xref:System.Windows.Window.Closing> event for each window is raised.</span></span> <span data-ttu-id="13c2f-218">Jeśli <xref:System.Windows.Window.Closing> jednak zostanie anulowana, anulowanie zostanie zignorowane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-218">However, if <xref:System.Windows.Window.Closing> is canceled, cancellation is ignored.</span></span>  
  
 <span data-ttu-id="13c2f-219">Jeśli sesja zakończy się, ponieważ użytkownik wyloguje się lub zamknie, <xref:System.Windows.Window.Closing> nie zostanie zgłoszony; dojście <xref:System.Windows.Application.SessionEnding> do zaimplementowania kodu, który Anuluje zamknięcie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-219">If a session ends because a user logs off or shuts down, <xref:System.Windows.Window.Closing> is not raised; handle <xref:System.Windows.Application.SessionEnding> to implement code that cancels application closure.</span></span>  
  
 <span data-ttu-id="13c2f-220">Jeśli chcesz wyświetlać i ukrywać okno wiele razy w okresie istnienia aplikacji i nie chcesz, aby można było utworzyć wystąpienie tego okna za każdym razem, możesz obsłużyć <xref:System.Windows.Window.Closing> zdarzenie, anulować je i <xref:System.Windows.Window.Hide%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="13c2f-220">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to reinstantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="13c2f-221">Następnie można wywołać <xref:System.Windows.Window.Show%2A> w tym samym wystąpieniu, aby otworzyć je ponownie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-221">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to reopen it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13c2f-222">W poniższym przykładzie pokazano <xref:System.Windows.Window> , że program określa, czy konieczna jest interwencja użytkownika.</span><span class="sxs-lookup"><span data-stu-id="13c2f-222">The following example demonstrates a <xref:System.Windows.Window> that determines whether it needs user intervention to close.</span></span>  
  
 [!code-xaml[WindowClosingSnippets#WindowClosingXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml#windowclosingxaml1)]  
  
 [!code-csharp[WindowClosingSnippets](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml.cs)]
 [!code-vb[WindowClosingSnippets](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowClosingSnippets/visualbasic/datawindow.xaml.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13c2f-223"><see cref="P:System.Windows.UIElement.Visibility" />jest ustawiana, <see cref="M:System.Windows.Window.Show" />lub <see cref="M:System.Windows.Window.ShowDialog" />, lub <see cref="M:System.Windows.Window.Close" /> jest wywoływana podczas zamykania okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-223"><see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Close" /> is called while a window is closing.</span></span></exception>
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closed" />
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ ContentRendered;" />
      <MemberSignature Language="F#" Value="member this.ContentRendered : EventHandler " Usage="member this.ContentRendered : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-224">Występuje po wyrenderowaniu zawartości okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-224">Occurs after a window's content has been rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-225">Jeśli okno nie ma zawartości, to zdarzenie nie zostanie zgłoszone.</span><span class="sxs-lookup"><span data-stu-id="13c2f-225">If the window has no content, this event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ContentControl.Content" />
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-226">Występuje, gdy okno stanie się oknem tła.</span><span class="sxs-lookup"><span data-stu-id="13c2f-226">Occurs when a window becomes a background window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-227">Okno zostanie zdezaktywowane (zostanie oknem tła), gdy:</span><span class="sxs-lookup"><span data-stu-id="13c2f-227">A window is deactivated (becomes a background window) when:</span></span>  
  
-   <span data-ttu-id="13c2f-228">Użytkownik przełącza się do innego okna w bieżącej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-228">A user switches to another window in the current application.</span></span>  
  
-   <span data-ttu-id="13c2f-229">Użytkownik przełącza się do okna w innej aplikacji za pomocą klawiszy ALT + TAB lub przy użyciu Menedżera zadań.</span><span class="sxs-lookup"><span data-stu-id="13c2f-229">A user switches to the window in another application by using ALT+TAB or by using Task Manager.</span></span>  
  
-   <span data-ttu-id="13c2f-230">Użytkownik klika przycisk paska zadań dla okna w innej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-230">A user clicks the taskbar button for a window in another application.</span></span>  
  
 <span data-ttu-id="13c2f-231">System Windows, który musi wykryć, gdy zostanie zdezaktywowany przez obsługę <xref:System.Windows.Window.Deactivated> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-231">Windows that need to detect when they become deactivated by handling the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="13c2f-232">Po pierwszym zdezaktywowaniu okno może zostać ponownie aktywowane i zdezaktywowane w okresie istnienia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-232">After a window is first deactivated, it may be reactivated and deactivated many times during its lifetime.</span></span> <span data-ttu-id="13c2f-233">Jeśli zachowanie lub stan aplikacji zależy od jej stanu aktywacji, może <xref:System.Windows.Window.IsActive%2A> ona sprawdzić, czy stan aktywacji, w której się znajduje.</span><span class="sxs-lookup"><span data-stu-id="13c2f-233">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="13c2f-234">Aplikacja może być <xref:System.Windows.Application.Deactivated>również.</span><span class="sxs-lookup"><span data-stu-id="13c2f-234">An application can also be <xref:System.Windows.Application.Deactivated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; DialogResult { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Window.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DialogResultConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-235">Pobiera lub ustawia wartość wyniku okna dialogowego, która jest wartością zwracaną z <see cref="M:System.Windows.Window.ShowDialog" /> metody.</span><span class="sxs-lookup"><span data-stu-id="13c2f-235">Gets or sets the dialog result value, which is the value that is returned from the <see cref="M:System.Windows.Window.ShowDialog" /> method.</span></span></summary>
        <value><span data-ttu-id="13c2f-236"><see cref="T:System.Nullable`1" /> Wartość typu<see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="13c2f-236">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />.</span></span> <span data-ttu-id="13c2f-237">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13c2f-237">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-238"><xref:System.Windows.Window.DialogResult%2A>można go użyć z kodu, który pokazał okno dialogowe, aby określić, czy Użytkownik zaakceptował (`true`) lub anulował (`false`) okno dialogowe.</span><span class="sxs-lookup"><span data-stu-id="13c2f-238"><xref:System.Windows.Window.DialogResult%2A> can be used from the code that showed a dialog box to determine whether a user accepted (`true`) or canceled (`false`) the dialog box.</span></span> <span data-ttu-id="13c2f-239">Jeśli okno dialogowe zostało zaakceptowane, oznacza to kod, który otworzył okno dialogowe, aby pobrać dane, które zostały zebrane przez użytkownika i przetworzyć.</span><span class="sxs-lookup"><span data-stu-id="13c2f-239">If a dialog box was accepted, this signifies to the code that opened the dialog box to retrieve the data that was collected by the user and process it.</span></span> <span data-ttu-id="13c2f-240">Jeśli okno dialogowe zostało anulowane, oznacza to, że Wywoływanie kodu powinno przerwać dalsze przetwarzanie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-240">If a dialog box was canceled, however, this signifies that calling code should stop any further processing.</span></span>  
  
 <span data-ttu-id="13c2f-241">Domyślnie okno dialogowe zostało anulowane, gdy użytkownik wykonuje jedną z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="13c2f-241">By default, a dialog box is canceled when a user does one of the following:</span></span>  
  
-   <span data-ttu-id="13c2f-242">PressesALT+F4.</span><span class="sxs-lookup"><span data-stu-id="13c2f-242">PressesALT+F4.</span></span>  
  
-   <span data-ttu-id="13c2f-243">Klika przycisk **Zamknij** .</span><span class="sxs-lookup"><span data-stu-id="13c2f-243">Clicks the **Close** button.</span></span>  
  
-   <span data-ttu-id="13c2f-244">Wybierz opcję **Zamknij** z menu systemowego.</span><span class="sxs-lookup"><span data-stu-id="13c2f-244">Selects **Close** from the System menu.</span></span>  
  
 <span data-ttu-id="13c2f-245">We wszystkich tych przypadkach <xref:System.Windows.Window.DialogResult%2A> jest `false` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-245">In all of these cases, <xref:System.Windows.Window.DialogResult%2A> is `false` by default.</span></span>  
  
 <span data-ttu-id="13c2f-246">Okno dialogowe zazwyczaj udostępnia przycisk specjalny, aby anulować okno dialogowe, czyli przycisk, którego <xref:System.Windows.Controls.Button.IsCancel%2A> właściwość jest ustawiona na. `true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-246">A dialog box typically provides a special button to cancel a dialog, which is the button whose <xref:System.Windows.Controls.Button.IsCancel%2A> property is set to `true`.</span></span> <span data-ttu-id="13c2f-247">Przycisk skonfigurowany w ten sposób automatycznie zamknie okno po jego naciśnięciu lub po naciśnięciu klawisza ESC.</span><span class="sxs-lookup"><span data-stu-id="13c2f-247">A button configured this way will automatically close a window when either it is pressed, or when the ESC key is pressed.</span></span> <span data-ttu-id="13c2f-248">W każdym z tych przypadków <xref:System.Windows.Window.DialogResult%2A> pozostało. `false`</span><span class="sxs-lookup"><span data-stu-id="13c2f-248">In either of these cases, <xref:System.Windows.Window.DialogResult%2A> remains `false`.</span></span>  
  
 <span data-ttu-id="13c2f-249">Okno dialogowe zazwyczaj udostępnia przycisk Akceptuj, który jest przyciskiem, którego <xref:System.Windows.Controls.Button.IsDefault%2A> właściwość jest ustawiona na. `true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-249">A dialog box also typically provides an accept button, which is the button whose <xref:System.Windows.Controls.Button.IsDefault%2A> property is set to `true`.</span></span> <span data-ttu-id="13c2f-250">Przycisk skonfigurowany w ten sposób spowoduje <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzenie zdarzenia, gdy zostanie naciśnięte lub klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="13c2f-250">A button configured this way will raise its <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event when either it or the ENTER key is pressed.</span></span> <span data-ttu-id="13c2f-251">Jednak nie będzie on automatycznie zamykał okna dialogowego ani nie ustawił <xref:System.Windows.Window.DialogResult%2A> go jako. `true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-251">However, it won't automatically close the dialog box, nor will it set <xref:System.Windows.Window.DialogResult%2A> to `true`.</span></span> <span data-ttu-id="13c2f-252">Należy ręcznie napisać ten kod, zazwyczaj z <xref:System.Windows.Controls.Primitives.ButtonBase.Click> programu obsługi zdarzeń dla przycisku domyślnego.</span><span class="sxs-lookup"><span data-stu-id="13c2f-252">You need to manually write this code, usually from the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the default button.</span></span>  
  
 <span data-ttu-id="13c2f-253"><xref:System.Windows.Window.DialogResult%2A>jest `null` wyświetlany, gdy okno dialogowe jest wyświetlane, ale nie zostało zaakceptowane ani anulowane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-253"><xref:System.Windows.Window.DialogResult%2A> is `null` when the dialog box is shown but neither accepted nor canceled.</span></span>  
  
 <span data-ttu-id="13c2f-254">Po zamknięciu okna dialogowego można uzyskać wynik okna dialogowego z wartości zwracanej przez <xref:System.Windows.Window.ShowDialog%2A> metodę lub przez sprawdzenie <xref:System.Windows.Window.DialogResult%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="13c2f-254">After a dialog box closes, you can get the dialog result from the value returned by <xref:System.Windows.Window.ShowDialog%2A> method, or by inspecting the <xref:System.Windows.Window.DialogResult%2A> property.</span></span>  
  
 <span data-ttu-id="13c2f-255"><xref:System.Windows.Window.DialogResult%2A>można ustawić tylko wtedy, <xref:System.Windows.Window> gdy jest otwarty, wywołując jego <xref:System.Windows.Window.ShowDialog%2A> metodę.</span><span class="sxs-lookup"><span data-stu-id="13c2f-255"><xref:System.Windows.Window.DialogResult%2A> can only be set when a <xref:System.Windows.Window> is opened by calling its <xref:System.Windows.Window.ShowDialog%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-256">Nie można ustawić lub pobrać tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-256">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13c2f-257">Poniższy przykład pokazuje, jak skonfigurować przycisk OK i przycisk Anuluj, aby przywrócić odpowiednie <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-257">The following example shows how to configure an OK button and a Cancel button to return the appropriate <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 [!code-xaml[WindowDialogResultSnippets#WindowDialogResultXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml#windowdialogresultxaml)]  
  
 [!code-csharp[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml.cs#windowdialogresultcodebehind)]
 [!code-vb[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDialogResultSnippets/visualbasic/dialogbox.xaml.vb#windowdialogresultcodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13c2f-258"><see cref="P:System.Windows.Window.DialogResult" />jest ustawiany przed otwarciem okna przez wywołanie <see cref="M:System.Windows.Window.ShowDialog" />.</span><span class="sxs-lookup"><span data-stu-id="13c2f-258"><see cref="P:System.Windows.Window.DialogResult" /> is set before a window is opened by calling <see cref="M:System.Windows.Window.ShowDialog" />.</span></span>  
  
<span data-ttu-id="13c2f-259">—lub—</span><span class="sxs-lookup"><span data-stu-id="13c2f-259">-or-</span></span> 
 <span data-ttu-id="13c2f-260"><see cref="P:System.Windows.Window.DialogResult" />jest ustawiony w oknie otwartym przez wywołanie <see cref="M:System.Windows.Window.Show" />.</span><span class="sxs-lookup"><span data-stu-id="13c2f-260"><see cref="P:System.Windows.Window.DialogResult" /> is set on a window that is opened by calling <see cref="M:System.Windows.Window.Show" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.DpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.DpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-261">Występuje po wartości DPI ekranu, w którym jest wyświetlana zmiana okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-261">Occurs after the DPI of the screen on which the Window is displayed changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DpiChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DpiChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.DpiChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DpiChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DpiChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DpiChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Window.DpiChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-262">A <see cref="T:System.Windows.RoutedEvent" /> dla gdy wartość DPI ekranu jest zmieniana.</span><span class="sxs-lookup"><span data-stu-id="13c2f-262">A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the Window is on changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragMove">
      <MemberSignature Language="C#" Value="public void DragMove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DragMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.DragMove" />
      <MemberSignature Language="VB.NET" Value="Public Sub DragMove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DragMove();" />
      <MemberSignature Language="F#" Value="member this.DragMove : unit -&gt; unit" Usage="window.DragMove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13c2f-263">Umożliwia przeciągnięcie okna przez myszą z lewym przyciskiem myszy nad widocznym obszarem obszaru klienta okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-263">Allows a window to be dragged by a mouse with its left button down over an exposed area of the window's client area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-264">Lewy przycisk myszy musi być wyłączony, gdy <xref:System.Windows.Window.DragMove%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="13c2f-264">The left mouse button must be down when <xref:System.Windows.Window.DragMove%2A> is called.</span></span> <span data-ttu-id="13c2f-265">Jednym ze sposobów wykrycia naciśnięcia przycisku myszy jest obsłużenie <xref:System.Windows.UIElement.MouseLeftButtonDown> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-265">One way to detect when the left mouse button is pressed is to handle the <xref:System.Windows.UIElement.MouseLeftButtonDown> event.</span></span>  
  
 <span data-ttu-id="13c2f-266">Gdy <xref:System.Windows.Window.DragMove%2A> jest wywoływana, lewy przycisk myszy musi być rozciśnięty w obszarze widocznego obszaru klienta okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-266">When <xref:System.Windows.Window.DragMove%2A> is called, the left mouse button must be depressed over an exposed area of the window's client area.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-267">Nie można wywołać tej metody, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-267">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13c2f-268">Poniższy przykład pokazuje, jak przesłonić <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> wywołanie. <xref:System.Windows.Window.DragMove%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-268">The following example shows how to override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to call <xref:System.Windows.Window.DragMove%2A>.</span></span>  
  
 [!code-csharp[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDragMoveSnippets/CSharp/MainWindow.xaml.cs#callwindowdragmovecodebehind)]
 [!code-vb[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDragMoveSnippets/visualbasic/mainwindow.xaml.vb#callwindowdragmovecodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13c2f-269">Lewy przycisk myszy nie działa.</span><span class="sxs-lookup"><span data-stu-id="13c2f-269">The left mouse button is not down.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="13c2f-270">w celu przeciągnięcia okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-270">for permission to drag a window.</span></span> <span data-ttu-id="13c2f-271">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-271">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="E:System.Windows.Window.LocationChanged" />
      </Docs>
    </Member>
    <Member MemberName="GetWindow">
      <MemberSignature Language="C#" Value="public static System.Windows.Window GetWindow (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Window GetWindow(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Window ^ GetWindow(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetWindow : System.Windows.DependencyObject -&gt; System.Windows.Window" Usage="System.Windows.Window.GetWindow dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="13c2f-272">Obiekt Dependency.</span><span class="sxs-lookup"><span data-stu-id="13c2f-272">The dependency object.</span></span></param>
        <summary><span data-ttu-id="13c2f-273">Zwraca odwołanie do <see cref="T:System.Windows.Window" /> obiektu, który hostuje drzewo zawartości, w którym znajduje się obiekt Dependency.</span><span class="sxs-lookup"><span data-stu-id="13c2f-273">Returns a reference to the <see cref="T:System.Windows.Window" /> object that hosts the content tree within which the dependency object is located.</span></span></summary>
        <returns><span data-ttu-id="13c2f-274"><see cref="T:System.Windows.Window" /> Odwołanie do okna hosta.</span><span class="sxs-lookup"><span data-stu-id="13c2f-274">A <see cref="T:System.Windows.Window" /> reference to the host window.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="13c2f-275"><paramref name="dependencyObject" />ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="13c2f-275"><paramref name="dependencyObject" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hide();" />
      <MemberSignature Language="F#" Value="member this.Hide : unit -&gt; unit" Usage="window.Hide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13c2f-276">Powoduje, że okno jest niewidoczne.</span><span class="sxs-lookup"><span data-stu-id="13c2f-276">Makes a window invisible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-277">Okno nie jest zamknięte, gdy jest ukryte i <xref:System.Windows.Window.Closing> nie jest wywoływane zdarzenie ani. <xref:System.Windows.Window.Closed></span><span class="sxs-lookup"><span data-stu-id="13c2f-277">A window is not closed when it is hidden, and neither the <xref:System.Windows.Window.Closing> nor <xref:System.Windows.Window.Closed> event is raised.</span></span> <span data-ttu-id="13c2f-278">Zamiast tego okno <xref:System.Windows.UIElement.Visibility%2A> właściwości jest ustawione na <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-278">Instead, the window's <xref:System.Windows.UIElement.Visibility%2A> property is set to <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="13c2f-279">Jeśli okno jest aplikacją <xref:System.Windows.Application.MainWindow%2A> i <xref:System.Windows.Application.ShutdownMode%2A> jest aplikacją, aplikacja nie jest <xref:System.Windows.ShutdownMode.OnMainWindowClose>zamykana.</span><span class="sxs-lookup"><span data-stu-id="13c2f-279">If a window is the application's <xref:System.Windows.Application.MainWindow%2A> and the application's <xref:System.Windows.Application.ShutdownMode%2A> is <xref:System.Windows.ShutdownMode.OnMainWindowClose>, the application does not shut down.</span></span> <span data-ttu-id="13c2f-280">Podobnie aplikacja nie jest zamykana, jeśli okno jest jedynym oknem, a tryb zamykania aplikacji jest <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-280">Likewise, the application does not shut down if a window is the only window and the application's shutdown mode is <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span></span>  
  
 <span data-ttu-id="13c2f-281">Jeśli chcesz wyświetlać i ukrywać okno wiele razy w okresie istnienia aplikacji i nie chcesz, aby okno było odtwarzane za każdym razem, możesz obsłużyć <xref:System.Windows.Window.Closing> zdarzenie, anulować je i <xref:System.Windows.Window.Hide%2A> wywołać metodę.</span><span class="sxs-lookup"><span data-stu-id="13c2f-281">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to re-instantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="13c2f-282">Następnie można wywołać <xref:System.Windows.Window.Show%2A> w tym samym wystąpieniu, aby je ponownie otworzyć.</span><span class="sxs-lookup"><span data-stu-id="13c2f-282">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to re-open it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13c2f-283"><see cref="M:System.Windows.Window.Hide" />jest wywoływana w oknie, które jest zamykane<see cref="E:System.Windows.Window.Closing" />() lub zostało zamknięte (<see cref="E:System.Windows.Window.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="13c2f-283"><see cref="M:System.Windows.Window.Hide" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span></span></exception>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="M:System.Windows.Window.Close" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ Icon { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Window.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-284">Pobiera lub ustawia ikonę okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-284">Gets or sets a window's icon.</span></span></summary>
        <value><span data-ttu-id="13c2f-285"><see cref="T:System.Windows.Media.ImageSource" /> Obiekt, który reprezentuje ikonę.</span><span class="sxs-lookup"><span data-stu-id="13c2f-285">An <see cref="T:System.Windows.Media.ImageSource" /> object that represents the icon.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-286">Aplikacje autonomiczne Windows Presentation Foundation (WPF) mają dwa typy ikon:</span><span class="sxs-lookup"><span data-stu-id="13c2f-286">Windows Presentation Foundation (WPF) standalone applications have two types of icons:</span></span>  
  
-   <span data-ttu-id="13c2f-287">Ikona jednego zestawu, która jest określona przy użyciu `<ApplicationIcon>` właściwości w pliku kompilacji projektu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-287">One assembly icon, which is specified by using the `<ApplicationIcon>` property in the application's project build file.</span></span> <span data-ttu-id="13c2f-288">Ta ikona jest używana jako ikona pulpitu dla zestawu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-288">This icon is used as the desktop icon for an assembly.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="13c2f-289">Podczas debugowania w programie Visual Studio ikona może nie być wyświetlana ze względu na proces hostingu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-289">When debugging in Visual Studio, your icon may not appear due to the hosting process.</span></span> <span data-ttu-id="13c2f-290">Jeśli uruchomisz plik wykonywalny, zostanie wyświetlona ikona.</span><span class="sxs-lookup"><span data-stu-id="13c2f-290">If you run the executable, the icon will appear.</span></span> <span data-ttu-id="13c2f-291">Aby uzyskać więcej informacji, zobacz [proces hostingu (vshost. exe)](https://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span><span class="sxs-lookup"><span data-stu-id="13c2f-291">For more information, see [Hosting Process (vshost.exe)](https://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span></span>  
  
-   <span data-ttu-id="13c2f-292">Jedna ikona na okno, która jest określona przez <xref:System.Windows.Window.Icon%2A>ustawienie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-292">One icon per window that is specified by setting <xref:System.Windows.Window.Icon%2A>.</span></span> <span data-ttu-id="13c2f-293">Dla każdego okna ta ikona jest używana na pasku tytułu, na pasku zadań i na pozycji listy wyboru aplikacji ALT-TAB.</span><span class="sxs-lookup"><span data-stu-id="13c2f-293">For each window, this icon is used in its title bar, its task bar button, and in its ALT-TAB application selection list entry.</span></span>  
  
 <span data-ttu-id="13c2f-294">Okno WPF zawsze wyświetla ikonę.</span><span class="sxs-lookup"><span data-stu-id="13c2f-294">A WPF window always displays an icon.</span></span> <span data-ttu-id="13c2f-295">Gdy wartość nie jest określona przez ustawienie <xref:System.Windows.Window.Icon%2A>, WPF wybiera ikonę, która zostanie wyświetlona na podstawie następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="13c2f-295">When one is not provided by setting <xref:System.Windows.Window.Icon%2A>, WPF chooses an icon to display based on the following rules:</span></span>  
  
1.  <span data-ttu-id="13c2f-296">Użyj ikony zestawu, jeśli została określona.</span><span class="sxs-lookup"><span data-stu-id="13c2f-296">Use the assembly icon, if specified.</span></span>  
  
2.  <span data-ttu-id="13c2f-297">Jeśli ikona zestawu nie jest określona, Użyj domyślnej ikony systemu Microsoft Windows.</span><span class="sxs-lookup"><span data-stu-id="13c2f-297">If the assembly icon is not specified, use the default Microsoft Windows icon.</span></span>  
  
 <span data-ttu-id="13c2f-298">Jeśli używasz <xref:System.Windows.Window.Icon%2A> , aby określić niestandardową ikonę okna, możesz przywrócić domyślną ikonę aplikacji przez ustawienie <xref:System.Windows.Window.Icon%2A> do `null`.</span><span class="sxs-lookup"><span data-stu-id="13c2f-298">If you use <xref:System.Windows.Window.Icon%2A> to specify a custom window icon, you can restore the default application icon by setting <xref:System.Windows.Window.Icon%2A> to `null`.</span></span>  
  
 <span data-ttu-id="13c2f-299">Pojedynczą ikonę można użyć na różne sposoby w systemie Windows, w tym na pasku tytułu okna, pasek zadań dla okna, na liście wyboru pliku ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="13c2f-299">A single icon can be used in a variety of ways in Windows, including being shown in the title bar of a window, the task bar for a window, the ALT+TAB file selection list.</span></span> <span data-ttu-id="13c2f-300">Każda z tych pokazuje ikonę przy użyciu innego rozmiaru; ikona 16x16 pikseli jest wyświetlana na pasku tytułu okna i na pasku zadań, a na liście wyboru pliku na karcie ALT + TAB zostanie wyświetlona ikona piksela 32x32.</span><span class="sxs-lookup"><span data-stu-id="13c2f-300">Each of these shows the icon using a different size; a 16x16 pixel icon is displayed in the title bar of a window and in the task bar, while a 32x32 pixel icon is displayed in the ALT+TAB file selection list.</span></span> <span data-ttu-id="13c2f-301">Niektóre aplikacje, takie [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)]jak, udostępniają menu **Widok** umożliwiające wybranie rozmiaru ikony, którą chcesz wyświetlić.</span><span class="sxs-lookup"><span data-stu-id="13c2f-301">Some applications, like [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], provide a **View** menu that allows you to choose the size of the icon you'd like to view.</span></span>  
  
 <span data-ttu-id="13c2f-302">Aby dowiedzieć się o różnych rozmiarach wyświetlania, plik ikony składa się z co najmniej jednej ikony rzeczywistej, w której każda z nich reprezentuje wersję ikony, która jest przeznaczona dla określonego rozmiaru i głębokości koloru.</span><span class="sxs-lookup"><span data-stu-id="13c2f-302">To cater to the various display sizes, an icon file is composed of one or more actual icons where each one represents a version of the icon that targets a specific size and color depth.</span></span> <span data-ttu-id="13c2f-303">Na przykład jedna ikona może mieć tylko jedną ikonę 16x16 pikseli z 16 kolorami, a inna może zawierać ikony pikseli 16x16 pikseli i 32x32 z 16 kolorami i 256 kolorami.</span><span class="sxs-lookup"><span data-stu-id="13c2f-303">For example, one icon may only have a single 16x16 pixel icon with 16 colors, while another may contain 16x16 pixel and 32x32 pixel icons with both 16 colors and 256 colors.</span></span>  
  
 <span data-ttu-id="13c2f-304">Jeśli ikony dla wszystkich możliwych rozmiarów i głębi kolorów istnieją w pliku ikony, <xref:System.Windows.Window> program użyje odpowiedniej ikony.</span><span class="sxs-lookup"><span data-stu-id="13c2f-304">If icons for all possible sizes and color depths exist within an icon file, <xref:System.Windows.Window> will use the appropriate icon.</span></span> <span data-ttu-id="13c2f-305">Jeśli plik ikony zawiera tylko podzestaw wszystkich możliwych ikon, program <xref:System.Windows.Window> używa następnej najbardziej odpowiedniej ikony w kolejności zmniejszania rozmiaru i głębi kolorów.</span><span class="sxs-lookup"><span data-stu-id="13c2f-305">If an icon file contains only a subset of all the possible icons, <xref:System.Windows.Window> uses the next most appropriate icon in order of decreasing sizes and color depth.</span></span>  
  
 <span data-ttu-id="13c2f-306">Wynikiem tego jest to, że ikona będzie zawsze używana przez <xref:System.Windows.Window>program, chociaż użyta ikona może nie wskazywać wymaganego rozmiaru i głębokości koloru.</span><span class="sxs-lookup"><span data-stu-id="13c2f-306">The result is that an icon will always be used by <xref:System.Windows.Window>, although the icon used may not target the required size and color depth.</span></span> <span data-ttu-id="13c2f-307">Na przykład ikona 16x16 pikseli z 16 kolorami może być używana do wyświetlania jako ikony pikseli 32x32 z 256 kolory.</span><span class="sxs-lookup"><span data-stu-id="13c2f-307">For example, a 16x16 pixel icon with 16 colors may be used for display as a 32x32 pixel icon with 256 colors.</span></span> <span data-ttu-id="13c2f-308">Może to spowodować niepożądane efekty wizualne, takie jak pixilation, ale można je uniknąć przez utworzenie ikon dla wszystkich rozmiarów i głębi kolorów.</span><span class="sxs-lookup"><span data-stu-id="13c2f-308">This can cause undesirable visual effects, such as pixilation, but may be avoided by creating icons for all targeted sizes and color depths.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-309">Nie można ustawić lub pobrać tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-309">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIcon"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-310">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-310">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-311">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-311">Identifier field</span></span>|<xref:System.Windows.Window.IconProperty>|  
|<span data-ttu-id="13c2f-312">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-312">Metadata properties set to `true`</span></span>|<span data-ttu-id="13c2f-313">Brak</span><span class="sxs-lookup"><span data-stu-id="13c2f-313">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="13c2f-314">Poniższy przykład pokazuje, jak ustawić ikonę okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-314">The following example shows how to set a window icon.</span></span>  
  
 [!code-xaml[WindowIconSnippets#WindowIconSetXAML](~/samples/snippets/xaml/VS_Snippets_Wpf/WindowIconSnippets/XAML/MainWindow.xaml#windowiconsetxaml)]  
  
 [!code-csharp[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowIconSnippets/CSharp/MainWindow.xaml.cs#setwindowiconincode)]
 [!code-vb[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowIconSnippets/visualbasic/mainwindow.xaml.vb#setwindowiconincode)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="13c2f-315">dla uprawnienia do ustawiania ikony.</span><span class="sxs-lookup"><span data-stu-id="13c2f-315">for permission to set the icon.</span></span> <span data-ttu-id="13c2f-316">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-316">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IconProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-317">Identyfikuje właściwość <see cref="P:System.Windows.Window.Icon" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-317">Identifies the <see cref="P:System.Windows.Window.Icon" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Windows.Window.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-318">Pobiera wartość wskazującą, czy okno jest aktywne.</span><span class="sxs-lookup"><span data-stu-id="13c2f-318">Gets a value that indicates whether the window is active.</span></span></summary>
        <value><span data-ttu-id="13c2f-319"><see langword="true" />Jeśli okno jest aktywne; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-319"><see langword="true" /> if the window is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="13c2f-320">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="13c2f-320">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-321">Aktywne okno jest bieżącym oknem pierwszego planu użytkownika i ma fokus, który jest oznaczony aktywnym wyglądem paska tytułu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-321">An active window is the user's current foreground window and has the focus, which is signified by the active appearance of the title bar.</span></span> <span data-ttu-id="13c2f-322">Aktywne okno będzie również najbardziej górną częścią wszystkich okien najwyższego poziomu, które nie ustawi <xref:System.Windows.Window.Topmost%2A> jawnie właściwości.</span><span class="sxs-lookup"><span data-stu-id="13c2f-322">An active window will also be the top-most of all top-level windows that don't explicitly set the <xref:System.Windows.Window.Topmost%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIsActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-323">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-323">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-324">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-324">Identifier field</span></span>|<xref:System.Windows.Window.IsActiveProperty>|  
|<span data-ttu-id="13c2f-325">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-325">Metadata properties set to `true`</span></span>|<span data-ttu-id="13c2f-326">Brak</span><span class="sxs-lookup"><span data-stu-id="13c2f-326">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="IsActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IsActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsActiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsActiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IsActiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-327">Identyfikuje właściwość <see cref="P:System.Windows.Window.IsActive" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-327">Identifies the <see cref="P:System.Windows.Window.IsActive" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Left : double with get, set" Usage="System.Windows.Window.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-328">Pobiera lub ustawia położenie lewej krawędzi okna w odniesieniu do pulpitu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-328">Gets or sets the position of the window's left edge, in relation to the desktop.</span></span></summary>
        <value><span data-ttu-id="13c2f-329">Pozycja lewej krawędzi okna w jednostkach logicznych (1/1/96 cala).</span><span class="sxs-lookup"><span data-stu-id="13c2f-329">The position of the window's left edge, in logical units (1/96th of an inch).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-330">Gdy jest zmaksymalizowane lub zminimalizowane, ta wartość reprezentuje lewą krawędź punktu przywracania <xref:System.Windows.Window>dla. <xref:System.Windows.Window></span><span class="sxs-lookup"><span data-stu-id="13c2f-330">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the left edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="13c2f-331">Tej właściwości nie można ustawić za pomocą stylu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-331">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="13c2f-332">Jeśli wartość nie zostanie określona, <xref:System.Windows.Window.Left%2A> jest ustawiona na wartość domyślną systemowej.</span><span class="sxs-lookup"><span data-stu-id="13c2f-332">If you do not specify a value, <xref:System.Windows.Window.Left%2A> is set to the system default value.</span></span> <span data-ttu-id="13c2f-333">Możesz również określić wartość domyślną system, ustawiając ustawienie <xref:System.Windows.Window.Left%2A> na. <xref:System.Double.NaN></span><span class="sxs-lookup"><span data-stu-id="13c2f-333">You can also specify the system default value by setting <xref:System.Windows.Window.Left%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="13c2f-334">Ani nie jest prawidłową wartością dla <xref:System.Windows.Window.Left%2A>. <xref:System.Double.NegativeInfinity> <xref:System.Double.PositiveInfinity></span><span class="sxs-lookup"><span data-stu-id="13c2f-334">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Left%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-335">Nie można ustawić lub pobrać tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-335">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowLeft"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-336">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-336">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-337">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-337">Identifier field</span></span>|<xref:System.Windows.Window.LeftProperty>|  
|<span data-ttu-id="13c2f-338">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-338">Metadata properties set to `true`</span></span>|<span data-ttu-id="13c2f-339">Brak</span><span class="sxs-lookup"><span data-stu-id="13c2f-339">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.LeftProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LeftProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LeftProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LeftProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.LeftProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-340">Identyfikuje właściwość <see cref="P:System.Windows.Window.Left" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-340">Identifies the <see cref="P:System.Windows.Window.Left" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-341">Występuje, gdy zmieni się lokalizacja okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-341">Occurs when the window's location changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-342">Lokalizacja okna zmienia się, gdy:</span><span class="sxs-lookup"><span data-stu-id="13c2f-342">A window's location changes when:</span></span>  
  
-   <span data-ttu-id="13c2f-343">Użytkownik przenosi okno, przeciągając je na pasek tytułu okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-343">A user moves a window by dragging it with the window's title bar.</span></span>  
  
-   <span data-ttu-id="13c2f-344">Okno jest przenoszone po <xref:System.Windows.Window.DragMove%2A> wywołaniu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-344">A window is moved after <xref:System.Windows.Window.DragMove%2A> is called.</span></span>  
  
-   <span data-ttu-id="13c2f-345"><xref:System.Windows.Window.Left%2A> Właściwość or <xref:System.Windows.Window.Top%2A> jest ustawiana programowo.</span><span class="sxs-lookup"><span data-stu-id="13c2f-345">Either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> property is set programmatically.</span></span>  
  
-   <span data-ttu-id="13c2f-346">Wybrano element menu **przenoszenia** menu systemowego okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-346">The **Move** menu item of a window's System menu is chosen.</span></span>  
  
-   <span data-ttu-id="13c2f-347"><xref:System.Windows.Window.WindowState%2A> Właściwość zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="13c2f-347">The <xref:System.Windows.Window.WindowState%2A> property is changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Window.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-348">Pobiera moduł wyliczający dla logicznych elementów podrzędnych okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-348">Gets an enumerator for a window's logical child elements.</span></span></summary>
        <value><span data-ttu-id="13c2f-349"><see cref="T:System.Collections.IEnumerator" /> Logiczne elementy podrzędne okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-349">An <see cref="T:System.Collections.IEnumerator" /> a window's logical child elements.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.LogicalChildren" />
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="13c2f-350"><see cref="T:System.Windows.Size" /> Odzwierciedla dostępny rozmiar, który to okno może dać dla elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="13c2f-350">A <see cref="T:System.Windows.Size" /> that reflects the available size that this window can give to the child.</span></span> <span data-ttu-id="13c2f-351">Nieskończoność można podać jako wartość, aby wskazać, że rozmiar okna ma być dostępny.</span><span class="sxs-lookup"><span data-stu-id="13c2f-351">Infinity can be given as a value to indicate that the window will size to whatever content is available.</span></span></param>
        <summary><span data-ttu-id="13c2f-352">Zastąp tę metodę, aby zmierzyć rozmiar okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-352">Override this method to measure the size of a window.</span></span></summary>
        <returns><span data-ttu-id="13c2f-353"><see cref="T:System.Windows.Size" /> Odzwierciedla rozmiar, który jest określany przez to okno podczas układania w oparciu o obliczenia rozmiarów dzieci.</span><span class="sxs-lookup"><span data-stu-id="13c2f-353">A <see cref="T:System.Windows.Size" /> that reflects the size that this window determines it needs during layout, based on its calculations of children's sizes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-354"><xref:System.Windows.Window.MeasureOverride%2A>nie jest wywoływana, <xref:System.Windows.UIElement.Visibility%2A> Jeśli właściwość ma <xref:System.Windows.Visibility.Collapsed>wartość.</span><span class="sxs-lookup"><span data-stu-id="13c2f-354"><xref:System.Windows.Window.MeasureOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="13c2f-355">Jeśli wartość <xref:System.Windows.UIElement.Visibility%2A> właściwości <xref:System.Windows.Visibility.Hidden> jest <xref:System.Windows.Visibility.Visible>albo ,<xref:System.Windows.Window.MeasureOverride%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="13c2f-355">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-356"><xref:System.Windows.UIElement.Visibility%2A> <xref:System.Windows.Visibility.Visible>Gdy lub są<xref:System.Windows.Window.ShowDialog%2A> wywoływane ,właściwośćobiektumaustawionąwartość.<xref:System.Windows.Window> <xref:System.Windows.Window.Show%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-356">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivated : EventArgs -&gt; unit&#xA;override this.OnActivated : EventArgs -&gt; unit" Usage="window.OnActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13c2f-357"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-357">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="13c2f-358"><see cref="E:System.Windows.Window.Activated" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-358">Raises the <see cref="E:System.Windows.Window.Activated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-359"><xref:System.Windows.Window.OnActivated%2A><xref:System.Windows.Window.Activated> podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-359"><xref:System.Windows.Window.OnActivated%2A> raises the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="13c2f-360">Typ, który pochodzi od <xref:System.Windows.Window> może przesłonić. <xref:System.Windows.Window.OnActivated%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-360">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnActivated%2A>.</span></span> <span data-ttu-id="13c2f-361">Przesłonięta Metoda musi <xref:System.Windows.Window.OnActivated%2A> wywoływać klasę bazową <xref:System.Windows.Window.Activated> , jeśli trzeba ją wywołać.</span><span class="sxs-lookup"><span data-stu-id="13c2f-361">The overridden method must call <xref:System.Windows.Window.OnActivated%2A> on the base class if <xref:System.Windows.Window.Activated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="window.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13c2f-362"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-362">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="13c2f-363"><see cref="E:System.Windows.Window.Closed" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-363">Raises the <see cref="E:System.Windows.Window.Closed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-364"><xref:System.Windows.Window.OnClosed%2A><xref:System.Windows.Window.Closed> podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-364"><xref:System.Windows.Window.OnClosed%2A> raises the <xref:System.Windows.Window.Closed> event.</span></span>  
  
 <span data-ttu-id="13c2f-365">Typ, który pochodzi od <xref:System.Windows.Window> może przesłonić. <xref:System.Windows.Window.OnClosed%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-365">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosed%2A>.</span></span> <span data-ttu-id="13c2f-366">Przesłonięta Metoda musi <xref:System.Windows.Window.OnClosed%2A> wywoływać klasę bazową <xref:System.Windows.Window.Closed> , jeśli trzeba ją wywołać.</span><span class="sxs-lookup"><span data-stu-id="13c2f-366">The overridden method must call <xref:System.Windows.Window.OnClosed%2A> on the base class if <xref:System.Windows.Window.Closed> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="window.OnClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13c2f-367">A <see cref="T:System.ComponentModel.CancelEventArgs" /> , który zawiera dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-367">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="13c2f-368"><see cref="E:System.Windows.Window.Closing" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-368">Raises the <see cref="E:System.Windows.Window.Closing" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-369"><xref:System.Windows.Window.OnClosing%2A><xref:System.Windows.Window.Closing> podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-369"><xref:System.Windows.Window.OnClosing%2A> raises the <xref:System.Windows.Window.Closing> event.</span></span>  
  
 <span data-ttu-id="13c2f-370">Typ, który pochodzi od <xref:System.Windows.Window> może przesłonić. <xref:System.Windows.Window.OnClosing%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-370">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosing%2A>.</span></span> <span data-ttu-id="13c2f-371">Przesłonięta Metoda musi <xref:System.Windows.Window.OnClosing%2A> wywoływać klasę bazową <xref:System.Windows.Window.Closing> , jeśli trzeba ją wywołać.</span><span class="sxs-lookup"><span data-stu-id="13c2f-371">The overridden method must call <xref:System.Windows.Window.OnClosing%2A> on the base class if <xref:System.Windows.Window.Closing> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnContentChanged (object oldContent, object newContent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContentChanged(object oldContent, object newContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContentChanged (oldContent As Object, newContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContentChanged(System::Object ^ oldContent, System::Object ^ newContent);" />
      <MemberSignature Language="F#" Value="override this.OnContentChanged : obj * obj -&gt; unit" Usage="window.OnContentChanged (oldContent, newContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContent" Type="System.Object" />
        <Parameter Name="newContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldContent"><span data-ttu-id="13c2f-372">Odwołanie do katalogu głównego starego drzewa zawartości.</span><span class="sxs-lookup"><span data-stu-id="13c2f-372">A reference to the root of the old content tree.</span></span></param>
        <param name="newContent"><span data-ttu-id="13c2f-373">Odwołanie do katalogu głównego nowego drzewa zawartości.</span><span class="sxs-lookup"><span data-stu-id="13c2f-373">A reference to the root of the new content tree.</span></span></param>
        <summary><span data-ttu-id="13c2f-374">Wywoływana, gdy <see cref="P:System.Windows.Controls.ContentControl.Content" /> właściwość zostanie zmieniona.</span><span class="sxs-lookup"><span data-stu-id="13c2f-374">Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentRendered">
      <MemberSignature Language="C#" Value="protected virtual void OnContentRendered (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentRendered(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentRendered(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentRendered (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentRendered(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentRendered : EventArgs -&gt; unit&#xA;override this.OnContentRendered : EventArgs -&gt; unit" Usage="window.OnContentRendered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13c2f-375"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-375">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="13c2f-376"><see cref="E:System.Windows.Window.ContentRendered" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-376">Raises the <see cref="E:System.Windows.Window.ContentRendered" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-377"><xref:System.Windows.Window.OnContentRendered%2A><xref:System.Windows.Window.ContentRendered> podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-377"><xref:System.Windows.Window.OnContentRendered%2A> raises the <xref:System.Windows.Window.ContentRendered> event.</span></span>  
  
 <span data-ttu-id="13c2f-378">Typ, który pochodzi od <xref:System.Windows.Window> może przesłonić. <xref:System.Windows.Window.OnContentRendered%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-378">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnContentRendered%2A>.</span></span> <span data-ttu-id="13c2f-379">Przesłonięta Metoda musi <xref:System.Windows.Window.OnContentRendered%2A> wywoływać klasę bazową <xref:System.Windows.Window.ContentRendered> , jeśli trzeba ją wywołać.</span><span class="sxs-lookup"><span data-stu-id="13c2f-379">The overridden method must call <xref:System.Windows.Window.OnContentRendered%2A> on the base class if <xref:System.Windows.Window.ContentRendered> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="window.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13c2f-380">Tworzy i zwraca <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> obiekt dla tego <see cref="T:System.Windows.Window" />obiektu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-380">Creates and returns a <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span></span></summary>
        <returns><span data-ttu-id="13c2f-381">Obiekt dla tego <see cref="T:System.Windows.Window" />elementu. <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-381">A <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-382">Ta metoda przesłania <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-382">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivated">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivated : EventArgs -&gt; unit&#xA;override this.OnDeactivated : EventArgs -&gt; unit" Usage="window.OnDeactivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13c2f-383"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-383">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="13c2f-384"><see cref="E:System.Windows.Window.Deactivated" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-384">Raises the <see cref="E:System.Windows.Window.Deactivated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-385"><xref:System.Windows.Window.OnDeactivated%2A><xref:System.Windows.Window.Deactivated> podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-385"><xref:System.Windows.Window.OnDeactivated%2A> raises the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="13c2f-386">Typ, który pochodzi od <xref:System.Windows.Window> może przesłonić. <xref:System.Windows.Window.OnDeactivated%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-386">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnDeactivated%2A>.</span></span> <span data-ttu-id="13c2f-387">Przesłonięta Metoda musi <xref:System.Windows.Window.OnDeactivated%2A> wywoływać klasę bazową <xref:System.Windows.Window.Deactivated> , jeśli trzeba ją wywołać.</span><span class="sxs-lookup"><span data-stu-id="13c2f-387">The overridden method must call <xref:System.Windows.Window.OnDeactivated%2A> on the base class if <xref:System.Windows.Window.Deactivated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected override void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberSignature Language="F#" Value="override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="window.OnDpiChanged (oldDpi, newDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="oldDpi"><span data-ttu-id="13c2f-388">Poprzednie ustawienie skalowania DPI.</span><span class="sxs-lookup"><span data-stu-id="13c2f-388">The previous DPI scale setting.</span></span></param>
        <param name="newDpi"><span data-ttu-id="13c2f-389">Nowe ustawienie skalowania DPI.</span><span class="sxs-lookup"><span data-stu-id="13c2f-389">The new DPI scale setting.</span></span></param>
        <summary><span data-ttu-id="13c2f-390">Wywołuje się, gdy zmienia się wartość DPI tego okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-390">Called when the DPI at which this window is rendered changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="window.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13c2f-391"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-391">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="13c2f-392"><see cref="E:System.Windows.Window.LocationChanged" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-392">Raises the <see cref="E:System.Windows.Window.LocationChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-393"><xref:System.Windows.Window.OnLocationChanged%2A><xref:System.Windows.Window.LocationChanged> podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-393"><xref:System.Windows.Window.OnLocationChanged%2A> raises the <xref:System.Windows.Window.LocationChanged> event.</span></span>  
  
 <span data-ttu-id="13c2f-394">Typ, który pochodzi od <xref:System.Windows.Window> może przesłonić. <xref:System.Windows.Window.OnLocationChanged%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-394">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnLocationChanged%2A>.</span></span> <span data-ttu-id="13c2f-395">Przesłonięta Metoda musi <xref:System.Windows.Window.OnLocationChanged%2A> wywoływać klasę bazową <xref:System.Windows.Window.LocationChanged> , jeśli trzeba ją wywołać.</span><span class="sxs-lookup"><span data-stu-id="13c2f-395">The overridden method must call <xref:System.Windows.Window.OnLocationChanged%2A> on the base class if <xref:System.Windows.Window.LocationChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected override void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit" Usage="window.OnManipulationBoundaryFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13c2f-396">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-396">The data for the event.</span></span></param>
        <summary><span data-ttu-id="13c2f-397">Wywoływana, <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> gdy wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-397">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-398">Ta implementacja nie zmienia stanu obsługi ( <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwości) <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-398">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="13c2f-399">Jeśli przesłonisz <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, zawsze Wywołaj implementację podstawową <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> w implementacji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-399">If you override <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> implementation.</span></span> <span data-ttu-id="13c2f-400">Niepowodzenie wywołania podstawowej implementacji uniemożliwia klasom bazowym obsługiwanie zdarzenia, co może zmienić zachowanie klasy końcowej w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="13c2f-400">Failure to call the base implementation prevents base classes from handling the event, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="13c2f-401">Implementację podstawową można wywołać przed lub po specjalnej obsłudze, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="13c2f-401">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSourceInitialized">
      <MemberSignature Language="C#" Value="protected virtual void OnSourceInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSourceInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSourceInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSourceInitialized : EventArgs -&gt; unit&#xA;override this.OnSourceInitialized : EventArgs -&gt; unit" Usage="window.OnSourceInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13c2f-402"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-402">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="13c2f-403"><see cref="E:System.Windows.Window.SourceInitialized" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-403">Raises the <see cref="E:System.Windows.Window.SourceInitialized" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-404"><xref:System.Windows.Window.OnSourceInitialized%2A><xref:System.Windows.Window.SourceInitialized> podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-404"><xref:System.Windows.Window.OnSourceInitialized%2A> raises the <xref:System.Windows.Window.SourceInitialized> event.</span></span>  
  
 <span data-ttu-id="13c2f-405">Typ, który pochodzi od <xref:System.Windows.Window> może przesłonić. <xref:System.Windows.Window.OnSourceInitialized%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-405">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnSourceInitialized%2A>.</span></span> <span data-ttu-id="13c2f-406">Przesłonięta Metoda musi <xref:System.Windows.Window.OnSourceInitialized%2A> wywoływać klasę bazową <xref:System.Windows.Window.SourceInitialized> , jeśli trzeba ją wywołać.</span><span class="sxs-lookup"><span data-stu-id="13c2f-406">The overridden method must call <xref:System.Windows.Window.OnSourceInitialized%2A> on the base class if <xref:System.Windows.Window.SourceInitialized> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStateChanged : EventArgs -&gt; unit&#xA;override this.OnStateChanged : EventArgs -&gt; unit" Usage="window.OnStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="13c2f-407"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="13c2f-407">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="13c2f-408"><see cref="E:System.Windows.Window.StateChanged" /> Podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-408">Raises the <see cref="E:System.Windows.Window.StateChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-409"><xref:System.Windows.Window.OnStateChanged%2A><xref:System.Windows.Window.StateChanged> podnosi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-409"><xref:System.Windows.Window.OnStateChanged%2A> raises the <xref:System.Windows.Window.StateChanged> event.</span></span>  
  
 <span data-ttu-id="13c2f-410">Typ, który pochodzi od <xref:System.Windows.Window> może przesłonić. <xref:System.Windows.Window.OnStateChanged%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-410">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnStateChanged%2A>.</span></span> <span data-ttu-id="13c2f-411">Przesłonięta Metoda musi <xref:System.Windows.Window.OnStateChanged%2A> wywoływać klasę bazową <xref:System.Windows.Window.StateChanged> , jeśli trzeba ją wywołać.</span><span class="sxs-lookup"><span data-stu-id="13c2f-411">The overridden method must call <xref:System.Windows.Window.OnStateChanged%2A> on the base class if <xref:System.Windows.Window.StateChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualChildrenChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualChildrenChanged(class System.Windows.DependencyObject visualAdded, class System.Windows.DependencyObject visualRemoved) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualChildrenChanged (visualAdded As DependencyObject, visualRemoved As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualChildrenChanged(System::Windows::DependencyObject ^ visualAdded, System::Windows::DependencyObject ^ visualRemoved);" />
      <MemberSignature Language="F#" Value="override this.OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="window.OnVisualChildrenChanged (visualAdded, visualRemoved)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualAdded" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.8" />
        <Parameter Name="visualRemoved" Type="System.Windows.DependencyObject" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="visualAdded"><span data-ttu-id="13c2f-412"><see cref="T:System.Windows.Media.Visual" /> , Który został dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-412">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection.</span></span></param>
        <param name="visualRemoved"><span data-ttu-id="13c2f-413"><see cref="T:System.Windows.Media.Visual" /> , Który został usunięty z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-413">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection.</span></span></param>
        <summary><span data-ttu-id="13c2f-414">Wywoływana, <see cref="T:System.Windows.Media.VisualCollection" /> gdy ten <see cref="T:System.Windows.Window" /> obiekt jest modyfikowany.</span><span class="sxs-lookup"><span data-stu-id="13c2f-414">Called when the <see cref="T:System.Windows.Media.VisualCollection" /> of this <see cref="T:System.Windows.Window" /> object is modified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override sealed void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="window.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="13c2f-415">Poprzedni element nadrzędny.</span><span class="sxs-lookup"><span data-stu-id="13c2f-415">The previous parent.</span></span> <span data-ttu-id="13c2f-416">Ustaw wartość null, <see cref="T:System.Windows.DependencyObject" /> Jeśli nie ma poprzedniego elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="13c2f-416">Set to null if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</span></span></param>
        <summary><span data-ttu-id="13c2f-417">Wywoływana, gdy zostanie zmieniony element nadrzędny okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-417">Called when the parent of the window is changed.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="OwnedWindows">
      <MemberSignature Language="C#" Value="public System.Windows.WindowCollection OwnedWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.WindowCollection OwnedWindows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.OwnedWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedWindows As WindowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowCollection ^ OwnedWindows { System::Windows::WindowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnedWindows : System.Windows.WindowCollection" Usage="System.Windows.Window.OwnedWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-418">Pobiera kolekcję okien, dla których to okno jest właścicielem.</span><span class="sxs-lookup"><span data-stu-id="13c2f-418">Gets a collection of windows for which this window is the owner.</span></span></summary>
        <value><span data-ttu-id="13c2f-419">A <see cref="T:System.Windows.WindowCollection" /> , który zawiera odwołania do okien, dla których to okno jest właścicielem.</span><span class="sxs-lookup"><span data-stu-id="13c2f-419">A <see cref="T:System.Windows.WindowCollection" /> that contains references to the windows for which this window is the owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-420">Posiadane okno to jeden, <xref:System.Windows.Window.Owner%2A> którego właściwość jest ustawiona z odwołaniem do innego okna, które jest znane jako okno właściciela.</span><span class="sxs-lookup"><span data-stu-id="13c2f-420">An owned window is one whose <xref:System.Windows.Window.Owner%2A> property is set with a reference to another window, which is known as the owner window.</span></span> <span data-ttu-id="13c2f-421">Aby znaleźć wszystkie okna, które są własnością danego okna właściciela, można wyliczyć <xref:System.Windows.WindowCollection> , które jest zwracane <xref:System.Windows.Window.OwnedWindows%2A> przez właściwość.</span><span class="sxs-lookup"><span data-stu-id="13c2f-421">To find all the windows that an owner window owns, you can enumerate <xref:System.Windows.WindowCollection> that is returned by the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13c2f-422">Poniższy przykład pokazuje, jak wyliczyć <xref:System.Windows.Window.OwnedWindows%2A>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-422">The following example shows how to enumerate <xref:System.Windows.Window.OwnedWindows%2A>.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#getwindowownedwindowscode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#getwindowownedwindowscode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Window Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Window Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Window ^ Owner { System::Windows::Window ^ get(); void set(System::Windows::Window ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Window with get, set" Usage="System.Windows.Window.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-423">Pobiera lub ustawia <see cref="T:System.Windows.Window" /> ten, który jest <see cref="T:System.Windows.Window" />właścicielem tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-423">Gets or sets the <see cref="T:System.Windows.Window" /> that owns this <see cref="T:System.Windows.Window" />.</span></span></summary>
        <value><span data-ttu-id="13c2f-424">Obiekt, który reprezentuje właściciela tego <see cref="T:System.Windows.Window" />elementu. <see cref="T:System.Windows.Window" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-424">A <see cref="T:System.Windows.Window" /> object that represents the owner of this <see cref="T:System.Windows.Window" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-425">Gdy okno podrzędne jest otwierane za pomocą okna nadrzędnego przez wywołanie <xref:System.Windows.Window.ShowDialog%2A>, niejawna relacja jest ustanowiona między oknem nadrzędnym i podrzędnym.</span><span class="sxs-lookup"><span data-stu-id="13c2f-425">When a child window is opened by a parent window by calling <xref:System.Windows.Window.ShowDialog%2A>, an implicit relationship is established between both parent and child window.</span></span> <span data-ttu-id="13c2f-426">Ta relacja wymusza pewne zachowania, w tym w odniesieniu do minimalizowania, maksymalizowania i przywracania.</span><span class="sxs-lookup"><span data-stu-id="13c2f-426">This relationship enforces certain behaviors, including with respect to minimizing, maximizing, and restoring.</span></span>  
  
 <span data-ttu-id="13c2f-427">Gdy okno podrzędne jest tworzone przez okno nadrzędne przez wywołanie <xref:System.Windows.Window.Show%2A>, jednak okno podrzędne nie ma relacji z oknem nadrzędnym.</span><span class="sxs-lookup"><span data-stu-id="13c2f-427">When a child window is created by a parent window by calling <xref:System.Windows.Window.Show%2A>, however, the child window does not have a relationship with the parent window.</span></span> <span data-ttu-id="13c2f-428">Oznacza to, że:</span><span class="sxs-lookup"><span data-stu-id="13c2f-428">This means that:</span></span>  
  
-   <span data-ttu-id="13c2f-429">Okno podrzędne nie ma odwołania do okna nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="13c2f-429">The child window does not have a reference to the parent window.</span></span>  
  
-   <span data-ttu-id="13c2f-430">Zachowanie okna podrzędnego nie zależy od zachowania okna nadrzędnego; Oba okna mogą pokryć inne lub być zminimalizowane, zmaksymalizowane i przywrócone niezależnie od siebie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-430">The behavior of the child window is not dependent on the behavior of the parent window; either window can cover the other, or be minimized, maximized, and restored independently of the other.</span></span>  
  
 <span data-ttu-id="13c2f-431">Aby umożliwić tworzenie relacji między oknem podrzędnym a oknem nadrzędnym, program <xref:System.Windows.Window> obsługuje pojęcie własności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-431">To allow you to create a relationship between a child window and a parent window, <xref:System.Windows.Window> supports the notion of ownership.</span></span> <span data-ttu-id="13c2f-432">Własność jest ustalana, <xref:System.Windows.Window.Owner%2A> gdy właściwość okna (własność okna) jest ustawiona z odwołaniem do innego okna (okno właściciela).</span><span class="sxs-lookup"><span data-stu-id="13c2f-432">Ownership is established when the <xref:System.Windows.Window.Owner%2A> property of a window (the owned window) is set with a reference to another window (the owner window).</span></span>  
  
 <span data-ttu-id="13c2f-433">Po ustanowieniu tej relacji są następujące zachowania:</span><span class="sxs-lookup"><span data-stu-id="13c2f-433">Once this relationship is established, the following behaviors are exhibited:</span></span>  
  
-   <span data-ttu-id="13c2f-434">Jeśli okno właściciela jest zminimalizowane, wszystkie jego należące do siebie okna są również zminimalizowane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-434">If an owner window is minimized, all its owned windows are minimized as well.</span></span>  
  
-   <span data-ttu-id="13c2f-435">Jeśli okno posiadane jest zminimalizowane, jego właściciel nie jest zminimalizowany.</span><span class="sxs-lookup"><span data-stu-id="13c2f-435">If an owned window is minimized, its owner is not minimized.</span></span>  
  
-   <span data-ttu-id="13c2f-436">Jeśli okno właściciela jest zmaksymalizowane, zostaną przywrócone zarówno okno właściciela, jak i jego należące do siebie okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-436">If an owner window is maximized, both the owner window and its owned windows are restored.</span></span>  
  
-   <span data-ttu-id="13c2f-437">Okno właściciela nigdy nie może obejmować posiadanego okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-437">An owner window can never cover an owned window.</span></span>  
  
-   <span data-ttu-id="13c2f-438">Posiadane okna, które nie były <xref:System.Windows.Window.ShowDialog%2A> otwierane przy użyciu programu, nie są modalne.</span><span class="sxs-lookup"><span data-stu-id="13c2f-438">Owned windows that were not opened using <xref:System.Windows.Window.ShowDialog%2A> are not modal.</span></span> <span data-ttu-id="13c2f-439">Użytkownik może nadal korzystać z okna właściciela.</span><span class="sxs-lookup"><span data-stu-id="13c2f-439">The user can still interact with the owner window.</span></span>  
  
-   <span data-ttu-id="13c2f-440">Jeśli zamkniesz okno właściciela, jego posiadane okna są również zamknięte.</span><span class="sxs-lookup"><span data-stu-id="13c2f-440">If you close an owner window, its owned windows are also closed.</span></span>  
  
-   <span data-ttu-id="13c2f-441">Jeśli posiadane okno zostało otwarte przez okno jego właściciela przy <xref:System.Windows.Window.Show%2A>użyciu, a okno właściciela zostało zamknięte, nie zostanie zgłoszone <xref:System.Windows.Window.Closing> zdarzenie danego okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-441">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span>  
  
 <span data-ttu-id="13c2f-442">Po otwarciu okna podrzędnego przez wywołanie <xref:System.Windows.Window.ShowDialog%2A>, należy również <xref:System.Windows.Window.Owner%2A> ustawić właściwość okna podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="13c2f-442">When you open a child window by calling <xref:System.Windows.Window.ShowDialog%2A>, you should also set the <xref:System.Windows.Window.Owner%2A> property of the child window.</span></span> <span data-ttu-id="13c2f-443">Jeśli tego nie zrobisz, użytkownicy nie będą mogli przywrócić okna podrzędnego i okna nadrzędnego, naciskając przycisk Pasek zadań.</span><span class="sxs-lookup"><span data-stu-id="13c2f-443">If you don't, then your users won't be able to restore both child window and parent window by pressing the task bar button.</span></span> <span data-ttu-id="13c2f-444">Zamiast tego, naciśnięcie przycisku paska zadań spowoduje wyświetlenie listy systemu Windows, w tym okna podrzędnego i nadrzędnego, do wyboru; tylko wybrane okno zostanie przywrócone.</span><span class="sxs-lookup"><span data-stu-id="13c2f-444">Instead, pressing the task bar button will yield a list of windows, including both child and parent window, for them to select; only the selected window is restored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="13c2f-445">Należy również ustawić <xref:System.Windows.Window.Owner%2A> właściwość w oknie, które jest otwierane przez wywołanie <xref:System.Windows.Window.ShowDialog%2A> w celu zapewnienia prawidłowego zachowania przy użyciu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-445">You should also set the <xref:System.Windows.Window.Owner%2A> property on a window that is opened by calling <xref:System.Windows.Window.ShowDialog%2A> to ensure correct behavior with .</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-446">Nie można ustawić lub pobrać tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-446">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13c2f-447">Poniższy przykład pokazuje, jak ustanowić relację właściciela/własności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-447">The following example shows how to establish the owner/owned relationship.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#setwindowownercode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#setwindowownercode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="13c2f-448">Okno próbuje nawiązać własne</span><span class="sxs-lookup"><span data-stu-id="13c2f-448">A window tries to own itself</span></span>  
  
 <span data-ttu-id="13c2f-449">—lub—</span><span class="sxs-lookup"><span data-stu-id="13c2f-449">-or-</span></span>  
  
 <span data-ttu-id="13c2f-450">Dwa systemy Windows próbują sobie nawzajem.</span><span class="sxs-lookup"><span data-stu-id="13c2f-450">Two windows try to own each other.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13c2f-451"><see cref="P:System.Windows.Window.Owner" /> Właściwość jest ustawiana w widocznym oknie wyświetlanym za pomocą<see cref="M:System.Windows.Window.ShowDialog" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-451">The <see cref="P:System.Windows.Window.Owner" /> property is set on a visible window shown using <see cref="M:System.Windows.Window.ShowDialog" /></span></span>  
  
<span data-ttu-id="13c2f-452">—lub—</span><span class="sxs-lookup"><span data-stu-id="13c2f-452">-or-</span></span> 
<span data-ttu-id="13c2f-453"><see cref="P:System.Windows.Window.Owner" /> Właściwość jest ustawiana za pomocą okna, które nie zostało wcześniej pokazane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-453">The <see cref="P:System.Windows.Window.Owner" /> property is set with a window that has not been previously shown.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="13c2f-454">w celu zezwolenia na używanie wszystkich zdarzeń systemu Windows i danych wejściowych użytkownika bez ograniczeń.</span><span class="sxs-lookup"><span data-stu-id="13c2f-454">for permission to use all windows and user input events without restriction.</span></span> <span data-ttu-id="13c2f-455">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-455">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="ResizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.ResizeMode ResizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.ResizeMode ResizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ResizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ResizeMode As ResizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResizeMode ResizeMode { System::Windows::ResizeMode get(); void set(System::Windows::ResizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeMode : System.Windows.ResizeMode with get, set" Usage="System.Windows.Window.ResizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-456">Pobiera lub ustawia tryb zmiany rozmiaru.</span><span class="sxs-lookup"><span data-stu-id="13c2f-456">Gets or sets the resize mode.</span></span></summary>
        <value><span data-ttu-id="13c2f-457"><see cref="T:System.Windows.ResizeMode" /> Wartość określająca tryb zmiany rozmiaru.</span><span class="sxs-lookup"><span data-stu-id="13c2f-457">A <see cref="T:System.Windows.ResizeMode" /> value specifying the resize mode.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-458">Dostępne są cztery opcje:</span><span class="sxs-lookup"><span data-stu-id="13c2f-458">There are four options:</span></span>  
  
-   <span data-ttu-id="13c2f-459">Nie **zmieniaj rozmiaru**.</span><span class="sxs-lookup"><span data-stu-id="13c2f-459">**NoResize**.</span></span> <span data-ttu-id="13c2f-460">Użytkownik nie może zmienić rozmiaru okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-460">The user cannot resize the window.</span></span> <span data-ttu-id="13c2f-461">Pola Maksymalizuj i Minimalizuj nie są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-461">The Maximize and Minimize boxes are not shown.</span></span>  
  
-   <span data-ttu-id="13c2f-462">**Zmniejsz liczbę**.</span><span class="sxs-lookup"><span data-stu-id="13c2f-462">**CanMinimize**.</span></span> <span data-ttu-id="13c2f-463">Użytkownik może zminimalizować okno i przywrócić go z paska zadań.</span><span class="sxs-lookup"><span data-stu-id="13c2f-463">The user can only minimize the window and restore it from the taskbar.</span></span> <span data-ttu-id="13c2f-464">Pola Minimalizuj i Maksymalizuj są wyświetlane, ale tylko pole Minimalizuj jest włączone.</span><span class="sxs-lookup"><span data-stu-id="13c2f-464">The Minimize and Maximize boxes are both shown, but only the Minimize box is enabled.</span></span>  
  
-   <span data-ttu-id="13c2f-465">**Zmień rozmiar**.</span><span class="sxs-lookup"><span data-stu-id="13c2f-465">**CanResize**.</span></span> <span data-ttu-id="13c2f-466">Użytkownik ma pełną możliwość zmiany rozmiaru okna przy użyciu pól Minimalizuj i Maksymalizuj oraz przeciągając kontur wokół okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-466">The user has the full ability to resize the window, using the Minimize and Maximize boxes, and a draggable outline around the window.</span></span> <span data-ttu-id="13c2f-467">Pola Minimalizuj i Maksymalizuj są wyświetlane i włączane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-467">The Minimize and Maximize boxes are shown and enabled.</span></span> <span data-ttu-id="13c2f-468">(Wartość domyślna).</span><span class="sxs-lookup"><span data-stu-id="13c2f-468">(Default).</span></span>  
  
-   <span data-ttu-id="13c2f-469">**CanResizeWithGrip**.</span><span class="sxs-lookup"><span data-stu-id="13c2f-469">**CanResizeWithGrip**.</span></span> <span data-ttu-id="13c2f-470">Ta opcja ma takie same funkcje jak <xref:System.Windows.ResizeMode.CanResize>, ale dodaje "uchwyt zmiany rozmiaru" do prawego dolnego rogu okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-470">This option has the same functionality as <xref:System.Windows.ResizeMode.CanResize>, but adds a "resize grip" to the lower right corner of the window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-471">Nie można ustawić lub pobrać tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-471">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowResizeMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-472">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-472">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-473">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-473">Identifier field</span></span>|<xref:System.Windows.Window.ResizeModeProperty>|  
|<span data-ttu-id="13c2f-474">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-474">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ResizeGrip" />
      </Docs>
    </Member>
    <Member MemberName="ResizeModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ResizeModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ResizeModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ResizeModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResizeModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ResizeModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ResizeModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ResizeModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-475">Identyfikuje właściwość <see cref="P:System.Windows.Window.ResizeMode" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-475">Identifies the <see cref="P:System.Windows.Window.ResizeMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect RestoreBounds { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreBounds : System.Windows.Rect" Usage="System.Windows.Window.RestoreBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-476">Pobiera rozmiar i lokalizację okna przed zminimalizowaniem lub zmaksymalizowaniem.</span><span class="sxs-lookup"><span data-stu-id="13c2f-476">Gets the size and location of a window before being either minimized or maximized.</span></span></summary>
        <value><span data-ttu-id="13c2f-477"><see cref="T:System.Windows.Rect" /> Określa rozmiar i lokalizację okna przed zminimalizowaniem lub zmaksymalizowaniem.</span><span class="sxs-lookup"><span data-stu-id="13c2f-477">A <see cref="T:System.Windows.Rect" /> that specifies the size and location of a window before being either minimized or maximized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-478">Prostokąt przywracania jest regionem zajmowanym przez okno, zanim został zminimalizowany lub zmaksymalizowany.</span><span class="sxs-lookup"><span data-stu-id="13c2f-478">The restore rectangle is the region occupied by the window before it was minimized or maximized.</span></span> <span data-ttu-id="13c2f-479">Możesz użyć <xref:System.Windows.Window.RestoreBounds%2A> , aby zapisać ostatni rozmiar i lokalizację okna przed zamknięciem aplikacji i pobrać te wartości przy następnym uruchomieniu aplikacji w celu przywrócenia okna do sposobu, w jaki użytkownik je pozostawił.</span><span class="sxs-lookup"><span data-stu-id="13c2f-479">You can use <xref:System.Windows.Window.RestoreBounds%2A> to save the last size and location of a window before an application is closed, and retrieve those values the next time an application starts to restore a window to the way a user left it.</span></span>  
  
 <span data-ttu-id="13c2f-480">Jeśli kwerenda <xref:System.Windows.Window.RestoreBounds%2A> przed wyświetleniem okna lub po jego zamknięciu, <xref:System.Windows.Rect.Empty%2A> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="13c2f-480">If you query <xref:System.Windows.Window.RestoreBounds%2A> before the window has been shown or after it has been closed, <xref:System.Windows.Rect.Empty%2A> is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-481">Nie można pobrać tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-481">You cannot get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13c2f-482">W poniższym przykładzie użyto <xref:System.Windows.Window.RestoreBounds%2A> i wyizolowany magazyn, aby upewnić się, że rozmiar i lokalizacja okna są takie same, jak poprzednio wyświetlane okno.</span><span class="sxs-lookup"><span data-stu-id="13c2f-482">The following example uses <xref:System.Windows.Window.RestoreBounds%2A> and isolated storage to ensure the size and location of a window are the same as they were the previous time the window was shown.</span></span>  
  
 [!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml1)]  
[!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml2)]  
  
 [!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind1)]
 [!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind1)]  
[!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind2)]
[!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="13c2f-483">dla uprawnienia do wykonywania zapytań dotyczących rozmiaru i lokalizacji prostokąta obwiedni okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-483">for permission to query for the size and location of a window's bounding rectangle.</span></span> <span data-ttu-id="13c2f-484">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-484">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Show" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show();" />
      <MemberSignature Language="F#" Value="member this.Show : unit -&gt; unit" Usage="window.Show " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13c2f-485">Otwiera okno i zwraca bez oczekiwania na zamknięcie nowo otwartego okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-485">Opens a window and returns without waiting for the newly opened window to close.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-486">Po utworzeniu wystąpienia klasy nie jest ona widoczna domyślnie. <xref:System.Windows.Window></span><span class="sxs-lookup"><span data-stu-id="13c2f-486">When the <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="13c2f-487"><xref:System.Windows.Window.Show%2A>Wyświetla okno i zwraca natychmiast, bez czekania na zamknięcie okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-487"><xref:System.Windows.Window.Show%2A> shows a window and returns immediately, without waiting for the window to be closed.</span></span> <span data-ttu-id="13c2f-488">W związku z tym otwarte okno nie uniemożliwia użytkownikom współdziałania z innymi oknami w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-488">Consequently, the opened window does not prevent users from interacting with other windows in the application.</span></span> <span data-ttu-id="13c2f-489">Ten typ okna jest nazywany oknem niemodalnym. \*\*</span><span class="sxs-lookup"><span data-stu-id="13c2f-489">This type of window is called a *modeless* window.</span></span> <span data-ttu-id="13c2f-490">Typowymi przykładami okien niemodalnych są okna właściwości, Przyborniki i palety.</span><span class="sxs-lookup"><span data-stu-id="13c2f-490">Common examples of modeless windows are properties windows, toolboxes, and palettes.</span></span> <span data-ttu-id="13c2f-491">Aby ograniczyć użytkownika do współpracy z określonym oknem, należy otworzyć okno przez wywołanie <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-491">To restrict a user to interacting with a specific window, the window must be opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="13c2f-492">Okno otwierane przez wywołanie <xref:System.Windows.Window.Show%2A> nie ma automatycznie relacji z oknem, które je otworzyło; w związku z tym otwartym oknem nie wiadomo, które okno zostało otwarte.</span><span class="sxs-lookup"><span data-stu-id="13c2f-492">A window that is opened by calling <xref:System.Windows.Window.Show%2A> does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="13c2f-493">Tę relację można ustalić przy użyciu <xref:System.Windows.Window.Owner%2A> właściwości i zarządzanej <xref:System.Windows.Window.OwnedWindows%2A> przy użyciu właściwości.</span><span class="sxs-lookup"><span data-stu-id="13c2f-493">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
 <span data-ttu-id="13c2f-494">Wywołanie <xref:System.Windows.Window.Show%2A> osiąga ten sam wynik końcowy jako właściwość <xref:System.Windows.Window> ustawienia <xref:System.Windows.UIElement.Visibility%2A> obiektu na <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-494">Calling <xref:System.Windows.Window.Show%2A> achieves the same end result as setting <xref:System.Windows.UIElement.Visibility%2A> property of the <xref:System.Windows.Window> object to <xref:System.Windows.Visibility.Visible>.</span></span> <span data-ttu-id="13c2f-495">Istnieje jednak różnica między tymi dwoma z perspektywy czasowej.</span><span class="sxs-lookup"><span data-stu-id="13c2f-495">However, there is a difference between the two from a timing perspective.</span></span>  
  
 <span data-ttu-id="13c2f-496">Wywołanie <xref:System.Windows.Window.Show%2A> jest operacją synchroniczną, która zwraca tylko <xref:System.Windows.FrameworkElement.Loaded> po podniesieniu zdarzenia w oknie podrzędnym:</span><span class="sxs-lookup"><span data-stu-id="13c2f-496">Calling <xref:System.Windows.Window.Show%2A> is a synchronous operation that returns only after the <xref:System.Windows.FrameworkElement.Loaded> event on the child window has been raised:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowSync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showsync)]
 [!code-vb[WindowShowTimingSnippets#ShowSync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showsync)]  
  
 <span data-ttu-id="13c2f-497">Ustawienie <xref:System.Windows.UIElement.Visibility%2A>jest jednak operacją asynchroniczną, która zwraca natychmiast:</span><span class="sxs-lookup"><span data-stu-id="13c2f-497">Setting <xref:System.Windows.UIElement.Visibility%2A>, however, is an asynchronous operation that returns immediately:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowASync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showasync)]
 [!code-vb[WindowShowTimingSnippets#ShowASync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showasync)]  
  
 <span data-ttu-id="13c2f-498">W przypadku <xref:System.Windows.UIElement.Visibility%2A>ustawienia wszystkie zdarzenia okna, które należy zarejestrować przed <xref:System.Windows.UIElement.Visibility%2A> ustawieniem, mogą nie zostać podniesione do momentu, <xref:System.Windows.UIElement.Visibility%2A> w którym ustawiono metodę wykonania.</span><span class="sxs-lookup"><span data-stu-id="13c2f-498">When setting <xref:System.Windows.UIElement.Visibility%2A>, any window events you register before you set <xref:System.Windows.UIElement.Visibility%2A> may not be raised until after the method in which you set <xref:System.Windows.UIElement.Visibility%2A> has completed execution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13c2f-499">Poniższy przykład pokazuje, jak otworzyć niemodalne okno.</span><span class="sxs-lookup"><span data-stu-id="13c2f-499">The following sample demonstrates how to open a modeless window.</span></span>  
  
 [!code-csharp[WindowShowSnippets#WindowShowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowSnippets/CSharp/MainWindow.xaml.cs#windowshowcode)]
 [!code-vb[WindowShowSnippets#WindowShowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowSnippets/visualbasic/mainwindow.xaml.vb#windowshowcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13c2f-500"><see cref="M:System.Windows.Window.Show" />jest wywoływana w oknie, które jest zamykane<see cref="E:System.Windows.Window.Closing" />() lub zostało zamknięte (<see cref="E:System.Windows.Window.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="13c2f-500"><see cref="M:System.Windows.Window.Show" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span></span></exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="M:System.Windows.Window.Hide" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowActivated">
      <MemberSignature Language="C#" Value="public bool ShowActivated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowActivated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowActivated" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowActivated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowActivated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowActivated : bool with get, set" Usage="System.Windows.Window.ShowActivated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-501">Pobiera lub ustawia wartość wskazującą, czy okno jest aktywowane podczas pierwszego wyświetlania.</span><span class="sxs-lookup"><span data-stu-id="13c2f-501">Gets or sets a value that indicates whether a window is activated when first shown.</span></span></summary>
        <value><span data-ttu-id="13c2f-502"><see langword="true" />Jeśli okno jest aktywowane podczas pierwszego wyświetlania; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-502"><see langword="true" /> if a window is activated when first shown; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="13c2f-503">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="13c2f-503">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-504">Gdy okno z <xref:System.Windows.Window.ShowActivated%2A> `false` ustawioną właściwością jest otwarte, okno nie zostanie aktywowane i jego <xref:System.Windows.Window.Activated> zdarzenie nie zostanie zgłoszone do momentu ręcznego aktywowania tego okna przez użytkownika.</span><span class="sxs-lookup"><span data-stu-id="13c2f-504">When a window with its <xref:System.Windows.Window.ShowActivated%2A> property set to `false` is opened, the window is not activated and its <xref:System.Windows.Window.Activated> event is not raised until a user manually activates the window by selecting it.</span></span> <span data-ttu-id="13c2f-505">Po wybraniu okna uaktywnia się i dezaktywuje normalne.</span><span class="sxs-lookup"><span data-stu-id="13c2f-505">After the window is selected, it activates and deactivates normally.</span></span>  
  
 <span data-ttu-id="13c2f-506">Aby uniemożliwić aktywowanie okna, gdy zostanie <xref:System.Windows.Window.ShowActivated%2A> ono otwarte, właściwość musi być ustawiona na `false` wartość przed wyświetleniem okna (poprzez `false` wywoływanie <xref:System.Windows.Window.Show%2A>); ustawienie <xref:System.Windows.Window.ShowActivated%2A> po wyświetleniu okna nie ma żadnego efektu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-506">To prevent a window from being activated when it opens, the <xref:System.Windows.Window.ShowActivated%2A> property must be set to `false` before the window is shown (by calling <xref:System.Windows.Window.Show%2A>); setting <xref:System.Windows.Window.ShowActivated%2A> to `false` after a window is shown has no effect.</span></span>  
  
 <span data-ttu-id="13c2f-507">Ustawienie <xref:System.Windows.Window.ShowActivated%2A> w oknie, które jest otwierane modalnie, przez wywołanie <xref:System.Windows.Window.ShowDialog%2A>, nie ma rzeczywistego wpływu. `false`</span><span class="sxs-lookup"><span data-stu-id="13c2f-507">Setting <xref:System.Windows.Window.ShowActivated%2A> to `false` on a window that is opened modally, by calling <xref:System.Windows.Window.ShowDialog%2A>, has no real impact.</span></span> <span data-ttu-id="13c2f-508">Chociaż okno modalne nie zostanie aktywowane, okno modalne uniemożliwi użytkownikowi aktywowanie innych otwartych okien aplikacji.</span><span class="sxs-lookup"><span data-stu-id="13c2f-508">Although the modal window will not be activated, the modal window will prevent the user from activating any other open application windows.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowActivated"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-509">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-509">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-510">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-510">Identifier field</span></span>|<xref:System.Windows.Window.ShowActivatedProperty>|  
|<span data-ttu-id="13c2f-511">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-511">Metadata properties set to `true`</span></span>|<span data-ttu-id="13c2f-512">Brak</span><span class="sxs-lookup"><span data-stu-id="13c2f-512">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="13c2f-513">Poniższy przykład pokazuje, jak używać znaczników do konfigurowania okna, które ma być otwierane bez uaktywniania.</span><span class="sxs-lookup"><span data-stu-id="13c2f-513">The following example shows how to use markup to configure a window to be opened without being activated.</span></span>  
  
 [!code-xaml[WindowShowActivatedSnippets#ShowUnactivatedMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml#showunactivatedmarkup1)]  
  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml.cs#showunactivatedcodebehind)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/awindow.xaml.vb#showunactivatedcodebehind)]  
  
 <span data-ttu-id="13c2f-514">Poniższy przykład pokazuje, jak używać kodu do konfigurowania okna, które ma być otwierane bez jego aktywowania.</span><span class="sxs-lookup"><span data-stu-id="13c2f-514">The following example shows how to use code to configure a window to be opened without it being activated.</span></span>  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/Window1.xaml.cs#showunactivatedwindowcode)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/window1.xaml.vb#showunactivatedwindowcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowActivatedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowActivatedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowActivatedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowActivatedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowActivatedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowActivatedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowActivatedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowActivatedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-515">Identyfikuje właściwość <see cref="P:System.Windows.Window.ShowActivated" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-515">Identifies the <see cref="P:System.Windows.Window.ShowActivated" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; Nullable&lt;bool&gt;" Usage="window.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13c2f-516">Otwiera okno i zwraca tylko wtedy, gdy nowo otwarte okno jest zamknięte.</span><span class="sxs-lookup"><span data-stu-id="13c2f-516">Opens a window and returns only when the newly opened window is closed.</span></span></summary>
        <returns><span data-ttu-id="13c2f-517">Wartość typu <see cref="T:System.Boolean" /> określająca, czy działanie zostało zaakceptowane (<see langword="true" />) czy anulowane (<see langword="false" />). <see cref="T:System.Nullable`1" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-517">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" /> that specifies whether the activity was accepted (<see langword="true" />) or canceled (<see langword="false" />).</span></span> <span data-ttu-id="13c2f-518">Wartość zwracana jest wartością <see cref="P:System.Windows.Window.DialogResult" /> właściwości przed zamknięciem okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-518">The return value is the value of the <see cref="P:System.Windows.Window.DialogResult" /> property before a window closes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-519">Po utworzeniu wystąpienia klasy nie jest ona widoczna domyślnie. <xref:System.Windows.Window></span><span class="sxs-lookup"><span data-stu-id="13c2f-519">When a <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="13c2f-520"><xref:System.Windows.Window.ShowDialog%2A>Wyświetla okno, wyłącza wszystkie inne okna w aplikacji i zwraca tylko wtedy, gdy okno jest zamknięte.</span><span class="sxs-lookup"><span data-stu-id="13c2f-520"><xref:System.Windows.Window.ShowDialog%2A> shows the window, disables all other windows in the application, and returns only when the window is closed.</span></span> <span data-ttu-id="13c2f-521">Ten typ okna jest znany jako modalne \*\* okno.</span><span class="sxs-lookup"><span data-stu-id="13c2f-521">This type of window is known as a *modal* window.</span></span>  
  
 <span data-ttu-id="13c2f-522">Modalne okna są używane głównie jako okna dialogowe.</span><span class="sxs-lookup"><span data-stu-id="13c2f-522">Modal windows are primarily used as dialog boxes.</span></span> <span data-ttu-id="13c2f-523">Okno dialogowe jest specjalnym typem okna używanego przez aplikacje do pracy z użytkownikami w celu wykonywania zadań, takich jak otwieranie plików lub drukowanie dokumentów.</span><span class="sxs-lookup"><span data-stu-id="13c2f-523">A dialog box is a special type of window that applications use to interact with users to complete tasks, such as opening files or printing documents.</span></span> <span data-ttu-id="13c2f-524">Okna dialogowe zwykle umożliwiają użytkownikom akceptowanie lub anulowanie zadania, dla którego były wyświetlane przed zamknięciem okna dialogowego.</span><span class="sxs-lookup"><span data-stu-id="13c2f-524">Dialog boxes commonly allow users to accept or cancel the task for which they were shown before the dialog box is closed.</span></span> <span data-ttu-id="13c2f-525"><xref:System.Windows.Window.ShowDialog%2A><xref:System.Nullable%601> zwracawartośćokreślającą,czydziałaniezostałozaakceptowane<xref:System.Boolean> lub anulowane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-525"><xref:System.Windows.Window.ShowDialog%2A> returns a <xref:System.Nullable%601><xref:System.Boolean> value that specifies whether the activity was accepted or canceled.</span></span> <span data-ttu-id="13c2f-526">Wartość zwracana jest wartością <xref:System.Windows.Window.DialogResult%2A> właściwości przed zamknięciem okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-526">The return value is the value of the <xref:System.Windows.Window.DialogResult%2A> property before a window closes.</span></span> <span data-ttu-id="13c2f-527">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-527">For more information, see <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 <span data-ttu-id="13c2f-528">Okno, które jest otwierane przez wywołanie <xref:System.Windows.Window.ShowDialog%2A> metody nie ma automatycznie relacji z oknem, która go otworzyła; w związku z tym otwarte okno nie wie, które okno zostało otwarte.</span><span class="sxs-lookup"><span data-stu-id="13c2f-528">A window that is opened by calling the <xref:System.Windows.Window.ShowDialog%2A> method does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="13c2f-529">Tę relację można ustalić przy użyciu <xref:System.Windows.Window.Owner%2A> właściwości i zarządzanej <xref:System.Windows.Window.OwnedWindows%2A> przy użyciu właściwości.</span><span class="sxs-lookup"><span data-stu-id="13c2f-529">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span> <span data-ttu-id="13c2f-530">Aby obsługiwać [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automatyzację (zobacz [Omówienie automatyzacji interfejsu użytkownika](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> należy ustawić dla okna otwartego przez wywołanie. <xref:System.Windows.Window.ShowDialog%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-530">To support [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automation (see [UI Automation Overview](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> must be set for a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="13c2f-531">Po zamknięciu [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] okna modalnego (okno otwierane <xref:System.Windows.Window.ShowDialog%2A>przez wywołanie) poprzednio aktywowane okno jest ponownie uaktywniane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-531">When a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window (a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>) is closed, the previously activated window is reactivated.</span></span> <span data-ttu-id="13c2f-532">Jeśli okno modalne [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] ma okno właściciela (zobacz <xref:System.Windows.Window.Owner%2A>), okno właściciela nie jest ponownie uaktywniane, gdy okno modalne [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] zostanie zamknięte, chyba że zostało wcześniej uaktywnione okno.</span><span class="sxs-lookup"><span data-stu-id="13c2f-532">If a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window has an owner window (see <xref:System.Windows.Window.Owner%2A>), the owner window is not reactivated when the modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window is closed unless it was the previously activated window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-533">Nie można wywołać tej metody, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-533">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13c2f-534">Poniższy przykład pokazuje, jak otworzyć okno modalne.</span><span class="sxs-lookup"><span data-stu-id="13c2f-534">The following sample demonstrates how to open a modal window.</span></span>  
  
 [!code-csharp[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowDialogSnippets/CSharp/MainWindow.xaml.cs#windowshowdialogcode)]
 [!code-vb[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowDialogSnippets/visualbasic/mainwindow.xaml.vb#windowshowdialogcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="13c2f-535"><see cref="M:System.Windows.Window.ShowDialog" />jest wywoływana w oknie, które jest zamykane<see cref="E:System.Windows.Window.Closing" />() lub zostało zamknięte (<see cref="E:System.Windows.Window.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="13c2f-535"><see cref="M:System.Windows.Window.ShowDialog" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="13c2f-536">dla uprawnienia do uaktywnienia okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-536">for permission to activate a window.</span></span> <span data-ttu-id="13c2f-537">Skojarzone Wyliczenie:<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-537">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowInTaskbar : bool with get, set" Usage="System.Windows.Window.ShowInTaskbar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-538">Pobiera lub ustawia wartość wskazującą, czy okno ma przycisk paska zadań.</span><span class="sxs-lookup"><span data-stu-id="13c2f-538">Gets or sets a value that indicates whether the window has a task bar button.</span></span></summary>
        <value><span data-ttu-id="13c2f-539"><see langword="true" />Jeśli okno ma przycisk paska zadań; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-539"><see langword="true" /> if the window has a task bar button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="13c2f-540">Nie ma zastosowania, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-540">Does not apply when the window is hosted in a browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-541">Jeśli <xref:System.Windows.Window.ShowInTaskbar%2A> jest ustawiona na `true`, okno zostanie również wyświetlone na liście wyboru aplikacji Alt + Tab.</span><span class="sxs-lookup"><span data-stu-id="13c2f-541">If <xref:System.Windows.Window.ShowInTaskbar%2A> is set to `true`, the window will also appear in the ALT+TAB application selection list.</span></span>  
  
 <span data-ttu-id="13c2f-542">Ikona używana zarówno dla przycisku paska zadań, jak i listy wyboru aplikacji Alt + Tab jest wartością <xref:System.Windows.Window.Icon%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="13c2f-542">The icon that is used for both the task bar button and the ALT+TAB application selection list is the value of the <xref:System.Windows.Window.Icon%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-543">Nie można ustawić lub pobrać tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-543">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowInTaskbar"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-544">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-544">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-545">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-545">Identifier field</span></span>|<xref:System.Windows.Window.ShowInTaskbarProperty>|  
|<span data-ttu-id="13c2f-546">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-546">Metadata properties set to `true`</span></span>|<span data-ttu-id="13c2f-547">Brak</span><span class="sxs-lookup"><span data-stu-id="13c2f-547">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbarProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowInTaskbarProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowInTaskbarProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowInTaskbarProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowInTaskbarProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowInTaskbarProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowInTaskbarProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowInTaskbarProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-548">Identyfikuje właściwość <see cref="P:System.Windows.Window.ShowInTaskbar" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-548">Identifies the <see cref="P:System.Windows.Window.ShowInTaskbar" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberSignature Language="F#" Value="member this.SizeToContent : System.Windows.SizeToContent with get, set" Usage="System.Windows.Window.SizeToContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-549">Pobiera lub ustawia wartość wskazującą, czy okno automatycznie zmieni rozmiar w celu dopasowania do rozmiaru jego zawartości.</span><span class="sxs-lookup"><span data-stu-id="13c2f-549">Gets or sets a value that indicates whether a window will automatically size itself to fit the size of its content.</span></span></summary>
        <value><span data-ttu-id="13c2f-550"><see cref="T:System.Windows.SizeToContent" /> Wartość.</span><span class="sxs-lookup"><span data-stu-id="13c2f-550">A <see cref="T:System.Windows.SizeToContent" /> value.</span></span> <span data-ttu-id="13c2f-551">Wartość domyślna to <see cref="F:System.Windows.SizeToContent.Manual" />.</span><span class="sxs-lookup"><span data-stu-id="13c2f-551">The default is <see cref="F:System.Windows.SizeToContent.Manual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-552">Gdy <xref:System.Windows.Window.SizeToContent%2A> jest ustawiona na <xref:System.Windows.SizeToContent.WidthAndHeight>, ustawienie albo <xref:System.Windows.FrameworkElement.Height%2A> <xref:System.Windows.FrameworkElement.Width%2A> nie ma żadnego wpływu; obie właściwości można ustawić, ale wartości, z których są ustawiane, nie są stosowane do okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-552">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.WidthAndHeight>, setting either <xref:System.Windows.FrameworkElement.Height%2A> or <xref:System.Windows.FrameworkElement.Width%2A> has no effect; both properties can be set, but the values they are set with are not applied to the window.</span></span>  
  
 <span data-ttu-id="13c2f-553">Gdy <xref:System.Windows.Window.SizeToContent%2A> jest ustawiona na <xref:System.Windows.SizeToContent.Height>, ustawienie <xref:System.Windows.FrameworkElement.Height%2A> nie zmienia wysokości okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-553">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Height>, setting <xref:System.Windows.FrameworkElement.Height%2A> does not change the height of the window.</span></span>  
  
 <span data-ttu-id="13c2f-554">Gdy <xref:System.Windows.Window.SizeToContent%2A> jest ustawiona na <xref:System.Windows.SizeToContent.Width>, ustawienie <xref:System.Windows.FrameworkElement.Width%2A> nie zmienia szerokości okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-554">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Width>, setting <xref:System.Windows.FrameworkElement.Width%2A> does not change the width of the window.</span></span>  
  
 <span data-ttu-id="13c2f-555">Jeśli <xref:System.Windows.Window.SizeToContent%2A> ma wartość inną niż <xref:System.Windows.SizeToContent.Manual>:</span><span class="sxs-lookup"><span data-stu-id="13c2f-555">If <xref:System.Windows.Window.SizeToContent%2A> has a value other than <xref:System.Windows.SizeToContent.Manual>:</span></span>  
  
-   <span data-ttu-id="13c2f-556"><xref:System.Windows.Window.SizeToContent%2A>jest automatycznie ustawiany na <xref:System.Windows.SizeToContent.Manual> , jeśli użytkownik zmienia rozmiar okna przy użyciu uchwytu Zmień rozmiar lub przeciągając obramowanie.</span><span class="sxs-lookup"><span data-stu-id="13c2f-556"><xref:System.Windows.Window.SizeToContent%2A> is automatically set to <xref:System.Windows.SizeToContent.Manual> if a user resizes the window by using the resize grip or dragging the border.</span></span>  
  
-   <span data-ttu-id="13c2f-557">Jeśli rozmiar zawartości zmienia się w taki sposób, że <xref:System.Windows.FrameworkElement.SizeChanged> zostanie podniesiony rozmiar okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-557">If the size of the content changes in a way that causes the window to resize itself, <xref:System.Windows.FrameworkElement.SizeChanged> is raised.</span></span>  
  
 <span data-ttu-id="13c2f-558">Jeśli okno jest przezroczyste (zobacz <xref:System.Windows.Window.AllowsTransparency%2A>), należy rozważyć ustawienie <xref:System.Windows.Window.SizeToContent%2A> , aby <xref:System.Windows.SizeToContent.WidthAndHeight> upewnić się, że okno nie jest większe niż jego widoczna zawartość.</span><span class="sxs-lookup"><span data-stu-id="13c2f-558">If a window is transparent (see <xref:System.Windows.Window.AllowsTransparency%2A>), you should consider setting <xref:System.Windows.Window.SizeToContent%2A> to <xref:System.Windows.SizeToContent.WidthAndHeight> to ensure the window is no larger than its visible content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-559">Nie można ustawić lub pobrać tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-559">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowSizeToContent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-560">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-560">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-561">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-561">Identifier field</span></span>|<xref:System.Windows.Window.SizeToContentProperty>|  
|<span data-ttu-id="13c2f-562">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-562">Metadata properties set to `true`</span></span>|<span data-ttu-id="13c2f-563">Brak</span><span class="sxs-lookup"><span data-stu-id="13c2f-563">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="13c2f-564">Poniższy przykład pokazuje, jak ustawić właściwość w <xref:System.Windows.Window.SizeToContent%2A> kodzie, aby określić, jak zmienia się rozmiar okna w celu dopasowania do jego zawartości.</span><span class="sxs-lookup"><span data-stu-id="13c2f-564">The following example shows how to set the <xref:System.Windows.Window.SizeToContent%2A> property in code to specify how a window resizes to fit its content.</span></span>  
  
 [!code-csharp[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/CSharp/MainWindow.xaml.cs#setwindowsizetocontentpropertycode)]
 [!code-vb[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/visualbasic/mainwindow.xaml.vb#setwindowsizetocontentpropertycode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="P:System.Windows.Window.ResizeMode" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeToContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeToContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.SizeToContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeToContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeToContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeToContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.SizeToContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-565">Identyfikuje właściwość <see cref="P:System.Windows.Window.SizeToContent" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-565">Identifies the <see cref="P:System.Windows.Window.SizeToContent" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceInitialized">
      <MemberSignature Language="C#" Value="public event EventHandler SourceInitialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SourceInitialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.SourceInitialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SourceInitialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SourceInitialized;" />
      <MemberSignature Language="F#" Value="member this.SourceInitialized : EventHandler " Usage="member this.SourceInitialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-566">To zdarzenie jest wywoływane, aby obsługiwać międzyoperacyjność z [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span><span class="sxs-lookup"><span data-stu-id="13c2f-566">This event is raised to support interoperation with [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span></span> <span data-ttu-id="13c2f-567">Zobacz <see cref="T:System.Windows.Interop.HwndSource" />.</span><span class="sxs-lookup"><span data-stu-id="13c2f-567">See <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler " Usage="member this.StateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-568">Występuje, gdy zmienia się <see cref="P:System.Windows.Window.WindowState" /> okno właściwości.</span><span class="sxs-lookup"><span data-stu-id="13c2f-568">Occurs when the window's <see cref="P:System.Windows.Window.WindowState" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.TaskbarItemInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskbarItemInfo As TaskbarItemInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::TaskbarItemInfo ^ TaskbarItemInfo { System::Windows::Shell::TaskbarItemInfo ^ get(); void set(System::Windows::Shell::TaskbarItemInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TaskbarItemInfo : System.Windows.Shell.TaskbarItemInfo with get, set" Usage="System.Windows.Window.TaskbarItemInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.TaskbarItemInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-569">Pobiera lub ustawia [!INCLUDE[win7](~/includes/win7-md.md)] miniaturę paska zadań <see cref="T:System.Windows.Window" />dla.</span><span class="sxs-lookup"><span data-stu-id="13c2f-569">Gets or sets the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span></span></summary>
        <value><span data-ttu-id="13c2f-570">Miniatura [!INCLUDE[win7](~/includes/win7-md.md)] paska zadań <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="13c2f-570">The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-571">Aby uzyskać więcej informacji na temat korzystania [!INCLUDE[win7](~/includes/win7-md.md)] z miniatury paska zadań, <xref:System.Windows.Shell.TaskbarItemInfo> zobacz Klasa.</span><span class="sxs-lookup"><span data-stu-id="13c2f-571">For more information about how to use the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail, see the <xref:System.Windows.Shell.TaskbarItemInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Windows.Shell" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfoProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TaskbarItemInfoProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TaskbarItemInfoProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TaskbarItemInfoProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TaskbarItemInfoProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TaskbarItemInfoProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-572">Identyfikuje właściwość <see cref="P:System.Windows.Window.TaskbarItemInfo" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-572">Identifies the <see cref="P:System.Windows.Window.TaskbarItemInfo" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Window.Title" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IWindowService.Title</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Title)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-573">Pobiera lub ustawia tytuł okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-573">Gets or sets a window's title.</span></span></summary>
        <value><span data-ttu-id="13c2f-574">A <see cref="T:System.String" /> , który zawiera tytuł okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-574">A <see cref="T:System.String" /> that contains the window's title.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-575">Tytuł <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>lub [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], można również ustawić przy użyciu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-575">The title of a <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, or [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], can also be set by using <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTitle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-576">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-576">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-577">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-577">Identifier field</span></span>|<xref:System.Windows.Window.TitleProperty>|  
|<span data-ttu-id="13c2f-578">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-578">Metadata properties set to `true`</span></span>|<span data-ttu-id="13c2f-579">Brak</span><span class="sxs-lookup"><span data-stu-id="13c2f-579">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TitleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TitleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TitleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TitleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TitleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-580">Identyfikuje właściwość <see cref="P:System.Windows.Window.Title" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-580">Identifies the <see cref="P:System.Windows.Window.Title" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Top : double with get, set" Usage="System.Windows.Window.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-581">Pobiera lub ustawia pozycję górnej krawędzi okna w odniesieniu do pulpitu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-581">Gets or sets the position of the window's top edge, in relation to the desktop.</span></span></summary>
        <value><span data-ttu-id="13c2f-582">Pozycja górnej części okna w jednostkach logicznych (1/96 ").</span><span class="sxs-lookup"><span data-stu-id="13c2f-582">The position of the window's top, in logical units (1/96").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-583">Gdy jest zmaksymalizowane lub zminimalizowane, ta wartość reprezentuje górną krawędź punktu przywracania <xref:System.Windows.Window>dla. <xref:System.Windows.Window></span><span class="sxs-lookup"><span data-stu-id="13c2f-583">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the top edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="13c2f-584">Tej właściwości nie można ustawić za pomocą stylu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-584">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="13c2f-585">Jeśli wartość nie zostanie określona, <xref:System.Windows.Window.Top%2A> jest ustawiona na wartość domyślną systemowej.</span><span class="sxs-lookup"><span data-stu-id="13c2f-585">If you do not specify a value, <xref:System.Windows.Window.Top%2A> is set to the system default value.</span></span> <span data-ttu-id="13c2f-586">Możesz również określić wartość domyślną system, ustawiając ustawienie <xref:System.Windows.Window.Top%2A> na. <xref:System.Double.NaN></span><span class="sxs-lookup"><span data-stu-id="13c2f-586">You can also specify the system default value by setting <xref:System.Windows.Window.Top%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="13c2f-587">Ani nie jest prawidłową wartością dla <xref:System.Windows.Window.Top%2A>. <xref:System.Double.NegativeInfinity> <xref:System.Double.PositiveInfinity></span><span class="sxs-lookup"><span data-stu-id="13c2f-587">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Top%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-588">Nie można ustawić lub pobrać tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-588">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-589">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-589">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-590">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-590">Identifier field</span></span>|<xref:System.Windows.Window.TopProperty>|  
|<span data-ttu-id="13c2f-591">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-591">Metadata properties set to `true`</span></span>|<span data-ttu-id="13c2f-592">Brak</span><span class="sxs-lookup"><span data-stu-id="13c2f-592">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
      </Docs>
    </Member>
    <Member MemberName="Topmost">
      <MemberSignature Language="C#" Value="public bool Topmost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Topmost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Topmost" />
      <MemberSignature Language="VB.NET" Value="Public Property Topmost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Topmost { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Topmost : bool with get, set" Usage="System.Windows.Window.Topmost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-593">Pobiera lub ustawia wartość wskazującą, czy okno jest wyświetlane w górnej kolejności z góry.</span><span class="sxs-lookup"><span data-stu-id="13c2f-593">Gets or sets a value that indicates whether a window appears in the topmost z-order.</span></span></summary>
        <value><span data-ttu-id="13c2f-594"><see langword="true" />Jeśli okno jest najwyższej stronie; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="13c2f-594"><see langword="true" /> if the window is topmost; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-595">Okno, którego <xref:System.Windows.Window.Topmost%2A> właściwość jest ustawiona na `true` wartość pojawia się nad wszystkimi <xref:System.Windows.Window.Topmost%2A> oknami, których właściwości `false`są ustawione na.</span><span class="sxs-lookup"><span data-stu-id="13c2f-595">A window whose <xref:System.Windows.Window.Topmost%2A> property is set to `true` appears above all windows whose <xref:System.Windows.Window.Topmost%2A> properties are set to `false`.</span></span>  
  
 <span data-ttu-id="13c2f-596">W grupie okien, dla których <xref:System.Windows.Window.Topmost%2A> właściwość jest ustawiona na `true`, okno, które jest aktualnie aktywowane, jest oknem najwyższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="13c2f-596">In the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `true`, the window that is currently activated is the topmost window.</span></span> <span data-ttu-id="13c2f-597">Podobnie dla grupy systemu Windows, która ma <xref:System.Windows.Window.Topmost%2A> właściwość ma `false`ustawioną wartość.</span><span class="sxs-lookup"><span data-stu-id="13c2f-597">Likewise for the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-598">Nie można ustawić lub pobrać tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-598">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTopmost"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-599">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-599">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-600">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-600">Identifier field</span></span>|<xref:System.Windows.Window.TopmostProperty>|  
|<span data-ttu-id="13c2f-601">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-601">Metadata properties set to `true`</span></span>|<span data-ttu-id="13c2f-602">Brak</span><span class="sxs-lookup"><span data-stu-id="13c2f-602">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="TopmostProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopmostProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopmostProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopmostProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopmostProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopmostProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopmostProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopmostProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-603">Identyfikuje właściwość <see cref="P:System.Windows.Window.Topmost" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-603">Identifies the <see cref="P:System.Windows.Window.Topmost" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-604">Identyfikuje właściwość <see cref="P:System.Windows.Window.Top" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-604">Identifies the <see cref="P:System.Windows.Window.Top" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStartupLocation">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStartupLocation WindowStartupLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStartupLocation WindowStartupLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStartupLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStartupLocation As WindowStartupLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStartupLocation WindowStartupLocation { System::Windows::WindowStartupLocation get(); void set(System::Windows::WindowStartupLocation value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStartupLocation : System.Windows.WindowStartupLocation with get, set" Usage="System.Windows.Window.WindowStartupLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStartupLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-605">Pobiera lub ustawia pozycję okna podczas pierwszego wyświetlania.</span><span class="sxs-lookup"><span data-stu-id="13c2f-605">Gets or sets the position of the window when first shown.</span></span></summary>
        <value><span data-ttu-id="13c2f-606"><see cref="T:System.Windows.WindowStartupLocation" /> Wartość określająca górną/lewą pozycję okna podczas pierwszego wyświetlania.</span><span class="sxs-lookup"><span data-stu-id="13c2f-606">A <see cref="T:System.Windows.WindowStartupLocation" /> value that specifies the top/left position of a window when first shown.</span></span> <span data-ttu-id="13c2f-607">Wartość domyślna to <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span><span class="sxs-lookup"><span data-stu-id="13c2f-607">The default is <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-608">Ustawienie właściwości w taki <xref:System.Windows.WindowStartupLocation.Manual> sposób, aby okno było <xref:System.Windows.Window.Left%2A> umieszczane według wartości właściwości i <xref:System.Windows.Window.Top%2A>. `WindowStartupLocation`</span><span class="sxs-lookup"><span data-stu-id="13c2f-608">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.Manual> causes a window to be positioned according to its <xref:System.Windows.Window.Left%2A> and <xref:System.Windows.Window.Top%2A> property values.</span></span> <span data-ttu-id="13c2f-609"><xref:System.Windows.Window.Left%2A> Jeślialbowłaściwościniesąokreślone,ichwartościsą<xref:System.Windows.Window.Top%2A> określane przez system Windows.</span><span class="sxs-lookup"><span data-stu-id="13c2f-609">If either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> properties aren't specified, their values are determined by Windows.</span></span>  
  
 <span data-ttu-id="13c2f-610">`WindowStartupLocation` Ustawienie<xref:System.Windows.WindowStartupLocation.CenterScreen> właściwości powoduje, że okno jest umieszczane na środku ekranu, który zawiera kursor myszy.</span><span class="sxs-lookup"><span data-stu-id="13c2f-610">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.CenterScreen> causes a window to be positioned in the center of the screen that contains the mouse cursor.</span></span>  
  
 <span data-ttu-id="13c2f-611">`WindowStartupLocation` Ustawienie <xref:System.Windows.Window.Owner%2A?displayProperty=nameWithType>właściwości powoduje, że okno ma być umiejscowione w środku okna właściciela (patrz), jeśli zostało określone. <xref:System.Windows.WindowStartupLocation.CenterOwner></span><span class="sxs-lookup"><span data-stu-id="13c2f-611">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.CenterOwner> causes a window to be positioned in the center of its owner window (see <xref:System.Windows.Window.Owner%2A?displayProperty=nameWithType>), if specified.</span></span> <span data-ttu-id="13c2f-612">Okno właściciela może być innym oknem WPF lub oknem innym niż WPF.</span><span class="sxs-lookup"><span data-stu-id="13c2f-612">The owner window can be either another WPF window or a non-WPF window.</span></span>

> [!NOTE]   
>  <span data-ttu-id="13c2f-613">Aby uzyskać więcej informacji na temat WPF Windows z oknami nienależącymi do WPF, zobacz [WPF i Win32](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) — współdziałanie i <xref:System.Windows.Interop.WindowInteropHelper>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-613">For more information about WPF windows with non-WPF windows, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) and <xref:System.Windows.Interop.WindowInteropHelper>.</span></span> 

 <span data-ttu-id="13c2f-614">Jeśli nie określono okna właściciela, pozycja okna jest określana w taki sam sposób, jak w przypadku, `WindowStartupLocation` gdy właściwość jest ustawiona na. <xref:System.Windows.WindowStartupLocation.Manual></span><span class="sxs-lookup"><span data-stu-id="13c2f-614">If an owner window is not specified, the position of the window is determined in the same way as if the `WindowStartupLocation` property is set to <xref:System.Windows.WindowStartupLocation.Manual>.</span></span>

> [!NOTE]
>  <span data-ttu-id="13c2f-615">Nie można ustawić ani pobrać wartości tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-615">You cannot set or get the value of this property when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.WindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As WindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowState WindowState { System::Windows::WindowState get(); void set(System::Windows::WindowState value); };" />
      <MemberSignature Language="F#" Value="member this.WindowState : System.Windows.WindowState with get, set" Usage="System.Windows.Window.WindowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-616">Pobiera lub ustawia wartość wskazującą, czy okno jest przywrócone, zminimalizowane lub zmaksymalizowane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-616">Gets or sets a value that indicates whether a window is restored, minimized, or maximized.</span></span></summary>
        <value><span data-ttu-id="13c2f-617">A <see cref="T:System.Windows.WindowState" /> , który określa, czy okno jest przywrócone, zminimalizowane lub zmaksymalizowane.</span><span class="sxs-lookup"><span data-stu-id="13c2f-617">A <see cref="T:System.Windows.WindowState" /> that determines whether a window is restored, minimized, or maximized.</span></span> <span data-ttu-id="13c2f-618">Wartość domyślna to <see cref="F:System.Windows.WindowState.Normal" /> (przywrócone).</span><span class="sxs-lookup"><span data-stu-id="13c2f-618">The default is <see cref="F:System.Windows.WindowState.Normal" /> (restored).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-619">Zanim okno zostanie zminimalizowane lub zmaksymalizowane, jego rozmiar i lokalizacja są przechowywane w <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-619">Before a window is minimized or maximized, its size and location are stored in <xref:System.Windows.Window.RestoreBounds%2A>.</span></span> <span data-ttu-id="13c2f-620">Gdy okno zostanie przywrócone, jego wartości rozmiaru i lokalizacji są przywracane z wartościami z <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="13c2f-620">When a window is subsequently restored, its size and location values are restored with the values from <xref:System.Windows.Window.RestoreBounds%2A>.</span></span>  
  
 <span data-ttu-id="13c2f-621">Gdy właściwość zostanie zmieniona, <xref:System.Windows.Window.StateChanged> zostanie wygenerowane. <xref:System.Windows.Window.WindowState%2A></span><span class="sxs-lookup"><span data-stu-id="13c2f-621">When the <xref:System.Windows.Window.WindowState%2A> property is changed, <xref:System.Windows.Window.StateChanged> is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-622">Nie można ustawić lub pobrać tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-622">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowState"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-623">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-623">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-624">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-624">Identifier field</span></span>|<xref:System.Windows.Window.WindowStateProperty>|  
|<span data-ttu-id="13c2f-625">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-625">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="WindowStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-626">Identyfikuje właściwość <see cref="P:System.Windows.Window.WindowState" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-626">Identifies the <see cref="P:System.Windows.Window.WindowState" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As WindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStyle WindowStyle { System::Windows::WindowStyle get(); void set(System::Windows::WindowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : System.Windows.WindowStyle with get, set" Usage="System.Windows.Window.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-627">Pobiera lub ustawia styl obramowania okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-627">Gets or sets a window's border style.</span></span></summary>
        <value><span data-ttu-id="13c2f-628">A <see cref="T:System.Windows.WindowStyle" /> określa styl obramowania okna.</span><span class="sxs-lookup"><span data-stu-id="13c2f-628">A <see cref="T:System.Windows.WindowStyle" /> that specifies a window's border style.</span></span> <span data-ttu-id="13c2f-629">Wartość domyślna to <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span><span class="sxs-lookup"><span data-stu-id="13c2f-629">The default is <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13c2f-630"><xref:System.Windows.Window.WindowStyle%2A><xref:System.Windows.WindowStyle> może być jedną z wartości wyliczenia, w tym <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (domyślnie) i. <xref:System.Windows.WindowStyle.ThreeDBorderWindow></span><span class="sxs-lookup"><span data-stu-id="13c2f-630"><xref:System.Windows.Window.WindowStyle%2A> can be one of the <xref:System.Windows.WindowStyle> enumeration values, including <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (default), and <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span></span>  
  
 <span data-ttu-id="13c2f-631">Na poniższej ilustracji przedstawiono style [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] okna (kompozycja Aero systemu Windows Vista z włączonym przezroczystym szkłem):</span><span class="sxs-lookup"><span data-stu-id="13c2f-631">The following figure shows the window styles on [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (Windows Vista Aero theme, with transparent glass enabled):</span></span>  
  
 <span data-ttu-id="13c2f-632">![Style okna] (~/add/media/windowoverviewfigure6.PNG "Style okna")</span><span class="sxs-lookup"><span data-stu-id="13c2f-632">![Window styles](~/add/media/windowoverviewfigure6.PNG "Window styles")</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13c2f-633">Nie można ustawić lub pobrać tej właściwości, gdy okno jest hostowane w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="13c2f-633">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="13c2f-634">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="13c2f-634">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="13c2f-635">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="13c2f-635">Identifier field</span></span>|<xref:System.Windows.Window.WindowStyleProperty>|  
|<span data-ttu-id="13c2f-636">Właściwości metadanych ustawione na`true`</span><span class="sxs-lookup"><span data-stu-id="13c2f-636">Metadata properties set to `true`</span></span>|<span data-ttu-id="13c2f-637">Brak</span><span class="sxs-lookup"><span data-stu-id="13c2f-637">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13c2f-638">Identyfikuje właściwość <see cref="P:System.Windows.Window.WindowStyle" /> zależności.</span><span class="sxs-lookup"><span data-stu-id="13c2f-638">Identifies the <see cref="P:System.Windows.Window.WindowStyle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
