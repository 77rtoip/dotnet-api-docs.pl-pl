<Type Name="Window" FullName="System.Windows.Window">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b1f3293cfe976b30891f60615db77d47592857d" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53392571" /></Metadata><TypeSignature Language="C#" Value="public class Window : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Window extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Window" />
  <TypeSignature Language="VB.NET" Value="Public Class Window&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Window : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type Window = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fdf62-101">Umożliwia tworzenie, konfigurowanie, wyświetlanie i zarządzanie nimi okres istnienia i okna dialogowe.</span><span class="sxs-lookup"><span data-stu-id="fdf62-101">Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-102">Punktem interakcji między użytkownikiem a aplikacją jest oknem.</span><span class="sxs-lookup"><span data-stu-id="fdf62-102">The point of interaction between a user and a standalone application is a window.</span></span> <span data-ttu-id="fdf62-103">A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] okno składa się z dwóch odrębnych dziedzin:</span><span class="sxs-lookup"><span data-stu-id="fdf62-103">A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window consists of two distinct areas:</span></span>  
  
-   <span data-ttu-id="fdf62-104">Obszaru nieklienckiego, który hostuje zakończeń systemu windows, w tym ikony, tytuł, menu systemowe, przycisk Minimalizuj, Maksymalizuj przycisk, przycisk Przywróć, zamknij i obramowanie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-104">A non-client area, which hosts the windows adornments, including an icon, title, System menu, minimize button, maximize button, restore button, close button, and a border.</span></span>  
  
-   <span data-ttu-id="fdf62-105">Obszar klienta, który obsługuje zawartość specyficzną dla aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-105">A client area, which hosts application-specific content.</span></span>  
  
 <span data-ttu-id="fdf62-106">Na poniższej ilustracji przedstawiono standardowego okna:</span><span class="sxs-lookup"><span data-stu-id="fdf62-106">A standard window is shown in the following figure:</span></span>  
  
 <span data-ttu-id="fdf62-107">![Elementy okna](~/add/media/windowoverviewfigure1.PNG "elementów okna")</span><span class="sxs-lookup"><span data-stu-id="fdf62-107">![Window elements](~/add/media/windowoverviewfigure1.PNG "Window elements")</span></span>  
  
 <span data-ttu-id="fdf62-108"><xref:System.Windows.Window> hermetyzuje możliwość tworzenia, konfigurowania, Pokaż i zarządzania okresem istnienia systemów windows, jak i okna dialogowe i oferuje następujące kluczowe usługi:</span><span class="sxs-lookup"><span data-stu-id="fdf62-108"><xref:System.Windows.Window> encapsulates the ability to create, configure, show, and manage the lifetime of both windows and dialog boxes, and provides the following key services:</span></span>  
  
 <span data-ttu-id="fdf62-109">**Zarządzanie okresem istnienia**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-109">**Lifetime Management**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span></span>  
  
 <span data-ttu-id="fdf62-110">**Zarządzanie oknem**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-110">**Window Management**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span></span>  
  
 <span data-ttu-id="fdf62-111">**Wygląd i zachowanie**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span><span class="sxs-lookup"><span data-stu-id="fdf62-111">**Appearance and Behavior**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span></span>  
  
 <span data-ttu-id="fdf62-112">**Okna dialogowe**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-112">**Dialog Boxes**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="fdf62-113">Ponadto <xref:System.Windows.Application> udostępnia specjalne obsługę funkcji zarządzania wszystkich okien w aplikacji:</span><span class="sxs-lookup"><span data-stu-id="fdf62-113">Additionally, <xref:System.Windows.Application> exposes special support for managing all of the windows in an application:</span></span>  
  
-   <span data-ttu-id="fdf62-114">Aplikacja przechowuje listę wszystkich okien, które obecnie są tworzone w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-114">Application maintains a list of all the windows that are currently instantiated in the application.</span></span> <span data-ttu-id="fdf62-115">Ta lista jest uwidaczniany przez <xref:System.Windows.Application.Windows%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-115">This list is exposed by the <xref:System.Windows.Application.Windows%2A> property.</span></span>  
  
-   <span data-ttu-id="fdf62-116">Domyślnie <xref:System.Windows.Application.MainWindow%2A> zostanie automatycznie ustawiony z odwołaniem do pierwszego <xref:System.Windows.Window> , zostanie uruchomiony w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-116">By default, <xref:System.Windows.Application.MainWindow%2A> is automatically set with a reference to the first <xref:System.Windows.Window> that is instantiated in an application.</span></span> <span data-ttu-id="fdf62-117">This, sprawiając, że okna okna głównego aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-117">This thereby making the window the main application window.</span></span>  
  
 <span data-ttu-id="fdf62-118">Element <xref:System.Windows.Window> można zaimplementować przy użyciu znaczników, znaczników i związane z kodem lub kodu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-118">A <xref:System.Windows.Window> can be implemented using markup, markup and code-behind, or code.</span></span>  
  
 <span data-ttu-id="fdf62-119"><xref:System.Windows.Window> jest używany głównie do wyświetlania i okna dialogowe dla aplikacji autonomicznych.</span><span class="sxs-lookup"><span data-stu-id="fdf62-119"><xref:System.Windows.Window> is primarily used to display windows and dialog boxes for standalone applications.</span></span> <span data-ttu-id="fdf62-120">Jednak w przypadku aplikacji wymagających nawigacji na poziomie okna, takie jak kreatorów, można użyć <xref:System.Windows.Navigation.NavigationWindow> zamiast; <xref:System.Windows.Navigation.NavigationWindow> pochodzi od klasy <xref:System.Windows.Window> i rozszerza je z obsługą nawigacji w stylu przeglądarki.</span><span class="sxs-lookup"><span data-stu-id="fdf62-120">However, for applications that require navigation at the window level, such as wizards, you can use <xref:System.Windows.Navigation.NavigationWindow> instead; <xref:System.Windows.Navigation.NavigationWindow> derives from <xref:System.Windows.Window> and extends it with browser-style navigation support.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-121">Wyspy można nawigować zawartości można zintegrować inne zawartości i zawartość kontenerów za pomocą <xref:System.Windows.Controls.Frame>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-121">Islands of navigable content can be incorporated into other content and content containers using <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="fdf62-122"><xref:System.Windows.Window> wymaga `UnmanagedCode` uprawnienie zabezpieczeń należy utworzyć wystąpienie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-122"><xref:System.Windows.Window> needs `UnmanagedCode` security permission to be instantiated.</span></span> <span data-ttu-id="fdf62-123">Ma to następujące konsekwencje:</span><span class="sxs-lookup"><span data-stu-id="fdf62-123">This has the following consequences:</span></span>  
  
-   [!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)]<span data-ttu-id="fdf62-124">— Aplikacje autonomiczne wdrożonej żąda podnoszenia poziomu uprawnień, gdy uruchamiana ze stref Internet lub lokalny Intranet.</span><span class="sxs-lookup"><span data-stu-id="fdf62-124">-deployed standalone applications will request permission elevation when launched from either the Internet or Local Intranet zones.</span></span>  
  
-   [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] <span data-ttu-id="fdf62-125">żądanie, nic mniejsza niż pełne uprawnienia nie będzie można utworzyć wystąpienia systemu windows lub w oknach dialogowych.</span><span class="sxs-lookup"><span data-stu-id="fdf62-125">that request anything less than full permissions will not be able to instantiate windows or dialog boxes.</span></span>  
  
 <span data-ttu-id="fdf62-126">Aby uzyskać informacji na temat wdrażania aplikacji autonomicznej i zagadnienia dotyczące zabezpieczeń, zobacz [strategia zabezpieczeń WPF - zabezpieczenia platformy](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span><span class="sxs-lookup"><span data-stu-id="fdf62-126">For information about standalone application deployment and security considerations, see [WPF Security Strategy - Platform Security](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span></span>  
  
 <span data-ttu-id="fdf62-127">A <xref:System.Windows.Window> jest <xref:System.Windows.Controls.ContentControl>, co oznacza, że może ono zawierać pojedynczy obiekt dowolnego typu (na przykład ciąg, obrazu lub panelu).</span><span class="sxs-lookup"><span data-stu-id="fdf62-127">A <xref:System.Windows.Window> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="fdf62-128">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Controls.ContentControl> klasy.</span><span class="sxs-lookup"><span data-stu-id="fdf62-128">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span> <span data-ttu-id="fdf62-129">Ponadto <xref:System.Windows.Window> jest elementem głównym, i dlatego nie może być częścią innego elementu zawartości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-129">Also, <xref:System.Windows.Window> is a root element and, therefore, cannot be part of another element's content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-130"><xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, I <xref:System.Windows.Window.Left%2A> zbioru właściwości <xref:System.Windows.Window> za pośrednictwem styl nie zostaną zastosowane w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="fdf62-130">The <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties set on a <xref:System.Windows.Window> through a style will not be applied at run time.</span></span>  
  
## <a name="customizing-the-window-control"></a><span data-ttu-id="fdf62-131">Dostosowywanie formantu okna</span><span class="sxs-lookup"><span data-stu-id="fdf62-131">Customizing the Window Control</span></span>  
 <span data-ttu-id="fdf62-132">Aby zastosować te same ustawienia właściwości z wieloma <xref:System.Windows.Window> kontrolki, używać <xref:System.Windows.FrameworkElement.Style%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-132">To apply the same property settings to multiple <xref:System.Windows.Window> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="fdf62-133">Można zmodyfikować domyślne <xref:System.Windows.Controls.ControlTemplate> zapewnienie unikatowego wyglądu kontrolki.</span><span class="sxs-lookup"><span data-stu-id="fdf62-133">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="fdf62-134">Aby uzyskać więcej informacji o tworzeniu <xref:System.Windows.Controls.ControlTemplate>, zobacz [Dostosowywanie wyglądu istniejącego formantu przez stworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="fdf62-134">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="fdf62-135">Aby zobaczyć elementy i Stany, które są specyficzne dla <xref:System.Windows.Window>, zobacz [style i szablony okien](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="fdf62-135">To see the parts and states that are specific to the <xref:System.Windows.Window>, see [Window Styles and Templates](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="fdf62-136">Właściwości zależności dla tego formantu może być ustawione przez domyślnego stylu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-136">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="fdf62-137">Jeśli właściwość jest ustawiana przez domyślnego stylu, zmienić właściwość z jego wartość domyślną gdy formant ma być wyświetlany w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-137">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="fdf62-138">Domyślny styl jest określona, przez który motyw pulpitu jest używany podczas działania aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-138">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="fdf62-139">Aby uzyskać więcej informacji, zobacz [domyślne motywy WPF](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="fdf62-139">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-140">Ustawienie wartości właściwości wizualnej będzie miał wpływ tylko jeśli ta właściwość jest obecny w <xref:System.Windows.Window> kontrolki użytkownika domyślnego szablonu i ustawić za pomocą.</span><span class="sxs-lookup"><span data-stu-id="fdf62-140">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Window> control's default template and is set by using a .</span></span> <span data-ttu-id="fdf62-141">Lista właściwości visual można znaleźć w sekcji "Zmiana Visual struktury z Control" [Dostosowywanie wyglądu istniejącego formantu przez stworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="fdf62-141">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-142">W poniższym przykładzie pokazano, jak standardowego okna są definiowane przy użyciu tylko kod znaczników:</span><span class="sxs-lookup"><span data-stu-id="fdf62-142">The following example shows how a standard window is defined using only markup:</span></span>  
  
 [!code-xaml[WindowSnippets#WindowMARKUPONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MarkupOnlyWindow.xaml#windowmarkuponly)]  
  
 <span data-ttu-id="fdf62-143">W poniższym przykładzie przedstawiono sposób standardowego okna jest definiowana za pomocą tylko kodu:</span><span class="sxs-lookup"><span data-stu-id="fdf62-143">The following example shows how a standard window is defined using only code:</span></span>  
  
 [!code-csharp[WindowSnippets#WindowCODEONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/CodeOnlyWindow.cs#windowcodeonly)]
 [!code-vb[WindowSnippets#WindowCODEONLY](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/codeonlywindow.vb#windowcodeonly)]  
  
 <span data-ttu-id="fdf62-144">W poniższym przykładzie pokazano, jak standardowego okna są definiowane przy użyciu kombinacji znaczników i związane z kodem.</span><span class="sxs-lookup"><span data-stu-id="fdf62-144">The following example shows how a standard window is defined using a combination of markup and code-behind.</span></span>  
  
 [!code-xaml[WindowSnippets#WindowXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml#windowxaml)]  
  
 [!code-csharp[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml.cs#windowcodebehind)]
 [!code-vb[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/mainwindow.xaml.vb#windowcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Window.Show" />
    <altmember cref="M:System.Windows.Window.ShowDialog" />
    <altmember cref="P:System.Windows.Window.DialogResult" />
    <altmember cref="T:System.Windows.Application" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Window ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Window();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdf62-145">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Window" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="fdf62-145">Initializes a new instance of the <see cref="T:System.Windows.Window" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-146">Konstruktor inicjuje <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, i <xref:System.Windows.Window.Left%2A> właściwości domyślne <xref:System.Windows.Window> wartości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-146">The constructor initializes the <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties to their default <xref:System.Windows.Window> values.</span></span>  
  
 <span data-ttu-id="fdf62-147">Jeśli okno jest tworzony w ramach <xref:System.AppDomain> zawierający <xref:System.Windows.Application> obiekt, dodaje konstruktora <xref:System.Windows.Window> obiektu do zestawu <xref:System.Windows.Application>— zarządzane systemu windows za pośrednictwem <xref:System.Windows.Application.Windows%2A> właściwość <xref:System.Windows.Application> obiektu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-147">If a window is created within an <xref:System.AppDomain> that has an <xref:System.Windows.Application> object, the constructor adds the <xref:System.Windows.Window> object to the set of <xref:System.Windows.Application>-managed windows via the <xref:System.Windows.Application.Windows%2A> property of the <xref:System.Windows.Application> object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fdf62-148">Aby uzyskać uprawnienie do tego obiektu, wywoływanie metod natywnych niebezpieczne.</span><span class="sxs-lookup"><span data-stu-id="fdf62-148">for permission for this object to call unsafe native methods.</span></span> <span data-ttu-id="fdf62-149">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="fdf62-149">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public bool Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; bool" Usage="window.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdf62-150">Próbuje przenieść okno na pierwszym planie, a następnie aktywuje go.</span><span class="sxs-lookup"><span data-stu-id="fdf62-150">Attempts to bring the window to the foreground and activates it.</span></span></summary>
        <returns><span data-ttu-id="fdf62-151"><see langword="true" /> Jeśli <see cref="T:System.Windows.Window" /> zostało aktywowane pomyślnie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-151"><see langword="true" /> if the <see cref="T:System.Windows.Window" /> was successfully activated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-152">Zasady określające, czy okno jest aktywowana są takie same jak dla [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` — funkcja (User32.dll).</span><span class="sxs-lookup"><span data-stu-id="fdf62-152">The rules that determine whether the window is activated are the same as those used by the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` function (User32.dll).</span></span>  
  
 <span data-ttu-id="fdf62-153">Jeśli okno jest aktywna w aplikacji Windows Presentation Foundation, która nie jest aplikacją pierwszego planu użytkownika, <xref:System.Windows.Application.Activated> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-153">If the window is activated in a Windows Presentation Foundation application that is not the user's foreground application, <xref:System.Windows.Application.Activated> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-154">Nie można wywołać tej metody, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-154">This method cannot be called when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fdf62-155">uprawnienia do aktywowania okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-155">for permission to activate a window.</span></span> <span data-ttu-id="fdf62-156">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fdf62-156">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-157">Występuje, gdy okno staje się oknem pierwszego planu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-157">Occurs when a window becomes the foreground window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-158">Okno jest aktywowana (staje się oknem pierwszego planu) po:</span><span class="sxs-lookup"><span data-stu-id="fdf62-158">A window is activated (becomes the foreground window) when:</span></span>  
  
-   <span data-ttu-id="fdf62-159">Pierwszym otwarciu okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-159">The window is first opened.</span></span>  
  
-   <span data-ttu-id="fdf62-160">Użytkownik przełączy się do okna wybierając go za pomocą myszy, naciskając klawisze ALT + TAB, lub w Menedżerze zadań.</span><span class="sxs-lookup"><span data-stu-id="fdf62-160">A user switches to a window by selecting it with the mouse, pressing ALT+TAB, or from Task Manager.</span></span>  
  
-   <span data-ttu-id="fdf62-161">Użytkownik klika przycisk na pasku zadań okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-161">A user clicks the window's taskbar button.</span></span>  
  
 <span data-ttu-id="fdf62-162">Windows, musisz Wykryj, kiedy staną się aktywują może obsługiwać <xref:System.Windows.Window.Activated> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-162">Windows that need to detect when they become activate can handle the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="fdf62-163">Po uaktywnieniu okna może dezaktywować i ponownie aktywować wiele razy w okresie istnienia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-163">After a window is first activated, it may be deactivated and reactivated many times during its lifetime.</span></span> <span data-ttu-id="fdf62-164">Jeśli zachowanie lub stan aplikacji jest zależna od jego stanu aktywacji, można sprawdzić <xref:System.Windows.Window.IsActive%2A> do ustalenia stanu aktywacji, który znajduje się w.</span><span class="sxs-lookup"><span data-stu-id="fdf62-164">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="fdf62-165">Aplikacja może być również <xref:System.Windows.Application.Activated>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-165">An application can also be <xref:System.Windows.Application.Activated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparency">
      <MemberSignature Language="C#" Value="public bool AllowsTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.AllowsTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowsTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowsTransparency : bool with get, set" Usage="System.Windows.Window.AllowsTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-166">Pobiera lub ustawia wartość wskazującą, czy obszar klienta okna obsługuje przezroczystość.</span><span class="sxs-lookup"><span data-stu-id="fdf62-166">Gets or sets a value that indicates whether a window's client area supports transparency.</span></span></summary>
        <value><span data-ttu-id="fdf62-167"><see langword="true" /> Jeśli okna obsługuje przezroczystość. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-167"><see langword="true" /> if the window supports transparency; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-168">Podczas <xref:System.Windows.Controls.Control.Background%2A> okna zostaje ustalona przezroczysty kolor przy użyciu <xref:System.Windows.Media.Brushes.Transparent%2A> na przykład nieprzezroczyste pozostanie okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-168">When the <xref:System.Windows.Controls.Control.Background%2A> property of a window is set to a transparent color, using <xref:System.Windows.Media.Brushes.Transparent%2A> for example, the window remains opaque.</span></span> <span data-ttu-id="fdf62-169">Oznacza to, że pulpitu i wszystkie uruchomione aplikacje w "beneath" okna nie może być widoczne.</span><span class="sxs-lookup"><span data-stu-id="fdf62-169">This means that the desktop and any running applications "beneath" the window cannot be seen.</span></span> <span data-ttu-id="fdf62-170">Aby włączyć ten typ przezroczystości, <xref:System.Windows.Window.AllowsTransparency%2A> musi być równa `true`.</span><span class="sxs-lookup"><span data-stu-id="fdf62-170">To enable this type of transparency, <xref:System.Windows.Window.AllowsTransparency%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="fdf62-171"><xref:System.Windows.Window.AllowsTransparency%2A> istnieje w celu ułatwienia tworzenia okien i w związku z tym, gdy <xref:System.Windows.Window.AllowsTransparency%2A> jest ustawiona na `true`, okna <xref:System.Windows.Window.WindowStyle%2A> właściwość musi być równa <xref:System.Windows.WindowStyle.None>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-171"><xref:System.Windows.Window.AllowsTransparency%2A> exists to facilitate the creation of non-rectangular windows, and, consequently, when <xref:System.Windows.Window.AllowsTransparency%2A> is set to `true`, a window's <xref:System.Windows.Window.WindowStyle%2A> property must be set to <xref:System.Windows.WindowStyle.None>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowAllowsTransparency"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-172">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-172">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-173">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-173">Identifier field</span></span>|<xref:System.Windows.Window.AllowsTransparencyProperty>|  
|<span data-ttu-id="fdf62-174">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-174">Metadata properties set to `true`</span></span>|<span data-ttu-id="fdf62-175">Brak</span><span class="sxs-lookup"><span data-stu-id="fdf62-175">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdf62-176">Okno, które ma <see cref="P:System.Windows.Window.WindowStyle" /> wartości dowolnego elementu innego niż <see cref="F:System.Windows.WindowStyle.None" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-176">A window that has a <see cref="P:System.Windows.Window.WindowStyle" /> value of anything other than <see cref="F:System.Windows.WindowStyle.None" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparencyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowsTransparencyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowsTransparencyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.AllowsTransparencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowsTransparencyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowsTransparencyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowsTransparencyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.AllowsTransparencyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-177">Identyfikuje <see cref="P:System.Windows.Window.AllowsTransparency" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-177">Identifies the <see cref="P:System.Windows.Window.AllowsTransparency" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeBounds As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeBounds);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.ArrangeOverride arrangeBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeBounds" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeBounds"><span data-ttu-id="fdf62-178">A <see cref="T:System.Windows.Size" /> , które odzwierciedla rozmiaru końcowego, która powinna być używana okna, aby rozmieścić wraz z jego elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="fdf62-178">A <see cref="T:System.Windows.Size" /> that reflects the final size that the window should use to arrange itself and its children.</span></span></param>
        <summary><span data-ttu-id="fdf62-179">Zastępuje tę metodę rozmieszczania i rozmiaru okna i jego elementy podrzędne.</span><span class="sxs-lookup"><span data-stu-id="fdf62-179">Override this method to arrange and size a window and its child elements.</span></span></summary>
        <returns><span data-ttu-id="fdf62-180">A <see cref="T:System.Windows.Size" /> , które odzwierciedla rzeczywisty rozmiar, który został użyty.</span><span class="sxs-lookup"><span data-stu-id="fdf62-180">A <see cref="T:System.Windows.Size" /> that reflects the actual size that was used.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-181"><xref:System.Windows.Window.ArrangeOverride%2A> nie jest wywoływana, gdy <xref:System.Windows.UIElement.Visibility%2A> właściwość ma wartość <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-181"><xref:System.Windows.Window.ArrangeOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="fdf62-182">Jeśli wartość <xref:System.Windows.UIElement.Visibility%2A> właściwości <xref:System.Windows.Visibility.Hidden> lub <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="fdf62-182">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-183">Gdy albo <xref:System.Windows.Window.Show%2A> lub <xref:System.Windows.Window.ShowDialog%2A> są nazywane <xref:System.Windows.UIElement.Visibility%2A> właściwość <xref:System.Windows.Window> ustawiono <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-183">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="window.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdf62-184">Zamyka ręcznie <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-184">Manually closes a <see cref="T:System.Windows.Window" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-185">Element <xref:System.Windows.Window> może zostać zamknięty przy użyciu jednej z kilku, mechanizmów dobrze znanej i dostarczane przez system, który znajduje się w jego pasek tytułu, w tym:</span><span class="sxs-lookup"><span data-stu-id="fdf62-185">A <xref:System.Windows.Window> can be closed using one of several, well-known, system-provided mechanisms located in its title bar, including:</span></span>  
  
-   <span data-ttu-id="fdf62-186">ALT+F4.</span><span class="sxs-lookup"><span data-stu-id="fdf62-186">ALT+F4.</span></span>  
  
-   <span data-ttu-id="fdf62-187">Menu systemowe &#124; **Zamknij**.</span><span class="sxs-lookup"><span data-stu-id="fdf62-187">System menu &#124; **Close**.</span></span>  
  
-   <span data-ttu-id="fdf62-188">**Zamknij** przycisku.</span><span class="sxs-lookup"><span data-stu-id="fdf62-188">**Close** button.</span></span>  
  
 <span data-ttu-id="fdf62-189">Element <xref:System.Windows.Window> może także zostać zamknięty przy użyciu jednej z kilku dobrze znanych mechanizmów wewnątrz obszaru klienckiego, które są dostarczane przez deweloperów, w tym:</span><span class="sxs-lookup"><span data-stu-id="fdf62-189">A <xref:System.Windows.Window> can also be closed using one of several well-known mechanisms within the client area that are provided by developers, including:</span></span>  
  
-   <span data-ttu-id="fdf62-190">**Plik** &#124; **zakończenia** w głównym oknie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-190">**File** &#124; **Exit** on a main window.</span></span>  
  
-   <span data-ttu-id="fdf62-191">**Plik** &#124; **Zamknij** lub **Zamknij** przycisk na okna podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="fdf62-191">**File** &#124; **Close** or a **Close** button on a child window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-192">**OK** i **anulować** przycisków w oknie dialogowym również są dostarczane przez deweloperów, mimo że będzie prawdopodobny zestaw <xref:System.Windows.Window.DialogResult%2A>, który automatycznie zamknie okno, która została otwarta przez wywołanie metody <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-192">**OK** and **Cancel** buttons on a dialog box are also developer-provided, although will likely set <xref:System.Windows.Window.DialogResult%2A>, which automatically closes a window that was opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="fdf62-193">Te mechanizmy wymagają, aby jawnie wywołać <xref:System.Windows.Window.Close%2A> aby zamknąć okno.</span><span class="sxs-lookup"><span data-stu-id="fdf62-193">These mechanisms require you to explicitly call <xref:System.Windows.Window.Close%2A> to close a window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-194">Jeśli to okno, otwarty przez wywołanie metody <xref:System.Windows.Window.ShowDialog%2A>i <xref:System.Windows.Controls.Button> z jego <xref:System.Windows.Controls.Button.IsCancel%2A> właściwość ma wartość true, zostanie automatycznie zamknięte po kliknięciu przycisku albo lub naciśnięcia klawisza ESC.</span><span class="sxs-lookup"><span data-stu-id="fdf62-194">If a window, opened by calling <xref:System.Windows.Window.ShowDialog%2A>, and with a <xref:System.Windows.Controls.Button> with its <xref:System.Windows.Controls.Button.IsCancel%2A> property set to true, will automatically close when the button is either clicked, or ESC is pressed.</span></span> <span data-ttu-id="fdf62-195">Jeśli w oknie otwartego przy użyciu <xref:System.Windows.Window.Show%2A>, jednak <xref:System.Windows.Window.Close%2A> musi być jawnie wywoływane, takich jak z <xref:System.Windows.Controls.Primitives.ButtonBase.Click> program obsługi zdarzeń dla <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-195">If the window was opened using <xref:System.Windows.Window.Show%2A>, however, <xref:System.Windows.Window.Close%2A> must be explicitly called, such as from <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="fdf62-196">Zamknięcie okna powoduje <xref:System.Windows.Window.Closing> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-196">Closing a window causes the <xref:System.Windows.Window.Closing> event to be raised.</span></span> <span data-ttu-id="fdf62-197">Jeśli <xref:System.Windows.Window.Closing> zdarzenie nie zostanie anulowane, zostaną wykonane następujące zadania:</span><span class="sxs-lookup"><span data-stu-id="fdf62-197">If the <xref:System.Windows.Window.Closing> event isn't canceled, the following occurs:</span></span>  
  
-   <span data-ttu-id="fdf62-198"><xref:System.Windows.Window> Zostanie usunięty z <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (Jeśli <xref:System.Windows.Application> obiekt istnieje).</span><span class="sxs-lookup"><span data-stu-id="fdf62-198">The <xref:System.Windows.Window> is removed from <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (if an <xref:System.Windows.Application> object exists).</span></span>  
  
-   <span data-ttu-id="fdf62-199"><xref:System.Windows.Window> Zostanie usunięty z właścicielem <xref:System.Windows.Window> Jeśli relacja należące do właściciela/zostało nawiązane przed należących do <xref:System.Windows.Window> został wyświetlony i po nim właściciela <xref:System.Windows.Window> został otwarty.</span><span class="sxs-lookup"><span data-stu-id="fdf62-199">The <xref:System.Windows.Window> is removed from the owner <xref:System.Windows.Window> if the owner/owned relationship was established before the owned <xref:System.Windows.Window> was shown and after the owner <xref:System.Windows.Window> was opened.</span></span>  
  
-   <span data-ttu-id="fdf62-200"><xref:System.Windows.Window.Closed> Zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-200">The <xref:System.Windows.Window.Closed> event is raised.</span></span>  
  
-   <span data-ttu-id="fdf62-201">Niezarządzane zasoby utworzone w ramach <xref:System.Windows.Window> są usuwane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-201">Unmanaged resources created by the <xref:System.Windows.Window> are disposed.</span></span>  
  
-   <span data-ttu-id="fdf62-202">Jeśli <xref:System.Windows.Window.ShowDialog%2A> została wywołana w celu wyświetlenia <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> zwraca.</span><span class="sxs-lookup"><span data-stu-id="fdf62-202">If <xref:System.Windows.Window.ShowDialog%2A> was called to show the <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> returns.</span></span>  
  
 <span data-ttu-id="fdf62-203">Zamykanie <xref:System.Windows.Window> powoduje, że wszystkich oknach, które jest właścicielem zostanie zamknięty.</span><span class="sxs-lookup"><span data-stu-id="fdf62-203">Closing a <xref:System.Windows.Window> causes any windows that it owns to be closed.</span></span> <span data-ttu-id="fdf62-204">Ponadto, zamyka <xref:System.Windows.Window> może spowodować, że aplikacja przerwał uruchamianie w zależności od tego, jak <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> właściwość jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="fdf62-204">Furthermore, closing a <xref:System.Windows.Window> may cause an application to stop running depending on how the <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-205">Nie można wywołać tej metody, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-205">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-206">W poniższym przykładzie przedstawiono **pliku** &#124; **zakończenia** menu przetwarzanego jawnie wywołać <xref:System.Windows.Window.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-206">The following example shows a **File** &#124; **Exit** menu being handled to explicitly call <xref:System.Windows.Window.Close%2A>.</span></span>  
  
 [!code-xaml[WindowCloseSnippets#WindowCloseXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml#windowclosexaml)]  
  
 [!code-csharp[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml.cs#windowclosecodebehind)]
 [!code-vb[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowCloseSnippets/visualbasic/mainwindow.xaml.vb#windowclosecodebehind)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fdf62-207">uprawnienia do użycia, wszystkich okien i zdarzenia wejściowe użytkownika bez ograniczeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-207">for permission to use all windows and user input events without restriction.</span></span> <span data-ttu-id="fdf62-208">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fdf62-208">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="P:System.Windows.Window.DialogResult" />
        <altmember cref="P:System.Windows.Window.Owner" />
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-209">Występuje, gdy okno jest zamknięcie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-209">Occurs when the window is about to close.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-210">Gdy to zdarzenie jest wywoływane, okna nie można zablokować zamknięcia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-210">Once this event is raised, a window cannot be prevented from closing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdf62-211"><see cref="P:System.Windows.UIElement.Visibility" /> jest ustawiona, lub <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, lub <see cref="M:System.Windows.Window.Hide" /> jest wywoływana, gdy okno jest zamykany.</span><span class="sxs-lookup"><span data-stu-id="fdf62-211"><see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Hide" /> is called while a window is closing.</span></span></exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closing" />
        <altmember cref="M:System.Windows.Application.Shutdown" />
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="E:System.Windows.Application.SessionEnding" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : System.ComponentModel.CancelEventHandler " Usage="member this.Closing : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-212">Występuje bezpośrednio po <see cref="M:System.Windows.Window.Close" /> nosi nazwę i może zostać użyte do anulowania zamknięcia okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-212">Occurs directly after <see cref="M:System.Windows.Window.Close" /> is called, and can be handled to cancel window closure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-213"><xref:System.Windows.Window.Closing> może zostać użyte do wykrycia po zamknięciu okna (na przykład, gdy <xref:System.Windows.Window.Close%2A> nosi nazwę).</span><span class="sxs-lookup"><span data-stu-id="fdf62-213"><xref:System.Windows.Window.Closing> can be handled to detect when a window is being closed (for example, when <xref:System.Windows.Window.Close%2A> is called).</span></span> <span data-ttu-id="fdf62-214">Ponadto <xref:System.Windows.Window.Closing> może służyć do uniemożliwić zamknięcia okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-214">Furthermore, <xref:System.Windows.Window.Closing> can be used to prevent a window from closing.</span></span> <span data-ttu-id="fdf62-215">Aby uniemożliwić zamknięcia okna, można ustawić <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> właściwość <xref:System.ComponentModel.CancelEventArgs> argument `true`.</span><span class="sxs-lookup"><span data-stu-id="fdf62-215">To prevent a window from closing, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.</span></span>  
  
 <span data-ttu-id="fdf62-216"><xref:System.Windows.Window.Closing> Zdarzenie jest zgłaszane w przypadku <xref:System.Windows.Window.Close%2A> jest wywoływana, jeśli kliknięto przycisk Zamknij okno programu, lub jeśli użytkownik naciśnie klawisz ALT + F4.</span><span class="sxs-lookup"><span data-stu-id="fdf62-216">The <xref:System.Windows.Window.Closing> event is raised when <xref:System.Windows.Window.Close%2A> is called, if a window's Close button is clicked, or if the user presses ALT+F4.</span></span>  
  
 <span data-ttu-id="fdf62-217">Jeśli okno należące do firmy został otwarty przez jej właściciela okna przy użyciu <xref:System.Windows.Window.Show%2A>oraz właściciel okno zostanie zamknięte, należących do okna <xref:System.Windows.Window.Closing> nie jest wywoływane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-217">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span> <span data-ttu-id="fdf62-218">Jeśli właściciel okna jest zamknięty (zobacz <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> nie jest inicjowane w oknie należące do firmy.</span><span class="sxs-lookup"><span data-stu-id="fdf62-218">If the owner of a window is closed (see <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> is not raised on the owned window.</span></span>  
  
 <span data-ttu-id="fdf62-219">Jeśli <xref:System.Windows.Application.Shutdown%2A> jest wywoływana, <xref:System.Windows.Window.Closing> jest wywoływane zdarzenie dla każdego okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-219">If <xref:System.Windows.Application.Shutdown%2A> is called, the <xref:System.Windows.Window.Closing> event for each window is raised.</span></span> <span data-ttu-id="fdf62-220">Jednak jeśli <xref:System.Windows.Window.Closing> jest anulowane, anulowanie jest ignorowana.</span><span class="sxs-lookup"><span data-stu-id="fdf62-220">However, if <xref:System.Windows.Window.Closing> is canceled, cancellation is ignored.</span></span>  
  
 <span data-ttu-id="fdf62-221">Jeśli sesja zakończy się, ponieważ użytkownik wyloguje się lub kończy pracę, <xref:System.Windows.Window.Closing> nie jest inicjowane; obsługi <xref:System.Windows.Application.SessionEnding> implementowania kodu, który anuluje zamknięcia aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-221">If a session ends because a user logs off or shuts down, <xref:System.Windows.Window.Closing> is not raised; handle <xref:System.Windows.Application.SessionEnding> to implement code that cancels application closure.</span></span>  
  
 <span data-ttu-id="fdf62-222">Jeśli chcesz, by pokazać lub ukryć okno wiele razy w okresie istnienia aplikacji, a nie chcesz reinstantiate okna za każdym razem, możesz wyświetlać, które ułatwią Ci obsługę <xref:System.Windows.Window.Closing> zdarzeń, Anuluj ją, a następnie wywołaj <xref:System.Windows.Window.Hide%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fdf62-222">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to reinstantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="fdf62-223">Następnie możesz wywołać <xref:System.Windows.Window.Show%2A> w jednym wystąpieniu, aby otworzyć go ponownie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-223">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to reopen it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-224">W poniższym przykładzie pokazano <xref:System.Windows.Window> określający, czy serwer musi interwencji użytkownika, zamknąć.</span><span class="sxs-lookup"><span data-stu-id="fdf62-224">The following example demonstrates a <xref:System.Windows.Window> that determines whether it needs user intervention to close.</span></span>  
  
 [!code-xaml[WindowClosingSnippets#WindowClosingXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml#windowclosingxaml1)]  
  
 [!code-csharp[WindowClosingSnippets](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml.cs)]
 [!code-vb[WindowClosingSnippets](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowClosingSnippets/visualbasic/datawindow.xaml.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdf62-225"><see cref="P:System.Windows.UIElement.Visibility" /> jest ustawiona, lub <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, lub <see cref="M:System.Windows.Window.Close" /> jest wywoływana, gdy okno jest zamykany.</span><span class="sxs-lookup"><span data-stu-id="fdf62-225"><see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Close" /> is called while a window is closing.</span></span></exception>
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closed" />
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ ContentRendered;" />
      <MemberSignature Language="F#" Value="member this.ContentRendered : EventHandler " Usage="member this.ContentRendered : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-226">Występuje po zrenderowaniu zawartości okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-226">Occurs after a window's content has been rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-227">Jeśli okno nie ma zawartości, to zdarzenie nie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-227">If the window has no content, this event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ContentControl.Content" />
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-228">Występuje, gdy okno staje się oknem tła.</span><span class="sxs-lookup"><span data-stu-id="fdf62-228">Occurs when a window becomes a background window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-229">Okno jest dezaktywowany (staje się oknem tła) po:</span><span class="sxs-lookup"><span data-stu-id="fdf62-229">A window is deactivated (becomes a background window) when:</span></span>  
  
-   <span data-ttu-id="fdf62-230">Użytkownik przełączy się do innego okna w bieżącej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-230">A user switches to another window in the current application.</span></span>  
  
-   <span data-ttu-id="fdf62-231">Użytkownik przełączy się do okna w innej aplikacji, za pomocą klawiszy ALT + TAB lub przy użyciu Menedżera zadań.</span><span class="sxs-lookup"><span data-stu-id="fdf62-231">A user switches to the window in another application by using ALT+TAB or by using Task Manager.</span></span>  
  
-   <span data-ttu-id="fdf62-232">Użytkownik klika przycisk na pasku zadań dla okna w innej aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-232">A user clicks the taskbar button for a window in another application.</span></span>  
  
 <span data-ttu-id="fdf62-233">Windows, musisz Wykryj, kiedy staną się one dezaktywowane obsługi <xref:System.Windows.Window.Deactivated> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-233">Windows that need to detect when they become deactivated by handling the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="fdf62-234">Po dezaktywacji okno może być ponownie aktywować i dezaktywować wiele razy w okresie istnienia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-234">After a window is first deactivated, it may be reactivated and deactivated many times during its lifetime.</span></span> <span data-ttu-id="fdf62-235">Jeśli zachowanie lub stan aplikacji jest zależna od jego stanu aktywacji, można sprawdzić <xref:System.Windows.Window.IsActive%2A> do ustalenia stanu aktywacji, który znajduje się w.</span><span class="sxs-lookup"><span data-stu-id="fdf62-235">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="fdf62-236">Aplikacja może być również <xref:System.Windows.Application.Deactivated>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-236">An application can also be <xref:System.Windows.Application.Deactivated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; DialogResult { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Window.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DialogResultConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-237">Pobiera lub ustawia wartość wyniku okna dialogowego, która jest wartością, która jest zwracana z <see cref="M:System.Windows.Window.ShowDialog" /> metody.</span><span class="sxs-lookup"><span data-stu-id="fdf62-237">Gets or sets the dialog result value, which is the value that is returned from the <see cref="M:System.Windows.Window.ShowDialog" /> method.</span></span></summary>
        <value><span data-ttu-id="fdf62-238">A <see cref="T:System.Nullable`1" /> wartości typu <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-238">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />.</span></span> <span data-ttu-id="fdf62-239">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-239">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-240"><xref:System.Windows.Window.DialogResult%2A> można używać na kod, który wykazało, że okno dialogowe, aby ustalić, czy użytkownik jest akceptowany (`true`) lub anulowane (`false`) okno dialogowe.</span><span class="sxs-lookup"><span data-stu-id="fdf62-240"><xref:System.Windows.Window.DialogResult%2A> can be used from the code that showed a dialog box to determine whether a user accepted (`true`) or canceled (`false`) the dialog box.</span></span> <span data-ttu-id="fdf62-241">Jeśli okno dialogowe został zaakceptowany, oznacza to, aby kod, który otwarte okno dialogowe, aby pobrać dane, które zostały zebrane przez użytkownika i przetworzyć te dane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-241">If a dialog box was accepted, this signifies to the code that opened the dialog box to retrieve the data that was collected by the user and process it.</span></span> <span data-ttu-id="fdf62-242">Jeśli okno dialogowe zostało anulowane, jednak oznacza to, że wywołanie kodu należy zatrzymać dalszego przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="fdf62-242">If a dialog box was canceled, however, this signifies that calling code should stop any further processing.</span></span>  
  
 <span data-ttu-id="fdf62-243">Domyślnie okno dialogowe zostało anulowane, gdy użytkownik wykona jedną z następujących czynności:</span><span class="sxs-lookup"><span data-stu-id="fdf62-243">By default, a dialog box is canceled when a user does one of the following:</span></span>  
  
-   <span data-ttu-id="fdf62-244">PressesALT+F4.</span><span class="sxs-lookup"><span data-stu-id="fdf62-244">PressesALT+F4.</span></span>  
  
-   <span data-ttu-id="fdf62-245">Kliknie **Zamknij** przycisku.</span><span class="sxs-lookup"><span data-stu-id="fdf62-245">Clicks the **Close** button.</span></span>  
  
-   <span data-ttu-id="fdf62-246">Wybiera **Zamknij** z menu systemowego.</span><span class="sxs-lookup"><span data-stu-id="fdf62-246">Selects **Close** from the System menu.</span></span>  
  
 <span data-ttu-id="fdf62-247">We wszystkich tych przypadkach <xref:System.Windows.Window.DialogResult%2A> jest `false` domyślnie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-247">In all of these cases, <xref:System.Windows.Window.DialogResult%2A> is `false` by default.</span></span>  
  
 <span data-ttu-id="fdf62-248">Okno dialogowe zwykle zapewnia specjalny przycisk do okna dialogowego, czyli przycisku Anuluj którego <xref:System.Windows.Controls.Button.IsCancel%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="fdf62-248">A dialog box typically provides a special button to cancel a dialog, which is the button whose <xref:System.Windows.Controls.Button.IsCancel%2A> property is set to `true`.</span></span> <span data-ttu-id="fdf62-249">Przycisk skonfigurowane w ten sposób zostanie automatycznie zamknięte okno, gdy albo jest wciśnięty lub gdy zostanie naciśnięty klawisz ESC.</span><span class="sxs-lookup"><span data-stu-id="fdf62-249">A button configured this way will automatically close a window when either it is pressed, or when the ESC key is pressed.</span></span> <span data-ttu-id="fdf62-250">W obu tych przypadkach <xref:System.Windows.Window.DialogResult%2A> pozostaje `false`.</span><span class="sxs-lookup"><span data-stu-id="fdf62-250">In either of these cases, <xref:System.Windows.Window.DialogResult%2A> remains `false`.</span></span>  
  
 <span data-ttu-id="fdf62-251">Okno dialogowe zawiera także zazwyczaj przycisk Zaakceptuj, czyli przycisku którego <xref:System.Windows.Controls.Button.IsDefault%2A> właściwość jest ustawiona na `true`.</span><span class="sxs-lookup"><span data-stu-id="fdf62-251">A dialog box also typically provides an accept button, which is the button whose <xref:System.Windows.Controls.Button.IsDefault%2A> property is set to `true`.</span></span> <span data-ttu-id="fdf62-252">Przycisk skonfigurowane w ten sposób zostanie podniesiony jego <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzenie, kiedy wciśnięto ten plik lub klawisz ENTER.</span><span class="sxs-lookup"><span data-stu-id="fdf62-252">A button configured this way will raise its <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event when either it or the ENTER key is pressed.</span></span> <span data-ttu-id="fdf62-253">Jednak nie będzie automatycznie zamknąć okno dialogowe, ani nie spowoduje ustawienie <xref:System.Windows.Window.DialogResult%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="fdf62-253">However, it won't automatically close the dialog box, nor will it set <xref:System.Windows.Window.DialogResult%2A> to `true`.</span></span> <span data-ttu-id="fdf62-254">Musisz ręcznie napisać ten kod, zazwyczaj z <xref:System.Windows.Controls.Primitives.ButtonBase.Click> program obsługi zdarzeń dla przycisku domyślnego.</span><span class="sxs-lookup"><span data-stu-id="fdf62-254">You need to manually write this code, usually from the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the default button.</span></span>  
  
 <span data-ttu-id="fdf62-255"><xref:System.Windows.Window.DialogResult%2A> jest `null` po wyświetlane jest okno dialogowe ale akceptowane ani anulowane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-255"><xref:System.Windows.Window.DialogResult%2A> is `null` when the dialog box is shown but neither accepted nor canceled.</span></span>  
  
 <span data-ttu-id="fdf62-256">Po zamknięciu okno dialogowe można uzyskać wynik okna dialogowego z wartością zwróconą przez <xref:System.Windows.Window.ShowDialog%2A> metody lub sprawdzając <xref:System.Windows.Window.DialogResult%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-256">After a dialog box closes, you can get the dialog result from the value returned by <xref:System.Windows.Window.ShowDialog%2A> method, or by inspecting the <xref:System.Windows.Window.DialogResult%2A> property.</span></span>  
  
 <span data-ttu-id="fdf62-257"><xref:System.Windows.Window.DialogResult%2A> można ustawić tylko podczas <xref:System.Windows.Window> jest otwarty przez wywołanie jego <xref:System.Windows.Window.ShowDialog%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fdf62-257"><xref:System.Windows.Window.DialogResult%2A> can only be set when a <xref:System.Windows.Window> is opened by calling its <xref:System.Windows.Window.ShowDialog%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-258">Nie można ustawić lub pobrania tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-258">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-259">Poniższy przykład pokazuje, jak skonfigurować przycisk OK, a przycisk Anuluj, aby powrócić do odpowiedniego <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-259">The following example shows how to configure an OK button and a Cancel button to return the appropriate <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 [!code-xaml[WindowDialogResultSnippets#WindowDialogResultXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml#windowdialogresultxaml)]  
  
 [!code-csharp[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml.cs#windowdialogresultcodebehind)]
 [!code-vb[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDialogResultSnippets/visualbasic/dialogbox.xaml.vb#windowdialogresultcodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdf62-260"><see cref="P:System.Windows.Window.DialogResult" /> ustawiono przed otwarciem okna przez wywołanie metody <see cref="M:System.Windows.Window.ShowDialog" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-260"><see cref="P:System.Windows.Window.DialogResult" /> is set before a window is opened by calling <see cref="M:System.Windows.Window.ShowDialog" />.</span></span>  
  
<span data-ttu-id="fdf62-261">—lub—</span><span class="sxs-lookup"><span data-stu-id="fdf62-261">-or-</span></span> 
 <span data-ttu-id="fdf62-262"><see cref="P:System.Windows.Window.DialogResult" /> jest ustawiony w oknie, który jest otwierany, wywołując <see cref="M:System.Windows.Window.Show" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-262"><see cref="P:System.Windows.Window.DialogResult" /> is set on a window that is opened by calling <see cref="M:System.Windows.Window.Show" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.DpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.DpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-263">Występuje po zmianie wyświetlanej rozdzielczości ekranu, na którym jest ono.</span><span class="sxs-lookup"><span data-stu-id="fdf62-263">Occurs after the DPI of the screen on which the Window is displayed changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DpiChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DpiChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.DpiChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DpiChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DpiChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DpiChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Window.DpiChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-264">Element <see cref="T:System.Windows.RoutedEvent" /> dla gdy rozdzielczości ekranu okna jest ustawiony na zmiany.</span><span class="sxs-lookup"><span data-stu-id="fdf62-264">A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the Window is on changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragMove">
      <MemberSignature Language="C#" Value="public void DragMove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DragMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.DragMove" />
      <MemberSignature Language="VB.NET" Value="Public Sub DragMove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DragMove();" />
      <MemberSignature Language="F#" Value="member this.DragMove : unit -&gt; unit" Usage="window.DragMove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdf62-265">Pozwala oknu można przeciągnąć przez myszy przy użyciu jego lewego przycisku w dół na powierzchni obszaru klienckiego okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-265">Allows a window to be dragged by a mouse with its left button down over an exposed area of the window's client area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-266">Lewy przycisk myszy musi być wyłączone podczas <xref:System.Windows.Window.DragMove%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="fdf62-266">The left mouse button must be down when <xref:System.Windows.Window.DragMove%2A> is called.</span></span> <span data-ttu-id="fdf62-267">Jednym ze sposobów, aby wykryć, kiedy lewy przycisk myszy jest wciśnięty jest obsługi <xref:System.Windows.UIElement.MouseLeftButtonDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-267">One way to detect when the left mouse button is pressed is to handle the <xref:System.Windows.UIElement.MouseLeftButtonDown> event.</span></span>  
  
 <span data-ttu-id="fdf62-268">Gdy <xref:System.Windows.Window.DragMove%2A> jest wywoływana po lewej stronie przycisku myszy muszą być wciśnięte nad obszarem narażonych obszaru klienckiego okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-268">When <xref:System.Windows.Window.DragMove%2A> is called, the left mouse button must be depressed over an exposed area of the window's client area.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-269">Nie można wywołać tej metody, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-269">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-270">Poniższy przykład przedstawia sposób przesłonięcia <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> do wywołania <xref:System.Windows.Window.DragMove%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-270">The following example shows how to override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to call <xref:System.Windows.Window.DragMove%2A>.</span></span>  
  
 [!code-csharp[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDragMoveSnippets/CSharp/MainWindow.xaml.cs#callwindowdragmovecodebehind)]
 [!code-vb[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDragMoveSnippets/visualbasic/mainwindow.xaml.vb#callwindowdragmovecodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdf62-271">Lewy przycisk myszy nie jest w dół.</span><span class="sxs-lookup"><span data-stu-id="fdf62-271">The left mouse button is not down.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fdf62-272">o zezwolenie na przeciągnij okno.</span><span class="sxs-lookup"><span data-stu-id="fdf62-272">for permission to drag a window.</span></span> <span data-ttu-id="fdf62-273">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fdf62-273">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="E:System.Windows.Window.LocationChanged" />
      </Docs>
    </Member>
    <Member MemberName="GetWindow">
      <MemberSignature Language="C#" Value="public static System.Windows.Window GetWindow (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Window GetWindow(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Window ^ GetWindow(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetWindow : System.Windows.DependencyObject -&gt; System.Windows.Window" Usage="System.Windows.Window.GetWindow dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="fdf62-274">Obiekt zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-274">The dependency object.</span></span></param>
        <summary><span data-ttu-id="fdf62-275">Zwraca odwołanie do <see cref="T:System.Windows.Window" /> obiektu, który jest hostem drzewa zawartości, w którym znajduje się obiekt zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-275">Returns a reference to the <see cref="T:System.Windows.Window" /> object that hosts the content tree within which the dependency object is located.</span></span></summary>
        <returns><span data-ttu-id="fdf62-276">A <see cref="T:System.Windows.Window" /> odwołanie do okna hosta.</span><span class="sxs-lookup"><span data-stu-id="fdf62-276">A <see cref="T:System.Windows.Window" /> reference to the host window.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fdf62-277"><paramref name="dependencyObject" /> ma wartość null.</span><span class="sxs-lookup"><span data-stu-id="fdf62-277"><paramref name="dependencyObject" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hide();" />
      <MemberSignature Language="F#" Value="member this.Hide : unit -&gt; unit" Usage="window.Hide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdf62-278">Sprawia, że okno niewidoczne.</span><span class="sxs-lookup"><span data-stu-id="fdf62-278">Makes a window invisible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-279">Okno nie jest zamknięty, gdy jest ukryty, a <xref:System.Windows.Window.Closing> ani <xref:System.Windows.Window.Closed> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-279">A window is not closed when it is hidden, and neither the <xref:System.Windows.Window.Closing> nor <xref:System.Windows.Window.Closed> event is raised.</span></span> <span data-ttu-id="fdf62-280">Zamiast tego okna <xref:System.Windows.UIElement.Visibility%2A> właściwość jest ustawiona na <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-280">Instead, the window's <xref:System.Windows.UIElement.Visibility%2A> property is set to <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fdf62-281">Jeśli okno jest aplikacji <xref:System.Windows.Application.MainWindow%2A> i aplikacji <xref:System.Windows.Application.ShutdownMode%2A> jest <xref:System.Windows.ShutdownMode.OnMainWindowClose>, aplikacja nie jest zamykany.</span><span class="sxs-lookup"><span data-stu-id="fdf62-281">If a window is the application's <xref:System.Windows.Application.MainWindow%2A> and the application's <xref:System.Windows.Application.ShutdownMode%2A> is <xref:System.Windows.ShutdownMode.OnMainWindowClose>, the application does not shut down.</span></span> <span data-ttu-id="fdf62-282">Podobnie, aplikacja nie jest zamykany jest w trybie zamykania aplikacji, jeśli okno jest oknem tylko <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-282">Likewise, the application does not shut down if a window is the only window and the application's shutdown mode is <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span></span>  
  
 <span data-ttu-id="fdf62-283">Jeśli chcesz pokazać lub ukryć okno wiele razy w okresie istnienia aplikacji, a nie chcesz ponownie utworzyć okno zawsze możesz wyświetlać, może obsługiwać <xref:System.Windows.Window.Closing> zdarzeń, Anuluj ją, a następnie wywołaj <xref:System.Windows.Window.Hide%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="fdf62-283">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to re-instantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="fdf62-284">Następnie możesz wywołać <xref:System.Windows.Window.Show%2A> w jednym wystąpieniu, aby otworzyć go ponownie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-284">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to re-open it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdf62-285"><see cref="M:System.Windows.Window.Hide" /> jest wywoływana w oknie, który ma zostać zamknięty (<see cref="E:System.Windows.Window.Closing" />) lub zostało zamknięte (<see cref="E:System.Windows.Window.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="fdf62-285"><see cref="M:System.Windows.Window.Hide" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span></span></exception>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="M:System.Windows.Window.Close" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ Icon { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Window.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-286">Pobiera lub ustawia ikonę okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-286">Gets or sets a window's icon.</span></span></summary>
        <value><span data-ttu-id="fdf62-287"><see cref="T:System.Windows.Media.ImageSource" /> Obiekt, który reprezentuje ikony.</span><span class="sxs-lookup"><span data-stu-id="fdf62-287">An <see cref="T:System.Windows.Media.ImageSource" /> object that represents the icon.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-288">Aplikacje autonomiczne Windows Presentation Foundation (WPF) ma dwa typy ikon:</span><span class="sxs-lookup"><span data-stu-id="fdf62-288">Windows Presentation Foundation (WPF) standalone applications have two types of icons:</span></span>  
  
-   <span data-ttu-id="fdf62-289">Jeden zestaw ikonę, która jest określona za pomocą `<ApplicationIcon>` plik kompilacji właściwość w projekcie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-289">One assembly icon, which is specified by using the `<ApplicationIcon>` property in the application's project build file.</span></span> <span data-ttu-id="fdf62-290">Ta ikona jest stosowana jako ikony pulpitu dla zestawu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-290">This icon is used as the desktop icon for an assembly.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="fdf62-291">Podczas debugowania w programie Visual Studio, ikona nie może występować z powodu procesu hostingu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-291">When debugging in Visual Studio, your icon may not appear due to the hosting process.</span></span> <span data-ttu-id="fdf62-292">Jeśli uruchamiasz plik wykonywalny, pojawi się ikona.</span><span class="sxs-lookup"><span data-stu-id="fdf62-292">If you run the executable, the icon will appear.</span></span> <span data-ttu-id="fdf62-293">Aby uzyskać więcej informacji, zobacz [proces hostingu (vshost.exe)](https://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span><span class="sxs-lookup"><span data-stu-id="fdf62-293">For more information, see [Hosting Process (vshost.exe)](https://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span></span>  
  
-   <span data-ttu-id="fdf62-294">Jedna ikona na okno, które jest określany przez ustawienie <xref:System.Windows.Window.Icon%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-294">One icon per window that is specified by setting <xref:System.Windows.Window.Icon%2A>.</span></span> <span data-ttu-id="fdf62-295">Dla każdego okna ta ikona jest stosowana na pasku tytułu, jego przycisk paska zadań i w jego wpis listy wyboru aplikacji ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="fdf62-295">For each window, this icon is used in its title bar, its task bar button, and in its ALT-TAB application selection list entry.</span></span>  
  
 <span data-ttu-id="fdf62-296">Okno WPF zawsze wyświetla ikony.</span><span class="sxs-lookup"><span data-stu-id="fdf62-296">A WPF window always displays an icon.</span></span> <span data-ttu-id="fdf62-297">Jeśli jeden nie zostanie podany, ustawiając <xref:System.Windows.Window.Icon%2A>, WPF wybierze ikonę, aby wyświetlić na podstawie następujących reguł:</span><span class="sxs-lookup"><span data-stu-id="fdf62-297">When one is not provided by setting <xref:System.Windows.Window.Icon%2A>, WPF chooses an icon to display based on the following rules:</span></span>  
  
1.  <span data-ttu-id="fdf62-298">Jeśli zostanie określony, należy użyć ikony zestawu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-298">Use the assembly icon, if specified.</span></span>  
  
2.  <span data-ttu-id="fdf62-299">Jeśli ikona zestawu nie jest określony, należy użyć domyślną ikonę programu Microsoft Windows.</span><span class="sxs-lookup"><span data-stu-id="fdf62-299">If the assembly icon is not specified, use the default Microsoft Windows icon.</span></span>  
  
 <span data-ttu-id="fdf62-300">Jeśli używasz <xref:System.Windows.Window.Icon%2A> można określić niestandardowe okno ikonę, można przywrócić domyślną ikonę aplikacji przez ustawienie <xref:System.Windows.Window.Icon%2A> do `null`.</span><span class="sxs-lookup"><span data-stu-id="fdf62-300">If you use <xref:System.Windows.Window.Icon%2A> to specify a custom window icon, you can restore the default application icon by setting <xref:System.Windows.Window.Icon%2A> to `null`.</span></span>  
  
 <span data-ttu-id="fdf62-301">Pojedyncza ikona może służyć w na różne sposoby w Windows, w tym pokazanie na pasku tytułu okna, na pasku zadań, w oknie Lista wyboru plików ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="fdf62-301">A single icon can be used in a variety of ways in Windows, including being shown in the title bar of a window, the task bar for a window, the ALT+TAB file selection list.</span></span> <span data-ttu-id="fdf62-302">Każdy z nich zawiera ikonę przy użyciu innego rozmiaru; Ikona 16 x 16 pikseli jest wyświetlany na pasku tytułu okna i na pasku zadań, kiedy pojawi się ikona 32 x 32 piksele na liście wyboru plików ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="fdf62-302">Each of these shows the icon using a different size; a 16x16 pixel icon is displayed in the title bar of a window and in the task bar, while a 32x32 pixel icon is displayed in the ALT+TAB file selection list.</span></span> <span data-ttu-id="fdf62-303">Niektóre aplikacje, takie jak [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], podaj **widoku** menu, które można wybrać rozmiar ikony, o których chcesz wyświetlić.</span><span class="sxs-lookup"><span data-stu-id="fdf62-303">Some applications, like [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], provide a **View** menu that allows you to choose the size of the icon you'd like to view.</span></span>  
  
 <span data-ttu-id="fdf62-304">Aby adresowanych do różnych rozmiarów ekranu, plik ikony składa się z co najmniej jeden rzeczywisty ikony, gdzie każdy z nich reprezentuje wersji ikony, który jest przeznaczony dla określonego głębokość rozmiarze i kolorze.</span><span class="sxs-lookup"><span data-stu-id="fdf62-304">To cater to the various display sizes, an icon file is composed of one or more actual icons where each one represents a version of the icon that targets a specific size and color depth.</span></span> <span data-ttu-id="fdf62-305">Na przykład jedna ikona może mieć tylko pojedyncza ikona 16 x 16 pikseli, 16 kolorów, podczas gdy inny może zawierać 16 x 16 pikseli i ikony 32 x 32 piksele zarówno 16 kolorów, jak i 256 kolorów.</span><span class="sxs-lookup"><span data-stu-id="fdf62-305">For example, one icon may only have a single 16x16 pixel icon with 16 colors, while another may contain 16x16 pixel and 32x32 pixel icons with both 16 colors and 256 colors.</span></span>  
  
 <span data-ttu-id="fdf62-306">Jeśli ikony dla wszystkich możliwych wielkości i głębi kolorów istnieje w pliku ikony <xref:System.Windows.Window> użyje odpowiednią ikonę.</span><span class="sxs-lookup"><span data-stu-id="fdf62-306">If icons for all possible sizes and color depths exist within an icon file, <xref:System.Windows.Window> will use the appropriate icon.</span></span> <span data-ttu-id="fdf62-307">Jeśli plik ikony zawiera tylko podzbiór wszystkich możliwych ikon <xref:System.Windows.Window> używa dalej najbardziej odpowiednią ikonę w kolejności malejących wielkości i głębi kolorów.</span><span class="sxs-lookup"><span data-stu-id="fdf62-307">If an icon file contains only a subset of all the possible icons, <xref:System.Windows.Window> uses the next most appropriate icon in order of decreasing sizes and color depth.</span></span>  
  
 <span data-ttu-id="fdf62-308">Wynik jest, że ikona zawsze będzie używany przez <xref:System.Windows.Window>, mimo że ikona używana nie mogą odnosić się do wymaganych głębokość rozmiarze i kolorze.</span><span class="sxs-lookup"><span data-stu-id="fdf62-308">The result is that an icon will always be used by <xref:System.Windows.Window>, although the icon used may not target the required size and color depth.</span></span> <span data-ttu-id="fdf62-309">Na przykład ikona 16 x 16 pikseli, 16 kolorów mogą służyć do wyświetlania jako ikona 32 x 32 piksele o 256 kolorach.</span><span class="sxs-lookup"><span data-stu-id="fdf62-309">For example, a 16x16 pixel icon with 16 colors may be used for display as a 32x32 pixel icon with 256 colors.</span></span> <span data-ttu-id="fdf62-310">To może spowodować niepożądane efekty wizualne, takie jak pixilation, ale można uniknąć, tworząc ikony wszystkich docelowych wielkości i głębi kolorów.</span><span class="sxs-lookup"><span data-stu-id="fdf62-310">This can cause undesirable visual effects, such as pixilation, but may be avoided by creating icons for all targeted sizes and color depths.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-311">Nie można ustawić lub pobrania tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-311">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIcon"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-312">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-312">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-313">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-313">Identifier field</span></span>|<xref:System.Windows.Window.IconProperty>|  
|<span data-ttu-id="fdf62-314">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-314">Metadata properties set to `true`</span></span>|<span data-ttu-id="fdf62-315">Brak</span><span class="sxs-lookup"><span data-stu-id="fdf62-315">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-316">Poniższy przykład pokazuje, jak można ustawić ikonę okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-316">The following example shows how to set a window icon.</span></span>  
  
 [!code-xaml[WindowIconSnippets#WindowIconSetXAML](~/samples/snippets/xaml/VS_Snippets_Wpf/WindowIconSnippets/XAML/MainWindow.xaml#windowiconsetxaml)]  
  
 [!code-csharp[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowIconSnippets/CSharp/MainWindow.xaml.cs#setwindowiconincode)]
 [!code-vb[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowIconSnippets/visualbasic/mainwindow.xaml.vb#setwindowiconincode)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fdf62-317">Aby uzyskać uprawnienia, aby ustawić ikonę.</span><span class="sxs-lookup"><span data-stu-id="fdf62-317">for permission to set the icon.</span></span> <span data-ttu-id="fdf62-318">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fdf62-318">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IconProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-319">Identyfikuje <see cref="P:System.Windows.Window.Icon" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-319">Identifies the <see cref="P:System.Windows.Window.Icon" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Windows.Window.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-320">Pobiera wartość wskazującą, czy okno jest aktywne.</span><span class="sxs-lookup"><span data-stu-id="fdf62-320">Gets a value that indicates whether the window is active.</span></span></summary>
        <value><span data-ttu-id="fdf62-321"><see langword="true" /> Jeśli okno jest aktywne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-321"><see langword="true" /> if the window is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fdf62-322">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-322">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-323">Aktywne okno jest bieżącego okna pierwszoplanowego użytkownika i ma fokus, który jest oznaczony za pomocą active wyglądu paska tytułu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-323">An active window is the user's current foreground window and has the focus, which is signified by the active appearance of the title bar.</span></span> <span data-ttu-id="fdf62-324">Aktywne okno będzie również najważniejsze wszystkich okien najwyższego poziomu, które nie jest jawnie ustawiana <xref:System.Windows.Window.Topmost%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-324">An active window will also be the top-most of all top-level windows that don't explicitly set the <xref:System.Windows.Window.Topmost%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIsActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-325">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-325">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-326">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-326">Identifier field</span></span>|<xref:System.Windows.Window.IsActiveProperty>|  
|<span data-ttu-id="fdf62-327">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-327">Metadata properties set to `true`</span></span>|<span data-ttu-id="fdf62-328">Brak</span><span class="sxs-lookup"><span data-stu-id="fdf62-328">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="IsActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IsActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsActiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsActiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IsActiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-329">Identyfikuje <see cref="P:System.Windows.Window.IsActive" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-329">Identifies the <see cref="P:System.Windows.Window.IsActive" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Left : double with get, set" Usage="System.Windows.Window.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-330">Pobiera lub Ustawia położenie lewej krawędzi okna, w odniesieniu do pulpitu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-330">Gets or sets the position of the window's left edge, in relation to the desktop.</span></span></summary>
        <value><span data-ttu-id="fdf62-331">Lewej krawędzi, położenie okna w jednostkach logicznych (1/96th cala).</span><span class="sxs-lookup"><span data-stu-id="fdf62-331">The position of the window's left edge, in logical units (1/96th of an inch).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-332">Gdy <xref:System.Windows.Window> jest zmaksymalizowane lub zminimalizowane, tym reprezentuje wartość lewej krawędzi przywracania punktów <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-332">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the left edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="fdf62-333">Nie można ustawić tej właściwości przy użyciu stylu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-333">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="fdf62-334">Jeśli nie określisz wartości, <xref:System.Windows.Window.Left%2A> ma ustawioną wartość domyślną systemu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-334">If you do not specify a value, <xref:System.Windows.Window.Left%2A> is set to the system default value.</span></span> <span data-ttu-id="fdf62-335">Wartość domyślna systemu można również określić, ustawiając <xref:System.Windows.Window.Left%2A> do <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-335">You can also specify the system default value by setting <xref:System.Windows.Window.Left%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="fdf62-336">Ani <xref:System.Double.NegativeInfinity> ani <xref:System.Double.PositiveInfinity> jest prawidłową wartością dla <xref:System.Windows.Window.Left%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-336">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Left%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-337">Nie można ustawić lub pobrania tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-337">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowLeft"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-338">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-338">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-339">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-339">Identifier field</span></span>|<xref:System.Windows.Window.LeftProperty>|  
|<span data-ttu-id="fdf62-340">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-340">Metadata properties set to `true`</span></span>|<span data-ttu-id="fdf62-341">Brak</span><span class="sxs-lookup"><span data-stu-id="fdf62-341">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.LeftProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LeftProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LeftProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LeftProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.LeftProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-342">Identyfikuje <see cref="P:System.Windows.Window.Left" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-342">Identifies the <see cref="P:System.Windows.Window.Left" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-343">Występuje, gdy zmieni się lokalizacja okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-343">Occurs when the window's location changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-344">Zmieni się lokalizacja okna po:</span><span class="sxs-lookup"><span data-stu-id="fdf62-344">A window's location changes when:</span></span>  
  
-   <span data-ttu-id="fdf62-345">Użytkownik przesuwa okno przez przeciągnięcie go za pomocą paska tytułu okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-345">A user moves a window by dragging it with the window's title bar.</span></span>  
  
-   <span data-ttu-id="fdf62-346">Okna są przenoszone po <xref:System.Windows.Window.DragMove%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="fdf62-346">A window is moved after <xref:System.Windows.Window.DragMove%2A> is called.</span></span>  
  
-   <span data-ttu-id="fdf62-347">Albo <xref:System.Windows.Window.Left%2A> lub <xref:System.Windows.Window.Top%2A> zostaje ustalona programowo.</span><span class="sxs-lookup"><span data-stu-id="fdf62-347">Either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> property is set programmatically.</span></span>  
  
-   <span data-ttu-id="fdf62-348">**Przenieść** wybrano element menu okna, menu systemowego.</span><span class="sxs-lookup"><span data-stu-id="fdf62-348">The **Move** menu item of a window's System menu is chosen.</span></span>  
  
-   <span data-ttu-id="fdf62-349"><xref:System.Windows.Window.WindowState%2A> Zmienić właściwości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-349">The <xref:System.Windows.Window.WindowState%2A> property is changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Window.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-350">Pobiera moduł wyliczający dla podrzędnych logicznego okna elementów.</span><span class="sxs-lookup"><span data-stu-id="fdf62-350">Gets an enumerator for a window's logical child elements.</span></span></summary>
        <value><span data-ttu-id="fdf62-351"><see cref="T:System.Collections.IEnumerator" /> Elementów podrzędnych logicznego okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-351">An <see cref="T:System.Collections.IEnumerator" /> a window's logical child elements.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.LogicalChildren" />
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="fdf62-352">A <see cref="T:System.Windows.Size" /> , które odzwierciedla dostępny rozmiar, który tego okna może dostarczyć do elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="fdf62-352">A <see cref="T:System.Windows.Size" /> that reflects the available size that this window can give to the child.</span></span> <span data-ttu-id="fdf62-353">Infinity może zostać podany jako wartość, aby wskazać, że rozmiar okna zostanie zmieniony na dowolną zawartość jest dostępna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-353">Infinity can be given as a value to indicate that the window will size to whatever content is available.</span></span></param>
        <summary><span data-ttu-id="fdf62-354">Zastępuje tę metodę w celu mierzenia rozmiaru okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-354">Override this method to measure the size of a window.</span></span></summary>
        <returns><span data-ttu-id="fdf62-355">A <see cref="T:System.Windows.Size" /> , które odzwierciedla rozmiar tego okna określa wymagane podczas układu, w oparciu o obliczenia rozmiarów dla dzieci.</span><span class="sxs-lookup"><span data-stu-id="fdf62-355">A <see cref="T:System.Windows.Size" /> that reflects the size that this window determines it needs during layout, based on its calculations of children's sizes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-356"><xref:System.Windows.Window.MeasureOverride%2A> nie jest wywoływana, gdy <xref:System.Windows.UIElement.Visibility%2A> właściwość ma wartość <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-356"><xref:System.Windows.Window.MeasureOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="fdf62-357">Jeśli wartość <xref:System.Windows.UIElement.Visibility%2A> właściwości <xref:System.Windows.Visibility.Hidden> lub <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="fdf62-357">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-358">Gdy albo <xref:System.Windows.Window.Show%2A> lub <xref:System.Windows.Window.ShowDialog%2A> są nazywane <xref:System.Windows.UIElement.Visibility%2A> właściwość <xref:System.Windows.Window> ustawiono <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-358">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivated : EventArgs -&gt; unit&#xA;override this.OnActivated : EventArgs -&gt; unit" Usage="window.OnActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdf62-359"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-359">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdf62-360">Wywołuje <see cref="E:System.Windows.Window.Activated" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-360">Raises the <see cref="E:System.Windows.Window.Activated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-361"><xref:System.Windows.Window.OnActivated%2A> wywołuje <xref:System.Windows.Window.Activated> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-361"><xref:System.Windows.Window.OnActivated%2A> raises the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="fdf62-362">Typ, który pochodzi od klasy <xref:System.Windows.Window> mogą zastępować <xref:System.Windows.Window.OnActivated%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-362">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnActivated%2A>.</span></span> <span data-ttu-id="fdf62-363">Zastąpione metody należy wywołać <xref:System.Windows.Window.OnActivated%2A> w klasie bazowej Jeśli <xref:System.Windows.Window.Activated> musi zostać wywołane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-363">The overridden method must call <xref:System.Windows.Window.OnActivated%2A> on the base class if <xref:System.Windows.Window.Activated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="window.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdf62-364"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-364">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdf62-365">Wywołuje <see cref="E:System.Windows.Window.Closed" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-365">Raises the <see cref="E:System.Windows.Window.Closed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-366"><xref:System.Windows.Window.OnClosed%2A> wywołuje <xref:System.Windows.Window.Closed> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-366"><xref:System.Windows.Window.OnClosed%2A> raises the <xref:System.Windows.Window.Closed> event.</span></span>  
  
 <span data-ttu-id="fdf62-367">Typ, który pochodzi od klasy <xref:System.Windows.Window> mogą zastępować <xref:System.Windows.Window.OnClosed%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-367">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosed%2A>.</span></span> <span data-ttu-id="fdf62-368">Zastąpione metody należy wywołać <xref:System.Windows.Window.OnClosed%2A> w klasie bazowej Jeśli <xref:System.Windows.Window.Closed> musi zostać wywołane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-368">The overridden method must call <xref:System.Windows.Window.OnClosed%2A> on the base class if <xref:System.Windows.Window.Closed> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="window.OnClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdf62-369">Element <see cref="T:System.ComponentModel.CancelEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-369">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdf62-370">Wywołuje <see cref="E:System.Windows.Window.Closing" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-370">Raises the <see cref="E:System.Windows.Window.Closing" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-371"><xref:System.Windows.Window.OnClosing%2A> wywołuje <xref:System.Windows.Window.Closing> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-371"><xref:System.Windows.Window.OnClosing%2A> raises the <xref:System.Windows.Window.Closing> event.</span></span>  
  
 <span data-ttu-id="fdf62-372">Typ, który pochodzi od klasy <xref:System.Windows.Window> mogą zastępować <xref:System.Windows.Window.OnClosing%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-372">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosing%2A>.</span></span> <span data-ttu-id="fdf62-373">Zastąpione metody należy wywołać <xref:System.Windows.Window.OnClosing%2A> w klasie bazowej Jeśli <xref:System.Windows.Window.Closing> musi zostać wywołane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-373">The overridden method must call <xref:System.Windows.Window.OnClosing%2A> on the base class if <xref:System.Windows.Window.Closing> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnContentChanged (object oldContent, object newContent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContentChanged(object oldContent, object newContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContentChanged (oldContent As Object, newContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContentChanged(System::Object ^ oldContent, System::Object ^ newContent);" />
      <MemberSignature Language="F#" Value="override this.OnContentChanged : obj * obj -&gt; unit" Usage="window.OnContentChanged (oldContent, newContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContent" Type="System.Object" />
        <Parameter Name="newContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldContent"><span data-ttu-id="fdf62-374">Odwołanie do katalogu głównego w starym drzewie zawartości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-374">A reference to the root of the old content tree.</span></span></param>
        <param name="newContent"><span data-ttu-id="fdf62-375">Odwołanie do nowego drzewa zawartości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-375">A reference to the root of the new content tree.</span></span></param>
        <summary><span data-ttu-id="fdf62-376">Wywoływane, gdy <see cref="P:System.Windows.Controls.ContentControl.Content" /> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-376">Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentRendered">
      <MemberSignature Language="C#" Value="protected virtual void OnContentRendered (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentRendered(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentRendered(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentRendered (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentRendered(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentRendered : EventArgs -&gt; unit&#xA;override this.OnContentRendered : EventArgs -&gt; unit" Usage="window.OnContentRendered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdf62-377"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-377">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdf62-378">Wywołuje <see cref="E:System.Windows.Window.ContentRendered" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-378">Raises the <see cref="E:System.Windows.Window.ContentRendered" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-379"><xref:System.Windows.Window.OnContentRendered%2A> wywołuje <xref:System.Windows.Window.ContentRendered> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-379"><xref:System.Windows.Window.OnContentRendered%2A> raises the <xref:System.Windows.Window.ContentRendered> event.</span></span>  
  
 <span data-ttu-id="fdf62-380">Typ, który pochodzi od klasy <xref:System.Windows.Window> mogą zastępować <xref:System.Windows.Window.OnContentRendered%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-380">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnContentRendered%2A>.</span></span> <span data-ttu-id="fdf62-381">Zastąpione metody należy wywołać <xref:System.Windows.Window.OnContentRendered%2A> w klasie bazowej Jeśli <xref:System.Windows.Window.ContentRendered> musi zostać wywołane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-381">The overridden method must call <xref:System.Windows.Window.OnContentRendered%2A> on the base class if <xref:System.Windows.Window.ContentRendered> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="window.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdf62-382">Tworzy i zwraca <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> obiektu dla tej <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-382">Creates and returns a <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span></span></summary>
        <returns><span data-ttu-id="fdf62-383">A <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> obiektu dla tej <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-383">A <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-384">Ta metoda zastępuje <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-384">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivated">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivated : EventArgs -&gt; unit&#xA;override this.OnDeactivated : EventArgs -&gt; unit" Usage="window.OnDeactivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdf62-385"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-385">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdf62-386">Wywołuje <see cref="E:System.Windows.Window.Deactivated" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-386">Raises the <see cref="E:System.Windows.Window.Deactivated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-387"><xref:System.Windows.Window.OnDeactivated%2A> wywołuje <xref:System.Windows.Window.Deactivated> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-387"><xref:System.Windows.Window.OnDeactivated%2A> raises the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="fdf62-388">Typ, który pochodzi od klasy <xref:System.Windows.Window> mogą zastępować <xref:System.Windows.Window.OnDeactivated%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-388">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnDeactivated%2A>.</span></span> <span data-ttu-id="fdf62-389">Zastąpione metody należy wywołać <xref:System.Windows.Window.OnDeactivated%2A> w klasie bazowej Jeśli <xref:System.Windows.Window.Deactivated> musi zostać wywołane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-389">The overridden method must call <xref:System.Windows.Window.OnDeactivated%2A> on the base class if <xref:System.Windows.Window.Deactivated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected override void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="window.OnDpiChanged (oldDpi, newDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="oldDpi"><span data-ttu-id="fdf62-390">Poprzednie Skalowanie DPI ustawienie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-390">The previous DPI scale setting.</span></span></param>
        <param name="newDpi"><span data-ttu-id="fdf62-391">Nowe skalowania DPI ustawienie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-391">The new DPI scale setting.</span></span></param>
        <summary><span data-ttu-id="fdf62-392">Wywoływane, gdy wartość DPI, w którym to okno jest renderowany zmiany.</span><span class="sxs-lookup"><span data-stu-id="fdf62-392">Called when the DPI at which this window is rendered changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="window.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdf62-393"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-393">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdf62-394">Wywołuje <see cref="E:System.Windows.Window.LocationChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-394">Raises the <see cref="E:System.Windows.Window.LocationChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-395"><xref:System.Windows.Window.OnLocationChanged%2A> wywołuje <xref:System.Windows.Window.LocationChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-395"><xref:System.Windows.Window.OnLocationChanged%2A> raises the <xref:System.Windows.Window.LocationChanged> event.</span></span>  
  
 <span data-ttu-id="fdf62-396">Typ, który pochodzi od klasy <xref:System.Windows.Window> mogą zastępować <xref:System.Windows.Window.OnLocationChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-396">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnLocationChanged%2A>.</span></span> <span data-ttu-id="fdf62-397">Zastąpione metody należy wywołać <xref:System.Windows.Window.OnLocationChanged%2A> w klasie bazowej Jeśli <xref:System.Windows.Window.LocationChanged> musi zostać wywołane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-397">The overridden method must call <xref:System.Windows.Window.OnLocationChanged%2A> on the base class if <xref:System.Windows.Window.LocationChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected override void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit" Usage="window.OnManipulationBoundaryFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdf62-398">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-398">The data for the event.</span></span></param>
        <summary><span data-ttu-id="fdf62-399">Wywoływane, gdy <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-399">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-400">Ta implementacja nie zmienia stanu obsługiwane ( <xref:System.Windows.RoutedEventArgs.Handled%2A> właściwość) z <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-400">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fdf62-401">Jeśli zastąpisz <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, zawsze wywoływać implementację podstawową swojej <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-401">If you override <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> implementation.</span></span> <span data-ttu-id="fdf62-402">Nie można wywoływać implementację podstawową zapobiega obsługi zdarzenia, które mogą ulec zmianie zachowania w czasie wykonywania ostatnią klasę klas bazowych.</span><span class="sxs-lookup"><span data-stu-id="fdf62-402">Failure to call the base implementation prevents base classes from handling the event, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="fdf62-403">W zależności od wymagań można wywoływać implementację podstawową przed lub po swojej specjalnej obsługi.</span><span class="sxs-lookup"><span data-stu-id="fdf62-403">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSourceInitialized">
      <MemberSignature Language="C#" Value="protected virtual void OnSourceInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSourceInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSourceInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSourceInitialized : EventArgs -&gt; unit&#xA;override this.OnSourceInitialized : EventArgs -&gt; unit" Usage="window.OnSourceInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdf62-404"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-404">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdf62-405">Wywołuje <see cref="E:System.Windows.Window.SourceInitialized" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-405">Raises the <see cref="E:System.Windows.Window.SourceInitialized" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-406"><xref:System.Windows.Window.OnSourceInitialized%2A> wywołuje <xref:System.Windows.Window.SourceInitialized> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-406"><xref:System.Windows.Window.OnSourceInitialized%2A> raises the <xref:System.Windows.Window.SourceInitialized> event.</span></span>  
  
 <span data-ttu-id="fdf62-407">Typ, który pochodzi od klasy <xref:System.Windows.Window> mogą zastępować <xref:System.Windows.Window.OnSourceInitialized%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-407">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnSourceInitialized%2A>.</span></span> <span data-ttu-id="fdf62-408">Zastąpione metody należy wywołać <xref:System.Windows.Window.OnSourceInitialized%2A> w klasie bazowej Jeśli <xref:System.Windows.Window.SourceInitialized> musi zostać wywołane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-408">The overridden method must call <xref:System.Windows.Window.OnSourceInitialized%2A> on the base class if <xref:System.Windows.Window.SourceInitialized> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStateChanged : EventArgs -&gt; unit&#xA;override this.OnStateChanged : EventArgs -&gt; unit" Usage="window.OnStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fdf62-409"><see cref="T:System.EventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="fdf62-409">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fdf62-410">Wywołuje <see cref="E:System.Windows.Window.StateChanged" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-410">Raises the <see cref="E:System.Windows.Window.StateChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-411"><xref:System.Windows.Window.OnStateChanged%2A> wywołuje <xref:System.Windows.Window.StateChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-411"><xref:System.Windows.Window.OnStateChanged%2A> raises the <xref:System.Windows.Window.StateChanged> event.</span></span>  
  
 <span data-ttu-id="fdf62-412">Typ, który pochodzi od klasy <xref:System.Windows.Window> mogą zastępować <xref:System.Windows.Window.OnStateChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-412">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnStateChanged%2A>.</span></span> <span data-ttu-id="fdf62-413">Zastąpione metody należy wywołać <xref:System.Windows.Window.OnStateChanged%2A> w klasie bazowej Jeśli <xref:System.Windows.Window.StateChanged> musi zostać wywołane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-413">The overridden method must call <xref:System.Windows.Window.OnStateChanged%2A> on the base class if <xref:System.Windows.Window.StateChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualChildrenChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualChildrenChanged(class System.Windows.DependencyObject visualAdded, class System.Windows.DependencyObject visualRemoved) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualChildrenChanged (visualAdded As DependencyObject, visualRemoved As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualChildrenChanged(System::Windows::DependencyObject ^ visualAdded, System::Windows::DependencyObject ^ visualRemoved);" />
      <MemberSignature Language="F#" Value="override this.OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="window.OnVisualChildrenChanged (visualAdded, visualRemoved)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualAdded" Type="System.Windows.DependencyObject" />
        <Parameter Name="visualRemoved" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="visualAdded"><span data-ttu-id="fdf62-414"><see cref="T:System.Windows.Media.Visual" /> Który został dodany do kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-414">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection.</span></span></param>
        <param name="visualRemoved"><span data-ttu-id="fdf62-415"><see cref="T:System.Windows.Media.Visual" /> , Został usunięty z kolekcji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-415">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection.</span></span></param>
        <summary><span data-ttu-id="fdf62-416">Wywoływane, gdy <see cref="T:System.Windows.Media.VisualCollection" /> to <see cref="T:System.Windows.Window" /> obiekt zostanie zmodyfikowany.</span><span class="sxs-lookup"><span data-stu-id="fdf62-416">Called when the <see cref="T:System.Windows.Media.VisualCollection" /> of this <see cref="T:System.Windows.Window" /> object is modified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override sealed void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="window.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="fdf62-417">Poprzedniego elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="fdf62-417">The previous parent.</span></span> <span data-ttu-id="fdf62-418">Ustaw na wartość null, jeśli <see cref="T:System.Windows.DependencyObject" /> nie miał poprzedniego nadrzędnej.</span><span class="sxs-lookup"><span data-stu-id="fdf62-418">Set to null if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</span></span></param>
        <summary><span data-ttu-id="fdf62-419">Wywołuje się, gdy zostanie zmieniony przez nadrzędne okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-419">Called when the parent of the window is changed.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="OwnedWindows">
      <MemberSignature Language="C#" Value="public System.Windows.WindowCollection OwnedWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.WindowCollection OwnedWindows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.OwnedWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedWindows As WindowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowCollection ^ OwnedWindows { System::Windows::WindowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnedWindows : System.Windows.WindowCollection" Usage="System.Windows.Window.OwnedWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-420">Pobiera kolekcję systemu windows, których właścicielem jest to okno.</span><span class="sxs-lookup"><span data-stu-id="fdf62-420">Gets a collection of windows for which this window is the owner.</span></span></summary>
        <value><span data-ttu-id="fdf62-421">Element <see cref="T:System.Windows.WindowCollection" /> zawierający odniesienia do systemu windows, których właścicielem jest to okno.</span><span class="sxs-lookup"><span data-stu-id="fdf62-421">A <see cref="T:System.Windows.WindowCollection" /> that contains references to the windows for which this window is the owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-422">Należących do okna jest jednym którego <xref:System.Windows.Window.Owner%2A> właściwość została ustawiona za pomocą odwołania do innego okna, który jest znany jako okno właściciela.</span><span class="sxs-lookup"><span data-stu-id="fdf62-422">An owned window is one whose <xref:System.Windows.Window.Owner%2A> property is set with a reference to another window, which is known as the owner window.</span></span> <span data-ttu-id="fdf62-423">Aby znaleźć wszystkie okna, które należą do okna właściciela, można wyliczyć <xref:System.Windows.WindowCollection> zwracanym przez <xref:System.Windows.Window.OwnedWindows%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-423">To find all the windows that an owner window owns, you can enumerate <xref:System.Windows.WindowCollection> that is returned by the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-424">Poniższy przykład pokazuje, jak wyliczyć <xref:System.Windows.Window.OwnedWindows%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-424">The following example shows how to enumerate <xref:System.Windows.Window.OwnedWindows%2A>.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#getwindowownedwindowscode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#getwindowownedwindowscode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Window Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Window Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Window ^ Owner { System::Windows::Window ^ get(); void set(System::Windows::Window ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Window with get, set" Usage="System.Windows.Window.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-425">Pobiera lub ustawia <see cref="T:System.Windows.Window" /> , który jest właścicielem tego <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-425">Gets or sets the <see cref="T:System.Windows.Window" /> that owns this <see cref="T:System.Windows.Window" />.</span></span></summary>
        <value><span data-ttu-id="fdf62-426">A <see cref="T:System.Windows.Window" /> obiekt, który reprezentuje właściciela tego <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-426">A <see cref="T:System.Windows.Window" /> object that represents the owner of this <see cref="T:System.Windows.Window" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-427">Po otwarciu okna podrzędnego przez okno nadrzędne, wywołując <xref:System.Windows.Window.ShowDialog%2A>, następuje ustanowienie niejawnych relacji między elementem nadrzędnym i podrzędnym okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-427">When a child window is opened by a parent window by calling <xref:System.Windows.Window.ShowDialog%2A>, an implicit relationship is established between both parent and child window.</span></span> <span data-ttu-id="fdf62-428">Ta relacja wymusza niektórych zachowań, takich jak pod kątem minimalizowania, maksymalizowania i przywracania.</span><span class="sxs-lookup"><span data-stu-id="fdf62-428">This relationship enforces certain behaviors, including with respect to minimizing, maximizing, and restoring.</span></span>  
  
 <span data-ttu-id="fdf62-429">Podczas tworzenia okna podrzędnego przez okno nadrzędne, wywołując <xref:System.Windows.Window.Show%2A>, jednak okno podrzędne nie ma relacji z okna nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="fdf62-429">When a child window is created by a parent window by calling <xref:System.Windows.Window.Show%2A>, however, the child window does not have a relationship with the parent window.</span></span> <span data-ttu-id="fdf62-430">Oznacza to, że:</span><span class="sxs-lookup"><span data-stu-id="fdf62-430">This means that:</span></span>  
  
-   <span data-ttu-id="fdf62-431">Okno podrzędne nie ma odwołania do okna nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="fdf62-431">The child window does not have a reference to the parent window.</span></span>  
  
-   <span data-ttu-id="fdf62-432">Zachowanie okna podrzędnego nie jest zależna od zachowania oknie nadrzędnym. którekolwiek okno zakrywała drugą lub zminimalizowana w trybie zmaksymalizowanym i przywrócenie niezależnie od drugiego.</span><span class="sxs-lookup"><span data-stu-id="fdf62-432">The behavior of the child window is not dependent on the behavior of the parent window; either window can cover the other, or be minimized, maximized, and restored independently of the other.</span></span>  
  
 <span data-ttu-id="fdf62-433">Aby możliwe było tworzenie relacji między oknem podrzędnym i okno nadrzędne, <xref:System.Windows.Window> obsługuje pojęcie własności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-433">To allow you to create a relationship between a child window and a parent window, <xref:System.Windows.Window> supports the notion of ownership.</span></span> <span data-ttu-id="fdf62-434">Własność jest ustanawiane po <xref:System.Windows.Window.Owner%2A> ustawiono właściwości okna (okno należące do firmy) z odwołaniem do innego okna (Okno właściciela).</span><span class="sxs-lookup"><span data-stu-id="fdf62-434">Ownership is established when the <xref:System.Windows.Window.Owner%2A> property of a window (the owned window) is set with a reference to another window (the owner window).</span></span>  
  
 <span data-ttu-id="fdf62-435">Po ustanowieniu tej relacji, wystawiane są następujące zachowania:</span><span class="sxs-lookup"><span data-stu-id="fdf62-435">Once this relationship is established, the following behaviors are exhibited:</span></span>  
  
-   <span data-ttu-id="fdf62-436">Jeśli jest zminimalizowane okno właściciela, również są zminimalizowane wszystkie należące do firmy windows.</span><span class="sxs-lookup"><span data-stu-id="fdf62-436">If an owner window is minimized, all its owned windows are minimized as well.</span></span>  
  
-   <span data-ttu-id="fdf62-437">Jeśli jest zminimalizowane okno należące do firmy, jego właściciela nie jest zminimalizowany.</span><span class="sxs-lookup"><span data-stu-id="fdf62-437">If an owned window is minimized, its owner is not minimized.</span></span>  
  
-   <span data-ttu-id="fdf62-438">Jeśli okno właściciela jest zmaksymalizowane, zostaną przywrócone okna właściciela i należących do systemu windows.</span><span class="sxs-lookup"><span data-stu-id="fdf62-438">If an owner window is maximized, both the owner window and its owned windows are restored.</span></span>  
  
-   <span data-ttu-id="fdf62-439">Okno właściciela nigdy nie może obejmować należących do okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-439">An owner window can never cover an owned window.</span></span>  
  
-   <span data-ttu-id="fdf62-440">Należące do systemu windows, które nie zostały otwarte przy użyciu <xref:System.Windows.Window.ShowDialog%2A> nie są modalnych.</span><span class="sxs-lookup"><span data-stu-id="fdf62-440">Owned windows that were not opened using <xref:System.Windows.Window.ShowDialog%2A> are not modal.</span></span> <span data-ttu-id="fdf62-441">Użytkownik nadal może korzystać z okna właściciela.</span><span class="sxs-lookup"><span data-stu-id="fdf62-441">The user can still interact with the owner window.</span></span>  
  
-   <span data-ttu-id="fdf62-442">Jeśli zamkniesz okno właściciela należących do systemu windows, także są zamknięte.</span><span class="sxs-lookup"><span data-stu-id="fdf62-442">If you close an owner window, its owned windows are also closed.</span></span>  
  
-   <span data-ttu-id="fdf62-443">Jeśli okno należące do firmy został otwarty przez jej właściciela okna przy użyciu <xref:System.Windows.Window.Show%2A>oraz właściciel okno zostanie zamknięte, należących do okna <xref:System.Windows.Window.Closing> nie jest wywoływane zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-443">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span>  
  
 <span data-ttu-id="fdf62-444">Po otwarciu okna podrzędnego, wywołując <xref:System.Windows.Window.ShowDialog%2A>, należy również ustawić <xref:System.Windows.Window.Owner%2A> właściwości okna podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="fdf62-444">When you open a child window by calling <xref:System.Windows.Window.ShowDialog%2A>, you should also set the <xref:System.Windows.Window.Owner%2A> property of the child window.</span></span> <span data-ttu-id="fdf62-445">Jeśli nie, użytkownicy nie będzie mógł przywrócić okno podrzędne i okno nadrzędne, naciskając przycisk paska zadań.</span><span class="sxs-lookup"><span data-stu-id="fdf62-445">If you don't, then your users won't be able to restore both child window and parent window by pressing the task bar button.</span></span> <span data-ttu-id="fdf62-446">Zamiast tego nacisnąć przycisk paska zadań umożliwia uzyskanie listy windows, w tym okna nadrzędnymi i podrzędnymi, aby wybrać; wybrane okno zostanie przywrócony.</span><span class="sxs-lookup"><span data-stu-id="fdf62-446">Instead, pressing the task bar button will yield a list of windows, including both child and parent window, for them to select; only the selected window is restored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fdf62-447">Należy również ustawić <xref:System.Windows.Window.Owner%2A> właściwości w oknie, który jest otwierany, wywołując <xref:System.Windows.Window.ShowDialog%2A> do zapewnienia poprawnego zachowania z.</span><span class="sxs-lookup"><span data-stu-id="fdf62-447">You should also set the <xref:System.Windows.Window.Owner%2A> property on a window that is opened by calling <xref:System.Windows.Window.ShowDialog%2A> to ensure correct behavior with .</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-448">Nie można ustawić lub pobrania tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-448">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-449">Poniższy przykład pokazuje, jak do ustanawiania relacji/należące do właściciela.</span><span class="sxs-lookup"><span data-stu-id="fdf62-449">The following example shows how to establish the owner/owned relationship.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#setwindowownercode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#setwindowownercode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fdf62-450">Okno próbuje należeć do samego siebie</span><span class="sxs-lookup"><span data-stu-id="fdf62-450">A window tries to own itself</span></span> 
<span data-ttu-id="fdf62-451">—lub—</span><span class="sxs-lookup"><span data-stu-id="fdf62-451">-or-</span></span> 
<span data-ttu-id="fdf62-452">Spróbuj dwa okna do siebie nawzajem.</span><span class="sxs-lookup"><span data-stu-id="fdf62-452">Two windows try to own each other.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdf62-453"><see cref="P:System.Windows.Window.Owner" /> Właściwość jest ustawiona na widoczne okno pokazany przy użyciu <see cref="M:System.Windows.Window.ShowDialog" /></span><span class="sxs-lookup"><span data-stu-id="fdf62-453">The <see cref="P:System.Windows.Window.Owner" /> property is set on a visible window shown using <see cref="M:System.Windows.Window.ShowDialog" /></span></span>  
  
<span data-ttu-id="fdf62-454">—lub—</span><span class="sxs-lookup"><span data-stu-id="fdf62-454">-or-</span></span> 
<span data-ttu-id="fdf62-455"><see cref="P:System.Windows.Window.Owner" /> Właściwość została ustawiona za pomocą okna, które nie zostały wcześniej wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-455">The <see cref="P:System.Windows.Window.Owner" /> property is set with a window that has not been previously shown.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fdf62-456">uprawnienia do użycia, wszystkich okien i zdarzenia wejściowe użytkownika bez ograniczeń.</span><span class="sxs-lookup"><span data-stu-id="fdf62-456">for permission to use all windows and user input events without restriction.</span></span> <span data-ttu-id="fdf62-457">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fdf62-457">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="ResizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.ResizeMode ResizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.ResizeMode ResizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ResizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ResizeMode As ResizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResizeMode ResizeMode { System::Windows::ResizeMode get(); void set(System::Windows::ResizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeMode : System.Windows.ResizeMode with get, set" Usage="System.Windows.Window.ResizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-458">Pobiera lub ustawia tryb zmiany rozmiaru.</span><span class="sxs-lookup"><span data-stu-id="fdf62-458">Gets or sets the resize mode.</span></span></summary>
        <value><span data-ttu-id="fdf62-459">A <see cref="T:System.Windows.ResizeMode" /> określająca tryb zmiany rozmiaru.</span><span class="sxs-lookup"><span data-stu-id="fdf62-459">A <see cref="T:System.Windows.ResizeMode" /> value specifying the resize mode.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-460">Istnieją cztery opcje:</span><span class="sxs-lookup"><span data-stu-id="fdf62-460">There are four options:</span></span>  
  
-   <span data-ttu-id="fdf62-461">**NoResize**.</span><span class="sxs-lookup"><span data-stu-id="fdf62-461">**NoResize**.</span></span> <span data-ttu-id="fdf62-462">Użytkownik nie może zmienić rozmiar okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-462">The user cannot resize the window.</span></span> <span data-ttu-id="fdf62-463">Maksymalizuj i Minimalizuj pól nie są wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-463">The Maximize and Minimize boxes are not shown.</span></span>  
  
-   <span data-ttu-id="fdf62-464">**CanMinimize**.</span><span class="sxs-lookup"><span data-stu-id="fdf62-464">**CanMinimize**.</span></span> <span data-ttu-id="fdf62-465">Użytkownik tylko można zminimalizować okno i przywróć ją z poziomu paska zadań.</span><span class="sxs-lookup"><span data-stu-id="fdf62-465">The user can only minimize the window and restore it from the taskbar.</span></span> <span data-ttu-id="fdf62-466">Minimalizuj i maksymalizacji pól są wyświetlane, ale pole minimalizacji jest włączone.</span><span class="sxs-lookup"><span data-stu-id="fdf62-466">The Minimize and Maximize boxes are both shown, but only the Minimize box is enabled.</span></span>  
  
-   <span data-ttu-id="fdf62-467">**CanResize**.</span><span class="sxs-lookup"><span data-stu-id="fdf62-467">**CanResize**.</span></span> <span data-ttu-id="fdf62-468">Użytkownik ma pełną możliwość zmiany rozmiaru okna, za pomocą minimalizacji i maksymalizacji pól i przeciąganego konspektu wokół okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-468">The user has the full ability to resize the window, using the Minimize and Maximize boxes, and a draggable outline around the window.</span></span> <span data-ttu-id="fdf62-469">Minimalizuj i maksymalizacji pól są wyświetlane i włączone.</span><span class="sxs-lookup"><span data-stu-id="fdf62-469">The Minimize and Maximize boxes are shown and enabled.</span></span> <span data-ttu-id="fdf62-470">(Ustawienie domyślne).</span><span class="sxs-lookup"><span data-stu-id="fdf62-470">(Default).</span></span>  
  
-   <span data-ttu-id="fdf62-471">**CanResizeWithGrip**.</span><span class="sxs-lookup"><span data-stu-id="fdf62-471">**CanResizeWithGrip**.</span></span> <span data-ttu-id="fdf62-472">Ta opcja ma taką samą funkcjonalność jak <xref:System.Windows.ResizeMode.CanResize>, ale dodaje "uchwyt zmiany rozmiaru" w prawym dolnym rogu okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-472">This option has the same functionality as <xref:System.Windows.ResizeMode.CanResize>, but adds a "resize grip" to the lower right corner of the window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-473">Nie można ustawić lub pobrania tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-473">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowResizeMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-474">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-474">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-475">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-475">Identifier field</span></span>|<xref:System.Windows.Window.ResizeModeProperty>|  
|<span data-ttu-id="fdf62-476">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-476">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ResizeGrip" />
      </Docs>
    </Member>
    <Member MemberName="ResizeModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ResizeModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ResizeModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ResizeModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResizeModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ResizeModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ResizeModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ResizeModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-477">Identyfikuje <see cref="P:System.Windows.Window.ResizeMode" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-477">Identifies the <see cref="P:System.Windows.Window.ResizeMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect RestoreBounds { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreBounds : System.Windows.Rect" Usage="System.Windows.Window.RestoreBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-478">Pobiera rozmiar i położenie okna przed jest zminimalizowany lub zmaksymalizowany.</span><span class="sxs-lookup"><span data-stu-id="fdf62-478">Gets the size and location of a window before being either minimized or maximized.</span></span></summary>
        <value><span data-ttu-id="fdf62-479">A <see cref="T:System.Windows.Rect" /> określający rozmiar i położenie okna przed zminimalizowane lub zmaksymalizowane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-479">A <see cref="T:System.Windows.Rect" /> that specifies the size and location of a window before being either minimized or maximized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-480">Prostokąt przywracania jest region zajmowane przez okno przed jego zminimalizowane lub zmaksymalizowane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-480">The restore rectangle is the region occupied by the window before it was minimized or maximized.</span></span> <span data-ttu-id="fdf62-481">Możesz użyć <xref:System.Windows.Window.RestoreBounds%2A> zapisania ostatnich rozmiar i położenie okna, przed zamknięciem aplikacji, a przy następnym uruchomieniu aplikacji do przywrócenia oknem sposób użytkownika, że pozostała wartości te są pobierane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-481">You can use <xref:System.Windows.Window.RestoreBounds%2A> to save the last size and location of a window before an application is closed, and retrieve those values the next time an application starts to restore a window to the way a user left it.</span></span>  
  
 <span data-ttu-id="fdf62-482">Po wykonaniu zapytania <xref:System.Windows.Window.RestoreBounds%2A> przed wykazało okna lub po zostało zamknięte, <xref:System.Windows.Rect.Empty%2A> jest zwracana.</span><span class="sxs-lookup"><span data-stu-id="fdf62-482">If you query <xref:System.Windows.Window.RestoreBounds%2A> before the window has been shown or after it has been closed, <xref:System.Windows.Rect.Empty%2A> is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-483">Nie można pobrać tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-483">You cannot get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-484">W poniższym przykładzie użyto <xref:System.Windows.Window.RestoreBounds%2A> i isolated storage, aby upewnić się, rozmiar i położenie okna są takie same znajdowały się podczas poprzedniego okna został wyświetlony.</span><span class="sxs-lookup"><span data-stu-id="fdf62-484">The following example uses <xref:System.Windows.Window.RestoreBounds%2A> and isolated storage to ensure the size and location of a window are the same as they were the previous time the window was shown.</span></span>  
  
 [!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml1)]  
[!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml2)]  
  
 [!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind1)]
 [!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind1)]  
[!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind2)]
[!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fdf62-485">prostokąt ograniczający uprawnienia do tworzenia zapytań dla rozmiar i położenie okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-485">for permission to query for the size and location of a window's bounding rectangle.</span></span> <span data-ttu-id="fdf62-486">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fdf62-486">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Show" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show();" />
      <MemberSignature Language="F#" Value="member this.Show : unit -&gt; unit" Usage="window.Show " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdf62-487">Otwiera okno i jest zwracane bez oczekiwania na nowo otwartym oknie zamknąć.</span><span class="sxs-lookup"><span data-stu-id="fdf62-487">Opens a window and returns without waiting for the newly opened window to close.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-488">Gdy <xref:System.Windows.Window> tworzenia wystąpienia klasy, nie jest domyślnie widoczny.</span><span class="sxs-lookup"><span data-stu-id="fdf62-488">When the <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="fdf62-489"><xref:System.Windows.Window.Show%2A> przedstawia okna i zwraca wynik natychmiast, bez konieczności oczekiwania na okno zostanie zamknięty.</span><span class="sxs-lookup"><span data-stu-id="fdf62-489"><xref:System.Windows.Window.Show%2A> shows a window and returns immediately, without waiting for the window to be closed.</span></span> <span data-ttu-id="fdf62-490">W związku z tym otwartego okna nie uniemożliwia użytkownikom interakcji z innymi oknami w aplikacji.</span><span class="sxs-lookup"><span data-stu-id="fdf62-490">Consequently, the opened window does not prevent users from interacting with other windows in the application.</span></span> <span data-ttu-id="fdf62-491">Ten typ okna jest nazywany *niemodalne* okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-491">This type of window is called a *modeless* window.</span></span> <span data-ttu-id="fdf62-492">Typowe przykłady Niemodalne okna są właściwości systemu windows, toolboxes i palety.</span><span class="sxs-lookup"><span data-stu-id="fdf62-492">Common examples of modeless windows are properties windows, toolboxes, and palettes.</span></span> <span data-ttu-id="fdf62-493">Aby ograniczyć użytkowników do interakcji z określonym oknie, należy otworzyć okno, wywołując <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-493">To restrict a user to interacting with a specific window, the window must be opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="fdf62-494">Okno, w którym jest otwarta przez wywołanie <xref:System.Windows.Window.Show%2A> jest automatycznie mają ustanowioną relację z okna, który je otworzył; w szczególności otwartym oknie nie wie, które okno je otworzył.</span><span class="sxs-lookup"><span data-stu-id="fdf62-494">A window that is opened by calling <xref:System.Windows.Window.Show%2A> does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="fdf62-495">Ten można ustanowić relację przy użyciu <xref:System.Windows.Window.Owner%2A> właściwość i zarządzane przy użyciu <xref:System.Windows.Window.OwnedWindows%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-495">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
 <span data-ttu-id="fdf62-496">Wywoływanie <xref:System.Windows.Window.Show%2A> osiąga ten sam wynik końcowy jako ustawienie <xref:System.Windows.UIElement.Visibility%2A> właściwość <xref:System.Windows.Window> obiekt <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-496">Calling <xref:System.Windows.Window.Show%2A> achieves the same end result as setting <xref:System.Windows.UIElement.Visibility%2A> property of the <xref:System.Windows.Window> object to <xref:System.Windows.Visibility.Visible>.</span></span> <span data-ttu-id="fdf62-497">Istnieje jednak różnica między tymi dwoma z punktu widzenia chronometrażu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-497">However, there is a difference between the two from a timing perspective.</span></span>  
  
 <span data-ttu-id="fdf62-498">Wywoływanie <xref:System.Windows.Window.Show%2A> jest operacja synchroniczna, która zwraca tylko po <xref:System.Windows.FrameworkElement.Loaded> zgłoszono zdarzenie na okno podrzędne:</span><span class="sxs-lookup"><span data-stu-id="fdf62-498">Calling <xref:System.Windows.Window.Show%2A> is a synchronous operation that returns only after the <xref:System.Windows.FrameworkElement.Loaded> event on the child window has been raised:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowSync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showsync)]
 [!code-vb[WindowShowTimingSnippets#ShowSync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showsync)]  
  
 <span data-ttu-id="fdf62-499">Ustawienie <xref:System.Windows.UIElement.Visibility%2A>, jest jednak operację asynchroniczną, która zwraca niezwłocznie:</span><span class="sxs-lookup"><span data-stu-id="fdf62-499">Setting <xref:System.Windows.UIElement.Visibility%2A>, however, is an asynchronous operation that returns immediately:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowASync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showasync)]
 [!code-vb[WindowShowTimingSnippets#ShowASync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showasync)]  
  
 <span data-ttu-id="fdf62-500">Podczas ustawiania <xref:System.Windows.UIElement.Visibility%2A>, wszelkie zdarzenia okna, należy się zarejestrować, zanim ustawisz <xref:System.Windows.UIElement.Visibility%2A> nie mogą być wywoływane po metodzie, w którym można ustawić <xref:System.Windows.UIElement.Visibility%2A> zakończyła wykonywanie zadania.</span><span class="sxs-lookup"><span data-stu-id="fdf62-500">When setting <xref:System.Windows.UIElement.Visibility%2A>, any window events you register before you set <xref:System.Windows.UIElement.Visibility%2A> may not be raised until after the method in which you set <xref:System.Windows.UIElement.Visibility%2A> has completed execution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-501">W poniższym przykładzie pokazano sposób otwierania jest niemodalne okno dialogowe.</span><span class="sxs-lookup"><span data-stu-id="fdf62-501">The following sample demonstrates how to open a modeless window.</span></span>  
  
 [!code-csharp[WindowShowSnippets#WindowShowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowSnippets/CSharp/MainWindow.xaml.cs#windowshowcode)]
 [!code-vb[WindowShowSnippets#WindowShowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowSnippets/visualbasic/mainwindow.xaml.vb#windowshowcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdf62-502"><see cref="M:System.Windows.Window.Show" /> jest wywoływana w oknie, który ma zostać zamknięty (<see cref="E:System.Windows.Window.Closing" />) lub zostało zamknięte (<see cref="E:System.Windows.Window.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="fdf62-502"><see cref="M:System.Windows.Window.Show" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span></span></exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="M:System.Windows.Window.Hide" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowActivated">
      <MemberSignature Language="C#" Value="public bool ShowActivated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowActivated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowActivated" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowActivated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowActivated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowActivated : bool with get, set" Usage="System.Windows.Window.ShowActivated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-503">Pobiera lub ustawia wartość wskazującą, czy okno jest aktywowana przy pierwszym wyświetleniu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-503">Gets or sets a value that indicates whether a window is activated when first shown.</span></span></summary>
        <value><span data-ttu-id="fdf62-504"><see langword="true" /> Jeśli okno jest aktywowany przy pierwszym wyświetleniu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-504"><see langword="true" /> if a window is activated when first shown; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fdf62-505">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-505">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-506">Gdy okno z jego <xref:System.Windows.Window.ShowActivated%2A> właściwością `false` jest otwarty, okno nie jest aktywowany i jego <xref:System.Windows.Window.Activated> zdarzeń nie jest inicjowane, dopóki użytkownik aktywuje okna ręcznie, wybierając ją.</span><span class="sxs-lookup"><span data-stu-id="fdf62-506">When a window with its <xref:System.Windows.Window.ShowActivated%2A> property set to `false` is opened, the window is not activated and its <xref:System.Windows.Window.Activated> event is not raised until a user manually activates the window by selecting it.</span></span> <span data-ttu-id="fdf62-507">Po wybraniu okna aktywuje i dezaktywuje normalnie.</span><span class="sxs-lookup"><span data-stu-id="fdf62-507">After the window is selected, it activates and deactivates normally.</span></span>  
  
 <span data-ttu-id="fdf62-508">Aby zapobiec aktywowany po jego otwarciu okna <xref:System.Windows.Window.ShowActivated%2A> właściwość musi być równa `false` przed pokazaniem okna (przez wywołanie metody <xref:System.Windows.Window.Show%2A>); ustawienie <xref:System.Windows.Window.ShowActivated%2A> do `false` po okno jest wyświetlane, nie ma wpływu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-508">To prevent a window from being activated when it opens, the <xref:System.Windows.Window.ShowActivated%2A> property must be set to `false` before the window is shown (by calling <xref:System.Windows.Window.Show%2A>); setting <xref:System.Windows.Window.ShowActivated%2A> to `false` after a window is shown has no effect.</span></span>  
  
 <span data-ttu-id="fdf62-509">Ustawienie <xref:System.Windows.Window.ShowActivated%2A> do `false` w oknie, który jest otwierany w trybie modalnym, wywołując <xref:System.Windows.Window.ShowDialog%2A>, nie ma rzeczywistego wpływu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-509">Setting <xref:System.Windows.Window.ShowActivated%2A> to `false` on a window that is opened modally, by calling <xref:System.Windows.Window.ShowDialog%2A>, has no real impact.</span></span> <span data-ttu-id="fdf62-510">Mimo że nie będzie można aktywować modalnego okna, okno modalne uniemożliwi użytkownika aktywowanie żadnych innych otwartych aplikacji systemu windows.</span><span class="sxs-lookup"><span data-stu-id="fdf62-510">Although the modal window will not be activated, the modal window will prevent the user from activating any other open application windows.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowActivated"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-511">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-511">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-512">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-512">Identifier field</span></span>|<xref:System.Windows.Window.ShowActivatedProperty>|  
|<span data-ttu-id="fdf62-513">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-513">Metadata properties set to `true`</span></span>|<span data-ttu-id="fdf62-514">Brak</span><span class="sxs-lookup"><span data-stu-id="fdf62-514">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-515">Poniższy przykład pokazuje, jak skonfigurować okno, aby zostać poprawnie otworzony bez aktywowane przy użyciu znaczników.</span><span class="sxs-lookup"><span data-stu-id="fdf62-515">The following example shows how to use markup to configure a window to be opened without being activated.</span></span>  
  
 [!code-xaml[WindowShowActivatedSnippets#ShowUnactivatedMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml#showunactivatedmarkup1)]  
  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml.cs#showunactivatedcodebehind)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/awindow.xaml.vb#showunactivatedcodebehind)]  
  
 <span data-ttu-id="fdf62-516">Poniższy przykład pokazuje, jak skonfigurować okno, aby zostać poprawnie otworzony bez ona aktywowana za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-516">The following example shows how to use code to configure a window to be opened without it being activated.</span></span>  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/Window1.xaml.cs#showunactivatedwindowcode)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/window1.xaml.vb#showunactivatedwindowcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowActivatedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowActivatedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowActivatedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowActivatedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowActivatedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowActivatedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowActivatedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowActivatedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-517">Identyfikuje <see cref="P:System.Windows.Window.ShowActivated" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-517">Identifies the <see cref="P:System.Windows.Window.ShowActivated" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; Nullable&lt;bool&gt;" Usage="window.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fdf62-518">Powoduje otwarcie okna i zwraca tylko wtedy, gdy w nowo otwartym oknie jest zamknięty.</span><span class="sxs-lookup"><span data-stu-id="fdf62-518">Opens a window and returns only when the newly opened window is closed.</span></span></summary>
        <returns><span data-ttu-id="fdf62-519">A <see cref="T:System.Nullable`1" /> wartości typu <see cref="T:System.Boolean" /> określająca, czy działanie zostało zaakceptowane (<see langword="true" />) lub anulowane (<see langword="false" />).</span><span class="sxs-lookup"><span data-stu-id="fdf62-519">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" /> that specifies whether the activity was accepted (<see langword="true" />) or canceled (<see langword="false" />).</span></span> <span data-ttu-id="fdf62-520">Wartość zwracana jest wartość <see cref="P:System.Windows.Window.DialogResult" /> właściwości przed zamknięciem okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-520">The return value is the value of the <see cref="P:System.Windows.Window.DialogResult" /> property before a window closes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-521">Gdy <xref:System.Windows.Window> tworzenia wystąpienia klasy, nie jest domyślnie widoczny.</span><span class="sxs-lookup"><span data-stu-id="fdf62-521">When a <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="fdf62-522"><xref:System.Windows.Window.ShowDialog%2A> Pokazuje okno, powoduje wyłączenie wszystkich innych okien w aplikacji oraz zwracanie tylko wtedy, gdy okno jest zamknięte.</span><span class="sxs-lookup"><span data-stu-id="fdf62-522"><xref:System.Windows.Window.ShowDialog%2A> shows the window, disables all other windows in the application, and returns only when the window is closed.</span></span> <span data-ttu-id="fdf62-523">Ten typ okna jest znany jako *modalne* okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-523">This type of window is known as a *modal* window.</span></span>  
  
 <span data-ttu-id="fdf62-524">Głównie używane są okna modalne okna dialogowe.</span><span class="sxs-lookup"><span data-stu-id="fdf62-524">Modal windows are primarily used as dialog boxes.</span></span> <span data-ttu-id="fdf62-525">Okno dialogowe to specjalny typ okna, które aplikacje używają do interakcji z użytkownikami w celu wykonania zadań, takich jak otwieranie plików lub drukowanie dokumentów.</span><span class="sxs-lookup"><span data-stu-id="fdf62-525">A dialog box is a special type of window that applications use to interact with users to complete tasks, such as opening files or printing documents.</span></span> <span data-ttu-id="fdf62-526">Okna dialogowe często użytkownicy o zaakceptowanie lub anulować zadania, dla której były wyświetlane przed zamknięciem okna dialogowego.</span><span class="sxs-lookup"><span data-stu-id="fdf62-526">Dialog boxes commonly allow users to accept or cancel the task for which they were shown before the dialog box is closed.</span></span> <span data-ttu-id="fdf62-527"><xref:System.Windows.Window.ShowDialog%2A> Zwraca <xref:System.Nullable%601> <xref:System.Boolean> wartość, która określa, czy działanie zostało zaakceptowane lub anulowane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-527"><xref:System.Windows.Window.ShowDialog%2A> returns a <xref:System.Nullable%601><xref:System.Boolean> value that specifies whether the activity was accepted or canceled.</span></span> <span data-ttu-id="fdf62-528">Wartość zwracana jest wartość <xref:System.Windows.Window.DialogResult%2A> właściwości przed zamknięciem okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-528">The return value is the value of the <xref:System.Windows.Window.DialogResult%2A> property before a window closes.</span></span> <span data-ttu-id="fdf62-529">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-529">For more information, see <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 <span data-ttu-id="fdf62-530">Okno, w którym jest otwarta przez wywołanie <xref:System.Windows.Window.ShowDialog%2A> metoda nie ma automatycznie relacji z oknem, który je otworzył; w szczególności otwartym oknie nie wie, które okno je otworzył.</span><span class="sxs-lookup"><span data-stu-id="fdf62-530">A window that is opened by calling the <xref:System.Windows.Window.ShowDialog%2A> method does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="fdf62-531">Ten można ustanowić relację przy użyciu <xref:System.Windows.Window.Owner%2A> właściwość i zarządzane przy użyciu <xref:System.Windows.Window.OwnedWindows%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-531">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span> <span data-ttu-id="fdf62-532">Aby obsługiwać [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automatyzacji (zobacz [Przegląd automatyzacji interfejsu użytkownika](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> musi być ustawiona dla okno otwierane przez wywołanie metody <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-532">To support [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automation (see [UI Automation Overview](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> must be set for a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="fdf62-533">Po zakończeniu instalacji [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] okna (okno otwarty przez wywołanie <xref:System.Windows.Window.ShowDialog%2A>) jest zamknięte, wcześniej aktywowane okno zostanie ponownie aktywowany.</span><span class="sxs-lookup"><span data-stu-id="fdf62-533">When a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window (a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>) is closed, the previously activated window is reactivated.</span></span> <span data-ttu-id="fdf62-534">Jeśli po zakończeniu instalacji [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] okno jest oknem właściciela (zobacz <xref:System.Windows.Window.Owner%2A>), okno właściciela nie jest ponownie uaktywnić, kiedy modalne [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] okno zostanie zamknięte, o ile nie była wcześniej aktywowana okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-534">If a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window has an owner window (see <xref:System.Windows.Window.Owner%2A>), the owner window is not reactivated when the modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window is closed unless it was the previously activated window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-535">Nie można wywołać tej metody, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-535">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-536">W poniższym przykładzie pokazano sposób otworzyć okno modalne.</span><span class="sxs-lookup"><span data-stu-id="fdf62-536">The following sample demonstrates how to open a modal window.</span></span>  
  
 [!code-csharp[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowDialogSnippets/CSharp/MainWindow.xaml.cs#windowshowdialogcode)]
 [!code-vb[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowDialogSnippets/visualbasic/mainwindow.xaml.vb#windowshowdialogcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fdf62-537"><see cref="M:System.Windows.Window.ShowDialog" /> jest wywoływana w oknie, który ma zostać zamknięty (<see cref="E:System.Windows.Window.Closing" />) lub zostało zamknięte (<see cref="E:System.Windows.Window.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="fdf62-537"><see cref="M:System.Windows.Window.ShowDialog" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fdf62-538">uprawnienia do aktywowania okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-538">for permission to activate a window.</span></span> <span data-ttu-id="fdf62-539">Wyliczenie skojarzone: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fdf62-539">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowInTaskbar : bool with get, set" Usage="System.Windows.Window.ShowInTaskbar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-540">Pobiera lub ustawia wartość wskazującą, czy okno ma przycisk paska zadań.</span><span class="sxs-lookup"><span data-stu-id="fdf62-540">Gets or sets a value that indicates whether the window has a task bar button.</span></span></summary>
        <value><span data-ttu-id="fdf62-541"><see langword="true" /> Jeśli okno ma przycisk paska zadań; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-541"><see langword="true" /> if the window has a task bar button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fdf62-542">Nie ma zastosowania, gdy okno jest obsługiwana w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-542">Does not apply when the window is hosted in a browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-543">Jeśli <xref:System.Windows.Window.ShowInTaskbar%2A> ustawiono `true`, okna pojawi się także na liście wyboru aplikacji ALT + TAB.</span><span class="sxs-lookup"><span data-stu-id="fdf62-543">If <xref:System.Windows.Window.ShowInTaskbar%2A> is set to `true`, the window will also appear in the ALT+TAB application selection list.</span></span>  
  
 <span data-ttu-id="fdf62-544">Ikonę, która jest używana zarówno dla przycisk paska zadań i listy wyboru ALT + TAB aplikacji jest wartością <xref:System.Windows.Window.Icon%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-544">The icon that is used for both the task bar button and the ALT+TAB application selection list is the value of the <xref:System.Windows.Window.Icon%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-545">Nie można ustawić lub pobrania tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-545">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowInTaskbar"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-546">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-546">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-547">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-547">Identifier field</span></span>|<xref:System.Windows.Window.ShowInTaskbarProperty>|  
|<span data-ttu-id="fdf62-548">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-548">Metadata properties set to `true`</span></span>|<span data-ttu-id="fdf62-549">Brak</span><span class="sxs-lookup"><span data-stu-id="fdf62-549">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbarProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowInTaskbarProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowInTaskbarProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowInTaskbarProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowInTaskbarProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowInTaskbarProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowInTaskbarProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowInTaskbarProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-550">Identyfikuje <see cref="P:System.Windows.Window.ShowInTaskbar" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-550">Identifies the <see cref="P:System.Windows.Window.ShowInTaskbar" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberSignature Language="F#" Value="member this.SizeToContent : System.Windows.SizeToContent with get, set" Usage="System.Windows.Window.SizeToContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-551">Pobiera lub ustawia wartość wskazującą, czy okno automatycznie zostanie rozmiar się, aby dopasować rozmiar jego zawartości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-551">Gets or sets a value that indicates whether a window will automatically size itself to fit the size of its content.</span></span></summary>
        <value><span data-ttu-id="fdf62-552">A <see cref="T:System.Windows.SizeToContent" /> wartość.</span><span class="sxs-lookup"><span data-stu-id="fdf62-552">A <see cref="T:System.Windows.SizeToContent" /> value.</span></span> <span data-ttu-id="fdf62-553">Wartość domyślna to <see cref="F:System.Windows.SizeToContent.Manual" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-553">The default is <see cref="F:System.Windows.SizeToContent.Manual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-554">Gdy <xref:System.Windows.Window.SizeToContent%2A> ustawiono <xref:System.Windows.SizeToContent.WidthAndHeight>, albo ustawienie <xref:System.Windows.FrameworkElement.Height%2A> lub <xref:System.Windows.FrameworkElement.Width%2A> nie obowiązuje; obie te właściwości można ustawić, ale wartości są one konfigurowane przy użyciu nie są stosowane do okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-554">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.WidthAndHeight>, setting either <xref:System.Windows.FrameworkElement.Height%2A> or <xref:System.Windows.FrameworkElement.Width%2A> has no effect; both properties can be set, but the values they are set with are not applied to the window.</span></span>  
  
 <span data-ttu-id="fdf62-555">Gdy <xref:System.Windows.Window.SizeToContent%2A> ustawiono <xref:System.Windows.SizeToContent.Height>, ustawiając <xref:System.Windows.FrameworkElement.Height%2A> nie zmienia wysokość okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-555">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Height>, setting <xref:System.Windows.FrameworkElement.Height%2A> does not change the height of the window.</span></span>  
  
 <span data-ttu-id="fdf62-556">Gdy <xref:System.Windows.Window.SizeToContent%2A> ustawiono <xref:System.Windows.SizeToContent.Width>, ustawiając <xref:System.Windows.FrameworkElement.Width%2A> nie zmienia szerokość okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-556">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Width>, setting <xref:System.Windows.FrameworkElement.Width%2A> does not change the width of the window.</span></span>  
  
 <span data-ttu-id="fdf62-557">Jeśli <xref:System.Windows.Window.SizeToContent%2A> innych niż ma wartość <xref:System.Windows.SizeToContent.Manual>:</span><span class="sxs-lookup"><span data-stu-id="fdf62-557">If <xref:System.Windows.Window.SizeToContent%2A> has a value other than <xref:System.Windows.SizeToContent.Manual>:</span></span>  
  
-   <span data-ttu-id="fdf62-558"><xref:System.Windows.Window.SizeToContent%2A> automatycznie zostaje ustawiony poziom <xref:System.Windows.SizeToContent.Manual> Jeśli użytkownik zmieni rozmiar okna przy użyciu uchwyt zmiany rozmiaru lub przeciągając obramowania.</span><span class="sxs-lookup"><span data-stu-id="fdf62-558"><xref:System.Windows.Window.SizeToContent%2A> is automatically set to <xref:System.Windows.SizeToContent.Manual> if a user resizes the window by using the resize grip or dragging the border.</span></span>  
  
-   <span data-ttu-id="fdf62-559">Zmiana rozmiaru zawartości w sposób, który powoduje, że okna zmieniał swój rozmiar, <xref:System.Windows.FrameworkElement.SizeChanged> jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-559">If the size of the content changes in a way that causes the window to resize itself, <xref:System.Windows.FrameworkElement.SizeChanged> is raised.</span></span>  
  
 <span data-ttu-id="fdf62-560">Jeśli okno jest przezroczysty (zobacz <xref:System.Windows.Window.AllowsTransparency%2A>), należy rozważyć ustawienie <xref:System.Windows.Window.SizeToContent%2A> do <xref:System.Windows.SizeToContent.WidthAndHeight> zapewnienie okna jest nie większy niż jego widocznej zawartości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-560">If a window is transparent (see <xref:System.Windows.Window.AllowsTransparency%2A>), you should consider setting <xref:System.Windows.Window.SizeToContent%2A> to <xref:System.Windows.SizeToContent.WidthAndHeight> to ensure the window is no larger than its visible content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-561">Nie można ustawić lub pobrania tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-561">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowSizeToContent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-562">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-562">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-563">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-563">Identifier field</span></span>|<xref:System.Windows.Window.SizeToContentProperty>|  
|<span data-ttu-id="fdf62-564">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-564">Metadata properties set to `true`</span></span>|<span data-ttu-id="fdf62-565">Brak</span><span class="sxs-lookup"><span data-stu-id="fdf62-565">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fdf62-566">Poniższy przykład pokazuje, jak ustawić <xref:System.Windows.Window.SizeToContent%2A> właściwości w kodzie, aby określić, jak zmienia rozmiar okna dopasowana do jego zawartości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-566">The following example shows how to set the <xref:System.Windows.Window.SizeToContent%2A> property in code to specify how a window resizes to fit its content.</span></span>  
  
 [!code-csharp[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/CSharp/MainWindow.xaml.cs#setwindowsizetocontentpropertycode)]
 [!code-vb[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/visualbasic/mainwindow.xaml.vb#setwindowsizetocontentpropertycode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="P:System.Windows.Window.ResizeMode" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeToContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeToContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.SizeToContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeToContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeToContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeToContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.SizeToContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-567">Identyfikuje <see cref="P:System.Windows.Window.SizeToContent" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-567">Identifies the <see cref="P:System.Windows.Window.SizeToContent" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceInitialized">
      <MemberSignature Language="C#" Value="public event EventHandler SourceInitialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SourceInitialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.SourceInitialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SourceInitialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SourceInitialized;" />
      <MemberSignature Language="F#" Value="member this.SourceInitialized : EventHandler " Usage="member this.SourceInitialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-568">To zdarzenie jest wywoływane w celu obsługi współdziałanie z [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span><span class="sxs-lookup"><span data-stu-id="fdf62-568">This event is raised to support interoperation with [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span></span> <span data-ttu-id="fdf62-569">Zobacz <see cref="T:System.Windows.Interop.HwndSource" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-569">See <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler " Usage="member this.StateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-570">Występuje, gdy okno <see cref="P:System.Windows.Window.WindowState" /> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-570">Occurs when the window's <see cref="P:System.Windows.Window.WindowState" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.TaskbarItemInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskbarItemInfo As TaskbarItemInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::TaskbarItemInfo ^ TaskbarItemInfo { System::Windows::Shell::TaskbarItemInfo ^ get(); void set(System::Windows::Shell::TaskbarItemInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TaskbarItemInfo : System.Windows.Shell.TaskbarItemInfo with get, set" Usage="System.Windows.Window.TaskbarItemInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.TaskbarItemInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-571">Pobiera lub ustawia [!INCLUDE[win7](~/includes/win7-md.md)] Miniatura zadań <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-571">Gets or sets the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span></span></summary>
        <value><span data-ttu-id="fdf62-572">[!INCLUDE[win7](~/includes/win7-md.md)] Miniatura zadań <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-572">The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-573">Aby uzyskać więcej informacji o sposobie używania [!INCLUDE[win7](~/includes/win7-md.md)] zadań miniatur, zobacz <xref:System.Windows.Shell.TaskbarItemInfo> klasy.</span><span class="sxs-lookup"><span data-stu-id="fdf62-573">For more information about how to use the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail, see the <xref:System.Windows.Shell.TaskbarItemInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Windows.Shell" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfoProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TaskbarItemInfoProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TaskbarItemInfoProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TaskbarItemInfoProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TaskbarItemInfoProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TaskbarItemInfoProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-574">Identyfikuje <see cref="P:System.Windows.Window.TaskbarItemInfo" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-574">Identifies the <see cref="P:System.Windows.Window.TaskbarItemInfo" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Window.Title" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IWindowService.Title</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Title)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-575">Pobiera lub ustawia tytuł okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-575">Gets or sets a window's title.</span></span></summary>
        <value><span data-ttu-id="fdf62-576">Element <see cref="T:System.String" /> zawierający tytuł okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-576">A <see cref="T:System.String" /> that contains the window's title.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-577">Tytuł <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, lub [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], można również ustawić za pomocą <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-577">The title of a <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, or [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], can also be set by using <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTitle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-578">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-578">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-579">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-579">Identifier field</span></span>|<xref:System.Windows.Window.TitleProperty>|  
|<span data-ttu-id="fdf62-580">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-580">Metadata properties set to `true`</span></span>|<span data-ttu-id="fdf62-581">Brak</span><span class="sxs-lookup"><span data-stu-id="fdf62-581">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TitleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TitleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TitleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TitleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TitleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-582">Identyfikuje <see cref="P:System.Windows.Window.Title" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-582">Identifies the <see cref="P:System.Windows.Window.Title" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Top : double with get, set" Usage="System.Windows.Window.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-583">Pobiera lub Ustawia położenie górnej krawędzi okna, w odniesieniu do pulpitu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-583">Gets or sets the position of the window's top edge, in relation to the desktop.</span></span></summary>
        <value><span data-ttu-id="fdf62-584">Pozycja początku okna w jednostkach logicznych (1/96").</span><span class="sxs-lookup"><span data-stu-id="fdf62-584">The position of the window's top, in logical units (1/96").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-585">Gdy <xref:System.Windows.Window> jest zmaksymalizowane lub zminimalizowane, tym reprezentuje wartość górnej krawędzi przywracania punktów <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-585">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the top edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="fdf62-586">Nie można ustawić tej właściwości przy użyciu stylu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-586">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="fdf62-587">Jeśli nie określisz wartości, <xref:System.Windows.Window.Top%2A> ma ustawioną wartość domyślną systemu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-587">If you do not specify a value, <xref:System.Windows.Window.Top%2A> is set to the system default value.</span></span> <span data-ttu-id="fdf62-588">Wartość domyślna systemu można również określić, ustawiając <xref:System.Windows.Window.Top%2A> do <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-588">You can also specify the system default value by setting <xref:System.Windows.Window.Top%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="fdf62-589">Ani <xref:System.Double.NegativeInfinity> ani <xref:System.Double.PositiveInfinity> jest prawidłową wartością dla <xref:System.Windows.Window.Top%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-589">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Top%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-590">Nie można ustawić lub pobrania tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-590">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-591">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-591">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-592">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-592">Identifier field</span></span>|<xref:System.Windows.Window.TopProperty>|  
|<span data-ttu-id="fdf62-593">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-593">Metadata properties set to `true`</span></span>|<span data-ttu-id="fdf62-594">Brak</span><span class="sxs-lookup"><span data-stu-id="fdf62-594">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
      </Docs>
    </Member>
    <Member MemberName="Topmost">
      <MemberSignature Language="C#" Value="public bool Topmost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Topmost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Topmost" />
      <MemberSignature Language="VB.NET" Value="Public Property Topmost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Topmost { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Topmost : bool with get, set" Usage="System.Windows.Window.Topmost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-595">Pobiera lub ustawia wartość wskazującą, czy okno jest wyświetlane w najwyższym porządku osi z.</span><span class="sxs-lookup"><span data-stu-id="fdf62-595">Gets or sets a value that indicates whether a window appears in the topmost z-order.</span></span></summary>
        <value><span data-ttu-id="fdf62-596"><see langword="true" /> Jeśli okno jest najwyższego poziomu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-596"><see langword="true" /> if the window is topmost; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-597">Okno którego <xref:System.Windows.Window.Topmost%2A> właściwość jest ustawiona na `true` pojawia się powyżej wszystkich okien którego <xref:System.Windows.Window.Topmost%2A> właściwości są ustawione na `false`.</span><span class="sxs-lookup"><span data-stu-id="fdf62-597">A window whose <xref:System.Windows.Window.Topmost%2A> property is set to `true` appears above all windows whose <xref:System.Windows.Window.Topmost%2A> properties are set to `false`.</span></span>  
  
 <span data-ttu-id="fdf62-598">W grupie systemu windows, które mają <xref:System.Windows.Window.Topmost%2A> właściwość jest ustawiona na `true`, okno, które jest obecnie aktywna jest oknem najwyższego poziomu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-598">In the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `true`, the window that is currently activated is the topmost window.</span></span> <span data-ttu-id="fdf62-599">Podobnie dla grupy systemu windows, które mają <xref:System.Windows.Window.Topmost%2A> właściwość jest ustawiona na `false`.</span><span class="sxs-lookup"><span data-stu-id="fdf62-599">Likewise for the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-600">Nie można ustawić lub pobrania tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-600">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTopmost"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-601">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-601">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-602">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-602">Identifier field</span></span>|<xref:System.Windows.Window.TopmostProperty>|  
|<span data-ttu-id="fdf62-603">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-603">Metadata properties set to `true`</span></span>|<span data-ttu-id="fdf62-604">Brak</span><span class="sxs-lookup"><span data-stu-id="fdf62-604">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="TopmostProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopmostProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopmostProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopmostProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopmostProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopmostProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopmostProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopmostProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-605">Identyfikuje <see cref="P:System.Windows.Window.Topmost" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-605">Identifies the <see cref="P:System.Windows.Window.Topmost" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-606">Identyfikuje <see cref="P:System.Windows.Window.Top" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-606">Identifies the <see cref="P:System.Windows.Window.Top" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStartupLocation">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStartupLocation WindowStartupLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStartupLocation WindowStartupLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStartupLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStartupLocation As WindowStartupLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStartupLocation WindowStartupLocation { System::Windows::WindowStartupLocation get(); void set(System::Windows::WindowStartupLocation value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStartupLocation : System.Windows.WindowStartupLocation with get, set" Usage="System.Windows.Window.WindowStartupLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStartupLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-607">Pobiera lub Ustawia położenie okna przy pierwszym wyświetleniu.</span><span class="sxs-lookup"><span data-stu-id="fdf62-607">Gets or sets the position of the window when first shown.</span></span></summary>
        <value><span data-ttu-id="fdf62-608">A <see cref="T:System.Windows.WindowStartupLocation" /> wartość, która określa położenie okna przy pierwszym wyświetleniu Góra/lewo.</span><span class="sxs-lookup"><span data-stu-id="fdf62-608">A <see cref="T:System.Windows.WindowStartupLocation" /> value that specifies the top/left position of a window when first shown.</span></span> <span data-ttu-id="fdf62-609">Wartość domyślna to <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-609">The default is <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-610">Ustawienie `WindowStartupLocation` właściwości <xref:System.Windows.WindowStartupLocation.Manual> powoduje, że okno, który został umieszczony na podstawie jego <xref:System.Windows.Window.Left%2A> i <xref:System.Windows.Window.Top%2A> wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="fdf62-610">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.Manual> causes a window to be positioned according to its <xref:System.Windows.Window.Left%2A> and <xref:System.Windows.Window.Top%2A> property values.</span></span> <span data-ttu-id="fdf62-611">Jeśli <xref:System.Windows.Window.Left%2A> lub <xref:System.Windows.Window.Top%2A> nie są określone właściwości, ich wartości są określane przez Windows.</span><span class="sxs-lookup"><span data-stu-id="fdf62-611">If either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> properties aren't specified, their values are determined by Windows.</span></span>  
  
 <span data-ttu-id="fdf62-612">Ustawienie `WindowStartupLocation` właściwość <xref:System.Windows.WindowStartupLocation.CenterScreen> powoduje, że okno, który został umieszczony w środku ekranu, który zawiera kursora myszy.</span><span class="sxs-lookup"><span data-stu-id="fdf62-612">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.CenterScreen> causes a window to be positioned in the center of the screen that contains the mouse cursor.</span></span>  
  
 <span data-ttu-id="fdf62-613">Ustawienie `WindowStartupLocation` właściwości <xref:System.Windows.WindowStartupLocation.CenterOwner> powoduje, że okno, który został umieszczony na środku okna właściciela (zobacz <xref:System.Windows.Window.Owner%2A?displayProperty=nameWithType>), jeśli określony.</span><span class="sxs-lookup"><span data-stu-id="fdf62-613">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.CenterOwner> causes a window to be positioned in the center of its owner window (see <xref:System.Windows.Window.Owner%2A?displayProperty=nameWithType>), if specified.</span></span> <span data-ttu-id="fdf62-614">Okno właściciela może być inne okno WPF lub okna bez WPF.</span><span class="sxs-lookup"><span data-stu-id="fdf62-614">The owner window can be either another WPF window or a non-WPF window.</span></span>

> [!NOTE]   
>  <span data-ttu-id="fdf62-615">Aby uzyskać więcej informacji o korzystaniu z okien WPF z systemem windows bez WPF, zobacz [WPF i Win32 — współdziałanie](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) i <xref:System.Windows.Interop.WindowInteropHelper>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-615">For more information about WPF windows with non-WPF windows, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) and <xref:System.Windows.Interop.WindowInteropHelper>.</span></span> 

 <span data-ttu-id="fdf62-616">Jeśli nie określono okna właściciela, położenie okna, jest określana w taki sam sposób jak `WindowStartupLocation` właściwość jest ustawiona na <xref:System.Windows.WindowStartupLocation.Manual>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-616">If an owner window is not specified, the position of the window is determined in the same way as if the `WindowStartupLocation` property is set to <xref:System.Windows.WindowStartupLocation.Manual>.</span></span>

> [!NOTE]
>  <span data-ttu-id="fdf62-617">Nie można ustawić lub pobrać wartości tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-617">You cannot set or get the value of this property when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.WindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As WindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowState WindowState { System::Windows::WindowState get(); void set(System::Windows::WindowState value); };" />
      <MemberSignature Language="F#" Value="member this.WindowState : System.Windows.WindowState with get, set" Usage="System.Windows.Window.WindowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-618">Pobiera lub ustawia wartość wskazującą, czy okno jest przywrócone, zminimalizowane lub zmaksymalizowane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-618">Gets or sets a value that indicates whether a window is restored, minimized, or maximized.</span></span></summary>
        <value><span data-ttu-id="fdf62-619">A <see cref="T:System.Windows.WindowState" /> określający, czy okno jest przywrócone, zminimalizowane lub zmaksymalizowane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-619">A <see cref="T:System.Windows.WindowState" /> that determines whether a window is restored, minimized, or maximized.</span></span> <span data-ttu-id="fdf62-620">Wartość domyślna to <see cref="F:System.Windows.WindowState.Normal" /> (przywrócona).</span><span class="sxs-lookup"><span data-stu-id="fdf62-620">The default is <see cref="F:System.Windows.WindowState.Normal" /> (restored).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-621">Zanim okno jest zminimalizowane lub zmaksymalizowane, jego rozmiar i położenie są przechowywane w <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-621">Before a window is minimized or maximized, its size and location are stored in <xref:System.Windows.Window.RestoreBounds%2A>.</span></span> <span data-ttu-id="fdf62-622">Gdy okno jest następnie przywrócona, jego rozmiar i położenie wartości zostaną przywrócone z wartościami z <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-622">When a window is subsequently restored, its size and location values are restored with the values from <xref:System.Windows.Window.RestoreBounds%2A>.</span></span>  
  
 <span data-ttu-id="fdf62-623">Gdy <xref:System.Windows.Window.WindowState%2A> właściwość zostanie zmieniona, <xref:System.Windows.Window.StateChanged> jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="fdf62-623">When the <xref:System.Windows.Window.WindowState%2A> property is changed, <xref:System.Windows.Window.StateChanged> is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-624">Nie można ustawić lub pobrania tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-624">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowState"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-625">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-625">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-626">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-626">Identifier field</span></span>|<xref:System.Windows.Window.WindowStateProperty>|  
|<span data-ttu-id="fdf62-627">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-627">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="WindowStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-628">Identyfikuje <see cref="P:System.Windows.Window.WindowState" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-628">Identifies the <see cref="P:System.Windows.Window.WindowState" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As WindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStyle WindowStyle { System::Windows::WindowStyle get(); void set(System::Windows::WindowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : System.Windows.WindowStyle with get, set" Usage="System.Windows.Window.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-629">Pobiera lub ustawia styl obramowania okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-629">Gets or sets a window's border style.</span></span></summary>
        <value><span data-ttu-id="fdf62-630">Element <see cref="T:System.Windows.WindowStyle" /> , który określa styl obramowania okna.</span><span class="sxs-lookup"><span data-stu-id="fdf62-630">A <see cref="T:System.Windows.WindowStyle" /> that specifies a window's border style.</span></span> <span data-ttu-id="fdf62-631">Wartość domyślna to <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span><span class="sxs-lookup"><span data-stu-id="fdf62-631">The default is <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fdf62-632"><xref:System.Windows.Window.WindowStyle%2A> może być jednym z <xref:System.Windows.WindowStyle> wartości wyliczenia, w tym <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (ustawienie domyślne) i <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span><span class="sxs-lookup"><span data-stu-id="fdf62-632"><xref:System.Windows.Window.WindowStyle%2A> can be one of the <xref:System.Windows.WindowStyle> enumeration values, including <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (default), and <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span></span>  
  
 <span data-ttu-id="fdf62-633">Na poniższej ilustracji przedstawiono Style okna ramowego w [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (Windows Vista Aero motywu, za pomocą przezroczystego szkła włączone):</span><span class="sxs-lookup"><span data-stu-id="fdf62-633">The following figure shows the window styles on [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (Windows Vista Aero theme, with transparent glass enabled):</span></span>  
  
 <span data-ttu-id="fdf62-634">![Style okna ramowego](~/add/media/windowoverviewfigure6.PNG "Style okna ramowego")</span><span class="sxs-lookup"><span data-stu-id="fdf62-634">![Window styles](~/add/media/windowoverviewfigure6.PNG "Window styles")</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fdf62-635">Nie można ustawić lub pobrania tej właściwości, gdy okno jest hostowany w przeglądarce.</span><span class="sxs-lookup"><span data-stu-id="fdf62-635">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fdf62-636">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="fdf62-636">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fdf62-637">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="fdf62-637">Identifier field</span></span>|<xref:System.Windows.Window.WindowStyleProperty>|  
|<span data-ttu-id="fdf62-638">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="fdf62-638">Metadata properties set to `true`</span></span>|<span data-ttu-id="fdf62-639">Brak</span><span class="sxs-lookup"><span data-stu-id="fdf62-639">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fdf62-640">Identyfikuje <see cref="P:System.Windows.Window.WindowStyle" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="fdf62-640">Identifies the <see cref="P:System.Windows.Window.WindowStyle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>