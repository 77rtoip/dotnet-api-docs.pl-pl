<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1fabd3e8ca79d0ed50a5a9c8a6f00299e7b8f9dd" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37491198" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Obiekt, w której jest dołączony program obsługi zdarzeń.</param>
    <param name="e">Dane dotyczące zdarzenia.</param>
    <summary>Reprezentuje metodę, która będzie obsługiwać <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> zdarzenia trasowanego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa tego zdarzenia jest zwykle, tylko w obrębie elementów, które obsługują przewijany regionie lub w przeciwnym razie celowo ustaw ich renderowania rozmiar mniejszy niż łączna żądany rozmiar, zawartość elementu podrzędnego i jest wykonywane tylko przez celowo obsługi zdarzenie, gdy ma być kierowany do góry w drzewie elementów i osiągnęła pierwszy element nadrzędny, który oferuje obsługę w regionie przewijania. Istniejące wdrożenie, obsługujący regiony przewijania w taki sposób, który jest zazwyczaj pożądane w przypadku kontrolek użytkownika jest <xref:System.Windows.Controls.ScrollViewer>. W przypadku klasy wyprowadzonej z <xref:System.Windows.Controls.ScrollViewer>, można zarejestrować procedury obsługi klasy dla <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> w celu uzupełnienia klasy podstawowej obsługi zdarzenia. Należy również rozważyć przy użyciu lub klasy obsługi zdefiniowana klasa <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> zdarzeń zamiast <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>. Alternatywnie Jeśli utworzysz całkowicie niestandardowej klasy, która nie pochodzi od <xref:System.Windows.Controls.ScrollViewer>, nadal możesz dodać obsługę przez wywołanie metody klasy <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> w swojej wystąpienia klasy.  Szczegółowe informacje na temat obsługi klasy, [oznaczanie zdarzeń trasowanych jako Handled oraz obsługa klasy](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).  
  
 Elementy zawartości może spowodować, że zdarzenia według ich zawartości hostów (za pośrednictwem wywołania <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> i wywoływanie <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> z hosta zawartości). Podobnie, możesz poprosić o drzewo logiczne elementy przeznaczone do wyświetlenia w przy użyciu metody pomocnika <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.  
  
 A <xref:System.Windows.Controls.ListBox> implementuje metodę powiązane, ale inną <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>