<Type Name="TemplateVisualStateAttribute" FullName="System.Windows.TemplateVisualStateAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="89fe5512f1ba562eaedd460ae03096d59c23ad9f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69443862" /></Metadata><TypeSignature Language="C#" Value="public sealed class TemplateVisualStateAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TemplateVisualStateAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TemplateVisualStateAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TemplateVisualStateAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateVisualStateAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TemplateVisualStateAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Określa, że kontrolka może znajdować się w określonym stanie i <see cref="T:System.Windows.VisualState" /> jest oczekiwana w <see cref="T:System.Windows.Controls.ControlTemplate" />kontrolce.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Autorzy formantów używają tego atrybutu do określania <xref:System.Windows.VisualState> obiektów <xref:System.Windows.VisualStateGroup> i, które <xref:System.Windows.Controls.ControlTemplate>należą do ich kontrolek.  Załóżmy na przykład, że tworzysz nową kontrolkę, która ma dwa stany wizualizacji o `Focused` nazwach i `Unfocused`, które znajdują się <xref:System.Windows.VisualStateGroup> w `FocusStates`nazwie.  Aby określić <xref:System.Windows.Controls.ControlTemplate> autorów, którzy mogą korzystać z tych stanów wizualnych, <xref:System.Windows.TemplateVisualStateAttribute> Dodaj dwa atrybuty do sygnatury klasy formantu.  Określ, że <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A> właściwość jest `FocusStates` i że <xref:System.Windows.TemplateVisualStateAttribute.Name%2A> właściwość jest `Focused` dla siebie i `Unfocused` dla drugiej.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sygnaturę klasy dla `NumericUpDown` formantu.  Ten przykład określa, że `NumericUpDown` kontrolka używa czterech stanów wizualnych.  Dwa stany, nazwane `Positive` i `Negative`, znajdują się <xref:System.Windows.VisualStateGroup> w `ValueStates`nazwie.  Pozostałe dwa stany, `Focused` Name i `Unfocused`, znajdują się w <xref:System.Windows.VisualStateGroup> nazwie `FocusedStates`.  Dla całego przykładu, zobacz [Tworzenie kontrolki, która ma dostosowywalny wygląd](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateVisualStateAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateVisualStateAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateVisualStateAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.TemplateVisualStateAttribute" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupName">
      <MemberSignature Language="C#" Value="public string GroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupName : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę grupy, do której należy stan.</summary>
        <value>Nazwa <see cref="T:System.Windows.VisualStateGroup" /> , do której należy stan.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwość odpowiada <xref:System.Windows.VisualStateGroup.Name%2A?displayProperty=nameWithType> właściwości<xref:System.Windows.VisualStateGroup> obiektu. <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A> Aby określić, <xref:System.Windows.VisualStateGroup> co <xref:System.Windows.VisualState> należy do, ustaw Właściwość.<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A>  
  
   
  
## Examples  
 Poniższy przykład przedstawia sygnaturę klasy dla `NumericUpDown` formantu.  Ten przykład określa, że `NumericUpDown` kontrolka używa czterech stanów wizualnych.  Dwa stany, nazwane `Positive` i `Negative`, znajdują się <xref:System.Windows.VisualStateGroup> w `ValueStates`nazwie.  Pozostałe dwa stany, `Focused` Name i `Unfocused`, znajdują się w <xref:System.Windows.VisualStateGroup> nazwie `FocusedStates`.  Dla całego przykładu, zobacz [Tworzenie kontrolki, która ma dostosowywalny wygląd](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę stanu, w którym może być formant.</summary>
        <value>Nazwa stanu, w którym może być formant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> Właściwość odpowiada <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> właściwości. <xref:System.Windows.VisualState> Aby określić <xref:System.Windows.Controls.ControlTemplate>, <xref:System.Windows.VisualState> co należy do kontrolki, ustaw <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> właściwość.  
  
   
  
## Examples  
 Poniższy przykład przedstawia sygnaturę klasy dla `NumericUpDown` formantu.  Ten przykład określa, że `NumericUpDown` kontrolka używa czterech stanów wizualnych.  Dwa stany, nazwane `Positive` i `Negative`, znajdują się <xref:System.Windows.VisualStateGroup> w `ValueStates`nazwie.  Pozostałe dwa stany, `Focused` Name i `Unfocused`, znajdują się w <xref:System.Windows.VisualStateGroup> nazwie `FocusedStates`.  Dla całego przykładu, zobacz [Tworzenie kontrolki, która ma dostosowywalny wygląd](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
