<Type Name="DependencyPropertyChangedEventArgs" FullName="System.Windows.DependencyPropertyChangedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="96c3e6bd4c9ae05c09057f20117352144399dffd" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37493016" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DependencyPropertyChangedEventArgs extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Structure DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public value class DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="F#" Value="type DependencyPropertyChangedEventArgs = struct" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="72f45-101">Udostępnia dane dla różne zdarzenia zmiany właściwości.</span>
      <span class="sxs-lookup">
        <span data-stu-id="72f45-101">Provides data for various property changed events.</span>
      </span>
      <span data-ttu-id="72f45-102">Zazwyczaj te zdarzenia raportu skuteczność zmian wartości właściwości zależności tylko do odczytu.</span>
      <span class="sxs-lookup">
        <span data-stu-id="72f45-102">Typically these events report effective value changes in the value of a read-only dependency property.</span>
      </span>
      <span data-ttu-id="72f45-103">Użycie innego jest częścią <see cref="T:System.Windows.PropertyChangedCallback" /> implementacji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="72f45-103">Another usage is as part of a <see cref="T:System.Windows.PropertyChangedCallback" /> implementation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72f45-104">Zdarzenia, które używają <xref:System.Windows.DependencyPropertyChangedEventArgs> klasy danych zdarzenia i <xref:System.Windows.DependencyPropertyChangedEventHandler> implementacje metod dla programów obsługi, należy wykonać wzorca nazewnictwa `Is*Changed`i są zwykle implementowane jako [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzeń bez <xref:System.Windows.RoutedEvent> zapasowy (nie są one zdarzenia trasowane).</span><span class="sxs-lookup"><span data-stu-id="72f45-104">The events that use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events).</span></span> <span data-ttu-id="72f45-105">Niektóre klasy obsługi metod z "handle" w przeciwnym razie nienaświetlony zdarzenia, które zgłaszanie zmianą stanu przez zmianę właściwości, takie jak <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=nameWithType>, również użyć <xref:System.Windows.DependencyPropertyChangedEventArgs> klasę danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="72f45-105">Some class handling methods that "handle" otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=nameWithType>, also use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data.</span></span>  
  
 <span data-ttu-id="72f45-106">Scenariusz <xref:System.Windows.PropertyChangedCallback> jest użycie argumentów do raportu starej i nowej wartości, które pochodzą z wersji ewaluacyjnej systemu właściwość właściwości.</span><span class="sxs-lookup"><span data-stu-id="72f45-106">The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property.</span></span> <span data-ttu-id="72f45-107">Wywołanie zwrotne, które przetwarza starej i nowej wartości wybrać specjalnej obsługi, w zależności od tych wartości, takich jak wybranie braku odpowiedzi na zmiany wartości, które zostaną uznane za nieistotne.</span><span class="sxs-lookup"><span data-stu-id="72f45-107">A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72f45-108">W poniższym przykładzie użyto <xref:System.Windows.DependencyPropertyChangedEventArgs> klasy w kontekście <xref:System.Windows.PropertyChangedCallback> dla określonej właściwości klasy niestandardowej, która definiuje również zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="72f45-108">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="72f45-109">Wywołanie zwrotne podejmuje wyniki starych i nowych wartości z systemu właściwości, gdy przekazywane przez <xref:System.Windows.DependencyPropertyChangedEventArgs>i je do różnych zdarzeń klasy argumenty przepakowuje <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span><span class="sxs-lookup"><span data-stu-id="72f45-109">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="72f45-110">Nowe argumenty są następnie używane jako dane dla zdarzenia "ValueChanged" zdefiniowany przez i zgłaszanych przez klasy niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="72f45-110">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependencyPropertyChangedEventArgs (System.Windows.DependencyProperty property, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As DependencyProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DependencyPropertyChangedEventArgs(System::Windows::DependencyProperty ^ property, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.DependencyPropertyChangedEventArgs : System.Windows.DependencyProperty * obj * obj -&gt; System.Windows.DependencyPropertyChangedEventArgs" Usage="new System.Windows.DependencyPropertyChangedEventArgs (property, oldValue, newValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="72f45-111">Identyfikator właściwości zależności, która się zmieniła.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-111">The identifier for the dependency property that changed.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="72f45-112">Wartość właściwości przed zmianą zgłoszone przez odpowiednie zdarzenie lub zmiany stanu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-112">The value of the property before the change reported by the relevant event or state change.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="72f45-113">Wartość właściwości po zmianie zgłoszone przez odpowiednie zdarzenie lub zmiany stanu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-113">The value of the property after the change reported by the relevant event or state change.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72f45-114">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-114">Initializes a new instance of the <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72f45-115">Implementacje zdarzenia niestandardowe, które raportują zmiany właściwości zależności należy używać tego konstruktora wypełnianie danych zdarzeń za pomocą szczegółowych informacji o zmianie, gdy zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="72f45-115">Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="72f45-116">Zwraca, czy podany obiekt jest odpowiednikiem bieżącego <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-116">Returns whether the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dependencyPropertyChangedEventArgs.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="72f45-117">Obiekt do porównania z bieżącą <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-117">The object to compare to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72f45-118">Określa, czy podany obiekt jest odpowiednikiem bieżącego <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-118">Determines whether the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72f45-119">
            <see langword="true" /> Jeśli podany obiekt jest odpowiednikiem bieżącego <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-119">
              <see langword="true" /> if the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72f45-120">Ta implementacja opiera się na równoważność wartości wszystkich właściwości, w tym właściwości wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="72f45-120">This implementation relies on value equivalence of all properties, including internal properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.DependencyPropertyChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.DependencyPropertyChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (args As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::DependencyPropertyChangedEventArgs args);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.DependencyPropertyChangedEventArgs -&gt; bool" Usage="dependencyPropertyChangedEventArgs.Equals args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="72f45-121">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Do porównania z bieżącą <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-121">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72f45-122">Określa, czy podany <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> jest odpowiednikiem bieżącego <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-122">Determines whether the provided <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72f45-123">
            <see langword="true" /> Jeśli podane <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> jest odpowiednikiem bieżącego <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-123">
              <see langword="true" /> if the provided <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72f45-124">Ta implementacja opiera się na równoważność wartości wszystkich właściwości, w tym właściwości wewnętrznego.</span><span class="sxs-lookup"><span data-stu-id="72f45-124">This implementation relies on value equivalence of all properties, including internal properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dependencyPropertyChangedEventArgs.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72f45-125">Pobiera wartość skrótu dla tego <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-125">Gets a hash code  for this <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72f45-126">Całkowita 32-bitowa wartość skrótu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-126">A signed 32-bit integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public object NewValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValue : obj" Usage="System.Windows.DependencyPropertyChangedEventArgs.NewValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72f45-127">Pobiera wartość właściwości po zmianie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-127">Gets the value of the property after the change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72f45-128">Wartość właściwości po zmianie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-128">The property value after the change.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72f45-129">Typ wartości, podane powinny zawsze być castable typowi zgłaszane właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="72f45-129">The type of the value provided should always be castable to the type of the dependency property being reported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72f45-130">W poniższym przykładzie użyto <xref:System.Windows.DependencyPropertyChangedEventArgs> klasy w kontekście <xref:System.Windows.PropertyChangedCallback> dla określonej właściwości klasy niestandardowej, która definiuje również zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="72f45-130">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="72f45-131">Wywołanie zwrotne podejmuje wyniki starych i nowych wartości z systemu właściwości, gdy przekazywane przez <xref:System.Windows.DependencyPropertyChangedEventArgs>i je do różnych zdarzeń klasy argumenty przepakowuje <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span><span class="sxs-lookup"><span data-stu-id="72f45-131">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="72f45-132">Nowe argumenty są następnie używane jako dane dla zdarzenia "ValueChanged" zdefiniowany przez i zgłaszanych przez klasy niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="72f45-132">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValue">
      <MemberSignature Language="C#" Value="public object OldValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OldValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OldValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValue : obj" Usage="System.Windows.DependencyPropertyChangedEventArgs.OldValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72f45-133">Pobiera wartość właściwości przed zmianą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-133">Gets the value of the property before the change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72f45-134">Wartość właściwości przed zmianą.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-134">The property value before the change.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72f45-135">Typ wartości, podane powinny zawsze być castable typowi zgłaszane właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="72f45-135">The type of the value provided should always be castable to the type of the dependency property being reported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72f45-136">W poniższym przykładzie użyto <xref:System.Windows.DependencyPropertyChangedEventArgs> klasy w kontekście <xref:System.Windows.PropertyChangedCallback> dla określonej właściwości klasy niestandardowej, która definiuje również zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="72f45-136">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="72f45-137">Wywołanie zwrotne podejmuje wyniki starych i nowych wartości z systemu właściwości, gdy przekazywane przez <xref:System.Windows.DependencyPropertyChangedEventArgs>i je do różnych zdarzeń klasy argumenty przepakowuje <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span><span class="sxs-lookup"><span data-stu-id="72f45-137">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="72f45-138">Nowe argumenty są następnie używane jako dane dla zdarzenia "ValueChanged" zdefiniowany przez i zgłaszanych przez klasy niestandardowej.</span><span class="sxs-lookup"><span data-stu-id="72f45-138">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.DependencyPropertyChangedEventArgs left, valuetype System.Windows.DependencyPropertyChangedEventArgs right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As DependencyPropertyChangedEventArgs, right As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::DependencyPropertyChangedEventArgs left, System::Windows::DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.DependencyPropertyChangedEventArgs * System.Windows.DependencyPropertyChangedEventArgs -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.DependencyPropertyChangedEventArgs" />
        <Parameter Name="right" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="72f45-139">Pierwszy <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-139">The first <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="72f45-140">Drugi <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-140">The second <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72f45-141">Określa, czy dwa określone <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> obiekty mają taką samą wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-141">Determines whether two specified <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72f45-142">
            <see langword="true" /> Jeśli dwa <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> wystąpienia są równoważne; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-142">
              <see langword="true" /> if the two <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> instances are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72f45-143">W implementacji jest używana ta sama logika co <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="72f45-143">The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.DependencyPropertyChangedEventArgs left, valuetype System.Windows.DependencyPropertyChangedEventArgs right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As DependencyPropertyChangedEventArgs, right As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::DependencyPropertyChangedEventArgs left, System::Windows::DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.DependencyPropertyChangedEventArgs * System.Windows.DependencyPropertyChangedEventArgs -&gt; bool" Usage="System.Windows.DependencyPropertyChangedEventArgs.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.DependencyPropertyChangedEventArgs" />
        <Parameter Name="right" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="72f45-144">Pierwszy <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-144">The first <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="72f45-145">Drugi <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-145">The second <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72f45-146">Określa, czy dwa określone <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> obiekty są różne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-146">Determines whether two specified <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> objects are different.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72f45-147">
            <see langword="true" /> Jeśli dwa <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> wystąpienia są różne; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-147">
              <see langword="true" /> if the two <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> instances are different; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72f45-148">Implementacja zwraca negację tę samą logikę jako <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="72f45-148">The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.Property" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty" Usage="System.Windows.DependencyPropertyChangedEventArgs.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72f45-149">Pobiera identyfikator dla właściwości zależności, w których wystąpiła zmiana wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-149">Gets the identifier for the dependency property where the value change occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72f45-150">Pole identyfikatora właściwości zależności, których wystąpiła zmiana wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72f45-150">The identifier field of the dependency property where the value change occurred.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72f45-151">Ta właściwość jest istotne, jeśli używane w ramach wspólnego <xref:System.Windows.PropertyChangedCallback> która jest zarejestrowana dla kilka właściwości i konieczne jest odróżnić ze zmianą właściwości wywoływane wywołania zwrotnego.</span><span class="sxs-lookup"><span data-stu-id="72f45-151">This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback.</span></span> <span data-ttu-id="72f45-152"><xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> nie jest zazwyczaj odpowiedni dla podnoszonego zdarzenia, ponieważ jest zwykle połączenie 1:1 między właściwości i zdarzenia tego raportu o zmianie właściwości.</span><span class="sxs-lookup"><span data-stu-id="72f45-152"><xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change.</span></span> <span data-ttu-id="72f45-153">Zdarzenia, które zostało podniesione jest oznaczenie, które zmienić właściwości.</span><span class="sxs-lookup"><span data-stu-id="72f45-153">The event that was raised is itself the indication of which property changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>