<Type Name="PointConverter" FullName="System.Windows.PointConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e08d9c9c54390f8befa05c208b3eefcfb7dec73a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30714479" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PointConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PointConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PointConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PointConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PointConverter sealed : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dacb1-101">Konwertuje wystąpienia innych typów, do i z <see cref="T:System.Windows.Point" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dacb1-101">Converts instances of other types to and from a <see cref="T:System.Windows.Point" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dacb1-102">Poniższy przykład kodu wykorzystuje <xref:System.Windows.PointConverter> do przekonwertowania ciągu na <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="dacb1-102">The following code example uses a <xref:System.Windows.PointConverter> to convert a string into a <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[PointExamples_snip#PointConverterExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/PointExamples_snip/CSharp/PointExample.cs#pointconverterexample_csharp)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Point" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PointConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PointConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dacb1-103">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.PointConverter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-103">Initializes a new instance of the <see cref="T:System.Windows.PointConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dacb1-104">Opisuje informacje o kontekście typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-104">Describes the context information of a type.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="dacb1-105">Typ źródła, które jest oceniane pod kątem konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-105">The type of the source that is being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dacb1-106">Określa, czy obiekt można przekonwertować z danym typem wystąpienia <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-106">Determines whether an object can be converted from a given type to an instance of a <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dacb1-107">
            <see langword="true" /> Jeśli można przekonwertować na typ <see cref="T:System.Windows.Point" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-107">
              <see langword="true" /> if the type can be converted to a <see cref="T:System.Windows.Point" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dacb1-108">Opisuje informacje o kontekście typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-108">Describes the context information of a type.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="dacb1-109">Wpisz żądaną to <see cref="T:System.Windows.Point" /> jest oceniane pod kątem konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-109">The desired type this <see cref="T:System.Windows.Point" /> is being evaluated for conversion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dacb1-110">Określa, czy wystąpienie <see cref="T:System.Windows.Point" /> mogą być konwertowane do innego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-110">Determines whether an instance of a <see cref="T:System.Windows.Point" /> can be converted to a different type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dacb1-111">
            <see langword="true" /> Jeśli <see cref="T:System.Windows.Point" /> może zostać przekonwertowany na <paramref name="destinationType" />; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-111">
              <see langword="true" /> if this <see cref="T:System.Windows.Point" /> can be converted to <paramref name="destinationType" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dacb1-112">Zapewnia informacje kontekstowe wymagane do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-112">Provides contextual information required for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="dacb1-113">Wiele języków informacje przestrzegać podczas konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-113">Cultural information to respect during conversion.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dacb1-114">Obiekt konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-114">The object being converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dacb1-115">Próbuje przekonwertować określony obiekt do <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-115">Attempts to convert the specified object to a <see cref="T:System.Windows.Point" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dacb1-116">
            <see cref="T:System.Windows.Point" /> Utworzone na podstawie konwertowanie <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-116">The <see cref="T:System.Windows.Point" /> created from converting <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dacb1-117">Aby określić, czy konwersja jest możliwa bez rzeczywistego wykonania konwersji, użyj <xref:System.Windows.PointConverter.CanConvertFrom%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="dacb1-117">To determine whether a conversion is possible without actually performing the conversion, use the <xref:System.Windows.PointConverter.CanConvertFrom%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dacb1-118">Wygenerowany, jeśli określony obiekt ma wartość NULL lub jest typu nie można przekonwertować na <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-118">Thrown if the specified object is NULL or is a type that cannot be converted to a <see cref="T:System.Windows.Point" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="dacb1-119">Zapewnia informacje kontekstowe wymagane do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-119">Provides contextual information required for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="dacb1-120">Wiele języków informacje przestrzegać podczas konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-120">Cultural information to respect during conversion.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="dacb1-121">
            <see cref="T:System.Windows.Point" /> Do przekonwertowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-121">The <see cref="T:System.Windows.Point" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="dacb1-122">Na typ docelowy konwersji to <see cref="T:System.Windows.Point" /> do.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-122">The type to convert this <see cref="T:System.Windows.Point" /> to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dacb1-123">Próbuje przekonwertować <see cref="T:System.Windows.Point" /> do określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-123">Attempts to convert a <see cref="T:System.Windows.Point" /> to a specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dacb1-124">Obiekt utworzony na podstawie przetwarzania <see cref="T:System.Windows.Point" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-124">The object created from converting this <see cref="T:System.Windows.Point" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dacb1-125">Aby określić, czy konwersja jest możliwa bez rzeczywistego wykonania konwersji, użyj <xref:System.Windows.PointConverter.CanConvertTo%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="dacb1-125">To determine whether a conversion is possible without actually performing the conversion, use the <xref:System.Windows.PointConverter.CanConvertTo%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dacb1-126">Element zgłaszany, gdy <paramref name="value" /> jest <see langword="null" /> lub nie jest <see cref="T:System.Windows.Point" />, lub jeśli <paramref name="destinationType" /> nie jest jednym z prawidłowe typy do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dacb1-126">Thrown if <paramref name="value" /> is <see langword="null" /> or is not a <see cref="T:System.Windows.Point" />, or if the <paramref name="destinationType" /> is not one of the valid types for conversion.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>