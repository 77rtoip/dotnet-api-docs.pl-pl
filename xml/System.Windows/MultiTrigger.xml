<Type Name="MultiTrigger" FullName="System.Windows.MultiTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1435ed8d1be7a0e4d810c16458d8ab913cb09016" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69433838" /></Metadata><TypeSignature Language="C#" Value="public sealed class MultiTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MultiTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.MultiTrigger" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MultiTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiTrigger sealed : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type MultiTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje wyzwalacz, który stosuje wartości właściwości lub wykonuje akcje po spełnieniu zestawu warunków.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiTrigger>umożliwia ustawianie wartości właściwości lub uruchamiania akcji na podstawie kolekcji <xref:System.Windows.Condition>s. Warunek jest spełniony, gdy wartość właściwości (określona przez <xref:System.Windows.Condition.Property%2A> Właściwość <xref:System.Windows.Condition> klasy) elementu jest zgodna z określoną <xref:System.Windows.Condition.Value%2A>wartością. Porównanie jest sprawdzaniem równości odwołań. Następnie można użyć metod ustawiających lub <xref:System.Windows.TriggerBase.EnterActions%2A> właściwości i <xref:System.Windows.TriggerBase.ExitActions%2A> , aby zastosować zmiany lub rozpocząć akcje po spełnieniu wszystkich warunków.  
  
 Właściwość obiektu może składać się tylko z <xref:System.Windows.Setter> obiektów. <xref:System.Windows.MultiTrigger> <xref:System.Windows.MultiTrigger.Setters%2A> Dodanie elementu podrzędnego <xref:System.Windows.MultiTrigger> do obiektu <xref:System.Windows.SetterBaseCollection> niejawnie dodaje <xref:System.Windows.MultiTrigger> go do obiektu. <xref:System.Windows.Setter> <xref:System.Windows.EventSetter>obiekty nie są obsługiwane; <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> obsługuje<xref:System.Windows.EventSetter> tylko obiekty.  
  
   
  
## Examples  
 Poniższy przykład zawiera dwa <xref:System.Windows.MultiTrigger>s. Pierwszy ustawia wartość właściwości **MinWidth** , gdy właściwość **do odczytu HasItems** ma wartość false, a właściwość **Width** to auto. **** Druga z nich jest podobna, ale jest dla właściwości **MinHeight** .  
  
 [!code-xaml[ControlTemplateExamples_snip#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Trigger" />
    <altmember cref="T:System.Windows.MultiDataTrigger" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">Wprowadzenie do stylów i przykładu tworzenia szablonów</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultiTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.MultiTrigger" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public System.Windows.ConditionCollection Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ConditionCollection Conditions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiTrigger.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conditions As ConditionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ConditionCollection ^ Conditions { System::Windows::ConditionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Conditions : System.Windows.ConditionCollection" Usage="System.Windows.MultiTrigger.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ConditionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Condition" /> obiektów. Zmiany wartości właściwości są stosowane, gdy spełnione są wszystkie warunki w kolekcji.</summary>
        <value>Wartością domyślną jest pusta kolekcja.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Conditions"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.Conditions>  
    ZeroOrMoreConditions  
  </object.Conditions>  
</object>  
```  
  
<a name="xamlValues_Conditions"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *ZeroOrMoreConditions*  
 Zero lub więcej <xref:System.Windows.Condition> obiektów.  
  
 <xref:System.Windows.MultiTrigger>umożliwia ustawianie wartości właściwości lub uruchamiania akcji na podstawie kolekcji <xref:System.Windows.Condition> obiektów. Warunek jest spełniony, gdy wartość właściwości (określona przez <xref:System.Windows.Condition.Property%2A> Właściwość <xref:System.Windows.Condition> klasy) elementu jest zgodna z określoną <xref:System.Windows.Condition.Value%2A>wartością. Wykonywane porównanie jest sprawdzaniem równości odwołań. <xref:System.Windows.MultiTrigger> Stosuje skojarzone metody ustawiające lub akcje, gdy wszystkie warunki są spełnione (binarne i operacje).  
  
 Należy pamiętać, <xref:System.Windows.MultiTrigger>że dla s, każdy warunek w kolekcji musi mieć ustawione <xref:System.Windows.Condition.Property%2A> właściwości <xref:System.Windows.Condition.Value%2A> i. Aby uzyskać <xref:System.Windows.Condition> więcej informacji, zobacz stronę.  
  
   
  
## Examples  
 Poniższy przykład zawiera dwa <xref:System.Windows.MultiTrigger>s. Pierwszy ustawia wartość właściwości **MinWidth** , gdy właściwość **do odczytu HasItems** ma wartość false, a właściwość **Width** to auto. **** Druga z nich jest podobna, ale jest dla właściwości **MinHeight** .  
  
 [!code-xaml[ControlTemplateExamples_snip#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiTrigger.Setters" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">Wprowadzenie do stylów i przykładu tworzenia szablonów</related>
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.MultiTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Setter" /> obiektów, która opisuje wartości właściwości do zastosowania, gdy spełnione <see cref="T:System.Windows.MultiTrigger" /> są wszystkie warunki.</summary>
        <value>Wartość domyślna to null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *ZeroOrMoreSetters*  
 Zero lub więcej <xref:System.Windows.Setter> obiektów. <xref:System.Windows.EventSetter>obiekty nie są obsługiwane.  
  
 <xref:System.Windows.MultiTrigger>umożliwia rozpoczęcie akcji lub ustawienie wartości właściwości przy użyciu <xref:System.Windows.Setter> obiektów, gdy zestaw warunków został spełniony.  
  
 Jeśli istnieją dwa <xref:System.Windows.Setter> obiekty w tej samej lub różnych kolekcjach setter ustawia tę samą właściwość, używana jest Metoda ustawiająca, która jest zadeklarowana jako Last.  
  
 Dodanie elementu podrzędnego <xref:System.Windows.MultiTrigger> do obiektu <xref:System.Windows.SetterBaseCollection> niejawnie dodaje <xref:System.Windows.MultiTrigger> go do obiektu. <xref:System.Windows.Setter> <xref:System.Windows.EventSetter>obiekty nie są obsługiwane; <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> obsługuje<xref:System.Windows.EventSetter> tylko obiekty.  
  
   
  
## Examples  
 Poniższy przykład zawiera dwa <xref:System.Windows.MultiTrigger>s. Pierwszy ustawia wartość właściwości **MinWidth** , gdy właściwość **do odczytu HasItems** ma wartość false, a właściwość **Width** to auto. **** Druga z nich jest podobna, ale jest dla właściwości **MinHeight** . Jak wspomniano powyżej, dodanie <xref:System.Windows.Setter> elementu podrzędnego <xref:System.Windows.MultiTrigger> do obiektu <xref:System.Windows.SetterBaseCollection> niejawnie dodaje <xref:System.Windows.MultiTrigger> go do obiektu. W związku z tym, w poniższym `<MultiTrigger.Setters>` przykładzie, jest niejawny.  
  
 [!code-xaml[ControlTemplateExamples_snip#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiTrigger.Conditions" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">Wprowadzenie do stylów i przykładu tworzenia szablonów</related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Obiekt podrzędny do dodania.</param>
        <summary>Dodaje obiekt podrzędny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.MultiTrigger> gdy wystąpienie jest rzutowane <xref:System.Windows.Markup.IAddChild> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Tekst, który ma zostać dodany do obiektu.</param>
        <summary>Dodaje zawartość tekstową węzła do obiektu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element jest jawną implementacją członków. Może być używana tylko wtedy, <xref:System.Windows.MultiTrigger> gdy wystąpienie jest rzutowane <xref:System.Windows.Markup.IAddChild> do interfejsu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
