<Type Name="TextDecorations" FullName="System.Windows.TextDecorations">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b0642c1b31d09d48c048a9cc38b5c963d4297cf0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69433076" /></Metadata><TypeSignature Language="C#" Value="public static class TextDecorations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed TextDecorations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TextDecorations" />
  <TypeSignature Language="VB.NET" Value="Public Class TextDecorations" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextDecorations abstract sealed" />
  <TypeSignature Language="F#" Value="type TextDecorations = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera zestaw statycznych wstępnie zdefiniowanych elementów dekoracyjnych tekstu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Istnieją cztery typy dekoracji tekstu: linie bazowe, nadkreślenie, przekreślenie i podkreślenie. W poniższym przykładzie pokazano lokalizacje elementów dekoracyjnych tekstu względem tekstu.  
  
 ![Diagram lokalizacji dekoracji tekstu] (~/add/media/textdecoration01.gif "Diagram lokalizacji dekoracji tekstu")  
Przykład typów dekoracji tekstu  
  
<a name="xamlAttributeUsage_FontFamily"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object textDecorationsProperty="textDecorationType[,textDecorationType]"/>  
```  
  
<a name="xamlValues_FontFamily"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 `textDecorationType`  
 Typ dekoracji tekstu <xref:System.Windows.TextDecorations.Baseline%2A>:, <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Strikethrough%2A>, lub <xref:System.Windows.TextDecorations.Underline%2A>. Dozwolony jest więcej niż jeden dekoracji, z wartościami rozdzielonymi przecinkami. Możesz również określić wartość "Brak", aby nie sygnalizować żadnego rodzaju dekoracji tekstu.  
  
   
  
## Examples  
 W poniższym przykładzie dekoracja tekstu przekreślonego używa domyślnej wartości czcionki.  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets1)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets1)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets1)]  
  
 Można również określić wiele dekoracji tekstu dla tego samego tekstu. W poniższym przykładzie, podkreślenie i nadkreślenie tekstu są używane dla tego samego tekstu.  
  
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets4)]  
  
 Można użyć wartości ciągu "none", aby wskazać, że nie ma żadnych odrzucania tekstu <xref:System.Windows.TextDecorations> w kolekcji. W poniższym przykładzie <xref:System.Windows.TextDecorations> kolekcja jest ustawiona na wartość "none" (brak).  
  
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets5](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets5)]  
  
 Można usunąć wszystkie dekoracje tekstu z tekstu przy użyciu <xref:System.Windows.TextDecorationCollection.Clear%2A> metody. W poniższym przykładzie <xref:System.Windows.TextDecorations> kolekcja jest wyczyszczona.  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets5a](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets5a)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets5a](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets5a)]  
  
 Domyślnie program <xref:System.Windows.Documents.Hyperlink> <xref:System.Windows.TextDecoration> używa obiektu do wyświetlania podkreślenia. Poniższy przykład znaczników pokazuje <xref:System.Windows.Documents.Hyperlink> zdefiniowane z i bez podkreślenia:  
  
 [!code-xaml[Performance#PerformanceSnippet11](~/samples/snippets/csharp/VS_Snippets_Wpf/Performance/CSharp/Hyperlink.xaml#performancesnippet11)]  
  
 <xref:System.Windows.TextDecoration>obiekty mogą powodować intensywną wydajność, zwłaszcza jeśli masz wiele <xref:System.Windows.Documents.Hyperlink> obiektów. Aby uzyskać więcej informacji, zobacz [jak: Określ, czy hiperłącze jest podkreślone](~/docs/framework/wpf/advanced/how-to-specify-whether-a-hyperlink-is-underlined.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public static System.Windows.TextDecorationCollection Baseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.TextDecorationCollection Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorations.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Baseline As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::TextDecorationCollection ^ Baseline { System::Windows::TextDecorationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Baseline : System.Windows.TextDecorationCollection" Usage="System.Windows.TextDecorations.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa linię bazową <see cref="T:System.Windows.TextDecoration" />.</summary>
        <value>Wartość, która reprezentuje linię bazową <see cref="T:System.Windows.TextDecoration" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniższy przykład pokazuje lokalizację linii bazowej dekoracji tekstu względem tekstu.  
  
 ![Diagram lokalizacji dekoracji tekstu] (~/add/media/textdecoration01.gif "Diagram lokalizacji dekoracji tekstu")  
Przykład dekoracji tekstu linii bazowej  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverLine">
      <MemberSignature Language="C#" Value="public static System.Windows.TextDecorationCollection OverLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.TextDecorationCollection OverLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorations.OverLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OverLine As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::TextDecorationCollection ^ OverLine { System::Windows::TextDecorationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OverLine : System.Windows.TextDecorationCollection" Usage="System.Windows.TextDecorations.OverLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa nadkreślenie <see cref="T:System.Windows.TextDecoration" />.</summary>
        <value>Wartość, która reprezentuje nadkreślenie <see cref="T:System.Windows.TextDecoration" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniższy przykład pokazuje lokalizację dekoracji tekstu nadliniowego względem tekstu.  
  
 ![Diagram lokalizacji dekoracji tekstu] (~/add/media/textdecoration01.gif "Diagram lokalizacji dekoracji tekstu")  
Przykład dekoracji tekstu nadkreślenia  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Strikethrough">
      <MemberSignature Language="C#" Value="public static System.Windows.TextDecorationCollection Strikethrough { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.TextDecorationCollection Strikethrough" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorations.Strikethrough" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Strikethrough As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::TextDecorationCollection ^ Strikethrough { System::Windows::TextDecorationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Strikethrough : System.Windows.TextDecorationCollection" Usage="System.Windows.TextDecorations.Strikethrough" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa przekreślone <see cref="T:System.Windows.TextDecoration" />.</summary>
        <value>Wartość, która reprezentuje przekreślenie <see cref="T:System.Windows.TextDecoration" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniższy przykład pokazuje lokalizację dekoracji tekstu przekreślenia względem tekstu.  
  
 ![Diagram lokalizacji dekoracji tekstu] (~/add/media/textdecoration01.gif "Diagram lokalizacji dekoracji tekstu")  
Przykład dekoracji tekstu przekreślonego  
  
   
  
## Examples  
 W poniższym przykładzie dekoracja tekstu przekreślonego jest tworzona przy użyciu pędzla pełnego koloru dla pióra. Właściwość jest ustawiona na <xref:System.Windows.TextDecorationLocation.Strikethrough>. <xref:System.Windows.TextDecoration.Location%2A>  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets1)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets1)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Underline">
      <MemberSignature Language="C#" Value="public static System.Windows.TextDecorationCollection Underline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.TextDecorationCollection Underline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorations.Underline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Underline As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::TextDecorationCollection ^ Underline { System::Windows::TextDecorationCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Underline : System.Windows.TextDecorationCollection" Usage="System.Windows.TextDecorations.Underline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Określa podkreślenie <see cref="T:System.Windows.TextDecoration" />.</summary>
        <value>Wartość, która reprezentuje podkreolenie <see cref="T:System.Windows.TextDecoration" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Poniższy przykład pokazuje lokalizację dekoracji tekstu podkreślenia względem tekstu.  
  
 ![Diagram lokalizacji dekoracji tekstu] (~/add/media/textdecoration01.gif "Diagram lokalizacji dekoracji tekstu")  
Przykład dekoracji tekstu podkreślenia  
  
 Domyślnie program <xref:System.Windows.Documents.Hyperlink> <xref:System.Windows.TextDecoration> używa obiektu do wyświetlania podkreślenia. Aby uzyskać więcej informacji, zobacz [jak: Określ, czy hiperłącze jest podkreślone](~/docs/framework/wpf/advanced/how-to-specify-whether-a-hyperlink-is-underlined.md).  
  
   
  
## Examples  
 Poniższa ilustracja przedstawia dekorację tekstu, który ma styl z gradientem liniowym i piórem kreskowanym.  
  
 ![Dekoracja tekstu z] podkreśleniem gradientu liniowego (~/add/media/textdecoration02.png "Dekoracja tekstu z") podkreśleniem gradientu liniowego  
Przykład podkreślonego stylu z gradientem liniowym i piórem kreskowanym  
  
 W poniższym przykładzie kodu podkreślenie tekstu podkreślenia jest tworzone przy użyciu liniowego pędzla gradientowego dla pióra kreskowanego.  
  
 [!code-csharp[TextDecorationSnippets#TextDecorationSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml.cs#textdecorationsnippets3)]
 [!code-vb[TextDecorationSnippets#TextDecorationSnippets3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextDecorationSnippets/visualbasic/window1.xaml.vb#textdecorationsnippets3)]
 [!code-xaml[TextDecorationSnippets#TextDecorationSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextDecorationSnippets/CSharp/Window1.xaml#textdecorationsnippets3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
