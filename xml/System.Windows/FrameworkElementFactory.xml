<Type Name="FrameworkElementFactory" FullName="System.Windows.FrameworkElementFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ee95aa6796088d0bf2bb8e03253da7b054afb263" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48664391" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FrameworkElementFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FrameworkElementFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkElementFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElementFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElementFactory" />
  <TypeSignature Language="F#" Value="type FrameworkElementFactory = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0194a-101">Obsługuje tworzenie szablonów.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0194a-101">Supports the creation of templates.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0194a-102">Ta klasa jest przestarzałe sposób programowo utworzyć szablony, będące podklasami <xref:System.Windows.FrameworkTemplate> takich jak <xref:System.Windows.Controls.ControlTemplate> lub <xref:System.Windows.DataTemplate>; nie wszystkie szablonu funkcja jest dostępna podczas tworzenia szablonu, za pomocą tej klasy.</span><span class="sxs-lookup"><span data-stu-id="0194a-102">This class is a deprecated way to programmatically create templates, which are subclasses of <xref:System.Windows.FrameworkTemplate> such as <xref:System.Windows.Controls.ControlTemplate> or <xref:System.Windows.DataTemplate>; not all of the template functionality is available when you create a template using this class.</span></span> <span data-ttu-id="0194a-103">Zalecanym sposobem programowo utworzyć szablon jest załadować [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] z ciągu lub strumienia pamięci za pomocą <xref:System.Windows.Markup.XamlReader.Load%2A> metody <xref:System.Windows.Markup.XamlReader> klasy.</span><span class="sxs-lookup"><span data-stu-id="0194a-103">The recommended way to programmatically create a template is to load [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] from a string or a memory stream using the <xref:System.Windows.Markup.XamlReader.Load%2A> method of the <xref:System.Windows.Markup.XamlReader> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0194a-104">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.FrameworkElementFactory" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-104">Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkElementFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkElementFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0194a-105">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.FrameworkElementFactory" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-105">Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkElementFactory (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkElementFactory(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.FrameworkElementFactory : string -&gt; System.Windows.FrameworkElementFactory" Usage="new System.Windows.FrameworkElementFactory text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="0194a-106">Ciąg tekstowy do produkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-106">The text string to produce.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0194a-107">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.FrameworkElementFactory" /> klasy określonym tekstem do produkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-107">Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory" /> class with the specified text to produce.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkElementFactory (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkElementFactory(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Windows.FrameworkElementFactory : Type -&gt; System.Windows.FrameworkElementFactory" Usage="new System.Windows.FrameworkElementFactory type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0194a-108">Typ wystąpienia do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-108">The type of instance to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0194a-109">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.FrameworkElementFactory" /> klasy z określonym <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-109">Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory" /> class with the specified <see cref="T:System.Type" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkElementFactory (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkElementFactory(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.FrameworkElementFactory : Type * string -&gt; System.Windows.FrameworkElementFactory" Usage="new System.Windows.FrameworkElementFactory (type, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0194a-110">Typ wystąpienia do utworzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-110">The type of instance to create.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="0194a-111">Identyfikator stylu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-111">The style identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0194a-112">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.FrameworkElementFactory" /> klasy z określonym <see cref="T:System.Type" /> i nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-112">Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory" /> class with the specified <see cref="T:System.Type" /> and name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0194a-113">Dodaje program obsługi zdarzeń dla zdarzenia trasowanego danego wystąpienia utworzone przez tę fabrykę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-113">Adds an event handler for the given routed event to the instances created by this factory.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="frameworkElementFactory.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="0194a-114">Identyfikator obiektu dla przetwarzanego zdarzenia trasowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-114">Identifier object for the routed event being handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="0194a-115">Odwołanie do implementacji programu obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-115">A reference to the handler implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0194a-116">Dodaje program obsługi zdarzeń dla zdarzenia trasowanego danego wystąpienia utworzone przez tę fabrykę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-116">Adds an event handler for the given routed event to the instances created by this factory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="frameworkElementFactory.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="0194a-117">Identyfikator obiektu dla przetwarzanego zdarzenia trasowane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-117">Identifier object for the routed event being handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="0194a-118">Odwołanie do implementacji programu obsługi.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-118">A reference to the handler implementation.</span>
          </span>
        </param>
        <param name="handledEventsToo">
          <span data-ttu-id="0194a-119">Określa, czy wywołują procedurę obsługi nieprawidłowego w przypadkach, w którym zdarzenie trasowane już został oznaczony jako obsługiwane w jego obiekcie argumentów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-119">Whether to invoke the handler in cases where the routed event has already been marked as handled in its arguments object.</span>
          </span>
          <span data-ttu-id="0194a-120">
            <see langword="true" /> do wywołania programu obsługi, nawet gdy jest oznaczany zdarzenia trasowanego obsługiwane; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-120">
              <see langword="true" /> to invoke the handler even when the routed event is marked handled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0194a-121">Wartość domyślna to <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-121">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0194a-122">Nie jest powszechne pytaniem do obsługi zdarzeń trasowanych już obsługiwane.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-122">Asking to handle already-handled routed events is not common.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0194a-123">Dodaje program obsługi zdarzeń dla zdarzenia trasowanego danego wystąpienia utworzone w tej fabryce, z możliwością o podanej procedury obsługi wywoływanej nawet w przypadku wystąpienia zdarzenia trasowane, które już został oznaczony jako obsługiwane w innym elemencie wzdłuż trasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-123">Adds an event handler for the given routed event to the instances created by this factory, with the option of having the provided handler be invoked even in cases of routed events that had already been marked as handled by another element along the route.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendChild">
      <MemberSignature Language="C#" Value="public void AppendChild (System.Windows.FrameworkElementFactory child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendChild(class System.Windows.FrameworkElementFactory child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.AppendChild(System.Windows.FrameworkElementFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendChild (child As FrameworkElementFactory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendChild(System::Windows::FrameworkElementFactory ^ child);" />
      <MemberSignature Language="F#" Value="member this.AppendChild : System.Windows.FrameworkElementFactory -&gt; unit" Usage="frameworkElementFactory.AppendChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.FrameworkElementFactory" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="0194a-124">
            <see cref="T:System.Windows.FrameworkElementFactory" /> Obiekt do dodania jako element podrzędny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-124">The <see cref="T:System.Windows.FrameworkElementFactory" /> object to add as a child.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0194a-125">Dodaje fabrykę podrzędnych do tej fabryki.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-125">Adds a child factory to this factory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstChild">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElementFactory FirstChild { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElementFactory FirstChild" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.FirstChild" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FirstChild As FrameworkElementFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElementFactory ^ FirstChild { System::Windows::FrameworkElementFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstChild : System.Windows.FrameworkElementFactory" Usage="System.Windows.FrameworkElementFactory.FirstChild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElementFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0194a-126">Pobiera pierwszą fabrykę podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-126">Gets the first child factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0194a-127">A <see cref="T:System.Windows.FrameworkElementFactory" /> pierwszą fabrykę podrzędnych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-127">A <see cref="T:System.Windows.FrameworkElementFactory" /> the first child factory.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Windows.FrameworkElementFactory.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0194a-128">Pobiera wartość wskazującą, czy ten obiekt jest w stanie niezmienne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-128">Gets a value that indicates whether this object is in an immutable state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0194a-129">
            <see langword="true" /> Jeśli ten obiekt jest w stanie niezmienne; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-129">
              <see langword="true" /> if this object is in an immutable state; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.FrameworkElementFactory.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0194a-130">Pobiera lub ustawia nazwę elementu szablonu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-130">Gets or sets the name of a template item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0194a-131">Ciąg identyfikatora szablonu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-131">A string that is the template identifier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElementFactory NextSibling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElementFactory NextSibling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.NextSibling" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextSibling As FrameworkElementFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElementFactory ^ NextSibling { System::Windows::FrameworkElementFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextSibling : System.Windows.FrameworkElementFactory" Usage="System.Windows.FrameworkElementFactory.NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElementFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0194a-132">Pobiera fabrykę następny element równorzędny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-132">Gets the next sibling factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0194a-133">A <see cref="T:System.Windows.FrameworkElementFactory" /> to znaczy dalej fabryki element równorzędny.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-133">A <see cref="T:System.Windows.FrameworkElementFactory" /> that is the next sibling factory.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElementFactory Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElementFactory Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As FrameworkElementFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElementFactory ^ Parent { System::Windows::FrameworkElementFactory ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.FrameworkElementFactory" Usage="System.Windows.FrameworkElementFactory.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElementFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0194a-134">Pobiera element nadrzędny <see cref="T:System.Windows.FrameworkElementFactory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-134">Gets the parent <see cref="T:System.Windows.FrameworkElementFactory" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0194a-135">A <see cref="T:System.Windows.FrameworkElementFactory" /> to znaczy fabryki nadrzędnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-135">A <see cref="T:System.Windows.FrameworkElementFactory" /> that is the parent factory.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="member this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="frameworkElementFactory.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="0194a-136">Identyfikator obiektu dla zdarzenia trasowanego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-136">Identifier object for the routed event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="0194a-137">Obsługa do usunięcia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-137">The handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0194a-138">Usuwa procedurę obsługi zdarzeń z danego zdarzenia trasowanego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-138">Removes an event handler from the given routed event.</span>
          </span>
          <span data-ttu-id="0194a-139">Dotyczy to wystąpień utworzonych przez tę fabrykę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-139">This applies to the instances created by this factory.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public void SetBinding (System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBinding(class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBinding (dp As DependencyProperty, binding As BindingBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBinding(System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberSignature Language="F#" Value="member this.SetBinding : System.Windows.DependencyProperty * System.Windows.Data.BindingBase -&gt; unit" Usage="frameworkElementFactory.SetBinding (dp, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="0194a-140">Określa właściwość, której należy ustanowić powiązanie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-140">Identifies the property where the binding should be established.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="0194a-141">Opis powiązania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-141">Description of the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0194a-142">Konfiguruje powiązanie danych we właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-142">Sets up data binding on a property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResourceReference">
      <MemberSignature Language="C#" Value="public void SetResourceReference (System.Windows.DependencyProperty dp, object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResourceReference(class System.Windows.DependencyProperty dp, object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.SetResourceReference(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceReference (dp As DependencyProperty, name As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResourceReference(System::Windows::DependencyProperty ^ dp, System::Object ^ name);" />
      <MemberSignature Language="F#" Value="member this.SetResourceReference : System.Windows.DependencyProperty * obj -&gt; unit" Usage="frameworkElementFactory.SetResourceReference (dp, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="0194a-143">Właściwość, do której zasób jest powiązany.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-143">The property to which the resource is bound.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="0194a-144">Nazwa zasobu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-144">The name of the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0194a-145">Skonfiguruj zasób dynamiczny odwołanie we właściwości podrzędnej.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-145">Set up a dynamic resource reference on a child property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Windows.DependencyProperty dp, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Windows.DependencyProperty dp, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElementFactory.SetValue(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (dp As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Windows::DependencyProperty ^ dp, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Windows.DependencyProperty * obj -&gt; unit" Usage="frameworkElementFactory.SetValue (dp, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="0194a-146">Identyfikator właściwości zależności właściwości do ustawienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-146">The dependency property identifier of the property to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0194a-147">Nowa wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-147">The new value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0194a-148">Ustawia wartość właściwości zależności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-148">Sets the value of a dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.FrameworkElementFactory.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0194a-149">Pobiera lub ustawia ciąg tekstowy do produkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-149">Gets or sets the text string to produce.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0194a-150">Ciąg tekstowy do produkcji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-150">The text string to produce.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElementFactory.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Windows.FrameworkElementFactory.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0194a-151">Pobiera lub ustawia typ obiektów, które daje Ta fabryka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-151">Gets or sets the type of the objects this factory produces.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0194a-152">Typ obiektów, które daje Ta fabryka.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0194a-152">The type of the objects this factory produces.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>