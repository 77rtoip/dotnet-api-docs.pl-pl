<Type Name="DependencyObjectType" FullName="System.Windows.DependencyObjectType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82fb7814e22f512058a33e227f6da12781e34e22" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30714287" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DependencyObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DependencyObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyObjectType" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyObjectType" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementuje podstawowej pamięci podręcznej typu dla wszystkich <see cref="T:System.Windows.DependencyObject" /> typów pochodnych.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DependencyObjectType> reprezentuje określone źródłowy system ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> z <xref:System.Windows.DependencyObject>. <xref:System.Windows.DependencyObjectType> jest zasadniczo otoki dla ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> tak, aby można go rozszerzyć niektóre z jego możliwości.  
  
 Ta klasa nie ma publicznego konstruktora. Wystąpienia tej klasy można uzyskać tylko za pośrednictwem właściwości innych obiektów (takich jak <xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=nameWithType>), lub za pomocą metody statycznej <xref:System.Windows.DependencyObjectType.FromSystemType%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObjectType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObjectType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObjectType ^ BaseType { System::Windows::DependencyObjectType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.DependencyObjectType" /> natychmiastowego klasy bazowej bieżącego <see cref="T:System.Windows.DependencyObjectType" />.</summary>
        <value>Typ klasy podstawowej.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSystemType">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObjectType FromSystemType (Type systemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObjectType FromSystemType(class System.Type systemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSystemType (systemType As Type) As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObjectType ^ FromSystemType(Type ^ systemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="systemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="systemType">System ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) typ docelowy konwersji.</param>
        <summary>Zwraca <see cref="T:System.Windows.DependencyObjectType" /> reprezentujący danego systemu ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) typu.</summary>
        <returns>A <see cref="T:System.Windows.DependencyObjectType" /> reprezentujący system ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) typu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdego <xref:System.Windows.DependencyObject> przechowuje <xref:System.Windows.DependencyObject.DependencyObjectType%2A> właściwości, która zwraca <xref:System.Windows.DependencyObjectType>, ale wymagane jest posiadanie określonego <xref:System.Windows.DependencyObject> wystąpienia. Jeśli jeszcze nie masz, można użyć tej metody statycznej narzędzie <xref:System.Windows.DependencyObject> wystąpienia i wymagają <xref:System.Windows.DependencyObjectType>.  
  
   
  
## Examples  
 Następujące przykładowe wywołania <xref:System.Windows.DependencyObjectType.FromSystemType%2A> , tworzenie <xref:System.Windows.DependencyObjectType> na podstawie typu z <xref:System.Windows.Window> klasy.  
  
 [!code-csharp[PropertiesOvwSupport#DOTFromSystemType](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertiesOvwSupport/CSharp/page3.xaml.cs#dotfromsystemtype)]
 [!code-vb[PropertiesOvwSupport#DOTFromSystemType](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertiesOvwSupport/visualbasic/page3.xaml.vb#dotfromsystemtype)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca wartość skrótu dla tego <see cref="T:System.Windows.DependencyObjectType" />.</summary>
        <returns>Kod skrótu 32-bitowej liczby całkowitej ze znakiem.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta implementacja jest połączony z wartością <xref:System.Windows.DependencyObjectType.Id%2A> właściwości.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera unikatowy identyfikator liczony od zera dla tablicy stała czas operacji wyszukiwania.</summary>
        <value>Wewnętrzny identyfikator.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie używaj dla ogólnych funkcji wyznaczania wartości skrótu. Nie ma żadnej gwarancji na tę wartość. Może się różnić między jest uruchamiana aplikacja.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstanceOfType">
      <MemberSignature Language="C#" Value="public bool IsInstanceOfType (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInstanceOfType(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInstanceOfType(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Obiekt do porównania z bieżącym <see cref="T:System.Windows.DependencyObjectType" />.</param>
        <summary>Określa, czy określony obiekt jest wystąpieniem bieżącego <see cref="T:System.Windows.DependencyObjectType" />.</summary>
        <returns>
          <see langword="true" /> Jeśli klasa reprezentowany przez bieżący <see cref="T:System.Windows.DependencyObjectType" /> znajduje się w hierarchii dziedziczenia <see cref="T:System.Windows.DependencyObject" /> przekazany jako <paramref name="d" />; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zwraca obiekty dokładnie tego samego typu `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubclassOf">
      <MemberSignature Language="C#" Value="public bool IsSubclassOf (System.Windows.DependencyObjectType dependencyObjectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubclassOf(class System.Windows.DependencyObjectType dependencyObjectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubclassOf(System::Windows::DependencyObjectType ^ dependencyObjectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObjectType" Type="System.Windows.DependencyObjectType" />
      </Parameters>
      <Docs>
        <param name="dependencyObjectType">
          <see cref="T:System.Windows.DependencyObjectType" /> Do porównania.</param>
        <summary>Określa, czy bieżący <see cref="T:System.Windows.DependencyObjectType" /> pochodzi z określonego <see cref="T:System.Windows.DependencyObjectType" />.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="dependencyObjectType" /> parametru i obecnie <see cref="T:System.Windows.DependencyObjectType" /> reprezentują typy klas i klasa reprezentowany przez bieżący <see cref="T:System.Windows.DependencyObjectType" /> pochodzi od klasy reprezentowany przez <paramref name="dependencyObjectType" />. W przeciwnym razie <see langword="false" />. Ta metoda zwraca również wartość <see langword="false" /> Jeśli <paramref name="dependencyObjectType" /> i obecnie <see cref="T:System.Windows.DependencyObjectType" /> reprezentują tej samej klasy.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę reprezentowanego [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] typu systemu.</summary>
        <value>Nazwa reprezentowanego [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] typu systemu.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wartość <xref:System.Windows.DependencyObjectType.Name%2A> jest ten sam ciąg z nazwą typu nazwa <xref:System.Type>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="SystemType">
      <MemberSignature Language="C#" Value="public Type SystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type SystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.SystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ SystemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] reprezentowany przez ten typ systemu <see cref="T:System.Windows.DependencyObjectType" />.</summary>
        <value>[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Reprezentowany przez ten typ systemu <see cref="T:System.Windows.DependencyObjectType" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>