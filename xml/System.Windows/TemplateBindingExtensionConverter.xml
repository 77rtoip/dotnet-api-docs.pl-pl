<Type Name="TemplateBindingExtensionConverter" FullName="System.Windows.TemplateBindingExtensionConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2342eb26d49403a98fcd123cae1bf8e52014bfc7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36456776" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TemplateBindingExtensionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateBindingExtensionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TemplateBindingExtensionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateBindingExtensionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateBindingExtensionConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type TemplateBindingExtensionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f413f-101">Konwerter typu, który jest używany do tworzenia <see cref="T:System.Windows.TemplateBindingExtension" /> z wystąpienia podczas serializacji.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f413f-101">A type converter that is used to construct a <see cref="T:System.Windows.TemplateBindingExtension" /> from an instance during serialization.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateBindingExtensionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateBindingExtensionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateBindingExtensionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f413f-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.TemplateBindingExtensionConverter" /> klasy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-102">Initializes a new instance of the <see cref="T:System.Windows.TemplateBindingExtensionConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateBindingExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="templateBindingExtensionConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f413f-103">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Implementacji, które dostarcza kontekst formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-103">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="f413f-104">Żądany typ konwersji danych wyjściowych.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-104">The desired type of the conversion's output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f413f-105">Zwraca czy ten konwerter przekonwertować obiekt na określony typ, używając określonego kontekstu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-105">Returns whether this converter can convert the object to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f413f-106">
            <see langword="true" /> Jeśli ten konwerter można wykonać żądanej operacji konwersji; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-106">
              <see langword="true" /> if this converter can perform the requested conversion; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f413f-107">Tylko <paramref name="destinationType" /> z <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> zwróci <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-107">Only a <paramref name="destinationType" /> of <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" /> will return <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateBindingExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="templateBindingExtensionConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="f413f-108">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> Implementacji, które dostarcza kontekst formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-108">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="f413f-109">A <see cref="T:System.Globalization.CultureInfo" /> obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-109">A <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          </span>
          <span data-ttu-id="f413f-110">Odwołanie o wartości null jest przekazywany, przyjęto bieżącej kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-110">If a null reference is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f413f-111">Wartość do konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-111">The value to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="f413f-112">Żądany typ docelowy konwersji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-112">The desired type to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f413f-113">Konwertuje obiekt podanej wartości do określonego typu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-113">Converts the given value object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f413f-114">Przekonwertowana wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f413f-114">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f413f-115">Tylko `destinationType` z <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> zwróci wartość, pochodzących z tej implementacji.</span><span class="sxs-lookup"><span data-stu-id="f413f-115">Only a `destinationType` of <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> will return a value originating from this implementation.</span></span> <span data-ttu-id="f413f-116">Innego typu przewidzianych `destinationType` spowoduje, że tej metody do wywołania podstawowego, co spowoduje nie można używać wartości przekonwertowane i służy tylko do podstawowego sprawdzania poprawności pozostałe parametry.</span><span class="sxs-lookup"><span data-stu-id="f413f-116">Any other type provided for `destinationType` will cause this method to call base, which will result in no usable converted value and only serves for basic validation of the remaining parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.TemplateBindingExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </Docs>
    </Member>
  </Members>
</Type>