<Type Name="UIElement" FullName="System.Windows.UIElement">
  <TypeSignature Language="C#" Value="public class UIElement : System.Windows.Media.Visual, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UIElement extends System.Windows.Media.Visual implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIElement" />
  <TypeSignature Language="VB.NET" Value="Public Class UIElement&#xA;Inherits Visual&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElement : System::Windows::Media::Visual, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Visual</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.UidProperty("Uid")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5e656-101"><see cref="T:System.Windows.UIElement" /> jest klasę podstawową dla implementacji poziomu core WPF opierając się na elementy Windows Presentation Foundation (WPF) i właściwości podstawowych prezentacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-101"><see cref="T:System.Windows.UIElement" /> is a base class for WPF core level implementations building on Windows Presentation Foundation (WPF) elements and basic presentation characteristics.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-102"><xref:System.Windows.UIElement> stanowi punkt początkowy dla właściwości układu elementu i ujawnia, którą można zastąpić metody wirtualne, które klasy pochodne, które mogą mieć wpływ na układ renderowania zachowanie elementu i jego podrzędnych elementów.</span><span class="sxs-lookup"><span data-stu-id="5e656-102"><xref:System.Windows.UIElement> provides a starting point for element layout characteristics, and also exposes virtual methods that derived classes can override, which can influence the layout rendering behavior of the element and its child elements.</span></span>  
  
 <span data-ttu-id="5e656-103">Większość danych wejściowych i skupienie zachowania w przypadku elementów na ogół jest też definiowany w <xref:System.Windows.UIElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-103">Much of the input and focusing behavior for elements in general is also defined in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="5e656-104">W tym zdarzenia dla klawiatura, mysz i wprowadzania danych piórem i stan powiązanych właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-104">This includes the events for keyboard, mouse and stylus input, and related status properties.</span></span> <span data-ttu-id="5e656-105">Wiele z tych zdarzeń jest kierowane zdarzenia i wiele zdarzeń związanych z danych wejściowych ma zarówno propagacji routingu wersji, a także tunelowania wersji zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-105">Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.</span></span> <span data-ttu-id="5e656-106">Zdarzenia te pary zazwyczaj są to zdarzenia największe znaczenie dla autorów formantu.</span><span class="sxs-lookup"><span data-stu-id="5e656-106">These paired events are typically the events of greatest interest to control authors.</span></span>  
  
 <span data-ttu-id="5e656-107"><xref:System.Windows.UIElement> zawiera również [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] dotyczących [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modelu zdarzeń, łącznie z metod, które może wiązać się z określonych kierowane zdarzenia, które pochodzą z wystąpienia elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-107"><xref:System.Windows.UIElement> also includes [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that relate to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance.</span></span>  
  
 <span data-ttu-id="5e656-108">Pod względem architektury <xref:System.Windows.UIElement> mogą zostać uwzględnione w przybliżeniu równy uchwyt okna w [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programowania lub Element [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] programowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-108">In terms of architecture, <xref:System.Windows.UIElement> can be considered roughly equivalent to a window handle in [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programming, or an Element in [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] programming.</span></span> <span data-ttu-id="5e656-109"><xref:System.Windows.UIElement> jest elementem podstawowej na poziomie core WPF.</span><span class="sxs-lookup"><span data-stu-id="5e656-109"><xref:System.Windows.UIElement> is a base element at the WPF core level.</span></span>  
  
 <span data-ttu-id="5e656-110">A <xref:System.Windows.UIElement> ma następujące możliwości, w szczególności zdefiniowane przez <xref:System.Windows.UIElement> klasy:</span><span class="sxs-lookup"><span data-stu-id="5e656-110">A <xref:System.Windows.UIElement> has the following capabilities that are specifically defined by the <xref:System.Windows.UIElement> class:</span></span>  
  
-   <span data-ttu-id="5e656-111">Można renderować jako element podrzędny (<xref:System.Windows.UIElement> pochodną <xref:System.Windows.Media.Visual>, klasa wysokiego poziomu grafiki)</span><span class="sxs-lookup"><span data-stu-id="5e656-111">Can render as a child element (<xref:System.Windows.UIElement> derives from <xref:System.Windows.Media.Visual>, a high level graphics class)</span></span>  
  
-   <span data-ttu-id="5e656-112">Zawiera logikę, która służy do rozmiaru i pozycji elementy podrzędne możliwe <xref:System.Windows.UIElement> (jeśli jest to interpretowane przez system układ)</span><span class="sxs-lookup"><span data-stu-id="5e656-112">Contains logic that is used to size and position possible child elements of a <xref:System.Windows.UIElement> (when interpreted by a layout system)</span></span>  
  
-   <span data-ttu-id="5e656-113">Mogą odpowiadać na dane wejściowe użytkownika (w tym kontroli danych wejściowych pobierania wysyłania do za pośrednictwem ich obsługi zdarzeń routingu lub routingu poleceń)</span><span class="sxs-lookup"><span data-stu-id="5e656-113">Can respond to user input (including control of where input is getting sent to via their handling of event routing, or routing of commands)</span></span>  
  
-   <span data-ttu-id="5e656-114">Może wiązać się z routingiem zdarzenia, które działają podczas podróży trasę przy użyciu drzewa logicznego elementu</span><span class="sxs-lookup"><span data-stu-id="5e656-114">Can raise routed events that travel a route through the logical element tree</span></span>  
  
-   <span data-ttu-id="5e656-115">Obsługuje niektóre aspekty systemu animacji</span><span class="sxs-lookup"><span data-stu-id="5e656-115">Supports some aspects of the animation system</span></span>  
  
 <span data-ttu-id="5e656-116"><xref:System.Windows.FrameworkElement> jest to klasa implementacji na poziomie struktury WPF opiera się na <xref:System.Windows.UIElement>i dodaje określonego interakcji z poziomu framework WPF.</span><span class="sxs-lookup"><span data-stu-id="5e656-116"><xref:System.Windows.FrameworkElement> is the WPF framework-level implementation class that builds on <xref:System.Windows.UIElement>, and adds specific interactions with the WPF framework level.</span></span> <span data-ttu-id="5e656-117"><xref:System.Windows.FrameworkElement> dodaje i definiuje następujące możliwości:</span><span class="sxs-lookup"><span data-stu-id="5e656-117"><xref:System.Windows.FrameworkElement> adds and defines the following capabilities:</span></span>  
  
-   <span data-ttu-id="5e656-118">Właściwości dodatkowe układu określonej struktury</span><span class="sxs-lookup"><span data-stu-id="5e656-118">Additional framework-specific layout characteristics</span></span>  
  
-   <span data-ttu-id="5e656-119">Obsługa metadanych bardziej zaawansowane funkcje raportowania we właściwościach</span><span class="sxs-lookup"><span data-stu-id="5e656-119">Support for richer metadata reporting on properties</span></span>  
  
-   <span data-ttu-id="5e656-120">Implementacja specyficzna dla klasy niektórych klas podstawowych i ich dołączone właściwości lub dołączone zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-120">Class-specific implementation of certain input base classes and their attached properties or attached events</span></span>  
  
-   <span data-ttu-id="5e656-121">Obsługa stylów</span><span class="sxs-lookup"><span data-stu-id="5e656-121">Style support</span></span>  
  
-   <span data-ttu-id="5e656-122">Dalsze wsparcie animacji</span><span class="sxs-lookup"><span data-stu-id="5e656-122">Further animation support</span></span>  
  
 <span data-ttu-id="5e656-123">Inny powiązane jest klasa <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-123">Another related class is <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="5e656-124"><xref:System.Windows.ContentElement> Klasa implementuje wiele z tych samych elementów członkowskich jak <xref:System.Windows.UIElement>; ma różnicy między te dwie klasy z ich zamierzone umieścić w ogólnej zawartości modelu.</span><span class="sxs-lookup"><span data-stu-id="5e656-124">The <xref:System.Windows.ContentElement> class implements many of the same members as does <xref:System.Windows.UIElement>; the difference between these two classes has to do with their intended place in the overall content model.</span></span> <span data-ttu-id="5e656-125">A <xref:System.Windows.UIElement> Klasa pochodna definiuje zwykle stosunkowo sztywne modelu zawartości, co oznacza, że ma ograniczeń dotyczących elementy mogą być elementy podrzędne w znaczniku.</span><span class="sxs-lookup"><span data-stu-id="5e656-125">A <xref:System.Windows.UIElement> derived class typically defines a relatively rigid content model, meaning that there are restrictions on what elements may be child elements in markup.</span></span> <span data-ttu-id="5e656-126">Może to być pojemności do wykonywania mniej restrykcyjnych zawartość elementu podrzędnego <xref:System.Windows.UIElement>, ale ten pojemności jest zwykle scentralizowane w wyznaczonym właściwości zawartości.</span><span class="sxs-lookup"><span data-stu-id="5e656-126">There might be capacity for taking less restrictive child content in a <xref:System.Windows.UIElement>, but that capacity is typically centralized in designated content properties.</span></span> <span data-ttu-id="5e656-127">A <xref:System.Windows.ContentElement> zazwyczaj Klasa pochodna nie jest stosować jak największe restrykcje o zawartości na potrzeby obsługi scenariuszy, takich jak dokumenty format przepływu.</span><span class="sxs-lookup"><span data-stu-id="5e656-127">A <xref:System.Windows.ContentElement> derived class is typically not as restrictive about content, to support scenarios such as flow-format documents.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5e656-128"><xref:System.Windows.UIElement.Visibility%2A> stan ma wpływ na wszystkie dane wejściowe obsługi przez ten element.</span><span class="sxs-lookup"><span data-stu-id="5e656-128"><xref:System.Windows.UIElement.Visibility%2A> state affects all input handling by that element.</span></span> <span data-ttu-id="5e656-129">Elementy, które nie są widoczne nie uczestniczą w testowania trafień i nie otrzymują zdarzenia wejściowe, nawet jeśli myszy jest nad granicami, gdy element jest jeśli były widoczne.</span><span class="sxs-lookup"><span data-stu-id="5e656-129">Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds where the element would be if were visible.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.UIElement" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-130">Initializes a new instance of the <see cref="T:System.Windows.UIElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-131">Tworzenie nowego wystąpienia, który jest typu <xref:System.Windows.UIElement> jest rzadko w kodzie aplikacji, ponieważ <xref:System.Windows.UIElement> jest base element.</span><span class="sxs-lookup"><span data-stu-id="5e656-131">Creating a new instance that is actually of type <xref:System.Windows.UIElement> is uncommon in application code, because <xref:System.Windows.UIElement> is a base element.</span></span> <span data-ttu-id="5e656-132">Zobacz [Przegląd elementów podstawowych](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-132">See [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e656-133">Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-133">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="5e656-134">Identyfikator kierowanego zdarzenia mają być obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-134">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="5e656-135">Odwołanie do implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-135">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="5e656-136">Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-136">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-137">Tej procedury obsługi dla tego samego zdarzenia można dodać wiele razy bez podnoszenia Wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="5e656-137">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="5e656-138">Jednak program obsługi jest rzeczywiście wielokrotnie wywoływać gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-138">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="5e656-139">W związku z tym należy rozważyć, jak to zachowanie może mieć efekty uboczne, które należy uwzględnić w implementację programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-139">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="5e656-140">Ta metoda używane zwykle do implementacji metody dostępu "add", dla [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorca dostępu zdarzeń niestandardowych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-140">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="5e656-141">Identyfikator kierowanego zdarzenia mają być obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-141">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="5e656-142">Odwołanie do implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-142">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo">
          <span data-ttu-id="5e656-143"><see langword="true" /> zarejestrować program obsługi w taki sposób, że jest wywoływana, nawet w przypadku, gdy zaznaczono kierowanego zdarzenia przetwarzanych w jego dane zdarzeń; <see langword="false" /> rejestrowania programu obsługi z domyślnego warunku, że nie zostanie wywołany, jeśli kierowanego zdarzenia jest już oznaczona obsłużone.</span><span class="sxs-lookup"><span data-stu-id="5e656-143"><see langword="true" /> to register the handler such that it is invoked even when  the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
 <span data-ttu-id="5e656-144">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-144">The default is <see langword="false" />.</span></span>  
  
 <span data-ttu-id="5e656-145">Nie rutynowo Pytaj do rehandle kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-145">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="5e656-146">Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-146">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="5e656-147">Określ <paramref name="handledEventsToo" /> jako <see langword="true" /> mają podanego programu obsługi, można wywołać dla kierowanego zdarzenia, który już został oznaczony jako obsługiwany przez inny element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-147">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-148">Przetwarzanie zdarzenia wejściowe niskiego poziomu w praktycznym sposobem jest złożonym zadaniem.</span><span class="sxs-lookup"><span data-stu-id="5e656-148">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="5e656-149">Wiele formantów implementuje zachowanie, gdzie określone zdarzenie zostanie oznaczony jako obsługiwany i zastępuje inne zdarzenie bardziej intuicyjne.</span><span class="sxs-lookup"><span data-stu-id="5e656-149">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="5e656-150">Ogólnie rzecz biorąc formantu tylko oznaczy zdarzenia wejściowe platformy jako obsługiwane w przypadku niektórych zamiar projektu dla w ten sposób.</span><span class="sxs-lookup"><span data-stu-id="5e656-150">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="5e656-151">W niektórych scenariuszach te cele projektu może być wymaga z konkretnym obsługi zdarzenia wejściowego.</span><span class="sxs-lookup"><span data-stu-id="5e656-151">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="5e656-152">Jest w tych scenariuszach tego rejestrowanie programów obsługi z `handledEventsToo` jako `true` jest odpowiedni.</span><span class="sxs-lookup"><span data-stu-id="5e656-152">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="5e656-153">Jednak użytkownik nie należy tego robić regularnie.</span><span class="sxs-lookup"><span data-stu-id="5e656-153">But you should not do this routinely.</span></span> <span data-ttu-id="5e656-154">Wywoływanie programy obsługi zdarzeń w odpowiedzi na wszystkie zdarzenia, nawet jeśli obsługiwane będzie skomplikować własne przetwarzania logiki zdarzeń aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-154">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="5e656-155">Jeśli logika obsługi jest znaczny spadek wydajności może zostać wyświetlony.</span><span class="sxs-lookup"><span data-stu-id="5e656-155">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="5e656-156">Należy zarezerwować stosowania Dołączanie programów obsługi zdarzeń już obsługiwane w sytuacji, gdy użytkownik ma już odnaleziony podczas procesu projektowania, że niektóre kontrolki są obsługi zdarzeń, które nadal mają być obsługiwane z logiką aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-156">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="5e656-157">Inny technika unikanie klasy zachowania niektórych kombinacji zdarzenie kontroli obsługi polega na użyciu zamiast podglądu tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-157">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="5e656-158">Na przykład jeśli <xref:System.Windows.UIElement.MouseLeftButtonDown> jest oznaczony jako obsługiwany przez Obsługa klasy może być możliwe dodanie obsługi <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="5e656-158">For example, if <xref:System.Windows.UIElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="5e656-159">Tej procedury obsługi dla tego samego zdarzenia można dodać wiele razy bez podnoszenia Wystąpił wyjątek.</span><span class="sxs-lookup"><span data-stu-id="5e656-159">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="5e656-160">Jednak program obsługi jest rzeczywiście wielokrotnie wywoływać gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-160">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="5e656-161">W związku z tym należy rozważyć, jak to zachowanie może mieć efekty uboczne, które należy uwzględnić w implementację programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-161">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="5e656-162">Ta metoda używane zwykle do implementacji metody dostępu "add", dla [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorca dostępu zdarzeń niestandardowych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-162">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-163">Poniższy przykład implementuje obsługi wywoływane na <xref:System.Windows.FrameworkElement.Initialized> zdarzenia na stronie dołącza zdefiniowanych obsługi do jednego z nazwanych elementów na stronie za pomocą `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-163">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="5e656-164">Czy można wywołać ten program obsługi, nawet jeśli inny element marszruty oznaczony dane zdarzenia udostępniony jako obsłużony przed osiągnięciem element obsługi trasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-164">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="5e656-165">Programy obsługi są dodawane do trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-165">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="5e656-166">Dane zdarzenia, które służy do dodawania obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-166">The event data that is used to add the handlers.</span></span> <span data-ttu-id="5e656-167">Ta metoda używa <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości danych zdarzeń na potrzeby obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-167">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the event data to create the handlers.</span></span></param>
        <summary><span data-ttu-id="5e656-168">Dodaje obsługi do określonego <see cref="T:System.Windows.EventRoute" /> dla bieżącego <see cref="T:System.Windows.UIElement" /> kolekcję procedur obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-168">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.UIElement" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-169">Tej metody mogą być używane przez elementy zawartości hosta (albo tymi, które implementują <xref:System.Windows.IContentHost> lub nie) można dodać obsługi elementów podrzędnych <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="5e656-169">This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>.</span></span> <span data-ttu-id="5e656-170">Zwykle nie jest to wymagane dla <xref:System.Windows.UIElement>, ponieważ programy obsługi są dodawane automatycznie dla wszystkich elementów znalezionych w ukończone drzewa logicznego.</span><span class="sxs-lookup"><span data-stu-id="5e656-170">Ordinarily, this is not required for <xref:System.Windows.UIElement>, because handlers are automatically added for all elements found in a completed logical tree.</span></span> <span data-ttu-id="5e656-171">W niektórych przypadkach, gdy <xref:System.Windows.ContentElement> i <xref:System.Windows.UIElement> mieszane opartego na szablonie drzewa, aktywne elementy, które pochodzi z konieczności szablonu można dodać do trasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-171">However, in some cases where <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are mixed in templated trees, intervening elements that came from the template need to be added to a route.</span></span> <span data-ttu-id="5e656-172">Zarówno <xref:System.Windows.ContentElement> i <xref:System.Windows.UIElement> obsługuje wersję tej metody.</span><span class="sxs-lookup"><span data-stu-id="5e656-172">Both <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> support a version of this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-173">Pobiera lub ustawia wartość wskazującą, czy ten element może być użyty jako element docelowy operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-173">Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.</span></span>  <span data-ttu-id="5e656-174">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-174">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-175"><see langword="true" /> Jeśli ten element może być używany jako obiekt docelowy operacji przeciągania i upuszczania. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-175"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-176">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-176">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-177">Operacje przeciągania i upuszczania nie są domyślnie włączone i musi być włączona celowo <xref:System.Windows.UIElement.AllowDrop%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-177">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.UIElement.AllowDrop%2A> to `true`.</span></span> <span data-ttu-id="5e656-178">Poza tego ustawienia podstawowe zachowanie przeciągania i upuszczania całkowicie zależy od implementacji i nie jest zdefiniowany przez <xref:System.Windows.UIElement> lub dowolnej klasy podstawowej elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-178">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement> or any other base element class.</span></span> <span data-ttu-id="5e656-179">Niektóre formanty, na przykład <xref:System.Windows.Controls.RichTextBox>, ma domyślne zachowanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-179">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior.</span></span> <span data-ttu-id="5e656-180">Aby uzyskać więcej informacji dotyczących operacji przeciągania i upuszczania, zobacz [przeciągania i upuszczania omówienie](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-180">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="5e656-181"><xref:System.Windows.FrameworkElement> zastępuje metadane dla tej właściwości zależności w jego wykonania.</span><span class="sxs-lookup"><span data-stu-id="5e656-181"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="5e656-182">W szczególności <xref:System.Windows.FrameworkElement> wyznacza tę właściwość, aby umożliwić dziedziczenie wartość właściwości (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> jest `true` w metadanych).</span><span class="sxs-lookup"><span data-stu-id="5e656-182">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="5e656-183">Dziedziczenie wartości właściwości w tym kontekście oznacza, że istnieją elementy podrzędne z ma inne wartości <xref:System.Windows.UIElement.AllowDrop%2A> przypisany za pomocą wartości lokalnej lub style, wartość najbliższym elemencie nadrzędnym z wartością przypisane (ponownie, albo w stylach domyślnie wartości lub wartości lokalnych), a następnie będzie można przypisać wartości z elementu nadrzędnego do wszystkich elementów podrzędnych wcześniej nieprzypisane przez system właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-183">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from the parent element will be assigned to all previously unassigned child elements by the property system.</span></span> <span data-ttu-id="5e656-184">W praktyce oznacza to, że można określić, czy zezwalać Upuść działania w elemencie głównym, i że wartości zostaną przeniesione na wszystkie elementy podrzędne, które mają nie zostały przypisane go jako `false`.</span><span class="sxs-lookup"><span data-stu-id="5e656-184">In practice this means that you can specify whether to allow drop operations at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-185">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-185">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-186">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-186">Identifier field</span></span>|<xref:System.Windows.UIElement.AllowDropProperty>|  
|<span data-ttu-id="5e656-187">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-187">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-188">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-188">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-189">W poniższym przykładzie znaczników <xref:System.Windows.UIElement.AllowDrop%2A> właściwości `true` za pomocą atrybutu na <xref:System.Windows.Controls.TextBox>, jak również inne ustawienie właściwości umożliwiających łącznie z powiązanych z <xref:System.Windows.Controls.TextBox> jako docelowy obiekt danych wielowierszowy tekst po zostanie przesunięte.</span><span class="sxs-lookup"><span data-stu-id="5e656-189">The following markup example sets the <xref:System.Windows.UIElement.AllowDrop%2A> property `true` using an attribute on a <xref:System.Windows.Controls.TextBox>, as well as setting some other related properties that in aggregate enable that <xref:System.Windows.Controls.TextBox> to be the target of a multiline text data object when it is dragged in.</span></span> <span data-ttu-id="5e656-190">Pełny przykład, zobacz [załadować przykładowe pliku porzucony](http://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span><span class="sxs-lookup"><span data-stu-id="5e656-190">For the complete sample, see [Load a Dropped File Sample](http://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span></span>  
  
 [!code-xaml[DragDrop_DropOpenTextFile#UIElementAllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DropOpenTextFile/CS/window1.xaml#uielementallowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-191">Identyfikuje <see cref="P:System.Windows.UIElement.AllowDrop" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-191">Identifies the <see cref="P:System.Windows.UIElement.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e656-192">Zastosowanie animacji właściwości zależności określonego w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-192">Applies an animation to a specified dependency property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-193">Ta metoda jest zapieczętowany i nie może zostać zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="5e656-193">This method is sealed and cannot be overridden.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="5e656-194">Identyfikator właściwości animacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-194">The identifier for the property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="5e656-195">Zegar animacji, który kontroluje i deklaruje animacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-195">The animation clock that controls and declares the animation.</span></span></param>
        <summary><span data-ttu-id="5e656-196">Zastosowanie animacji właściwości zależności określonego w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-196">Applies an animation to a specified dependency property on this element.</span></span> <span data-ttu-id="5e656-197">Wszelkie istniejące animacje są zatrzymane i zastąpione nowe animacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-197">Any existing animations are stopped and replaced with the new animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-198">Aby usunąć animacji z właściwością, określ identyfikator dla tej właściwości jako `dp` i określ `clock` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="5e656-198">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="5e656-199">Spowoduje to usunięcie animacji i animowany właściwość jest ustawiona na wartość podstawową.</span><span class="sxs-lookup"><span data-stu-id="5e656-199">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="5e656-200">Jednak zegara pierwotnie skojarzone animacji nie zostanie zatrzymana.</span><span class="sxs-lookup"><span data-stu-id="5e656-200">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="5e656-201">Inne animacje przypisane do tego zegara będzie nadal działać.</span><span class="sxs-lookup"><span data-stu-id="5e656-201">Any other animations assigned to that clock will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-202">W poniższym przykładzie <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` ma określonego czasu Animacja przez wywołanie metody <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span><span class="sxs-lookup"><span data-stu-id="5e656-202">In the following example, a <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` has a particular timing animation applied to it by calling <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/ClockControllerSpeedRatioExample.cs#uielementapplyanimationclock)]
 [!code-vb[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/clockcontrollerspeedratioexample.vb#uielementapplyanimationclock)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="5e656-203">Właściwość animacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-203">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="5e656-204">Zegar animacji, który kontroluje i deklaruje animacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-204">The animation clock that controls and declares the animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="5e656-205">Wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-205">A value of the enumeration.</span></span> <span data-ttu-id="5e656-206">Wartość domyślna to <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, które spowoduje zatrzymanie wszelkich istniejących animacji i Zamień na nową.</span><span class="sxs-lookup"><span data-stu-id="5e656-206">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span></span></param>
        <summary><span data-ttu-id="5e656-207">Zastosowanie animacji właściwości zależności określonego w tym elemencie, z możliwością Określ, co się stanie, jeśli właściwość została już uruchomiona Animacja.</span><span class="sxs-lookup"><span data-stu-id="5e656-207">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-208">Aby usunąć animacji z właściwością, określ identyfikator dla tej właściwości jako `dp` i określ `clock` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="5e656-208">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="5e656-209">Spowoduje to usunięcie animacji i animowany właściwość jest ustawiona na wartość podstawową.</span><span class="sxs-lookup"><span data-stu-id="5e656-209">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="5e656-210">Jednak zegara pierwotnie skojarzone animacji nie zostanie zatrzymana.</span><span class="sxs-lookup"><span data-stu-id="5e656-210">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="5e656-211">Inne animacje przypisane do tego zegara będzie nadal działać.</span><span class="sxs-lookup"><span data-stu-id="5e656-211">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-212">Pobiera wartość wskazującą, czy co najmniej jeden touch są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-212">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-213"><see langword="true" /> Jeśli co najmniej jeden touch są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-213"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-214">Identyfikuje <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-214">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-215">Pobiera wartość wskazującą, czy co najmniej jeden touch są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="5e656-215">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-216"><see langword="true" /> Jeśli co najmniej jeden touch są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-216"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-217">Identyfikuje <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-217">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-218">Pobiera wartość wskazującą, czy naciśnięciu dotykowego co najmniej jeden nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-218">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-219"><see langword="true" /> Jeśli naciśnięciu dotykowego co najmniej jeden nad tym elementem; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-219"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-220">Identyfikuje <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-220">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-221">Pobiera wartość wskazującą, czy co najmniej jeden touch naciśnięciu za pośrednictwem tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="5e656-221">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-222"><see langword="true" /> Jeśli co najmniej jeden touch jest wciśnięty za pośrednictwem tego elementu lub elementów podrzędnych w jego drzewie wizualnym; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-222"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-223">Identyfikuje <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-223">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public void Arrange (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Arrange(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Arrange (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Arrange(System::Windows::Rect finalRect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect"><span data-ttu-id="5e656-224">Rozmiaru końcowego, który oblicza nadrzędnego elementu podrzędnego w <see cref="T:System.Windows.Rect" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="5e656-224">The final size that the parent computes for the child element, provided as a <see cref="T:System.Windows.Rect" /> instance.</span></span></param>
        <summary><span data-ttu-id="5e656-225">Określa położenie elementów podrzędnych i określa rozmiar <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-225">Positions child elements and determines a size for a <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="5e656-226">Elementy nadrzędne wywołanie tej metody z ich <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> implementacji (lub odpowiednik poziomie struktury WPF) tworzą aktualizacji układu cyklicznego.</span><span class="sxs-lookup"><span data-stu-id="5e656-226">Parent elements call this method from their <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> implementation (or a WPF framework-level equivalent) to form a recursive layout update.</span></span> <span data-ttu-id="5e656-227">Ta metoda tworzy drugi przebieg aktualizacji układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-227">This method constitutes the second pass of a layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-228">Wyprowadzanie scenariuszy, zachowanie dla elementu poziomie struktury WPF <xref:System.Windows.UIElement.Arrange%2A> nie powinien i nie może, chyba że użytkownik w tle można zmienić.</span><span class="sxs-lookup"><span data-stu-id="5e656-228">For WPF framework-level element deriving scenarios, behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="5e656-229">Zamiast tego należy zastąpić <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> Implementacja klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-229">Instead, you should override the <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation in your class.</span></span> <span data-ttu-id="5e656-230">Twoje <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementacji jest wywoływana wewnętrznie przez <xref:System.Windows.UIElement.Arrange%2A> jako część domyślnego WPF układu poziomie struktury operacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-230">Your <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="5e656-231">Twoje <xref:System.Windows.UIElement.ArrangeCore%2A> również powinny wywoływać implementację <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> na każdego elementu podrzędnego, jeśli ma ona elementy podrzędne.</span><span class="sxs-lookup"><span data-stu-id="5e656-231">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> on each child element, if it has child elements.</span></span>  
  
 <span data-ttu-id="5e656-232">Wyprowadzanie scenariuszy, zachowanie dla elementu core poziom WPF <xref:System.Windows.UIElement.Arrange%2A> nie powinien i nie może, chyba że użytkownik w tle można zmienić.</span><span class="sxs-lookup"><span data-stu-id="5e656-232">For WPF core-level element deriving scenarios, the behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="5e656-233">Zamiast tego należy zastąpić <xref:System.Windows.UIElement.ArrangeCore%2A> w klasie.</span><span class="sxs-lookup"><span data-stu-id="5e656-233">Instead, you should override <xref:System.Windows.UIElement.ArrangeCore%2A> in your class.</span></span> <span data-ttu-id="5e656-234">Twoje <xref:System.Windows.UIElement.ArrangeCore%2A> implementacji jest wywoływana wewnętrznie przez <xref:System.Windows.UIElement.Arrange%2A> jako część domyślnego WPF układu poziomie struktury operacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-234">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="5e656-235">Jednak przy założeniu używasz układu poziomie struktury WPF i jego systemu układu, często nie jest to, czy są w szczególności wyprowadzanie elementy w WPF poziomie core z <xref:System.Windows.UIElement> element klasy podstawowej.</span><span class="sxs-lookup"><span data-stu-id="5e656-235">However, this assumes you are using WPF framework-level layout and its layout system, which is often not the case if you are specifically deriving elements at the WPF core-level from the <xref:System.Windows.UIElement> base element class.</span></span> <span data-ttu-id="5e656-236">Twoje <xref:System.Windows.UIElement.ArrangeCore%2A> również powinny wywoływać implementację <xref:System.Windows.UIElement.Arrange%2A> na każdego elementu podrzędnego, jeśli ma ona elementy podrzędne.</span><span class="sxs-lookup"><span data-stu-id="5e656-236">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.UIElement.Arrange%2A> on each child element, if it has child elements.</span></span> <span data-ttu-id="5e656-237">Uwaga scenariusz core poziomie WPF oznacza, że nie używasz <xref:System.Windows.FrameworkElement> pochodnej klasy, ponieważ <xref:System.Windows.FrameworkElement> zamknięcia <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-237">Note that the WPF core-level scenario implies that you are not using a <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span>  
  
 <span data-ttu-id="5e656-238">Obliczenia WPF układu poziomie struktury pozycjonowania w [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] składa się z <xref:System.Windows.UIElement.Measure%2A> wywołania i <xref:System.Windows.UIElement.Arrange%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="5e656-238">Computation of WPF framework-level layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] consists of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="5e656-239">Podczas <xref:System.Windows.UIElement.Measure%2A> wywołanie, system układ określa wymagań rozmiar elementu za pomocą podanego <xref:System.Windows.Size> (`availableSize`) argumentu.</span><span class="sxs-lookup"><span data-stu-id="5e656-239">During the <xref:System.Windows.UIElement.Measure%2A> call, the layout system determines an element's size requirements using a provided <xref:System.Windows.Size> (`availableSize`) argument.</span></span> <span data-ttu-id="5e656-240">Podczas <xref:System.Windows.UIElement.Arrange%2A> wywołanie, system układu Kończenie znajdujących się rozmiar i położenie elementu obwiedni.</span><span class="sxs-lookup"><span data-stu-id="5e656-240">During the <xref:System.Windows.UIElement.Arrange%2A> call, the layout system finalizes the size and position of an element's bounding box.</span></span>  <span data-ttu-id="5e656-241">Aby uzyskać więcej informacji, zobacz [układu](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-241">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 <span data-ttu-id="5e656-242">`availableSize` może być dowolna liczba od 0 do nieskończoności.</span><span class="sxs-lookup"><span data-stu-id="5e656-242">`availableSize` can be any number from zero to infinity.</span></span> <span data-ttu-id="5e656-243">Elementy, aby określić Zwróć minimum <xref:System.Windows.Size> wymagają za pośrednictwem `availableSize` parametru.</span><span class="sxs-lookup"><span data-stu-id="5e656-243">Elements to be laid out return the minimum <xref:System.Windows.Size> they require through the `availableSize` parameter.</span></span>  
  
 <span data-ttu-id="5e656-244">W przypadku wystąpienia układ zawsze odbierze <xref:System.Windows.UIElement.Measure%2A> wywołać przed <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-244">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="5e656-245">Po pierwszym przebiegu układu go otrzymać <xref:System.Windows.UIElement.Arrange%2A> wywołania bez <xref:System.Windows.UIElement.Measure%2A>; może się to zdarzyć, gdy właściwość, która wpływa tylko na <xref:System.Windows.UIElement.Arrange%2A> zmianie (na przykład wyrównanie), lub gdy odbierze nadrzędnego <xref:System.Windows.UIElement.Arrange%2A> bez <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-245">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="5e656-246">A <xref:System.Windows.UIElement.Measure%2A> wywołania automatycznie spowoduje unieważnienie <xref:System.Windows.UIElement.Arrange%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="5e656-246">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="5e656-247">Aktualizacje układu są zazwyczaj wykonywane asynchronicznie (w czasie określany przez system układ).</span><span class="sxs-lookup"><span data-stu-id="5e656-247">Layout updates generally occur asynchronously (at a time determined by the layout system).</span></span> <span data-ttu-id="5e656-248">Element natychmiast nie uwzględnia zmiany właściwości, które mają wpływ na rozmiar elementu (takie jak <xref:System.Windows.FrameworkElement.Width%2A>).</span><span class="sxs-lookup"><span data-stu-id="5e656-248">An element might not immediately reflect changes to properties that affect element sizing (such as <xref:System.Windows.FrameworkElement.Width%2A>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e656-249">Aktualizacje układu można wymusić za pomocą <xref:System.Windows.UIElement.UpdateLayout%2A> metody; jednak wywołanie tej funkcji nie jest zalecane, zazwyczaj zbędne i może powodować pogorszenie wydajności.</span><span class="sxs-lookup"><span data-stu-id="5e656-249">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method; however, calling this function is not recommended, as it is usually unnecessary and can cause poor performance.</span></span> <span data-ttu-id="5e656-250">W wielu sytuacjach, gdy wywołanie <xref:System.Windows.UIElement.UpdateLayout%2A> może być dobrym rozwiązaniem, system układu prawdopodobnie będzie przetwarzania aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-250">In many situations where calling <xref:System.Windows.UIElement.UpdateLayout%2A> might be appropriate, the layout system will probably already be processing updates.</span></span> <span data-ttu-id="5e656-251">Układ systemu może przetwarzać zmiany układu w taki sposób, który można zoptymalizować wszystkie niezbędne aktualizacje w ramach pakietu.</span><span class="sxs-lookup"><span data-stu-id="5e656-251">The layout system can process layout changes in a manner that can optimize all necessary updates as part of a package.</span></span>  
  
 <span data-ttu-id="5e656-252">System układu utrzymuje dwa oddzielne kolejek nieprawidłowy układów, jeden dla <xref:System.Windows.UIElement.Measure%2A> i jeden dla <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-252">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="5e656-253">Kolejki układu są sortowane według na kolejność elementów w drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="5e656-253">The layout queue is sorted based upon the order of elements in the visual tree.</span></span> <span data-ttu-id="5e656-254">Elementy wyżej w drzewie znajdowały się u góry kolejki, aby uniknąć nadmiarowe układów spowodowany przez powtarzające zmiany elementów nadrzędnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-254">Elements higher in the tree are at the top of the queue, in order to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="5e656-255">Zduplikowane pozycje są automatycznie usuwane z kolejki, a elementy są automatycznie usuwane z kolejki, jeśli są one już prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="5e656-255">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already valid.</span></span>  
  
 <span data-ttu-id="5e656-256">Podczas aktualizowania układ <xref:System.Windows.UIElement.Measure%2A> kolejki jest opróżniany najpierw, a następnie <xref:System.Windows.UIElement.Arrange%2A> kolejki.</span><span class="sxs-lookup"><span data-stu-id="5e656-256">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="5e656-257">Element <xref:System.Windows.UIElement.Arrange%2A> kolejki nigdy nie będzie ułożone, jeśli jest elementem <xref:System.Windows.UIElement.Measure%2A> kolejki.</span><span class="sxs-lookup"><span data-stu-id="5e656-257">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeCore">
      <MemberSignature Language="C#" Value="protected virtual void ArrangeCore (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ArrangeCore(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ArrangeCore (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ArrangeCore(System::Windows::Rect finalRect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect"><span data-ttu-id="5e656-258">Końcowe obszaru nadrzędnym tego elementu należy używać ułożyć się i jego elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-258">The final area within the parent that element should use to arrange itself and its child elements.</span></span></param>
        <summary><span data-ttu-id="5e656-259">Określa szablon dla poziomu core WPF Rozmieść definicji układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-259">Defines the template for WPF core-level arrange layout definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5e656-260">Przesłaniania tej metody jest tylko jeśli są wyprowadzanie na poziomie core WPF i nie używasz systemu układu poziomie struktury WPF i <xref:System.Windows.FrameworkElement> pochodnej klasy, ponieważ <xref:System.Windows.FrameworkElement> zamknięcia <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-260">Overriding this method is only appropriate if you are deriving at the WPF core-level, and you are not using the WPF framework-level layout system and <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span> <span data-ttu-id="5e656-261">Jeśli używasz systemu układu poziomie struktury WPF odpowiedniej metody do zastąpienia specyficzne układu Rozmieść zachowanie jest <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-261">If you are using the WPF framework-level layout system, the appropriate method to override for class-specific layout arrange behavior is <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-262"><xref:System.Windows.UIElement.ArrangeCore%2A> implementacje powinny wywoływać implementację podstawową, aby przywrócić rozmiar, następnie wywołaj <xref:System.Windows.UIElement.Arrange%2A> metody każdego elementu podrzędnego widoczne i uzgodnienia rozmiary zwrócony przez te <xref:System.Windows.UIElement.Arrange%2A> wywołania z rozmiarem implementacji podstawowej.</span><span class="sxs-lookup"><span data-stu-id="5e656-262"><xref:System.Windows.UIElement.ArrangeCore%2A> implementations should call the base implementation to return a size, then call the <xref:System.Windows.UIElement.Arrange%2A> method of each visible child element, and reconcile the sizes returned by these <xref:System.Windows.UIElement.Arrange%2A> calls with the size of the base implementation.</span></span> <span data-ttu-id="5e656-263">Logikę aspekt uzgadniania <xref:System.Windows.UIElement.ArrangeCore%2A> implementacja może się różnić w zależności od właściwości układu danego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-263">The logic for the reconciliation aspect of a <xref:System.Windows.UIElement.ArrangeCore%2A> implementation might vary, depending on the layout characteristics of your element.</span></span> <span data-ttu-id="5e656-264">W poniższym przykładowym szablonie `VisualChildren` jest właściwością hipotetyczny zdefiniować nazwę elementu aby wyliczyć zawartością; <xref:System.Windows.UIElement> nie zdefiniowano zawartości kolekcji na tym poziomie różni się zawartości zachowania do elementów pochodnych, takich jak kontrolek lub klasy podstawowej formantów WPF architektura poziomie struktury.</span><span class="sxs-lookup"><span data-stu-id="5e656-264">In the following example template, `VisualChildren` is a hypothetical property that your element might define to help enumerate its content; <xref:System.Windows.UIElement> does not define content collections at this level, the WPF framework-level architecture defers content behavior to derived elements such as specific controls or control base classes.</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementarrangeoverride)]
 [!code-vb[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementarrangeoverride)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5e656-265">Jeśli tworzysz elementów na poziomie core WPF powinny zastępować to metodę, aby nadać unikatową nazwę elementu core poziomie WPF rozmieszczanie zachowanie układu, lub aby układu odpowiednie decyzje dotyczące elementy podrzędne elementy.</span><span class="sxs-lookup"><span data-stu-id="5e656-265">If you are developing elements at the WPF core level,you should override this method to give your WPF core-level element a unique arrange layout behavior, or to make proper layout decisions about the child elements of your elements.</span></span> <span data-ttu-id="5e656-266">Zastąpienie może być konieczne, jeśli te elementy podrzędne nie są takie jak rozpoznawalną ze zdefiniowanych wzorzec <see cref="T:System.Windows.Controls.ItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-266">An override might be necessary if those child elements are not recognizable from a defined pattern such as an <see cref="T:System.Windows.Controls.ItemCollection" />.</span></span>  
  
 <span data-ttu-id="5e656-267">Element nadrzędny, należy wywołać określonej klasy <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> dla każdego elementu podrzędnego w przeciwnym razie te elementy podrzędne nie są renderowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-267">A parent element must call the class-specific <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on each child element, otherwise those child elements are not rendered.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e656-268">Uruchamia animacji dla określonej właściwości animacji w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-268">Starts an animation for a specified animated property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="5e656-269">Właściwość animacji, które jest określone jako identyfikatora właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-269">The property to animate, which is specified as a dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="5e656-270">Oś czasu animacji, aby rozpocząć.</span><span class="sxs-lookup"><span data-stu-id="5e656-270">The timeline of the animation to start.</span></span></param>
        <summary><span data-ttu-id="5e656-271">Uruchamia animacji dla określonej właściwości animacji w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-271">Starts an animation for a specified animated property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-272">Podczas sprawdzania, czy właściwość jest animowany, Zauważ, że animacja rozpocznie się i można je było uważać animowany podczas renderowania pierwszej ramki poza — animowane punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="5e656-272">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="5e656-273">Jeśli <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> dla `animation` jest `null`, zostaną usunięte wszystkie bieżące animacji i bieżącą wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="5e656-273">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="5e656-274">Jeśli cały `animation` wartość jest `null`, wszystkie animacje są usuwane z właściwości i wartość właściwości zostanie przywrócony do jego wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="5e656-274">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="5e656-275">Jednak na osi czasu pierwotnie skojarzone animacji nie został on zatrzymany.</span><span class="sxs-lookup"><span data-stu-id="5e656-275">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="5e656-276">Inne animacje przypisane do tej osi czasu będzie nadal działać.</span><span class="sxs-lookup"><span data-stu-id="5e656-276">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-277">Poniższy przykład tworzy animacji, przypisuje go, a następnie wywołuje <xref:System.Windows.UIElement.BeginAnimation%2A> ją uruchomić.</span><span class="sxs-lookup"><span data-stu-id="5e656-277">The following example creates an animation, assigns it, and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> to start it.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#beginanimation)]
 [!code-vb[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#beginanimation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="5e656-278">Właściwość animacji, które jest określone jako identyfikatora właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-278">The property to animate, which is specified as the dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="5e656-279">Oś czasu animacji, które mają być stosowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-279">The timeline of the animation to be applied.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="5e656-280">Wartość wyliczenia, która określa, jak nowy animacji współdziała z dowolnego animacji bieżącego (uruchamianie), które już wpływu na wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-280">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="5e656-281">Rozpoczyna się przez animację określonych dla określonej właściwości animacji w tym elemencie z opcją określenia co się stanie, jeśli właściwość została już uruchomiona Animacja.</span><span class="sxs-lookup"><span data-stu-id="5e656-281">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-282">Podczas sprawdzania, czy właściwość jest animowany, Zauważ, że animacja rozpocznie się i można je było uważać animowany podczas renderowania pierwszej ramki poza — animowane punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="5e656-282">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="5e656-283">Jeśli <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> dla `animation` jest `null`, zostaną usunięte wszystkie bieżące animacji i bieżącą wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="5e656-283">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="5e656-284">Jeśli cały `animation` wartość jest `null`, wszystkie animacje są usuwane z właściwości i wartość właściwości zostanie przywrócony do jego wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="5e656-284">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="5e656-285">Jednak na osi czasu pierwotnie skojarzone animacji nie został on zatrzymany.</span><span class="sxs-lookup"><span data-stu-id="5e656-285">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="5e656-286">Inne animacje przypisane do tej osi czasu będzie nadal działać.</span><span class="sxs-lookup"><span data-stu-id="5e656-286">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-287">Poniższy przykład zawiera implementację programu obsługi, który uzyskuje dostęp do istniejących animacji z zasobu, a następnie wywołania <xref:System.Windows.UIElement.BeginAnimation%2A> za pomocą zachowań przekazaniem określony.</span><span class="sxs-lookup"><span data-stu-id="5e656-287">The following example implements a handler that obtains an existing animation from a resource and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> with a specified handoff behavior.</span></span>  
  
 [!code-csharp[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesIntroduction/CSharp/SampleViewer.xaml.cs#beginanimationhandoff)]
 [!code-vb[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesIntroduction/visualbasic/sampleviewer.xaml.vb#beginanimationhandoff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect BitmapEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffect BitmapEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffect As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffect ^ BitmapEffect { System::Windows::Media::Effects::BitmapEffect ^ get(); void set(System::Windows::Media::Effects::BitmapEffect ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-288">Pobiera lub ustawia efekt mapy bitowej stosowany bezpośrednio do renderowanej zawartości dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-288">Gets or sets a bitmap effect that applies directly to the rendered content for this element.</span></span>  <span data-ttu-id="5e656-289">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-289">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="5e656-290">Efekt mapy bitowej do zastosowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-290">The bitmap effect to apply.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-291"><xref:System.Windows.Media.Effects.BitmapEffect> w związku z tym jest typem abstrakcyjnym [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] zaimplementowanego klasy pochodnej wymaga użycia <xref:System.Windows.Media.Effects.BitmapEffect>, takich jak <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="5e656-291"><xref:System.Windows.Media.Effects.BitmapEffect> is an abstract type, therefore the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage requires an implemented derived class of <xref:System.Windows.Media.Effects.BitmapEffect>, such as <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span></span> <span data-ttu-id="5e656-292">Uwaga jedną zaimplementowana klasie pochodnej jest typ kolekcji, który można określić więcej niż jeden sekwencyjnych <xref:System.Windows.Media.Effects.BitmapEffect>, przy użyciu składni tagów zagnieżdżonych.</span><span class="sxs-lookup"><span data-stu-id="5e656-292">Note that one implemented derived class is a collection type that allows you to specify more than one sequential <xref:System.Windows.Media.Effects.BitmapEffect>, using a nested tag syntax.</span></span>  
  
 <span data-ttu-id="5e656-293">Nie istniejących pochodnej klasy <xref:System.Windows.Media.Effects.BitmapEffect> obsługuje konwertera typów, więc [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] składnia używana dla tej właściwości jest zazwyczaj składni elementu właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-293">No existing derived class of <xref:System.Windows.Media.Effects.BitmapEffect> supports a type converter, so the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax that you use for this property is generally property element syntax.</span></span>  
  
<a name="dependencyPropertyInfo_BitmapEffect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-294">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-294">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-295">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-295">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectProperty>|  
|<span data-ttu-id="5e656-296">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-296">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-297">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-297">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-298">Poniższy przykład przedstawia mapy bitowej efektu, przy użyciu <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="5e656-298">The following example sets a bitmap effect, using <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span></span>  
  
 [!code-csharp[EffectsGallery_snip#CodeBehindBlurCodeBehindExampleInline](~/samples/snippets/csharp/VS_Snippets_Wpf/EffectsGallery_snip/CSharp/blurcodebehindexample.xaml.cs#codebehindblurcodebehindexampleinline)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffectInput" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffectInput As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffectInput ^ BitmapEffectInput { System::Windows::Media::Effects::BitmapEffectInput ^ get(); void set(System::Windows::Media::Effects::BitmapEffectInput ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-299">Pobiera lub ustawia źródło wejścia dla efektu mapy bitowej stosowany bezpośrednio do renderowanej zawartości dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-299">Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.</span></span>  <span data-ttu-id="5e656-300">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-300">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="5e656-301">Źródło przez efekty mapy bitowej.</span><span class="sxs-lookup"><span data-stu-id="5e656-301">The source for bitmap effects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BitmapEffectInput"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-302">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-302">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-303">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-303">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectInputProperty>|  
|<span data-ttu-id="5e656-304">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-304">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-305">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-305">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInputProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectInputProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectInputProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectInputProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectInputProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-306">Identyfikuje <see cref="P:System.Windows.UIElement.BitmapEffectInput" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-306">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffectInput" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-307">Identyfikuje <see cref="P:System.Windows.UIElement.BitmapEffect" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-307">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffect" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CacheMode CacheMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CacheMode CacheMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CacheMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheMode As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CacheMode ^ CacheMode { System::Windows::Media::CacheMode ^ get(); void set(System::Windows::Media::CacheMode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-308">Pobiera lub ustawia buforowane reprezentację <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-308">Gets or sets a cached representation of the <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <value><span data-ttu-id="5e656-309">A <see cref="T:System.Windows.Media.CacheMode" /> przechowuje buforowane reprezentację <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-309">A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.UIElement" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-310">Ustaw <xref:System.Windows.UIElement.CacheMode%2A> właściwości, gdy potrzebne w celu zwiększenia wydajności dla zawartości, która jest czasochłonne do renderowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-310">Set the <xref:System.Windows.UIElement.CacheMode%2A> property when you need to increase performance for content that is time consuming to render.</span></span> <span data-ttu-id="5e656-311">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Media.BitmapCache>.</span><span class="sxs-lookup"><span data-stu-id="5e656-311">For more information, see <xref:System.Windows.Media.BitmapCache>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.CacheMode" />
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="CacheModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CacheModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CacheModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.CacheModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CacheModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CacheModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-312">Identyfikuje <see cref="P:System.Windows.UIElement.CacheMode" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-312">Identifies the <see cref="P:System.Windows.UIElement.CacheMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-313">Próbuje wymusić przechwytywanie myszy do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-313">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns>
          <span data-ttu-id="5e656-314"><see langword="true" /> Jeśli pomyślnie przechwyceniu myszy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-314"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-315">Można przechwycić elementu musi być włączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-315">To be captured, an element must be enabled.</span></span> <span data-ttu-id="5e656-316">Sprawdź, czy <xref:System.Windows.UIElement.IsEnabled%2A> jest `true` przed wywołaniem <xref:System.Windows.UIElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-316">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.UIElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="5e656-317">Jeśli wywołanie <xref:System.Windows.UIElement.CaptureMouse%2A> zwraca `true`, następnie <xref:System.Windows.UIElement.IsMouseCaptured%2A> jest również `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-317">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.UIElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="5e656-318">Jeśli wywołanie <xref:System.Windows.UIElement.CaptureMouse%2A> zwraca `true`, a następnie <xref:System.Windows.UIElement.GotMouseCapture> i <xref:System.Windows.UIElement.IsMouseCapturedChanged> zdarzenia są generowane, z <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> zdarzeń dane raportowane jako element gdzie <xref:System.Windows.UIElement.CaptureMouse%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="5e656-318">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.UIElement.GotMouseCapture> and <xref:System.Windows.UIElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.UIElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="5e656-319">Jeśli wymusisz przechwytywania może zakłócać Przechwytywanie istniejących — szczególnie w przypadku przechwytywania, które dotyczą przeciągania i upuszczania za pomocą myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-319">If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="5e656-320">Aby wyczyścić przechwytywanie myszy wszystkich elementów, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> z `element` podać jako parametr `null`.</span><span class="sxs-lookup"><span data-stu-id="5e656-320">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-321">W poniższym przykładzie implementuje parę obsługi myszy i kombinacja wejściowego, które przechwytywania (i uncapture) myszy i włączyć specjalne myszy trybu wyświetlania modelu 3D.</span><span class="sxs-lookup"><span data-stu-id="5e656-321">The following example implements a pair of handlers for mouse and key input combination that capture (and uncapture) the mouse and enable a special mouse mode for viewing a 3D model.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-322">Próbuje wymusić Przechwytywanie pióra do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-322">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns>
          <span data-ttu-id="5e656-323"><see langword="true" /> Jeśli pomyślnie przechwycenia pióra; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-323"><see langword="true" /> if the stylus was successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-324">Domyślna implementacja oparte na podstawowym domyślnego urządzenia pióro zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-324">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="5e656-325">Jednak jeśli rozszerzania wejściowych urządzeń, które implementacji urządzenia system wejściowy jest można tworzyć system pióro alternatywną implementację urządzenia, która może zwracać różne wyniki.</span><span class="sxs-lookup"><span data-stu-id="5e656-325">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="5e656-326">Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, gdy pióro znajduje się poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="5e656-326">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="5e656-327">Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-327">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="5e656-328">Wywołanie tej metody wymaga podstawowej statycznych <xref:System.Windows.Input.Stylus> metody <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-328">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="5e656-329">Zachowanie rzeczywistych przechwytywania jest implementowany przez pióro active implementacji urządzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-329">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="5e656-330">Można przechwycić elementu musi być włączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-330">To be captured, an element must be enabled.</span></span> <span data-ttu-id="5e656-331">Sprawdź, czy <xref:System.Windows.UIElement.IsEnabled%2A> jest `true` zwrócić przed wywołaniem <xref:System.Windows.UIElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-331">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.UIElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="5e656-332">Jeśli wywołanie <xref:System.Windows.UIElement.CaptureStylus%2A> zwraca `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> jest również `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-332">If calling <xref:System.Windows.UIElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="5e656-333">Urządzenie do przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="5e656-333">The device to capture.</span></span></param>
        <summary><span data-ttu-id="5e656-334">Próbuje wymusić przechwytywania touch do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-334">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns>
          <span data-ttu-id="5e656-335"><see langword="true" /> Jeśli określona touch są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-335"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-336"><xref:System.Windows.UIElement.CaptureTouch%2A> Zwraca `false` Jeśli <xref:System.Windows.Input.TouchDevice> aktualnie przechwycony do innego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-336"><xref:System.Windows.UIElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="5e656-337">Jeśli <xref:System.Windows.UIElement.CaptureTouch%2A> zwraca `true`, a następnie <xref:System.Windows.UIElement.GotTouchCapture> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-337">If <xref:System.Windows.UIElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.UIElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="5e656-338">Aby zwolnić przechwytywania jednym naciśnięciem przycisku z tego elementu, użyj <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> — metoda i określ urządzeń dotykowych do zwolnienia.</span><span class="sxs-lookup"><span data-stu-id="5e656-338">To release capture of a single touch from this element, use the <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="5e656-339">Aby zwolnić wszystkie poprawki z tego elementu, użyj <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="5e656-339">To release all touches from this element, use the <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5e656-340"><paramref name="touchDevice" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-340"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry Clip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Property Clip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Geometry ^ Clip { System::Windows::Media::Geometry ^ get(); void set(System::Windows::Media::Geometry ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-341">Pobiera lub ustawia geometrię użytą do zdefiniowania konturu zawartości elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-341">Gets or sets the geometry used to define the outline of the contents of an element.</span></span>  <span data-ttu-id="5e656-342">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-342">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="5e656-343">Geometria służący do zmiany rozmiaru obszaru przycinania.</span><span class="sxs-lookup"><span data-stu-id="5e656-343">The geometry to be used for clipping area sizing.</span></span> <span data-ttu-id="5e656-344">Wartość domyślna to null <see cref="T:System.Windows.Media.Geometry" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-344">The default is a null <see cref="T:System.Windows.Media.Geometry" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-345">Elementy poza geometrii zostaną graficznie przycięte w renderowanym układzie.</span><span class="sxs-lookup"><span data-stu-id="5e656-345">Elements outside the geometry will be visually clipped in the rendered layout.</span></span> <span data-ttu-id="5e656-346">Geometria nie ma być prostokątne.</span><span class="sxs-lookup"><span data-stu-id="5e656-346">The geometry does not have to be rectangular.</span></span>  
  
<a name="dependencyPropertyInfo_Clip"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-347">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-347">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-348">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-348">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipProperty>|  
|<span data-ttu-id="5e656-349">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-349">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-350">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-350">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-351">W tym przykładzie pokazano sposób definiowania elementu framework <xref:System.Windows.UIElement.Clip%2A> regionu.</span><span class="sxs-lookup"><span data-stu-id="5e656-351">This example shows how to define a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="5e656-352">Aby zdefiniować klip, należy użyć <xref:System.Windows.Media.Geometry> (na przykład <xref:System.Windows.Media.EllipseGeometry> można ustawić elementu <xref:System.Windows.UIElement.Clip%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-352">To define a clip, use a <xref:System.Windows.Media.Geometry> (for example, an <xref:System.Windows.Media.EllipseGeometry> to set the element's <xref:System.Windows.UIElement.Clip%2A> property.</span></span> <span data-ttu-id="5e656-353">Tylko obszar, który znajduje się w regionie geometrii będą widoczne.</span><span class="sxs-lookup"><span data-stu-id="5e656-353">Only the area that is within the region of the geometry will be visible.</span></span>  
  
 <span data-ttu-id="5e656-354">W poniższym przykładzie przedstawiono <xref:System.Windows.Controls.Image> bez zdefiniowanym obszarem przycinania.</span><span class="sxs-lookup"><span data-stu-id="5e656-354">The following example shows an <xref:System.Windows.Controls.Image> element without a defined clip region.</span></span> <span data-ttu-id="5e656-355">Ponieważ nie została zdefiniowana nie obszar przycinania całego obrazu jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="5e656-355">Because no clip region is defined, the entire image is displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#2)]  
  
 <span data-ttu-id="5e656-356">![Obiekt przed zastosowaniem obszar przycinania](~/add/media/mil-task-clip-region-noclip.png "obiektu przed zastosowaniem obszar przycinania")</span><span class="sxs-lookup"><span data-stu-id="5e656-356">![An object before applying a clip region](~/add/media/mil-task-clip-region-noclip.png "An object before applying a clip region")</span></span>  
<span data-ttu-id="5e656-357">Obraz o nie obszar przycinania</span><span class="sxs-lookup"><span data-stu-id="5e656-357">Image with No Clip Region</span></span>  
  
 <span data-ttu-id="5e656-358">W następnym przykładzie tworzona jest identyczne obrazu, z wyjątkiem, że ma ona zdefiniowanym obszarem przycinania.</span><span class="sxs-lookup"><span data-stu-id="5e656-358">In the next example, an identical Image is created, except that it has a defined clip region.</span></span> <span data-ttu-id="5e656-359">Tylko część obrazu, który znajduje się w obszarze <xref:System.Windows.Media.EllipseGeometry> będą wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="5e656-359">Only the part of the image that is within the area the <xref:System.Windows.Media.EllipseGeometry> will be displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#4)]  
  
 <span data-ttu-id="5e656-360">![Przycięty obiekt](~/add/media/mil-task-clip-region-ellispe.PNG "przycięty obiekt")</span><span class="sxs-lookup"><span data-stu-id="5e656-360">![A clipped object](~/add/media/mil-task-clip-region-ellispe.PNG "A clipped object")</span></span>  
<span data-ttu-id="5e656-361">Obraz o obszar przycinania eliptycznej</span><span class="sxs-lookup"><span data-stu-id="5e656-361">Image with an Elliptical Clip Region</span></span>  
  
 <span data-ttu-id="5e656-362">W poniższym przykładzie przedstawiono sposób Animacja framework elementu <xref:System.Windows.UIElement.Clip%2A> regionu.</span><span class="sxs-lookup"><span data-stu-id="5e656-362">The following example shows how animate a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="5e656-363">W tym przykładzie <xref:System.Windows.Media.EllipseGeometry> służy do definiowania obszar przycinania eliptycznej dla <xref:System.Windows.Controls.Image> elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-363">In this example, an <xref:System.Windows.Media.EllipseGeometry> is used to define an elliptical clip region for an <xref:System.Windows.Controls.Image> element.</span></span> <span data-ttu-id="5e656-364">A <xref:System.Windows.Media.Animation.PointAnimation> animuje geometrii elipsy <xref:System.Windows.Media.EllipseGeometry.Center%2A> właściwość z (0, 0) do (200, 150).</span><span class="sxs-lookup"><span data-stu-id="5e656-364">A <xref:System.Windows.Media.Animation.PointAnimation> animates the ellipse geometry's <xref:System.Windows.Media.EllipseGeometry.Center%2A> property from (0, 0) to (200, 150).</span></span> <span data-ttu-id="5e656-365">Odtwarzanie po obraz został załadowany i nieskończoność jest powtarzany rozpoczyna się animacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-365">The animation starts playing after the image is loaded and repeats indefinitely.</span></span>  
  
 [!code-xaml[ClipPathExample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#5)]  
  
 <span data-ttu-id="5e656-366">Aby uzyskać pełny przykład, zobacz [próbki Region klip](http://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span><span class="sxs-lookup"><span data-stu-id="5e656-366">For the full sample, see the [Clip Region Sample](http://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
      </Docs>
    </Member>
    <Member MemberName="ClipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-367">Identyfikuje <see cref="P:System.Windows.UIElement.Clip" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-367">Identifies the <see cref="P:System.Windows.UIElement.Clip" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipToBounds">
      <MemberSignature Language="C#" Value="public bool ClipToBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClipToBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.ClipToBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipToBounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ClipToBounds { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-368">Pobiera lub ustawia wartość wskazującą, czy należy przyciąć zawartość tego elementu (lub zawartość pochodzącą z elementów podrzędnych tego elementu) w celu dopasowania do rozmiarów elementu zawierającego.</span><span class="sxs-lookup"><span data-stu-id="5e656-368">Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.</span></span>   <span data-ttu-id="5e656-369">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-369">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-370"><see langword="true" /> Jeśli zawartość powinna zostać obcięty; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-370"><see langword="true" /> if the content should be clipped; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-371">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-371">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-372">Dla elementów podrzędnych <xref:System.Windows.UIElement.ClipToBounds%2A> ma inny wpływ na układ zachowania w zależności od tego, czy wysokość i szerokość elementu nadrzędnego są określane przez <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> lub <xref:System.Windows.FrameworkElement.MaxHeight%2A>  /  <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-372">For child elements, <xref:System.Windows.UIElement.ClipToBounds%2A> has different effects on layout behaviors depending on whether the height and width of the parent element are being determined by <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span> <span data-ttu-id="5e656-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> elementu nadrzędnego zawsze są przestrzegane niezależnie od wartości <xref:System.Windows.UIElement.ClipToBounds%2A> i skuteczne wycinka zawsze będzie przyciąć zawartość oparte na tych maksymalne wartości.</span><span class="sxs-lookup"><span data-stu-id="5e656-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> of the parent element are always respected regardless of the value of <xref:System.Windows.UIElement.ClipToBounds%2A> and the effective clipping will always clip the content based on these maximums.</span></span> <span data-ttu-id="5e656-374">Element nadrzędny <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> ustawienia nie będą przyciąć zawartość podczas <xref:System.Windows.UIElement.ClipToBounds%2A> jest `false`, ale będzie obcina zawartości if <xref:System.Windows.UIElement.ClipToBounds%2A> jest `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-374">The parent's <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> settings will not clip the content when <xref:System.Windows.UIElement.ClipToBounds%2A> is `false`, but will clip the content if <xref:System.Windows.UIElement.ClipToBounds%2A> is `true`.</span></span>  
  
 <span data-ttu-id="5e656-375">Należy pamiętać, że przyjęty `false` jest ogólne działanie, zgodnie z implementacją w <xref:System.Windows.UIElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-375">Note that defaulting to `false` is the general behavior as implemented in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="5e656-376">Istnieje możliwość dla danego elementu, która jest pochodną <xref:System.Windows.UIElement> na zastępowanie metadanych właściwości zależności dla tej właściwości, w tym wystąpieniu domyślnie `true` zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="5e656-376">It is possible for any given element that derives from <xref:System.Windows.UIElement> to override the dependency property metadata for this property in that instance to default to `true` instead.</span></span> <span data-ttu-id="5e656-377">Kilka istniejących klas pochodnych zastąpić te metadane i/lub Dostosuj wartość domyślna właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-377">Several existing derived classes override this metadata and/or adjust the dependency property default value.</span></span>  
  
 <span data-ttu-id="5e656-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, i <xref:System.Windows.Controls.Primitives.Popup> każdego zastąpić wartość domyślna ma być `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.Popup> each override the default value to be `true`.</span></span>  
  
 <span data-ttu-id="5e656-379"><xref:System.Windows.FrameworkElement> zastępuje metadane dla tej właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-379"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property.</span></span> <span data-ttu-id="5e656-380">W szczególności <xref:System.Windows.FrameworkElement> wyznacza tę właściwość, aby umożliwić dziedziczenie wartość właściwości (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> jest `true` w metadanych).</span><span class="sxs-lookup"><span data-stu-id="5e656-380">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="5e656-381">Dziedziczenie wartości właściwości w tym kontekście oznacza, że istnieją elementy podrzędne z ma inne wartości <xref:System.Windows.UIElement.ClipToBounds%2A> przypisany za pomocą wartości lokalnej lub style, wartość najbliższym elemencie nadrzędnym z wartością przypisane (ponownie, albo w stylach domyślnie wartości, lub wartość lokalnie), a następnie będzie można przypisać wartości z elementu nadrzędnego do wszystkich elementów podrzędnych nieprzypisane przez system właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-381">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.ClipToBounds%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a locally value), then the value from the parent element will be assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="5e656-382">W praktyce oznacza to, czy zezwalać klip granice elementu głównego można określić, czy że wartości zostaną przeniesione na wszystkie elementy podrzędne, które mają nie zostały przypisane go jako `false`.</span><span class="sxs-lookup"><span data-stu-id="5e656-382">In practice this means that you can specify whether to allow clip to bounds at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_ClipToBounds"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-383">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-383">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-384">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-384">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipToBoundsProperty>|  
|<span data-ttu-id="5e656-385">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-385">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-386">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-386">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Clip" />
      </Docs>
    </Member>
    <Member MemberName="ClipToBoundsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipToBoundsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipToBoundsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipToBoundsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipToBoundsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-387">Identyfikuje <see cref="P:System.Windows.UIElement.ClipToBounds" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-387">Identifies the <see cref="P:System.Windows.UIElement.ClipToBounds" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-388">Pobiera kolekcję <see cref="T:System.Windows.Input.CommandBinding" /> obiekty skojarzone z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-388">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects associated with this element.</span></span> <span data-ttu-id="5e656-389">A <see cref="T:System.Windows.Input.CommandBinding" /> umożliwia obsługę dla tego elementu oraz deklaruje powiązanie między poleceniem, jego zdarzeń i procedurami obsługi dołączonymi przez ten element.</span><span class="sxs-lookup"><span data-stu-id="5e656-389">A <see cref="T:System.Windows.Input.CommandBinding" /> enables command handling for this element, and declares the linkage between a command, its events, and the handlers attached by this element.</span></span></summary>
        <value><span data-ttu-id="5e656-390">Kolekcja wszystkich <see cref="T:System.Windows.Input.CommandBinding" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="5e656-390">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-391">Inny typowy sposób wypełnienia <xref:System.Windows.UIElement.CommandBindings%2A> kolekcji jest użycie <xref:System.Windows.Input.CommandManager> metody programowo.</span><span class="sxs-lookup"><span data-stu-id="5e656-391">Another typical way to populate the <xref:System.Windows.UIElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="5e656-392">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="5e656-392">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  
  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5e656-393">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="5e656-393">XAML Values</span></span>  
 <span data-ttu-id="5e656-394">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="5e656-394">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="5e656-395">Co najmniej jeden <xref:System.Windows.Input.CommandBinding> elementów.</span><span class="sxs-lookup"><span data-stu-id="5e656-395">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="5e656-396">Każdy z nich powinien mieć <xref:System.Windows.Input.CommandBinding.Command%2A> atrybut ustawioną znanych poleceń i ustawić atrybuty dla <xref:System.Windows.Input.CommandBinding.CanExecute> i <xref:System.Windows.Input.CommandBinding.Executed> implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-396">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="5e656-397">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="5e656-397">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-398">W poniższym przykładzie dodano <xref:System.Windows.Input.CommandBinding> do okna przy użyciu znaczników.</span><span class="sxs-lookup"><span data-stu-id="5e656-398">The following example adds a <xref:System.Windows.Input.CommandBinding> to a window using markup.</span></span> <span data-ttu-id="5e656-399">Należy pamiętać, że w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.Input.CommandBindingCollection> nie został zadeklarowany w znaczniku jako elementu; obiekt kolekcji jest wywnioskowany według typu, który pobiera właściwości i wypełnić element właściwości z co najmniej jednym <xref:System.Windows.Input.CommandBinding> elementy:</span><span class="sxs-lookup"><span data-stu-id="5e656-399">Note that in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the <xref:System.Windows.Input.CommandBindingCollection> is not declared in the markup as an element; the collection object is inferred by the type that the property takes, and you populate the property element with one or more <xref:System.Windows.Input.CommandBinding> elements:</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 <span data-ttu-id="5e656-400">Aby uzyskać więcej informacji na temat [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] składni dla kolekcji, zobacz [szczegółów w składni języka XAML](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-400">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 <span data-ttu-id="5e656-401">Poniższy przykład jest zasadniczo samo w kodzie:</span><span class="sxs-lookup"><span data-stu-id="5e656-401">The following example does essentially the same thing in code:</span></span>  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesiredSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size DesiredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size DesiredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.DesiredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size DesiredSize { System::Windows::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-402">Pobiera rozmiar tego elementu jest obliczana podczas przebiegu miary procesu układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-402">Gets the size that this element computed during the measure pass of the layout process.</span></span></summary>
        <value><span data-ttu-id="5e656-403">Obliczona rozmiarze, który będzie wymagany rozmiar przebiegu Rozmieść.</span><span class="sxs-lookup"><span data-stu-id="5e656-403">The computed size, which becomes the desired size for the arrange pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-404">Wartość zwrócona przez tę właściwość tylko będzie nieprawidłowa, jeśli wartość <xref:System.Windows.UIElement.IsMeasureValid%2A> jest właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-404">The value returned by this property will only be a valid measurement if the value of the <xref:System.Windows.UIElement.IsMeasureValid%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="5e656-405"><xref:System.Windows.UIElement.DesiredSize%2A> jest zazwyczaj sprawdzana zgodnie z jednym z czynników miar implementowania zachowanie układu zastępuje takich jak <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, lub <xref:System.Windows.UIElement.OnRender%2A> (w <xref:System.Windows.UIElement.OnRender%2A> wielkość liter, może sprawdzić <xref:System.Windows.UIElement.RenderSize%2A> zamiast tego, ale zależy od użytkownika Implementacja).</span><span class="sxs-lookup"><span data-stu-id="5e656-405"><xref:System.Windows.UIElement.DesiredSize%2A> is typically checked as one of the measurement factors when you implement layout behavior overrides such as <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, or <xref:System.Windows.UIElement.OnRender%2A> (in the <xref:System.Windows.UIElement.OnRender%2A> case, you might check <xref:System.Windows.UIElement.RenderSize%2A> instead, but this depends on your implementation).</span></span> <span data-ttu-id="5e656-406">W zależności od scenariusza <xref:System.Windows.UIElement.DesiredSize%2A> może pełni przestrzegane przez logika implementacji ograniczenia na <xref:System.Windows.UIElement.DesiredSize%2A> mogą zostać zastosowane, i tych warunków ograniczających mogą również zmienić pozostałe właściwości elementu nadrzędnego lub element podrzędny.</span><span class="sxs-lookup"><span data-stu-id="5e656-406">Depending on the scenario, <xref:System.Windows.UIElement.DesiredSize%2A> might be fully respected by your implementation logic, constraints on <xref:System.Windows.UIElement.DesiredSize%2A> might be applied, and such constraints might also change other characteristics of either the parent element or child element.</span></span> <span data-ttu-id="5e656-407">Na przykład formant, który obsługuje regionów przewijanego (ale nie zdecyduje się na pochodzi z formantów WPF poziomie struktury, umożliwiających już przewijanego regionów) można porównać dostępny rozmiar do <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-407">For example, a control that supports scrollable regions (but chooses not to derive from the WPF framework-level controls that already enable scrollable regions) could compare available size to <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="5e656-408">Kontrolki można następnie ustawić stan wewnętrzny, który umożliwia pasków przewijania w [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] dla tego formantu.</span><span class="sxs-lookup"><span data-stu-id="5e656-408">The control could then set an internal state that enabled scrollbars in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] for that control.</span></span> <span data-ttu-id="5e656-409">Lub, <xref:System.Windows.UIElement.DesiredSize%2A> potencjalnie może zostać zignorowane również w niektórych scenariuszach.</span><span class="sxs-lookup"><span data-stu-id="5e656-409">Or, <xref:System.Windows.UIElement.DesiredSize%2A> could potentially also be ignored in certain scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-410">W poniższym przykładzie przedstawiono <xref:System.Windows.UIElement.DesiredSize%2A> jako część <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-410">The following example shows <xref:System.Windows.UIElement.DesiredSize%2A> as part of a <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementation.</span></span> <span data-ttu-id="5e656-411">Powiadomienie jak <xref:System.Windows.UIElement.Measure%2A> jest wywoływana bezpośrednio przed uzyskaniem <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-411">Notice how <xref:System.Windows.UIElement.Measure%2A> is called immediately prior to obtaining <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="5e656-412">Gwarantuje to, że <xref:System.Windows.UIElement.DesiredSize%2A> zawiera wartość uzasadnione.</span><span class="sxs-lookup"><span data-stu-id="5e656-412">This assures that <xref:System.Windows.UIElement.DesiredSize%2A> holds a legitimate value.</span></span>  
  
 [!code-cpp[PlotPanel#2](~/samples/snippets/cpp/VS_Snippets_Wpf/PlotPanel/CPP/PlotPanel.cpp#2)]
 [!code-csharp[PlotPanel#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PlotPanel/CSharp/PlotPanel.cs#2)]
 [!code-vb[PlotPanel#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PlotPanel/VisualBasic/PlotPanel.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-413">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z tego elementu jako element docelowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="5e656-413">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-414">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-414">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-415">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.DragEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-415">Event handlers that are attached to the <xref:System.Windows.UIElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-416">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-416">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-417">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-417">Identifier field</span></span>|<xref:System.Windows.UIElement.DragEnterEvent>|  
|<span data-ttu-id="5e656-418">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-418">Routing strategy</span></span>|<span data-ttu-id="5e656-419">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-419">Bubbling</span></span>|  
|<span data-ttu-id="5e656-420">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-420">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="5e656-421">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="5e656-421">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="5e656-422">Zastąpienie <xref:System.Windows.UIElement.OnDragEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-422">Override <xref:System.Windows.UIElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-423">Identyfikuje <see cref="E:System.Windows.UIElement.DragEnter" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-423">Identifies the <see cref="E:System.Windows.UIElement.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-424">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-424">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-425">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-425">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-426">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-426">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-427">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-427">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-428">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-428">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-429">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to element źródłowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="5e656-429">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-430">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-430">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-431">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.DragLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-431">Event handlers that are attached to the <xref:System.Windows.UIElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-432">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-432">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-433">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-433">Identifier field</span></span>|<xref:System.Windows.UIElement.DragLeaveEvent>|  
|<span data-ttu-id="5e656-434">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-434">Routing strategy</span></span>|<span data-ttu-id="5e656-435">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-435">Bubbling</span></span>|  
|<span data-ttu-id="5e656-436">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-436">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="5e656-437">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="5e656-437">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="5e656-438">Zastąpienie <xref:System.Windows.UIElement.OnDragLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-438">Override <xref:System.Windows.UIElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-439">Identyfikuje <see cref="E:System.Windows.UIElement.DragLeave" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-439">Identifies the <see cref="E:System.Windows.UIElement.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-440">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-440">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-441">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-441">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-442">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-442">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-443">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-443">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-444">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-444">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-445">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-445">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-446">To zdarzenie występuje nawet w przypadku przeciągania pochodzi z granicami elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-446">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="5e656-447">Jeśli przeciąganie rozpoczyna się poza granicami i przenosi wewnątrz, to zdarzenie jest wywoływane również, jak również <xref:System.Windows.UIElement.DragEnter> i powiązanych zdarzeń w wersji zapoznawczej.</span><span class="sxs-lookup"><span data-stu-id="5e656-447">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="5e656-448">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-448">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-449">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.DragOver> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-449">Event handlers that are attached to the <xref:System.Windows.UIElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-450">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-450">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-451">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-451">Identifier field</span></span>|<xref:System.Windows.UIElement.DragOverEvent>|  
|<span data-ttu-id="5e656-452">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-452">Routing strategy</span></span>|<span data-ttu-id="5e656-453">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-453">Bubbling</span></span>|  
|<span data-ttu-id="5e656-454">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-454">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="5e656-455">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="5e656-455">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="5e656-456">Zastąpienie <xref:System.Windows.UIElement.OnDragOver%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-456">Override <xref:System.Windows.UIElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-457">Identyfikuje <see cref="E:System.Windows.UIElement.DragOver" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-457">Identifies the <see cref="E:System.Windows.UIElement.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-458">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-458">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-459">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-459">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-460">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-460">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-461">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-461">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-462">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-462">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-463">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania z tego elementu jako element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-463">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-464">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-464">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-465">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.Drop> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-465">Event handlers that are attached to the <xref:System.Windows.UIElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-466">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-467">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-467">Identifier field</span></span>|<xref:System.Windows.UIElement.DropEvent>|  
|<span data-ttu-id="5e656-468">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-468">Routing strategy</span></span>|<span data-ttu-id="5e656-469">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-469">Bubbling</span></span>|  
|<span data-ttu-id="5e656-470">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-470">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="5e656-471">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="5e656-471">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="5e656-472">Zastąpienie <xref:System.Windows.UIElement.OnDrop%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-472">Override <xref:System.Windows.UIElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-473">Identyfikuje <see cref="E:System.Windows.UIElement.Drop" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-473">Identifies the <see cref="E:System.Windows.UIElement.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-474">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-474">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-475">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-475">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-476">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-476">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-477">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-477">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-478">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-478">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.Effect Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::Effect ^ Effect { System::Windows::Media::Effects::Effect ^ get(); void set(System::Windows::Media::Effects::Effect ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-479">Pobiera lub ustawia efekt mapy bitowej do zastosowania do <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-479">Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="5e656-480">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-480">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="5e656-481"><see cref="T:System.Windows.Media.Effects.Effect" /> Reprezentujący efekt mapy bitowej.</span><span class="sxs-lookup"><span data-stu-id="5e656-481">An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-482">Użyj <xref:System.Windows.UIElement.Effect%2A> właściwości efekt mapy bitowej do <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-482">Use the <xref:System.Windows.UIElement.Effect%2A> property to apply a bitmap effect to a <xref:System.Windows.UIElement>.</span></span>  
  
<a name="dependencyPropertyInfo_Effect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-483">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-483">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-484">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-484">Identifier field</span></span>|<xref:System.Windows.UIElement.EffectProperty>|  
|<span data-ttu-id="5e656-485">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-485">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-486">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-486">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-487">Następujące XAML pokazano, jak można przypisać niestandardowego <xref:System.Windows.Media.Effects.ShaderEffect> do <xref:System.Windows.UIElement.Effect%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-487">The following XAML shows how to assign a custom <xref:System.Windows.Media.Effects.ShaderEffect> to the <xref:System.Windows.UIElement.Effect%2A> property.</span></span>  
  
 [!code-xaml[System.Windows.Media.Effects.ShaderEffect#1000](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Window1.xaml#1000)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="EffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.EffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EffectProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-488">Identyfikuje <see cref="P:System.Windows.UIElement.Effect" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-488">Identifies the <see cref="P:System.Windows.UIElement.Effect" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-489">Próbuje ustawić fokus do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-489">Attempts to set focus to this element.</span></span></summary>
        <returns>
          <span data-ttu-id="5e656-490"><see langword="true" /> Jeśli ustawiono fokus klawiatury i logiczny fokus do tego elementu; <see langword="false" /> jeśli tylko logiczny fokus została ustawiona do tego elementu, lub jeśli wywołanie tej metody nie wymusić fokus, aby zmienić.</span><span class="sxs-lookup"><span data-stu-id="5e656-490"><see langword="true" /> if keyboard focus and logical focus were set to this element; <see langword="false" /> if only logical focus was set to this element, or if the call to this method did not force the focus to change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-491">Być focusable, <xref:System.Windows.UIElement.Focusable%2A> i <xref:System.Windows.UIElement.IsEnabled%2A> muszą być `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-491">To be focusable, <xref:System.Windows.UIElement.Focusable%2A> and <xref:System.Windows.UIElement.IsEnabled%2A> must both be `true`.</span></span>  
  
 <span data-ttu-id="5e656-492">Nawet jeśli element jest obsługa zdarzeń focusable i włączone, w obrębie określonego drzewa, (takie jak w przypadku złożonych kontrolek) może odpowiadać, nie zezwalając fokus, Podgląd zdarzeń fokusu w związku z tym ta metoda zwróci `false`.</span><span class="sxs-lookup"><span data-stu-id="5e656-492">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="5e656-493">Fokus na ogół podlega dwa oddzielne pojęcia: Klawiatura fokus i logiczny fokus, które nie zawsze są identyczne.</span><span class="sxs-lookup"><span data-stu-id="5e656-493">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span>  <span data-ttu-id="5e656-494">Aby uzyskać więcej informacji, zobacz [omówienie fokus](~/docs/framework/wpf/advanced/focus-overview.md) lub [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-494">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) or [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="5e656-495">Jeśli wywołanie <xref:System.Windows.UIElement.Focus%2A> zwraca `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> i <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> są również `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-495">If calling <xref:System.Windows.UIElement.Focus%2A> returns `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="5e656-496">Jeśli powiązane właściwości nie są jeszcze `true`, podczas wywoływania <xref:System.Windows.UIElement.Focus%2A>, co najmniej jeden z następujących zdarzeń pojawienia się w następującej kolejności: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (źródłowego jest nazwa nowego docelowego fokus), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (źródłowego jest nazwa nowego docelowego fokus).</span><span class="sxs-lookup"><span data-stu-id="5e656-496">If the related properties are not already `true`, when you call  <xref:System.Windows.UIElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
 <span data-ttu-id="5e656-497">Aby dla tego wywołania do pomyślnego niektórych innego elementu w aplikacji niezbędnych do wcześniej fokus.</span><span class="sxs-lookup"><span data-stu-id="5e656-497">In order for this call to be successful, some other element in the application needed to have focus previously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-498">Poniższy przykład przedstawia fokus <xref:System.Windows.Controls.TextBox> odwołuje <xref:System.Windows.FrameworkElement.Name%2A>i ustala położenie kursora w <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="5e656-498">The following example sets focus to a <xref:System.Windows.Controls.TextBox> referenced by <xref:System.Windows.FrameworkElement.Name%2A>, and then adjusts the position of the cursor within the <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBox_CursorToEnd/CSharp/Window1.xaml.cs#uielementfocus)]
 [!code-vb[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBox_CursorToEnd/VisualBasic/Window1.xaml.vb#uielementfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-499">Pobiera lub ustawia wartość wskazującą, czy element może odebrać fokus.</span><span class="sxs-lookup"><span data-stu-id="5e656-499">Gets or sets a value that indicates whether the element can receive focus.</span></span>  <span data-ttu-id="5e656-500">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-500">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-501"><see langword="true" /> Jeśli element jest focusable; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-501"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="5e656-502">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-502">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-503">Tylko element ukierunkowanych odbiera klawiatury.</span><span class="sxs-lookup"><span data-stu-id="5e656-503">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="5e656-504"><xref:System.Windows.UIElement.Focusable%2A> jest [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] metody dostępu właściwości dla co to jest w rzeczywistości właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-504"><xref:System.Windows.UIElement.Focusable%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="5e656-505">Ta właściwość zależności określonego dość często ma wartość jawnego "domyślną" ustawione inaczej w klasach element pochodny, szczególnie w formantach.</span><span class="sxs-lookup"><span data-stu-id="5e656-505">This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly in controls.</span></span> <span data-ttu-id="5e656-506">Częstą przyczyną w jeden z dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="5e656-506">This commonly occurs in one of two ways:</span></span>  
  
-   <span data-ttu-id="5e656-507">Właściwość zależności jest dziedziczona przez określonej klasy pochodnej, ale pochodnych przesłonięć klasy metadanych właściwości zależności i zmienia wartość domyślna właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-507">The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.</span></span>  
  
-   <span data-ttu-id="5e656-508">Styl lub szablon jest stosowany do elementu, który ustawia wartości tej właściwości zależności w inny sposób.</span><span class="sxs-lookup"><span data-stu-id="5e656-508">A style or template is applied to an element, which sets that dependency property value differently.</span></span>  
  
 <span data-ttu-id="5e656-509">Na przykład jawnego "domyślną" <xref:System.Windows.UIElement.Focusable%2A> dla <xref:System.Windows.Controls.Button> formant będzie `true`, nawet jeśli <xref:System.Windows.Controls.Button> dziedziczy <xref:System.Windows.UIElement.Focusable%2A> jako [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] właściwości bezpośrednio z <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-509">For example, the apparent "default" of <xref:System.Windows.UIElement.Focusable%2A> for a <xref:System.Windows.Controls.Button> control will be `true`, even though <xref:System.Windows.Controls.Button> inherits <xref:System.Windows.UIElement.Focusable%2A> as a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property directly from <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="5e656-510">Jest to spowodowane wartość metadanych zastosowane <xref:System.Windows.UIElement.Focusable%2A> właściwości zależności został zastąpiony w konstruktorze statycznym z <xref:System.Windows.Controls.Control> podstawowa klasy, która znajduje się między <xref:System.Windows.Controls.Button> i <xref:System.Windows.UIElement> w hierarchii klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-510">This is because the applied metadata value for the <xref:System.Windows.UIElement.Focusable%2A> dependency property was overridden within the static constructor of the <xref:System.Windows.Controls.Control> base class, which is situated between <xref:System.Windows.Controls.Button> and <xref:System.Windows.UIElement> in the class hierarchy.</span></span>  
  
 <span data-ttu-id="5e656-511">Gdy dziedziczone przez <xref:System.Windows.Controls.Control> lub jej klas pochodnych <xref:System.Windows.Controls.Control> ponownie definiuje wartość domyślna tej właściwości należy `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-511">When inherited by <xref:System.Windows.Controls.Control> or its derived classes, <xref:System.Windows.Controls.Control> redefines the default value of this property to be `true`.</span></span>  
  
 <span data-ttu-id="5e656-512">Gdy dziedziczone przez <xref:System.Windows.Controls.Label> (czyli <xref:System.Windows.Controls.Control> klasy), wartością domyślną jest ponownie ponownie zdefiniować jako `false`.</span><span class="sxs-lookup"><span data-stu-id="5e656-512">When inherited by <xref:System.Windows.Controls.Label> (which is a <xref:System.Windows.Controls.Control> derived class), the default value is again redefined to be `false`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-513">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-513">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-514">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-514">Identifier field</span></span>|<xref:System.Windows.UIElement.FocusableProperty>|  
|<span data-ttu-id="5e656-515">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-515">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-516">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-516">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-517">Poniższy przykładowy kod przedstawia szablonu kontrolki dla określonej kontrolki niestandardowej, która ustawia <xref:System.Windows.UIElement.Focusable%2A> `false` na jeden z elementów w szablonie.</span><span class="sxs-lookup"><span data-stu-id="5e656-517">The following example code illustrates a control template for a particular custom control, which sets <xref:System.Windows.UIElement.Focusable%2A> `false` on one of the elements within the template.</span></span>  
  
 [!code-xaml[RichTextBox_NoScrollViewer#_ControlTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBox_NoScrollViewer/CS/window1.xaml#_controltemplate)]
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5e656-518">Podczas tworzenia klasy pochodnej z <see cref="T:System.Windows.UIElement" /> bezpośrednio (w przeciwieństwie do z <see cref="T:System.Windows.Controls.Control" />), należy wziąć pod uwagę, czy mają nazwę elementu na focusable, ponieważ domyślny element nie będzie focusable.</span><span class="sxs-lookup"><span data-stu-id="5e656-518">When deriving from <see cref="T:System.Windows.UIElement" /> directly (as opposed to from <see cref="T:System.Windows.Controls.Control" />), consider whether you wish your element to be focusable, because by default the element will not be focusable.</span></span> <span data-ttu-id="5e656-519">Jeśli chcesz, aby Twoje element ma być focusable, Zastąp metadanych dla tej właściwości w konstruktorze statycznym danego typu w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="5e656-519">If you wish your element to be focusable, override the metadata for this property within your type's static constructor as follows:</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)]
 [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]  
  
 <span data-ttu-id="5e656-520">gdzie <paramref name="myElement" /> powinna być nazwą klasy typu, które są zastępowanie wartości metadanych na.</span><span class="sxs-lookup"><span data-stu-id="5e656-520">where <paramref name="myElement" /> should be the class name of the type that you are overriding the metadata value on.</span></span></para>
        </block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-521">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.Focusable" /> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-521">Occurs when the value of the <see cref="P:System.Windows.UIElement.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-522">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-522">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-523">Identyfikuje <see cref="P:System.Windows.UIElement.Focusable" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-523">Identifies the <see cref="P:System.Windows.UIElement.Focusable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="5e656-524">Właściwość zależności do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-524">The dependency property to check.</span></span></param>
        <summary><span data-ttu-id="5e656-525">Zwraca wartość właściwości podstawowej dla określonej właściwości w tym elemencie, pomijając wszelkie animowany wartość z bieżącą lub zatrzymana animacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-525">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span></span></summary>
        <returns><span data-ttu-id="5e656-526">Właściwość wartości tak, jakby animacji nie są dołączone do właściwości określonym zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-526">The property value as if no animations are attached to the specified dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-527">Jeśli animacji nie są dołączone do właściwości, a następnie <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> zwracana wartość jest zawsze taki sam jak <xref:System.Windows.DependencyObject.GetValue%2A> zwracają wartość.</span><span class="sxs-lookup"><span data-stu-id="5e656-527">If no animations are attached to the property, then the <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="5e656-528">W przypadku animacji dołączony następnie wszystkie możliwe animacji uzyskane wartości w tym uruchomienia i zatrzymania wartości są ignorowane, a wartość właściwości jest określona, oparte na wszystkich innych możliwych danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="5e656-528">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="5e656-529">Aby uzyskać więcej informacji, zobacz [pierwszeństwo wartość właściwości zależności](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-529">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-530">Poniższy przykład zawiera implementację programu obsługi, który zgłasza wartości podstawowej animowanej <xref:System.Windows.FrameworkElement.Width%2A> właściwość <xref:System.Windows.Controls.Button>, a także wartość podstawową transformacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-530">The following example implements a handler that reports the base value of an animated <xref:System.Windows.FrameworkElement.Width%2A> property on a <xref:System.Windows.Controls.Button>, as well as the base value of a transform.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalue)]
 [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalue)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutClip">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Geometry GetLayoutClip(valuetype System.Windows.Size layoutSlotSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetLayoutClip (layoutSlotSize As Size) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Geometry ^ GetLayoutClip(System::Windows::Size layoutSlotSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutSlotSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="layoutSlotSize"><span data-ttu-id="5e656-531">Dostępny rozmiar udostępnione przez element.</span><span class="sxs-lookup"><span data-stu-id="5e656-531">The available size provided by the element.</span></span></param>
        <summary><span data-ttu-id="5e656-532">Zwraca alternatywnych wycinka geometrię, która reprezentuje region, który może zostać obcięty, jeśli <see cref="P:System.Windows.UIElement.ClipToBounds" /> ustawiono <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-532">Returns an alternative clipping geometry that represents the region that would be clipped if <see cref="P:System.Windows.UIElement.ClipToBounds" /> were set to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="5e656-533">Potencjalne geometrii wycinka.</span><span class="sxs-lookup"><span data-stu-id="5e656-533">The potential clipping geometry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-534">Domyślna implementacja zwróci wartość uzasadnione, ale nie używa `layoutSlotSize` parametru w obliczeniach.</span><span class="sxs-lookup"><span data-stu-id="5e656-534">The default implementation will return a legitimate value, but does not use the `layoutSlotSize` parameter in its calculations.</span></span> <span data-ttu-id="5e656-535">Zamiast tego używa wartości <xref:System.Windows.UIElement.RenderSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-535">Instead it uses the value of <xref:System.Windows.UIElement.RenderSize%2A>.</span></span>  
  
 <span data-ttu-id="5e656-536">Ta metoda jest znacznie zastąpiona przez natychmiast pochodne <xref:System.Windows.FrameworkElement> klasy i <xref:System.Windows.FrameworkElement> zastąpienie tworzy dokładniejsze zachowanie dla ogólnych elementów poziomie struktury WPF.</span><span class="sxs-lookup"><span data-stu-id="5e656-536">This method is substantially overridden by the immediately derived <xref:System.Windows.FrameworkElement> class, and the <xref:System.Windows.FrameworkElement> override produces a more sophisticated behavior for general WPF framework-level elements.</span></span> <span data-ttu-id="5e656-537">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e656-537">For details, see <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-538">Po przesłonięciu w klasie pochodnej zwraca zamiast [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] nadrzędnego dla tego elementu, jeśli wizualny obiekt nadrzędny nie istnieje.</span><span class="sxs-lookup"><span data-stu-id="5e656-538">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="5e656-539">Obiekt, jeśli połączenie alternatywny nadrzędny do raportu jest implementacja klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-539">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-540">Domyślna implementacja wirtualnego ta metoda zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="5e656-540">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="5e656-541"><xref:System.Windows.FrameworkElement> udostępnia implementację praktyczne.</span><span class="sxs-lookup"><span data-stu-id="5e656-541"><xref:System.Windows.FrameworkElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="5e656-542">Alternatywne nadrzędnych są używane w przypadku zdarzeń routingu w przypadkach, gdy element tworzy alternatywnych nadrzędna struktura tak, aby jego zdarzeń są kierowane w taki sposób, aby diverges od standardowego wzorca routingu w górę drzewa wizualnego do standardowego elementu nadrzędnego, lub w dół Wyświetl podgląd strategii routingu.</span><span class="sxs-lookup"><span data-stu-id="5e656-542">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-543">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania i upuszczania, które obejmuje ten element.</span><span class="sxs-lookup"><span data-stu-id="5e656-543">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-544"><xref:System.Windows.UIElement.GiveFeedback> Zdarzeń umożliwia źródło zdarzeń przeciągnij, aby zmodyfikować wygląd wskaźnika myszy, aby przekazać opinię visual użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-544">The <xref:System.Windows.UIElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="5e656-545">Wizualny wzmacnia, że operacja przeciągania i upuszczania jest w toku.</span><span class="sxs-lookup"><span data-stu-id="5e656-545">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="5e656-546">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.GiveFeedback> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-546">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-547">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.GiveFeedback> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-547">Event handlers that are attached to the <xref:System.Windows.UIElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-548">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-548">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-549">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-549">Identifier field</span></span>|<xref:System.Windows.UIElement.GiveFeedbackEvent>|  
|<span data-ttu-id="5e656-550">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-550">Routing strategy</span></span>|<span data-ttu-id="5e656-551">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-551">Bubbling</span></span>|  
|<span data-ttu-id="5e656-552">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-552">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="5e656-553">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="5e656-553">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="5e656-554">Zastąpienie <xref:System.Windows.UIElement.OnGiveFeedback%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-554">Override <xref:System.Windows.UIElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-555">Identyfikuje <see cref="E:System.Windows.UIElement.GiveFeedback" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-555">Identifies the <see cref="E:System.Windows.UIElement.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-556">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-556">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-557">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-557">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-558">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-558">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-559">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-559">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-560">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-560">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-561">Występuje, gdy ten element pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="5e656-561">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-562">Logiczny fokus różni się od fokus klawiatury, jeśli celowo wymusza fokus przy użyciu wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="5e656-562">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="5e656-563">W tym scenariuszu fokus klawiatury pozostaje, gdzie jest i element gdzie <xref:System.Windows.UIElement.Focus%2A> metoda jest wywoływana nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="5e656-563">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="5e656-564">Bardziej dokładne interpretacja to zdarzenie jest jego jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsFocused%2A> właściwości elementu w trasie została zmieniona z `false` do `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-564">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="5e656-565">Ponieważ to zdarzenie używa propagacji routingu, element, który otrzymuje fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-565">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="5e656-566">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywisty element uzyskanych fokus.</span><span class="sxs-lookup"><span data-stu-id="5e656-566">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-567">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-567">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-568">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-568">Identifier field</span></span>|<xref:System.Windows.UIElement.GotFocusEvent>|  
|<span data-ttu-id="5e656-569">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-569">Routing strategy</span></span>|<span data-ttu-id="5e656-570">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-570">Bubbling</span></span>|  
|<span data-ttu-id="5e656-571">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-571">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="5e656-572">Nie ma żadnego odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-572">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="5e656-573">Zastąpienie <xref:System.Windows.UIElement.OnGotFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-573">Override <xref:System.Windows.UIElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-574">Identyfikuje <see cref="E:System.Windows.UIElement.GotFocus" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-574">Identifies the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-575">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-575">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-576">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-576">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-577">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-577">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-578">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-578">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-579">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-579">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-580">Występuje, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-580">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-581"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> jest podobne zdarzenia, który śledzi zmiany stanu we właściwości, która przechowuje stan aktywny elementu; <xref:System.Windows.UIElement.GotKeyboardFocus> zdarzenie jest zgłaszane w tych samych okolicznościach.</span><span class="sxs-lookup"><span data-stu-id="5e656-581"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.UIElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="5e656-582">Ponieważ to zdarzenie używa propagacji routingu, element, który ma fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-582">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="5e656-583">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywistego elementu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="5e656-583">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="5e656-584">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.GotKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-584">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-585">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.GotKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-585">Event handlers that are attached to the <xref:System.Windows.UIElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-586">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-586">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-587">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-587">Identifier field</span></span>|<xref:System.Windows.UIElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="5e656-588">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-588">Routing strategy</span></span>|<span data-ttu-id="5e656-589">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-589">Bubbling</span></span>|  
|<span data-ttu-id="5e656-590">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-590">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="5e656-591">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="5e656-591">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="5e656-592">Zastąpienie <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-592">Override <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-593">Identyfikuje <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-593">Identifies the <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-594">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-594">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-595">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-595">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-596">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-596">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-597">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-597">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-598">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-598">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-599">Występuje, gdy ten element przechwytuje mysz.</span><span class="sxs-lookup"><span data-stu-id="5e656-599">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-600">Gdy element przechwytuje mysz, otrzymuje myszą nawet wtedy, gdy wskaźnik myszy znajduje się poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="5e656-600">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="5e656-601">Mysz zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania oraz pozostaje przechwycone, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-601">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="5e656-602">Ponieważ to zdarzenie używa propagacji routingu, element, który ma przechwytywania może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-602">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="5e656-603">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> zdarzeń przechwytywania danych, aby określić rzeczywistego elementu, który ma myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-603">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="5e656-604">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.GotMouseCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-604">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.UIElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-605">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.GotMouseCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-605">Event handlers that are attached to the <xref:System.Windows.UIElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-606">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-606">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-607">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-607">Identifier field</span></span>|<xref:System.Windows.UIElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="5e656-608">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-608">Routing strategy</span></span>|<span data-ttu-id="5e656-609">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-609">Bubbling</span></span>|  
|<span data-ttu-id="5e656-610">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-610">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="5e656-611">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-611">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="5e656-612">Zastąpienie <xref:System.Windows.UIElement.OnGotMouseCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-612">Override <xref:System.Windows.UIElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-613">Identyfikuje <see cref="E:System.Windows.UIElement.GotMouseCapture" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-613">Identifies the <see cref="E:System.Windows.UIElement.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-614">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-614">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-615">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-615">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-616">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-616">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-617">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-617">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-618">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-618">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-619">Występuje, gdy ten element przechwytuje pióro.</span><span class="sxs-lookup"><span data-stu-id="5e656-619">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-620">Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, jeśli wskaźnik jest poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="5e656-620">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="5e656-621">Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania oraz zachowuje przechwytywania, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-621">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="5e656-622">Ponieważ to zdarzenie używa propagacji routingu, element, który ma przechwytywania może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-622">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="5e656-623">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywistego elementu, który ma przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="5e656-623">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="5e656-624">To zdarzenie tworzy alias dla dołączone zdarzenie dla tej klasy, aby <xref:System.Windows.UIElement.GotStylusCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-624">This event creates an alias for the attached event for this class so that <xref:System.Windows.UIElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-625">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.GotStylusCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-625">Event handlers that are attached to the <xref:System.Windows.UIElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-626">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-626">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-627">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-627">Identifier field</span></span>|<xref:System.Windows.UIElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="5e656-628">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-628">Routing strategy</span></span>|<span data-ttu-id="5e656-629">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-629">Bubbling</span></span>|  
|<span data-ttu-id="5e656-630">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-630">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-631">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-631">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="5e656-632">Zastąpienie <xref:System.Windows.UIElement.OnGotStylusCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-632">Override <xref:System.Windows.UIElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-633">Identyfikuje <see cref="E:System.Windows.UIElement.GotStylusCapture" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-633">Identifies the <see cref="E:System.Windows.UIElement.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-634">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-634">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-635">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-635">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-636">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-636">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-637">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-637">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-638">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-638">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-639">Występuje, gdy touch są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-639">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-640">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-640">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-641">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-641">Identifier field</span></span>|<xref:System.Windows.UIElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="5e656-642">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-642">Routing strategy</span></span>|<span data-ttu-id="5e656-643">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-643">Bubbling</span></span>|  
|<span data-ttu-id="5e656-644">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-644">Delegate</span></span>|<span data-ttu-id="5e656-645"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-645"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="5e656-646">Zastąpienie <xref:System.Windows.UIElement.OnGotTouchCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-646">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-647">Identyfikuje <see cref="E:System.Windows.UIElement.GotTouchCapture" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-647">Identifies the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-648">Pobiera wartość wskazującą, czy ten element animowanej właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-648">Gets a value indicating whether this element has any animated properties.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-649"><see langword="true" /> Jeśli ten element ma animacje dołączony do żadnej z jej właściwości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-649"><see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-650">Ta właściwość zwraca `true` trwałe animacji (unclocked, zawsze uruchomiona) lub animacji, które mają określone osi czasu.</span><span class="sxs-lookup"><span data-stu-id="5e656-650">This property returns `true` either for persistent (unclocked, always-running) animations, or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-651">Pobiera wartość wskazującą, czy <see cref="T:System.Windows.UIElement" /> ma fokus.</span><span class="sxs-lookup"><span data-stu-id="5e656-651">Gets a value that indicates whether the <see cref="T:System.Windows.UIElement" /> has focus.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-652"><see langword="true" /> Jeśli <see cref="T:System.Windows.UIElement" /> ma fokus; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-652"><see langword="true" /> if the <see cref="T:System.Windows.UIElement" /> has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-653">Podklasy mogą przesłaniać tę właściwość, aby określić, gdy element ma fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="5e656-653">Subclasses can override this property to specify when the element has keyboard focus.</span></span>  <span data-ttu-id="5e656-654">To jest przydatna, gdy Twoje <xref:System.Windows.UIElement> zawiera elementy, które mogą mieć fokus klawiatury i ma nazwę elementu raportu ma fokus.</span><span class="sxs-lookup"><span data-stu-id="5e656-654">This is useful when your <xref:System.Windows.UIElement> contains elements that can have keyboard focus and you want your element to report that it has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e656-655">Implementuje <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> dostarczyć podstawowy element trafień zachowanie testowych.</span><span class="sxs-lookup"><span data-stu-id="5e656-655">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="5e656-656">Zawiera opis testu trafienia do wykonania, w tym początkowego punktu trafień.</span><span class="sxs-lookup"><span data-stu-id="5e656-656">Describes the hit test to perform, including the initial hit point.</span></span></param>
        <summary><span data-ttu-id="5e656-657">Implementuje <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> dostarczyć podstawowy element trafień testowania zachowanie (zwracanie <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span><span class="sxs-lookup"><span data-stu-id="5e656-657">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span></span></summary>
        <returns><span data-ttu-id="5e656-658">Wyniki testu, łącznie z ocenianą geometrii.</span><span class="sxs-lookup"><span data-stu-id="5e656-658">Results of the test, including the evaluated geometry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-659">Zobacz oryginalnej metody wirtualnej <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> dla informacji na temat dalszych przesłaniania tej metody w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-659">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="5e656-660">Należy pamiętać, że kilku określonych formantów (<xref:System.Windows.Controls.TextBlock>, na przykład) mają różne implementacji, które zastąpią ten zestaw.</span><span class="sxs-lookup"><span data-stu-id="5e656-660">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override this one.</span></span>  
  
 <span data-ttu-id="5e656-661">Ta metoda nie jest przeznaczona do wywoływania z kodu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-661">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="5e656-662">Ta metoda obsługuje wewnętrzny trafień testowania zachowania, które są udostępniane przez różne aspekty system wejściowy (czy wskaźnik myszy jest nad elementem, na przykład).</span><span class="sxs-lookup"><span data-stu-id="5e656-662">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="5e656-663">Zawiera opis testu trafienia do wykonania, w tym początkowego punktu trafień.</span><span class="sxs-lookup"><span data-stu-id="5e656-663">Describes the hit test to perform, including the initial hit point.</span></span></param>
        <summary><span data-ttu-id="5e656-664">Implementuje <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> dostarczyć podstawowy element trafień testowania zachowanie (zwracanie <see cref="T:System.Windows.Media.HitTestResult" />).</span><span class="sxs-lookup"><span data-stu-id="5e656-664">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.HitTestResult" />).</span></span></summary>
        <returns><span data-ttu-id="5e656-665">Wyniki testu, w tym obliczane punktu.</span><span class="sxs-lookup"><span data-stu-id="5e656-665">Results of the test, including the evaluated point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-666">Zobacz oryginalnej metody wirtualnej <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> dla informacji na temat dalszych przesłaniania tej metody w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-666">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="5e656-667">Należy pamiętać, że kilku określonych formantów (<xref:System.Windows.Controls.TextBlock>, na przykład) mają różne implementacje, które zastąpią <xref:System.Windows.UIElement.HitTestCore%2A> zgodnie z definicją w <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-667">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override <xref:System.Windows.UIElement.HitTestCore%2A> as defined by <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="5e656-668">Ta metoda nie jest przeznaczona do wywoływania z kodu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-668">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="5e656-669">Ta metoda obsługuje wewnętrzny trafień testowania zachowania, które są udostępniane przez różne aspekty system wejściowy (czy wskaźnik myszy jest nad elementem, na przykład).</span><span class="sxs-lookup"><span data-stu-id="5e656-669">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-670">Pobiera kolekcję powiązań wejściowych skojarzonych z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-670">Gets the collection of input bindings associated with this element.</span></span></summary>
        <value><span data-ttu-id="5e656-671">Kolekcję powiązań wejściowych.</span><span class="sxs-lookup"><span data-stu-id="5e656-671">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-672">Powiązania wejściowe obsługuje powiązanie polecenia, aby urządzenia wejściowe.</span><span class="sxs-lookup"><span data-stu-id="5e656-672">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="5e656-673">Na przykład <xref:System.Windows.Input.MouseBinding> implementuje wejściowych powiązania, które obejmują właściwości dotyczące urządzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-673">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices.</span></span>  
  
 <span data-ttu-id="5e656-674">Zawiera kolekcję powiązań wejściowych zarówno powiązania wejściowe, które odnoszą się do typu, jak i powiązania wejściowe, które są zadeklarowane w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="5e656-674">The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="5e656-675">Powiązaną właściwość <xref:System.Windows.UIElement.CommandBindings%2A>, utrzymuje kolekcję powiązań polecenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-675">A related property, <xref:System.Windows.UIElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="5e656-676">Te różnią się od powiązania wejściowe reprezentują następny poziom w dół przetwarzania polecenia - akcje, które są powiązane z znanych poleceń.</span><span class="sxs-lookup"><span data-stu-id="5e656-676">These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="5e656-677">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="5e656-677">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  
  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5e656-678">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="5e656-678">XAML Values</span></span>  
 <span data-ttu-id="5e656-679">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="5e656-679">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="5e656-680">Co najmniej jeden <xref:System.Windows.Input.InputBinding> elementów (zazwyczaj <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding> klas pochodnych).</span><span class="sxs-lookup"><span data-stu-id="5e656-680">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="5e656-681">Każdy z tych powinien mieć <xref:System.Windows.Input.InputBinding.Command%2A> i <xref:System.Windows.Input.InputBinding.Gesture%2A> atrybutu.</span><span class="sxs-lookup"><span data-stu-id="5e656-681">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-682">Poniższy przykład powoduje wypełnienie tej właściwości na <xref:System.Windows.Window>, za pomocą jednej <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="5e656-682">The following example populates this property on a <xref:System.Windows.Window>, with a single <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-xaml[CommandingOverviewSnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="5e656-683">Aby uzyskać więcej informacji na temat [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] składni dla kolekcji, zobacz [szczegółów w składni języka XAML](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-683">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="5e656-684">Przesunięcie koordynuje w obrębie tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-684">The offset coordinates within this element.</span></span></param>
        <summary><span data-ttu-id="5e656-685">Zwraca element input w bieżącym elemencie w określonych współrzędnych względem źródła bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-685">Returns the input element within the current element that is at the specified coordinates, relative to the current element's origin.</span></span></summary>
        <returns><span data-ttu-id="5e656-686">Element podrzędny, znajdującego się w określonej pozycji.</span><span class="sxs-lookup"><span data-stu-id="5e656-686">The element child that is located at the given position.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-687"><xref:System.Windows.IInputElement> jest zwracana jako typ zwracany, ponieważ ten typ jest wspólny interfejs dla obu <xref:System.Windows.UIElement> i <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-687"><xref:System.Windows.IInputElement> is returned as the return type, because that type is a common interface for both <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="5e656-688">Można następnie odpowiednio rzutowania zwracany typ lub użyć wystąpienia interfejsu dla niektórych elementów członkowskich, które są definiowane przez <xref:System.Windows.IInputElement> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="5e656-688">You can then cast the return type appropriately, or use the interface instance for certain members that are defined by the <xref:System.Windows.IInputElement> interface.</span></span>  
  
 <span data-ttu-id="5e656-689">Ta metoda nie jest zazwyczaj wywoływana z kodu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-689">This method typically is not called from your application code.</span></span> <span data-ttu-id="5e656-690">Wywołanie tej metody jest tylko jeśli do ponownego wdrożenia rozległe niski poziom wejściowych funkcji, które są już obecne, takie jak odtworzenie logiki urządzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-690">Calling this method is only appropriate if you intend to re-implement a substantial amount of the low level input features that are already present, such as recreating mouse device logic.</span></span>  
  
 <span data-ttu-id="5e656-691"><xref:System.Windows.IContentHost> kontrakty <xref:System.Windows.IContentHost.InputHitTest%2A> metody o tej samej sygnaturze, niektóre elementy zadecydować o stosowaniu jawnie.</span><span class="sxs-lookup"><span data-stu-id="5e656-691"><xref:System.Windows.IContentHost> contracts an <xref:System.Windows.IContentHost.InputHitTest%2A> method with the same signature, which some elements choose to implement explicitly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateArrange">
      <MemberSignature Language="C#" Value="public void InvalidateArrange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateArrange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateArrange" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateArrange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateArrange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-692">Unieważnia stanu Rozmieść (układ) dla elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-692">Invalidates the arrange state (layout) for the element.</span></span> <span data-ttu-id="5e656-693">Po unieważniania, element będzie mieć jego układ aktualizacji, zostanie przeprowadzona asynchronicznie, chyba że następnie wymuszone przez <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-693">After the invalidation, the element will have its layout updated, which will occur asynchronously unless subsequently forced by <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-694">Częste wywołania <xref:System.Windows.UIElement.InvalidateArrange%2A> lub, w szczególności <xref:System.Windows.UIElement.UpdateLayout%2A> mieć skutki znaczących wydajności.</span><span class="sxs-lookup"><span data-stu-id="5e656-694">Frequent calls to <xref:System.Windows.UIElement.InvalidateArrange%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="5e656-695">W związku z tym uniknąć wywołaniem tej metody, chyba że absolutnie wymagają stanu dokładne układu dla kolejnych wywołań innych [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] w kodzie.</span><span class="sxs-lookup"><span data-stu-id="5e656-695">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span> <span data-ttu-id="5e656-696">Realizując bardziej zaawansowany scenariusz, w którym mogą wywołać <xref:System.Windows.UIElement.InvalidateArrange%2A> jest podczas tworzenia <xref:System.Windows.PropertyChangedCallback> dla właściwości zależności, który nie jest włączony <xref:System.Windows.Freezable> lub <xref:System.Windows.FrameworkElement> klasy, które nadal ma wpływ przebiegu Rozmieść układu, gdy zmienia.</span><span class="sxs-lookup"><span data-stu-id="5e656-696">An advanced scenario where you might call <xref:System.Windows.UIElement.InvalidateArrange%2A> is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the arrange pass of layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasure">
      <MemberSignature Language="C#" Value="public void InvalidateMeasure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateMeasure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateMeasure" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateMeasure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateMeasure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-697">Unieważnia stanu pomiaru (układ) dla elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-697">Invalidates the measurement state (layout) for the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-698">Wywołanie tej metody również wywołania <xref:System.Windows.UIElement.InvalidateArrange%2A> wewnętrznie, nie jest konieczne do wywołania <xref:System.Windows.UIElement.InvalidateMeasure%2A> i <xref:System.Windows.UIElement.InvalidateArrange%2A> w przedziale czasu.</span><span class="sxs-lookup"><span data-stu-id="5e656-698">Calling this method also calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally, there is no need to call <xref:System.Windows.UIElement.InvalidateMeasure%2A> and <xref:System.Windows.UIElement.InvalidateArrange%2A> in succession.</span></span> <span data-ttu-id="5e656-699">Po unieważniania, element będzie mieć jego układ zaktualizowane, nastąpi asynchronicznie, chyba że <xref:System.Windows.UIElement.UpdateLayout%2A> jest wywoływana w celu wymuszenia zmiany układu synchronicznego.</span><span class="sxs-lookup"><span data-stu-id="5e656-699">After the invalidation, the element will have its layout updated, which will occur asynchronously, unless <xref:System.Windows.UIElement.UpdateLayout%2A> is called to force a synchronous layout change.</span></span>  
  
 <span data-ttu-id="5e656-700">System układu poziomie struktury WPF nie obchodzenie zmian w drzewie wizualnym elementu, a w typowych przypadkach unieważniania układu systemu układu wywołuje odpowiednik tej metody, gdy jest to konieczne.</span><span class="sxs-lookup"><span data-stu-id="5e656-700">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and in most common layout invalidation cases the layout system is calling the equivalent of this method when necessary.</span></span> <span data-ttu-id="5e656-701">Tej metody powinny wywoływać tylko, jeśli produkuje implementacji pełną układu bezpośrednie manipulowanie drzewa element lub podobnych zaawansowanych scenariuszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-701">You should only call this method if you are producing a complete layout implementation, which does direct manipulation of the element tree, or similar advanced scenarios.</span></span> <span data-ttu-id="5e656-702">Taki scenariusz zaawansowane jest podczas tworzenia <xref:System.Windows.PropertyChangedCallback> dla właściwości zależności, który nie jest włączony <xref:System.Windows.Freezable> lub <xref:System.Windows.FrameworkElement> klasy, które nadal ma wpływ przebiegu miary układu, gdy zmienia.</span><span class="sxs-lookup"><span data-stu-id="5e656-702">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the measure pass of layout when it changes.</span></span>  
  
 <span data-ttu-id="5e656-703">Częste wywołania <xref:System.Windows.UIElement.InvalidateMeasure%2A> lub, w szczególności <xref:System.Windows.UIElement.UpdateLayout%2A> mieć skutki znaczących wydajności.</span><span class="sxs-lookup"><span data-stu-id="5e656-703">Frequent calls to <xref:System.Windows.UIElement.InvalidateMeasure%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="5e656-704">W związku z tym uniknąć wywołaniem tej metody, chyba że absolutnie wymagają stanu dokładne układu dla kolejnych wywołań innych [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] w kodzie.</span><span class="sxs-lookup"><span data-stu-id="5e656-704">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateVisual">
      <MemberSignature Language="C#" Value="public void InvalidateVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateVisual() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateVisual" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateVisual ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateVisual();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-705">Unieważnia renderowania elementu i wymusza pełną nowy przebieg układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-705">Invalidates the rendering of the element, and forces a complete new layout pass.</span></span> <span data-ttu-id="5e656-706"><see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> jest wywoływana po zakończeniu cyklu układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-706"><see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> is called after the layout cycle is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-707">Ta metoda wywołuje <xref:System.Windows.UIElement.InvalidateArrange%2A> wewnętrznie.</span><span class="sxs-lookup"><span data-stu-id="5e656-707">This method calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally.</span></span>  
  
 <span data-ttu-id="5e656-708">Ta metoda nie jest zazwyczaj wywoływana w kodzie aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-708">This method is not generally called from your application code.</span></span> <span data-ttu-id="5e656-709">System układu poziomie struktury WPF nie obchodzenie zmian w drzewie wizualnym elementu i czy wywoływania odpowiednik tej metody, gdy jest to konieczne już.</span><span class="sxs-lookup"><span data-stu-id="5e656-709">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and would be calling the equivalent of this method when necessary already.</span></span> <span data-ttu-id="5e656-710">Wywołanie tej metody jest niezbędne tylko w przypadku zaawansowanych scenariuszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-710">Calling this method is necessary only for advanced scenarios.</span></span> <span data-ttu-id="5e656-711">Taki scenariusz zaawansowane jest podczas tworzenia <xref:System.Windows.PropertyChangedCallback> dla właściwości zależności, który nie jest włączony <xref:System.Windows.Freezable> lub <xref:System.Windows.FrameworkElement> klasy, które nadal ma wpływ układ, gdy zmienia.</span><span class="sxs-lookup"><span data-stu-id="5e656-711">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
      </Docs>
    </Member>
    <Member MemberName="IsArrangeValid">
      <MemberSignature Language="C#" Value="public bool IsArrangeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArrangeValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsArrangeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArrangeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArrangeValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-712">Pobiera wartość wskazującą, czy obliczona rozmiar i położenie elementów podrzędnych w układzie tego elementu są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="5e656-712">Gets a value indicating whether the computed size and position of child elements in this element's layout are valid.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-713"><see langword="true" /> Jeśli rozmiar i położenie układu są ważne. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-713"><see langword="true" /> if the size and position of layout are valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-714">Możesz wymusić rozmieszczenie unieważnienie przez wywołanie metody <xref:System.Windows.UIElement.InvalidateArrange%2A> dla tego elementu (lub jego elementów nadrzędnych).</span><span class="sxs-lookup"><span data-stu-id="5e656-714">You can force arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateArrange%2A> on this element (or its parents).</span></span> <span data-ttu-id="5e656-715">Flagi układ recomposition, w czasie, gdy system układ określa.</span><span class="sxs-lookup"><span data-stu-id="5e656-715">This flags the layout for recomposition at such time as the layout system determines.</span></span> <span data-ttu-id="5e656-716">Alternatywnie natychmiastowego wywołanie <xref:System.Windows.UIElement.UpdateLayout%2A> powinny być wykonane, ale to robić tylko jeśli jest niektórych oczekujących nie dalsze invalidations (konsekwencje wydajności ma dużą liczbę aktualizacji niepotrzebnie wymuszone).</span><span class="sxs-lookup"><span data-stu-id="5e656-716">Alternatively, an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A> could be made, but this should only be done if it is certain that no further invalidations are pending (a large number of unnecessarily forced updates has performance consequences).</span></span>  
  
 <span data-ttu-id="5e656-717"><xref:System.Windows.UIElement.IsArrangeValid%2A> nie może być `true` chyba że <xref:System.Windows.UIElement.IsMeasureValid%2A> jest również `true` (w procesie układu rozmieszczenia nie może być nieprawidłowy bez pomiaru najpierw jest nieprawidłowy).</span><span class="sxs-lookup"><span data-stu-id="5e656-717"><xref:System.Windows.UIElement.IsArrangeValid%2A> cannot be `true` unless <xref:System.Windows.UIElement.IsMeasureValid%2A> is also `true` (in the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
        <altmember cref="P:System.Windows.UIElement.IsMeasureValid" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-718">Pobiera lub ustawia wartość wskazującą, czy ten element jest włączony w [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5e656-718">Gets or sets a value indicating whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="5e656-719">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-719">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-720"><see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-720"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-721">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-721">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-722">Należy pamiętać, że ta właściwość ma wpływ implementacje specyficzne <xref:System.Windows.UIElement.IsEnabledCore%2A> na poszczególne elementy, często w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="5e656-722">Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement.IsEnabledCore%2A> on particular elements, often at runtime.</span></span> <span data-ttu-id="5e656-723">W związku z tym wymienione w tym miejscu wartość domyślna czasami nie jest skuteczne.</span><span class="sxs-lookup"><span data-stu-id="5e656-723">Therefore, the default value listed here is sometimes not effective.</span></span> <span data-ttu-id="5e656-724">Na przykład <xref:System.Windows.Controls.Primitives.ScrollBar> będzie <xref:System.Windows.UIElement.IsEnabled%2A> `false` zawsze, gdy jest określone, że nie istnieje potrzeba do obsługi paska przewijania.</span><span class="sxs-lookup"><span data-stu-id="5e656-724">For instance, a <xref:System.Windows.Controls.Primitives.ScrollBar> will be <xref:System.Windows.UIElement.IsEnabled%2A> `false` whenever it is determined that there is no need to support a scrollbar.</span></span> <span data-ttu-id="5e656-725">Próby Ustaw tę wartość, również zostanie przesłonięta przez wartość zwrócona przez <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-725">Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span></span>  
  
 <span data-ttu-id="5e656-726">Elementy, które nie są włączone nie uczestniczą w testowania trafień lub fokus i dlatego nie będzie źródła zdarzenia wejściowe.</span><span class="sxs-lookup"><span data-stu-id="5e656-726">Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.</span></span>  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-727">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-727">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-728">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-728">Identifier field</span></span>|<xref:System.Windows.UIElement.IsEnabledProperty>|  
|<span data-ttu-id="5e656-729">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-729">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-730">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-730">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-731">W poniższym przykładzie przedstawiono obsługi na jeden z przycisków który ustawianą zostanie wykonane <xref:System.Windows.UIElement.IsEnabled%2A> `false` na inny przycisk o nazwie `b1`.</span><span class="sxs-lookup"><span data-stu-id="5e656-731">The following example shows a handler on one button that when executed will set <xref:System.Windows.UIElement.IsEnabled%2A> `false` on another named button `b1`.</span></span>  
  
 [!code-csharp[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/CSharp/default.xaml.cs#handler)]
 [!code-vb[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/VisualBasic/default.xaml.vb#handler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-732">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsEnabled" /> właściwość zmiany tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-732">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-733">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-733">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-734">Pobiera wartość, która jest zwracana wartość <see cref="P:System.Windows.UIElement.IsEnabled" /> w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-734">Gets a value that becomes the return value of <see cref="P:System.Windows.UIElement.IsEnabled" /> in derived classes.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-735"><see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-735"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5e656-736">Domyślna implementacja ta właściwość przechowuje wartości i oblicza również, czy element nadrzędny tego elementu jest włączone.</span><span class="sxs-lookup"><span data-stu-id="5e656-736">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="5e656-737">(Jeśli element nadrzędny nie jest włączone, element podrzędny nie może efektywnie włączone w praktycznych [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Jeśli chcesz przesłonić tę implementację, upewnij się, że możesz wywoływać implementację podstawową w celu zachowania tego zachowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-737">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span>  
  
 <span data-ttu-id="5e656-738"><see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> Klasa udostępnia istniejącą implementację przesłonięcia tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-738">The <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> class provides an existing override implementation of this property.</span></span> <span data-ttu-id="5e656-739">To zastąpienie Określa, czy zawartości wewnątrz obszaru zawartości prezentacji przekracza dostępny obszar.</span><span class="sxs-lookup"><span data-stu-id="5e656-739">This override determines whether the content inside the content presentation area exceeds the available area.</span></span> <span data-ttu-id="5e656-740">Jeśli zawartość przekracza obszaru, część paska przewijania jest włączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-740">If the content does exceed the area, the scrollbar portion is enabled.</span></span> <span data-ttu-id="5e656-741">W przeciwnym razie nie włączono pasek przewijania.</span><span class="sxs-lookup"><span data-stu-id="5e656-741">Otherwise, the scrollbar is not enabled.</span></span></para>
        </block>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
        <altmember cref="P:System.Windows.UIElement.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-742">Identyfikuje <see cref="P:System.Windows.UIElement.IsEnabled" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-742">Identifies the <see cref="P:System.Windows.UIElement.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-743">Pobiera wartość, która określa, czy ten element ma logiczny fokus.</span><span class="sxs-lookup"><span data-stu-id="5e656-743">Gets a value that determines whether this element has logical focus.</span></span>  <span data-ttu-id="5e656-744">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-744">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-745"><see langword="true" /> Jeśli ten element ma logiczny fokus; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-745"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-746">Logiczny fokus może się różnić od fokus klawiatury, jeśli aplikacja ma wiele podziałów fokus, takich jak między zawartość menu i pozostałej części aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-746">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="5e656-747">W tym scenariuszu fokus klawiatury może zawierać tylko jeden element interfejsu użytkownika aplikacji, jednak niektóre elementy w innych działów fokus nadal mogą zachować logiczny fokus.</span><span class="sxs-lookup"><span data-stu-id="5e656-747">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="5e656-748">Aby uzyskać więcej informacji dotyczących logiczny fokus, zobacz [omówienie fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-748">For more information on logical focus, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="5e656-749">Nie ustawiaj fokus przez ustawienie dla tej właściwości (jest tylko do odczytu).</span><span class="sxs-lookup"><span data-stu-id="5e656-749">You do not set focus by setting this property (it is read-only).</span></span> <span data-ttu-id="5e656-750">Typowym zastosowaniem dla tej właściwości jest używana jako właściwość zależności dla <xref:System.Windows.Setter> lub <xref:System.Windows.EventTrigger>.</span><span class="sxs-lookup"><span data-stu-id="5e656-750">The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>.</span></span> <span data-ttu-id="5e656-751">Aby ustawić fokus programowo, wywołaj <xref:System.Windows.UIElement.Focus%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-751">To set focus programmatically, call <xref:System.Windows.UIElement.Focus%2A>.</span></span> <span data-ttu-id="5e656-752">Można również można uaktywnić przez akcję użytkownika lub przez implementacje kontroli, które obejmować zachowania przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-752">Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-753">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-753">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-754">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-754">Identifier field</span></span>|<xref:System.Windows.UIElement.IsFocusedProperty>|  
|<span data-ttu-id="5e656-755">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-755">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-756">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-756">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-757">Poniższy przykład dotyczy programu obsługi kodu, który tła formantu zostanie zmieniona, gdy koncentruje się.</span><span class="sxs-lookup"><span data-stu-id="5e656-757">The following example is a code handler that changes the background of a control when it is focused.</span></span>  
  
 [!code-csharp[PopupSimple#IsFocused](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml.cs#isfocused)]  
  
 <span data-ttu-id="5e656-758">Inny typowy sposób, aby osiągnąć ten sam efekt jest umieszczenie <xref:System.Windows.Trigger> w <xref:System.Windows.Style> formantu; to rozwiązanie nie wymaga obsługi określonych zdarzeń z kodem oraz udostępnia projektantów większa charakter interakcyjne i graficznego [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5e656-758">Another common way to achieve this same effect is to place a <xref:System.Windows.Trigger> in the <xref:System.Windows.Style> of a control; this approach does not require handling specific events with code-behind and allows designers greater access to the interactive and graphical nature of the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="5e656-759">Na przykład zobacz [porady: tworzenie Blask zewnętrzny, efekt](http://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span><span class="sxs-lookup"><span data-stu-id="5e656-759">For an example, see [How to: Create an Outer Glow Effect](http://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-760">Identyfikuje <see cref="P:System.Windows.UIElement.IsFocused" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-760">Identifies the <see cref="P:System.Windows.UIElement.IsFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisible">
      <MemberSignature Language="C#" Value="public bool IsHitTestVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsHitTestVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHitTestVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-761">Pobiera lub ustawia wartość deklarującą, czy ten element może być zwrócony jako wynik testu trafienia z niektórych części zrenderowanej zawartości.</span><span class="sxs-lookup"><span data-stu-id="5e656-761">Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.</span></span> <span data-ttu-id="5e656-762">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-762">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-763"><see langword="true" /> Jeśli ten element może zostać zwrócony jako wynik testu trafienia z co najmniej jeden punkt; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-763"><see langword="true" /> if this element could be returned as a hit test result from at least one point; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-764">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-764">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-765">Efektywna wartość tej właściwości jest wpływ względne położenie trafień testować elementy w drzewie logicznym.</span><span class="sxs-lookup"><span data-stu-id="5e656-765">The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.</span></span> <span data-ttu-id="5e656-766">Na przykład, jeśli element jest elementem podrzędnym element nie osiągnęła testu widoczne, pozostanie wprowadzenia wartości właściwości w elemencie podrzędnym `false`nawet w przypadku próby lokalnie Ustaw tę wartość.</span><span class="sxs-lookup"><span data-stu-id="5e656-766">For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally.</span></span> <span data-ttu-id="5e656-767">Z tego powodu ważne jest, że nie zostały ustawione <xref:System.Windows.UIElement.IsHitTestVisible%2A> do `false` w formancie połączone chyba, że nie ma żadnych danych lub trafień testowania w tym formancie.</span><span class="sxs-lookup"><span data-stu-id="5e656-767">For this reason, it is important that you do not set <xref:System.Windows.UIElement.IsHitTestVisible%2A> to `false` on a composited control unless you do not want any input or hit testing on that control.</span></span> <span data-ttu-id="5e656-768">Aby uzyskać więcej informacji na temat testowania trafień, zobacz [trafień testowania w warstwie Visual](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-768">For more information on hit testing, see [Hit Testing in the Visual Layer](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHitTestVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-769">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-769">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-770">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-770">Identifier field</span></span>|<xref:System.Windows.UIElement.IsHitTestVisibleProperty>|  
|<span data-ttu-id="5e656-771">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-771">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-772">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-772">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsHitTestVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsHitTestVisibleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-773">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> zmiany właściwości zależności w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-773">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-774">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-774">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHitTestVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHitTestVisibleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-775">Identyfikuje <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-775">Identifies the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-776">Pobiera wartość wskazującą, czy system IME, takich jak [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], jest włączony dla przetwarzania danych wejściowych do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-776">Gets a value indicating whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)],  is enabled for processing the input to this element.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-777"><see langword="true" /> Jeśli Metoda wejściowa jest aktywna; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-777"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-778">Wartość domyślna właściwości dołączonych jest <see langword="true;" /> , to będzie zależeć od rzeczywisty stan metody wprowadzania tekstu w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="5e656-778">The default value of the underlying attached property is <see langword="true;" /> however, this will be influenced by the actual state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-779">Ta właściwość zwraca wartość zwracaną przez dołączona właściwość <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> dla aktualnie włączonego metody wejściowe (klawiatury, mowy i innych urządzeniach wejściowych).</span><span class="sxs-lookup"><span data-stu-id="5e656-779">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-780">Pobiera wartość wskazującą, czy ten element ma fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="5e656-780">Gets a value indicating whether this element has keyboard focus.</span></span>  <span data-ttu-id="5e656-781">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-781">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-782"><see langword="true" /> Jeśli ten element ma fokus klawiatury; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-782"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-783">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-783">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-784">Zmiany na podstawie wartości tej właściwości może towarzyszyć zdarzeń związanych z fokusem.</span><span class="sxs-lookup"><span data-stu-id="5e656-784">Changes to the determined value of this property may be accompanied by focus-related events.</span></span>  
  
 <span data-ttu-id="5e656-785"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> i <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> są często używane klasy obsługi zdarzeń dla innych zdarzeń związanych z danych wejściowych, na przykład w celu sprawdzenia, czy element ma już fokus klawiatury, aby oznaczeń, gdy mysz zdarzenia i klawiatury występują w połączeniu.</span><span class="sxs-lookup"><span data-stu-id="5e656-785"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-786">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-786">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-787">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-787">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="5e656-788">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-788">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-789">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-789">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
        <altmember cref="E:System.Windows.UIElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-790">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> zmiany właściwości w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-790">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-791">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-791">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-792">Identyfikuje <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-792">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-793">Pobiera wartość wskazującą, czy fokus klawiatury jest dowolne miejsce w obrębie elementu lub jego elementy podrzędne drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="5e656-793">Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.</span></span>  <span data-ttu-id="5e656-794">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-794">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-795"><see langword="true" /> Jeśli fokus klawiatury znajduje się na element lub jego elementów podrzędnych; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-795"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-796">Zmiana wartości tej właściwości zwykle podnieść <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> zdarzeń, chyba że klasa pochodna przesłoniła <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> do pomijania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-796">Changes to the value of this property typically raise the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="5e656-797">Ta właściwość nie należy ustawiać bezpośrednio, ale można ustawić fokus do elementu, wywołując <xref:System.Windows.UIElement.Focus%2A>, lub tworząc <xref:System.Windows.UIElement.MoveFocus%2A> żądania.</span><span class="sxs-lookup"><span data-stu-id="5e656-797">You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement.Focus%2A>, or by making a <xref:System.Windows.UIElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="5e656-798">Jedną z tych wywołań metody mogą ulec zmianie wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-798">Either of these method calls might change this property value.</span></span>  
  
 <span data-ttu-id="5e656-799"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> i <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> są zazwyczaj używane w ramach procedury obsługi zdarzeń klasy dla innych zdarzeń związanych z danych wejściowych, na przykład w celu sprawdzenia, czy element ma już fokus klawiatury, aby oznaczeń, gdy mysz zdarzenia i klawiatury występują w połączeniu.</span><span class="sxs-lookup"><span data-stu-id="5e656-799"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-800">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-800">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-801">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-801">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="5e656-802">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-802">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-803">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-803">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-804">Występuje, gdy wartość <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> zmiany właściwości w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-804">Occurs when the value of the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-805">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-805">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-806">Identyfikuje <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-806">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabled">
      <MemberSignature Language="C#" Value="public bool IsManipulationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManipulationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsManipulationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsManipulationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManipulationEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-807">Pobiera lub ustawia wartość wskazującą, czy zdarzenia manipulowania są włączone na tym <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-807">Gets or sets a value that indicates whether manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-808"><see langword="true" /> Jeśli zdarzenia manipulowania są włączone na tym <see cref="T:System.Windows.UIElement" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-808"><see langword="true" /> if manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-809">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-809">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-810">Ustaw tę właściwość na wartość true, jeśli chcesz <xref:System.Windows.UIElement> do odbierania <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, i <xref:System.Windows.UIElement.ManipulationCompleted> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-810">Set this property to true if you want the <xref:System.Windows.UIElement> to receive the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, and <xref:System.Windows.UIElement.ManipulationCompleted> events.</span></span> <span data-ttu-id="5e656-811">Aby uzyskać więcej informacji na temat manipulacje, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-811">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="5e656-812">Na przykład aplikacja, która odpowiada manipulacje zobacz [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-812">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-813">W poniższym przykładzie tworzona jest aplikacja, która ma czerwonym prostokątem.</span><span class="sxs-lookup"><span data-stu-id="5e656-813">The following example creates an application that has a red Rectangle.</span></span>  <span data-ttu-id="5e656-814"><xref:System.Windows.UIElement.IsManipulationEnabled%2A> Właściwości prostokąta ma ustawioną wartość PRAWDA, a aplikacji subskrybuje okna <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, i <xref:System.Windows.UIElement.ManipulationInertiaStarting> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-814">The <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property of the Rectangle is set to true and the application's window subscribes to the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, and <xref:System.Windows.UIElement.ManipulationInertiaStarting> events.</span></span> <span data-ttu-id="5e656-815">Ten przykład jest częścią większego przykładu w [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-815">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-xaml[BasicManipulation#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsManipulationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsManipulationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsManipulationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsManipulationEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-816">Identyfikuje <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-816">Identifies the <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMeasureValid">
      <MemberSignature Language="C#" Value="public bool IsMeasureValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMeasureValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMeasureValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMeasureValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMeasureValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-817">Pobiera wartość wskazującą, czy bieżący rozmiar zwrócony przez układ miary jest nieprawidłowa.</span><span class="sxs-lookup"><span data-stu-id="5e656-817">Gets a value indicating whether the current size returned by layout measure is valid.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-818"><see langword="true" /> Miara przekazania z układu zwróciła wartość prawidłowe i aktualne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-818"><see langword="true" /> if the measure pass of layout returned a valid and current value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-819">Możesz wymusić pomiarów i rozmieszczenie unieważnienie przez wywołanie metody <xref:System.Windows.UIElement.InvalidateMeasure%2A> dla tego elementu (lub dowolnego elementu nadrzędnego w górę drzewa wizualnego).</span><span class="sxs-lookup"><span data-stu-id="5e656-819">You can force measurement and arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateMeasure%2A> on this element (or any parent element up the visual tree).</span></span> <span data-ttu-id="5e656-820">Określa układ recomposition asynchronicznie, występujących w czasie określany przez system układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-820">This designates the layout for recomposition asynchronously, occurring at a time determined by the layout system.</span></span> <span data-ttu-id="5e656-821">Alternatywnie można utworzyć bezpośredniego wywołanie <xref:System.Windows.UIElement.UpdateLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-821">Alternatively, you could make an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A>.</span></span> <span data-ttu-id="5e656-822">Jednak możesz powinny wywoływać tylko <xref:System.Windows.UIElement.UpdateLayout%2A> Jeśli prawdopodobnie oczekujących nie dalsze invalidations (dużą liczbę aktualizacji niepotrzebnie wymuszone będzie mieć konsekwencje wydajności).</span><span class="sxs-lookup"><span data-stu-id="5e656-822">However, you should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if it is likely that no further invalidations are pending (a large number of unnecessarily forced updates will have performance consequences).</span></span>  
  
 <span data-ttu-id="5e656-823">Jeśli <xref:System.Windows.UIElement.IsMeasureValid%2A> jest `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> musi być również `false` (przez logikę wymuszone procesu układu, rozmieszczenia nie może być nieprawidłowy bez pomiaru najpierw jest nieprawidłowy).</span><span class="sxs-lookup"><span data-stu-id="5e656-823">If <xref:System.Windows.UIElement.IsMeasureValid%2A> is `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> must also be `false` (by the enforced logic of the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-824">Pobiera wartość wskazującą, czy wskaźnik myszy jest przechwytywany do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-824">Gets a value indicating whether the mouse is captured to this element.</span></span>  <span data-ttu-id="5e656-825">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-825">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-826"><see langword="true" /> Jeśli element ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-826"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-827">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-827">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-828">Stan przechwytywanie myszy powiązany jest w trakcie operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-828">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-829">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-829">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-830">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-830">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="5e656-831">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-831">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-832">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-832">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-833">Poniższy przykład włącza stan przechwytywanie myszy lub wyłącza oparte na czy myszy są już przechwytywane dla elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-833">The following example turns the mouse capture state on or off based on whether the mouse is already captured for the element.</span></span>  
  
 <span data-ttu-id="5e656-834">Jeśli przechwytywanie myszy jest w innym miejscu przechwytywanie myszy ma ustawioną wartość tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-834">If mouse capture is elsewhere, the mouse capture is set to that element.</span></span> <span data-ttu-id="5e656-835">Element gdyby przechwytywanie myszy zostanie wyczyszczona przez wywołanie metody <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> z wejściowe o wartości null.</span><span class="sxs-lookup"><span data-stu-id="5e656-835">If the element had mouse capture, it is cleared by calling <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with a null input.</span></span>  
  
 [!code-csharp[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#ismousecaptured)]
 [!code-vb[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-836">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> zmiany właściwości w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-836">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-837">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-837">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-838">Identyfikuje <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-838">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-839">Pobiera wartość określającą, czy przechwytywanie myszy jest przechowywane przez ten element lub elementy podrzędne w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="5e656-839">Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.</span></span> <span data-ttu-id="5e656-840">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-840">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-841"><see langword="true" /> Jeśli ten element lub zawartych w niej element ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-841"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-842">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-842">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-843">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-843">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="5e656-844">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-844">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-845">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-845">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-846">Występuje, gdy wartość <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> zmiany w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-846">Occurs when the value of the <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-847">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-847">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-848">Identyfikuje <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-848">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-849">Pobiera wartość wskazującą, czy pozycja wskaźnika myszy odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="5e656-849">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span>  <span data-ttu-id="5e656-850">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-850">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-851"><see langword="true" /> Gdy wskaźnik myszy znajduje się nad takiego samego wyniku elementu, jako testu trafienia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-851"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-852">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-852">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-853">W odróżnieniu od <xref:System.Windows.UIElement.IsMouseOver%2A>, ta właściwość jest tylko `true` , gdy wskaźnik myszy znajduje się nad elementem literału — podobnie jak w przypadku testu trafienia.</span><span class="sxs-lookup"><span data-stu-id="5e656-853">Unlike <xref:System.Windows.UIElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element—as it is for a hit test.</span></span> <span data-ttu-id="5e656-854">Gdy wskaźnik myszy jest nad elementu podrzędnego, w szczególności za pośrednictwem elementy, które są częścią szablonu głębiej i składania kanałów, element tej właściwości będzie `false`.</span><span class="sxs-lookup"><span data-stu-id="5e656-854">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="5e656-855">Jeśli nie wiadomo, jak kontrolka zostanie połączone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który należy zdefiniować), ta właściwość może zwrócić nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="5e656-855">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="5e656-856">W przypadku większości scenariuszy, w którym nie tworzenia formantów, użyć <xref:System.Windows.UIElement.IsMouseOver%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="5e656-856">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="5e656-857">Jeśli przycisk myszy jest przechwytywany przez ten element, a ta właściwość jest `true` w czasie przechwytywania, ta właściwość będzie zwracać `true` dopóki przechwytywanie myszy zostanie utracone i kursor nie znajduje się za pośrednictwem jego granic.</span><span class="sxs-lookup"><span data-stu-id="5e656-857">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-858">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-858">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-859">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-859">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="5e656-860">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-860">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-861">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-861">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-862">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> zmiany właściwości w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-862">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-863">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-863">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-864">Identyfikuje <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-864">Identifies the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-865">Pobiera wartość wskazującą, czy wskaźnik myszy znajduje się nad tym elementem (w tym elementy podrzędne w drzewie wizualnym).</span><span class="sxs-lookup"><span data-stu-id="5e656-865">Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).</span></span>  <span data-ttu-id="5e656-866">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-866">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-867"><see langword="true" /> Gdy wskaźnik myszy znajduje się nad elementu lub jego elementów podrzędnych; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-867"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-868">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-868">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-869">Formanty są zazwyczaj połączone tak, aby wszystkie różnych elementów wewnątrz formantu (drzewa wizualnego) będzie zgłaszać stanu myszy zawierającego formantu.</span><span class="sxs-lookup"><span data-stu-id="5e656-869">Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.</span></span> <span data-ttu-id="5e656-870">Na przykład <xref:System.Windows.Controls.ListBox> styl formantu będzie zgłaszać <xref:System.Windows.UIElement.IsMouseOver%2A> jako `true` w przypadku myszy dowolnego miejsca za pośrednictwem jego geometry, wraz ze wszystkimi <xref:System.Windows.Controls.ListBoxItem>.</span><span class="sxs-lookup"><span data-stu-id="5e656-870">For example, a <xref:System.Windows.Controls.ListBox> style control will report <xref:System.Windows.UIElement.IsMouseOver%2A> as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>.</span></span>  
  
 <span data-ttu-id="5e656-871">Mimo że podobne zdarzenia "IsMouseOverChanged" nie istnieje, czy kilka podobnych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-871">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="5e656-872">Na przykład można obsługiwać <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, i <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="5e656-872">For example, you can handle <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="5e656-873">Jeśli ten element przechwytuje mysz, ta właściwość pozostaje `true` dopóki przechwytywanie myszy zostanie utracone i wskaźnik myszy opuszczeniu granic elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-873">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
 <span data-ttu-id="5e656-874">Niektóre formanty celowo przechwytywanie myszy na pewne akcje, które nie są bezpośrednio dotyczyć myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-874">Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.</span></span> <span data-ttu-id="5e656-875">Może to prowadzić do <xref:System.Windows.UIElement.IsMouseOver%2A> trwa `true` mimo że nie przeniósł najwyraźniej myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-875">This can lead to <xref:System.Windows.UIElement.IsMouseOver%2A> being `true` even though the mouse has not apparently moved.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-876">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-876">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-877">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-877">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseOverProperty>|  
|<span data-ttu-id="5e656-878">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-878">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-879">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-879">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-880">Poniższy przykład odwołuje się do tej właściwości jako właściwość typu <xref:System.Windows.Trigger>, część \<Style.Triggers > bloku.</span><span class="sxs-lookup"><span data-stu-id="5e656-880">The following example references this property as the property type of a <xref:System.Windows.Trigger>, part of a \<Style.Triggers> block.</span></span> <span data-ttu-id="5e656-881">Gdy wskaźnik myszy znajduje się nad formantem, niebieskie tekst formantu i kursor przyjmie postać dłoni.</span><span class="sxs-lookup"><span data-stu-id="5e656-881">If the mouse is over the control, the control text turns blue and the cursor becomes a hand.</span></span>  
  
 [!code-xaml[ListViewChkBox#Trigger](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewChkBox/CS/window1.xaml#trigger)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-882">Identyfikuje <see cref="P:System.Windows.UIElement.IsMouseOver" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-882">Identifies the <see cref="P:System.Windows.UIElement.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-883">Pobiera wartość wskazującą, czy pióro są przechwytywane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="5e656-883">Gets a value indicating whether the stylus is captured by this element.</span></span>  <span data-ttu-id="5e656-884">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-884">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-885"><see langword="true" /> Jeśli element ma Przechwytywanie pióra; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-885"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-886">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-886">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-887">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-887">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-888">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-888">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-889">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-889">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-890">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-890">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="5e656-891">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-891">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-892">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-892">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-893">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> zmiany właściwości w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-893">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-894">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-894">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-895">Identyfikuje <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-895">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-896">Pobiera wartość określającą, czy przechwytywanie pióra jest przechowywany przez ten element lub element granice elementu i jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="5e656-896">Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.</span></span> <span data-ttu-id="5e656-897">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-897">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-898"><see langword="true" /> Jeśli ten element lub zawartych w niej element ma Przechwytywanie pióra; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-898"><see langword="true" /> if this element or a contained element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-899">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-899">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-900">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-900">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-901">Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-901">For more information, see [Touch Input Support in Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-902">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-902">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-903">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-903">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="5e656-904">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-904">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-905">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-905">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="P:System.Windows.UIElement.IsStylusCaptured" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-906">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> zmiany właściwości w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-906">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-907">Jest to [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-907">This is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-908">Identyfikuje <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-908">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-909">Pobiera wartość wskazującą, czy pozycja Pióro odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="5e656-909">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span>  <span data-ttu-id="5e656-910">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-910">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-911"><see langword="true" /> Jeśli wskaźnik Pióro znajduje się nad takiego samego wyniku elementu, jako testu trafienia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-911"><see langword="true" /> if the stylus pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-912">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-912">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-913">W odróżnieniu od <xref:System.Windows.UIElement.IsStylusOver%2A>, ta właściwość jest tylko `true` , gdy pióro znajduje się nad elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-913">Unlike <xref:System.Windows.UIElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="5e656-914">Jeśli pióro jest na element podrzędny lub elementy, które są częścią elementu głębiej składania (drzewa wizualnego), ta właściwość będzie `false`.</span><span class="sxs-lookup"><span data-stu-id="5e656-914">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`.</span></span>  
  
 <span data-ttu-id="5e656-915">Jeśli nie wiadomo, jak kontrolka zostanie połączone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który należy zdefiniować), ta właściwość może zwrócić nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="5e656-915">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="5e656-916">W przypadku większości scenariuszy, w którym nie tworzenia formantów, użyć <xref:System.Windows.UIElement.IsStylusOver%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="5e656-916">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="5e656-917">Jeśli ten element ma Przechwytywanie pióra, ta właściwość jest `true` w czasie przechwytywania, ta właściwość pozostaje `true` aż do przechwycenia pióra zostaną utracone i pióro nie jest za pośrednictwem jego granic.</span><span class="sxs-lookup"><span data-stu-id="5e656-917">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="5e656-918">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-918">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-919">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-919">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-920">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-920">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-921">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-921">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="5e656-922">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-922">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-923">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-923">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-924">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> zmiany właściwości w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-924">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-925">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-925">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-926">Identyfikuje <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-926">Identifies the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-927">Pobiera wartość wskazującą, czy kursor pióra znajduje się nad tym elementem (w tym elementy podrzędne visual).</span><span class="sxs-lookup"><span data-stu-id="5e656-927">Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).</span></span>  <span data-ttu-id="5e656-928">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-928">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-929"><see langword="true" /> w przypadku kursor pióra przez element lub jego elementów podrzędnych; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-929"><see langword="true" /> if stylus cursor is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-930">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-930">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-931">Jeśli ten element ma Przechwytywanie pióra, ta właściwość będzie w dalszym ciągu zwracać `true` dopóki nie zostanie utracone Przechwytywanie pióra i kursor znajduje się poza jej zakres.</span><span class="sxs-lookup"><span data-stu-id="5e656-931">If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="5e656-932">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-932">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-933">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-933">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-934">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-934">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-935">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-935">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusOverProperty>|  
|<span data-ttu-id="5e656-936">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-936">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-937">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-937">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-938">Identyfikuje <see cref="P:System.Windows.UIElement.IsStylusOver" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-938">Identifies the <see cref="P:System.Windows.UIElement.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-939">Pobiera wartość wskazującą, czy ten element jest widoczny w [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5e656-939">Gets a value indicating whether this element is visible in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="5e656-940">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-940">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-941"><see langword="true" /> Jeśli element jest widoczny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-941"><see langword="true" /> if the element is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-942">Oznaczanie <xref:System.Windows.UIElement.IsVisible%2A> wartość uwzględnia wszystkie czynniki układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-942">Determination of the <xref:System.Windows.UIElement.IsVisible%2A> value takes all factors of layout into account.</span></span> <span data-ttu-id="5e656-943">Z kolei <xref:System.Windows.UIElement.Visibility%2A>, właściwość można ustawić, tylko wskazuje zamiarze programowo element widoczny lub niewidoczny.</span><span class="sxs-lookup"><span data-stu-id="5e656-943">In contrast, <xref:System.Windows.UIElement.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.</span></span>  
  
 <span data-ttu-id="5e656-944">Elementy gdzie <xref:System.Windows.UIElement.IsVisible%2A> jest `false` nie uczestniczą w zdarzeniach wejściowych (lub polecenia), czy nie wpływają albo miary lub Rozmieść przekazuje układu, nie są focusable nie znajdują się w sekwencji kartę i nie będą raportowane podczas testowania trafień.</span><span class="sxs-lookup"><span data-stu-id="5e656-944">Elements where <xref:System.Windows.UIElement.IsVisible%2A> is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.</span></span> <span data-ttu-id="5e656-945">Z drugiej strony, elementy gdzie <xref:System.Windows.UIElement.IsEnabled%2A> jest `false` nadal będą uczestniczyć w zdarzeniach i poleceń i testowania trafień, ale nie są również focusable.</span><span class="sxs-lookup"><span data-stu-id="5e656-945">In contrast, elements where <xref:System.Windows.UIElement.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable.</span></span>  
  
<a name="dependencyPropertyInfo_IsVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-946">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-946">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-947">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-947">Identifier field</span></span>|<xref:System.Windows.UIElement.IsVisibleProperty>|  
|<span data-ttu-id="5e656-948">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-948">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-949">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-949">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsVisibleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-950">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsVisible" /> zmiany właściwości w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-950">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsVisible" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-951">To zdarzenie nie jest wywoływane, jeśli element nie jest renderowany przez system układu innego powodu niż wartość <xref:System.Windows.UIElement.IsVisible%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-951">This event is not raised if the element is not being rendered by the layout system, for reasons other than the value of the <xref:System.Windows.UIElement.IsVisible%2A> property.</span></span> <span data-ttu-id="5e656-952">Na przykład element może nie mieć skojarzone visual.</span><span class="sxs-lookup"><span data-stu-id="5e656-952">For example, the element might not have an associated visual.</span></span>  
  
 <span data-ttu-id="5e656-953">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-953">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVisibleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-954">Identyfikuje <see cref="P:System.Windows.UIElement.IsVisible" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-954">Identifies the <see cref="P:System.Windows.UIElement.IsVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-955">Występuje po naciśnięciu klawisza, gdy fokus jest w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-955">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-956">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst.</span><span class="sxs-lookup"><span data-stu-id="5e656-956">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="5e656-957"><xref:System.Windows.UIElement.KeyDown> Zdarzenie jest zdarzenie wprowadzania tekstu niższego poziomu, które mogą nie działać zgodnie z oczekiwaniami w niektórych formantów.</span><span class="sxs-lookup"><span data-stu-id="5e656-957">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="5e656-958">Jest tak, ponieważ niektóre formanty mają składania kontroli lub klasy obsługi udostępnia wyższego poziomu wersji tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="5e656-958">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="5e656-959">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.KeyDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-959">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.KeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-960">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.KeyDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-960">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-961">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-961">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-962">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-962">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyDownEvent>|  
|<span data-ttu-id="5e656-963">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-963">Routing strategy</span></span>|<span data-ttu-id="5e656-964">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-964">Bubbling</span></span>|  
|<span data-ttu-id="5e656-965">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-965">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="5e656-966">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-966">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="5e656-967">Zastąpienie <xref:System.Windows.UIElement.OnKeyDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-967">Override <xref:System.Windows.UIElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-968">Identyfikuje <see cref="E:System.Windows.UIElement.KeyDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-968">Identifies the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-969">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-969">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-970">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-970">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-971">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-971">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-972">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-972">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-973">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-973">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-974">Występuje po zwolnieniu klawisza, gdy fokus jest w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-974">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-975">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.KeyUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-975">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.UIElement.KeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-976">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.KeyUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-976">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-977">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-977">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-978">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-978">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyUpEvent>|  
|<span data-ttu-id="5e656-979">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-979">Routing strategy</span></span>|<span data-ttu-id="5e656-980">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-980">Bubbling</span></span>|  
|<span data-ttu-id="5e656-981">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-981">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="5e656-982">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-982">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="5e656-983">Zastąpienie <xref:System.Windows.UIElement.OnKeyUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-983">Override <xref:System.Windows.UIElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-984">Identyfikuje <see cref="E:System.Windows.UIElement.KeyUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-984">Identifies the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-985">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-985">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-986">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-986">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-987">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-987">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-988">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-988">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-989">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-989">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LayoutUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutUpdated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LayoutUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-990">Występuje, gdy układ różnych elementów wizualnych skojarzone z bieżącym <see cref="T:System.Windows.Threading.Dispatcher" /> zmiany.</span><span class="sxs-lookup"><span data-stu-id="5e656-990">Occurs when the layout of the various visual elements associated with the current <see cref="T:System.Windows.Threading.Dispatcher" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-991">Aktualizacja układu może wystąpić w wyniku zmiany właściwości, rozmiaru okna lub jawne żądanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-991">A layout update can occur as a result of a property change, a window resize, or an explicit user request.</span></span>  
  
 <span data-ttu-id="5e656-992">Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-992">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-993">Występuje po utracie fokusu logicznego przez ten element.</span><span class="sxs-lookup"><span data-stu-id="5e656-993">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-994">Logiczny fokus różni się od fokus klawiatury, gdy fokus celowo wymusza optymalizacji przy użyciu wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="5e656-994">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="5e656-995">W tym scenariuszu, pozostaje fokus klawiatury, gdzie jest i element gdzie <xref:System.Windows.UIElement.Focus%2A> metoda jest wywoływana nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="5e656-995">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="5e656-996">Bardziej dokładne interpretacja to zdarzenie jest jego jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsFocused%2A> zmiany właściwości elementu w trasie z `true` do `false`.</span><span class="sxs-lookup"><span data-stu-id="5e656-996">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="5e656-997">Ponieważ to zdarzenie używa propagacji routingu, element traci fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-997">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="5e656-998">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywisty element uzyskanych fokus.</span><span class="sxs-lookup"><span data-stu-id="5e656-998">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-999">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-999">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1000">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1000">Identifier field</span></span>|<xref:System.Windows.UIElement.LostFocusEvent>|  
|<span data-ttu-id="5e656-1001">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1001">Routing strategy</span></span>|<span data-ttu-id="5e656-1002">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1002">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1003">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1003">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="5e656-1004">Nie ma żadnego odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1004">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="5e656-1005">Zastąpienie <xref:System.Windows.UIElement.OnLostFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1005">Override <xref:System.Windows.UIElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1006">Identyfikuje <see cref="E:System.Windows.UIElement.LostFocus" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1006">Identifies the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1007">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1007">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1008">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1008">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1009">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1009">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1010">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1010">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1011">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1011">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1012">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1012">Occurs when the keyboard is no longer focused on this element,.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1013">Ponieważ to zdarzenie używa propagacji routingu, element utracie fokusu może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-1013">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="5e656-1014">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w ustalić utracie fokusu rzeczywisty element danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1014">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="5e656-1015">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.LostKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-1015">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-1016">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.LostKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1016">Event handlers that are attached to the <xref:System.Windows.UIElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1017">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1017">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1018">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1018">Identifier field</span></span>|<xref:System.Windows.UIElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="5e656-1019">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1019">Routing strategy</span></span>|<span data-ttu-id="5e656-1020">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1020">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1021">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1021">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="5e656-1022">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1022">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="5e656-1023">Zastąpienie <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1023">Override <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1024">Identyfikuje <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1024">Identifies the <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1025">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1025">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1026">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1026">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1027">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1027">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1028">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1028">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1029">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1029">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1030">Występuje, gdy ten element utraci przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1030">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1031">Gdy element przechwytuje mysz, otrzymuje myszą nawet, jeśli wskaźnik jest poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="5e656-1031">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="5e656-1032">Mysz jest zwykle przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1032">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="5e656-1033">Ponieważ to zdarzenie używa propagacji routingu, element utraci Przechwytywanie może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-1033">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="5e656-1034">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywisty element, który utracił przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1034">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="5e656-1035">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.LostMouseCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-1035">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-1036">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.LostMouseCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1036">Event handlers that are attached to the <xref:System.Windows.UIElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1037">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1037">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1038">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1038">Identifier field</span></span>|<xref:System.Windows.UIElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="5e656-1039">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1039">Routing strategy</span></span>|<span data-ttu-id="5e656-1040">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1040">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1041">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1041">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="5e656-1042">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1042">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="5e656-1043">Zastąpienie <xref:System.Windows.UIElement.OnLostMouseCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1043">Override <xref:System.Windows.UIElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1044">Identyfikuje <see cref="E:System.Windows.UIElement.LostMouseCapture" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1044">Identifies the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1045">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1045">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1046">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1046">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1047">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1047">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1048">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1048">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1049">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1049">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1050">Występuje, gdy ten element utraci Przechwytywanie pióra.</span><span class="sxs-lookup"><span data-stu-id="5e656-1050">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1051">Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, jeśli wskaźnik jest poza zakresem jej.</span><span class="sxs-lookup"><span data-stu-id="5e656-1051">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="5e656-1052">Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1052">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="5e656-1053">Ponieważ to zdarzenie używa propagacji routingu, element traci fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-1053">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="5e656-1054">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w ustalić utracie fokusu rzeczywisty element danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1054">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="5e656-1055">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.LostStylusCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-1055">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-1056">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.LostStylusCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1056">Event handlers that are attached to the <xref:System.Windows.UIElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1057">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1057">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1058">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1058">Identifier field</span></span>|<xref:System.Windows.UIElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="5e656-1059">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1059">Routing strategy</span></span>|<span data-ttu-id="5e656-1060">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1060">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1061">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1061">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-1062">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1062">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="5e656-1063">Zastąpienie <xref:System.Windows.UIElement.OnLostStylusCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1063">Override <xref:System.Windows.UIElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1064">Identyfikuje <see cref="E:System.Windows.UIElement.LostStylusCapture" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1064">Identifies the <see cref="E:System.Windows.UIElement.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1065">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1065">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1066">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1066">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1067">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1067">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1068">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1068">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1069">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1069">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1070">Występuje, gdy ten element utraci Przechwytywanie touch.</span><span class="sxs-lookup"><span data-stu-id="5e656-1070">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1071">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1071">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1072">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1072">Identifier field</span></span>|<xref:System.Windows.UIElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="5e656-1073">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1073">Routing strategy</span></span>|<span data-ttu-id="5e656-1074">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1074">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1075">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1075">Delegate</span></span>|<span data-ttu-id="5e656-1076"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1076"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="5e656-1077">Zastąpienie <xref:System.Windows.UIElement.OnLostTouchCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1077">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1078">Identyfikuje <see cref="E:System.Windows.UIElement.LostTouchCapture" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1078">Identifies the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationBoundaryFeedback As EventHandler(Of ManipulationBoundaryFeedbackEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^&gt; ^ ManipulationBoundaryFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1079">Występuje, gdy operowanie napotka granicy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1079">Occurs when the manipulation encounters a boundary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_ManipulationBoundaryFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1080">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1080">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1081">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1081">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent>|  
|<span data-ttu-id="5e656-1082">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1082">Routing strategy</span></span>|<span data-ttu-id="5e656-1083">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1083">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1084">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1084">Delegate</span></span>|<span data-ttu-id="5e656-1085"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1085"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationBoundaryFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationBoundaryFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1086">Identyfikuje <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1086">Identifies the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationCompleted As EventHandler(Of ManipulationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationCompletedEventArgs ^&gt; ^ ManipulationCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1087">Występuje, gdy manipulacji i bezwładności na <see cref="T:System.Windows.UIElement" /> obiektu została ukończona.</span><span class="sxs-lookup"><span data-stu-id="5e656-1087">Occurs when a manipulation and inertia on the <see cref="T:System.Windows.UIElement" /> object is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1088">To zdarzenie służy do uzyskania informacji na temat operowanie po jego ukończeniu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1088">You can use this event to get information about the manipulation when it completes.</span></span>  <span data-ttu-id="5e656-1089">Na przykład można użyć <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> zmienić właściwości, aby określić całkowitą ilość pozycja operowanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1089">For example, you can use the <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> property to determine the total amount the position of the manipulation changed.</span></span>  
  
 <span data-ttu-id="5e656-1090">Aby uzyskać więcej informacji na temat manipulacje, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1090">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="5e656-1091">Na przykład aplikacja, która odpowiada manipulacje zobacz [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1091">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationCompleted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1092">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1092">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1093">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1093">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationCompletedEvent>|  
|<span data-ttu-id="5e656-1094">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1094">Routing strategy</span></span>|<span data-ttu-id="5e656-1095">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1095">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1096">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1096">Delegate</span></span>|<span data-ttu-id="5e656-1097"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1097"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompletedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationCompletedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationCompletedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationCompletedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationCompletedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1098">Identyfikuje <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1098">Identifies the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDelta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationDelta" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationDelta As EventHandler(Of ManipulationDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationDeltaEventArgs ^&gt; ^ ManipulationDelta;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1099">Występuje, gdy urządzenia wejściowego zmienia pozycję podczas manipulowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1099">Occurs when the input device changes position during a manipulation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1100"><xref:System.Windows.UIElement.ManipulationDelta> Zdarzeń występuje wiele razy, gdy użytkownik przeciąga palców za pośrednictwem ekranu podczas manipulowania, i ponownie po wystąpieniu bezwładności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1100">The <xref:System.Windows.UIElement.ManipulationDelta> event occurs multiple times when the user drags fingers over the screen during a manipulation and again when inertia occurs.</span></span>  <span data-ttu-id="5e656-1101">Można użyć <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> właściwość do sprawdzenia, czy zdarzenie ma miejsce podczas bezwładności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1101">You can use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> property to check whether the event is occurring during inertia.</span></span>  
  
 <span data-ttu-id="5e656-1102">Element z <xref:System.Windows.UIElement.ManipulationDelta> wystąpi zdarzenie nie występuje w jakikolwiek sposób po wystąpieniu zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1102">The element on with <xref:System.Windows.UIElement.ManipulationDelta> event occurs is not affected in any way when the event occurs.</span></span>  <span data-ttu-id="5e656-1103">Należy podać logikę do elementu, który ma być modyfikowany w zakresie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1103">You must provide the logic to the element that is to be manipulated.</span></span>  <span data-ttu-id="5e656-1104"><xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> i <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> właściwości, które są typu <xref:System.Windows.Input.ManipulationDelta>, zawierają dane o jak zmienić położenie manipulacje i przenoszenie, zmienianie rozmiaru i obrót obiektu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1104">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> properties, which are of type <xref:System.Windows.Input.ManipulationDelta>, contain data about how the position of the manipulations change and interpreted as moving, resizing, or rotating an object.</span></span>  <span data-ttu-id="5e656-1105">Te informacje dotyczą element, który ma być modyfikowany w zakresie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1105">You apply that information to the element that is to be manipulated.</span></span>  
  
 <span data-ttu-id="5e656-1106">Aby uzyskać więcej informacji na temat manipulacje, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1106">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="5e656-1107">Na przykład aplikacja, która odpowiada manipulacje zobacz [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1107">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationDelta"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1108">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1108">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1109">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1109">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationDeltaEvent>|  
|<span data-ttu-id="5e656-1110">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1110">Routing strategy</span></span>|<span data-ttu-id="5e656-1111">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1111">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1112">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1112">Delegate</span></span>|<span data-ttu-id="5e656-1113"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1113"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-1114">W poniższym przykładzie przedstawiono program obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1114">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="5e656-1115">W przykładzie użyto <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> właściwość, aby przenieść, zmienianie rozmiaru i obracanie <xref:System.Windows.Shapes.Rectangle>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1115">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span>  <span data-ttu-id="5e656-1116">Przykład również sprawdza, czy <xref:System.Windows.UIElement.ManipulationDelta> zdarzenie wystąpiło podczas bezwładności i czy prostokąt zachodzi krawędzi okna.</span><span class="sxs-lookup"><span data-stu-id="5e656-1116">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span>  <span data-ttu-id="5e656-1117">Jeśli te przypadki są spełnione, aplikacja przestaje manipulowania, aby uniemożliwić prostokąt pozostawianie obszaru aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1117">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="5e656-1118">Ten przykład jest częścią większego przykładu w [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1118">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDeltaEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationDeltaEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationDeltaEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationDeltaEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationDeltaEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1119">Identyfikuje <see cref="E:System.Windows.UIElement.ManipulationDelta" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1119">Identifies the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationInertiaStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationInertiaStarting As EventHandler(Of ManipulationInertiaStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationInertiaStartingEventArgs ^&gt; ^ ManipulationInertiaStarting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1120">Występuje, gdy urządzenia wejściowego utraci kontaktować się z <see cref="T:System.Windows.UIElement" /> rozpoczyna obiektu podczas manipulacji i bezwładności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1120">Occurs when the input device loses contact with the <see cref="T:System.Windows.UIElement" /> object during a manipulation and inertia begins.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1121"><xref:System.Windows.UIElement.ManipulationInertiaStarting> Zdarzenie wystąpi, gdy użytkownik podnosi wszystkich palców na ekranie podczas manipulowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1121">The <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs when the user lifts all of the fingers from the screen during a manipulation.</span></span> <span data-ttu-id="5e656-1122">Na przykład, jeśli użytkownik "zgłasza" <xref:System.Windows.UIElement> po powierzchni, użytkownik będzie touch <xref:System.Windows.UIElement> można rozpocząć akcji, przesuń palcem ekranie odległość krótki, a następnie zwolnij <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1122">For example, if a user "throws" a <xref:System.Windows.UIElement> across a surface, the user will touch the <xref:System.Windows.UIElement> to begin the action, move the finger across the screen for a short distance, and then release the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="5e656-1123">Gdy użytkownik zwolni elementu, rozpocznie się bezwładności i <xref:System.Windows.UIElement.ManipulationInertiaStarting> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1123">When the user releases the element, inertia begins and the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs.</span></span>  <span data-ttu-id="5e656-1124"><xref:System.Windows.UIElement> Będzie nadal otrzymywał <xref:System.Windows.UIElement.ManipulationDelta> zdarzenia w celu wskazania, że występuje bezwładności w elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1124">The <xref:System.Windows.UIElement> continues to receive <xref:System.Windows.UIElement.ManipulationDelta> events to indicate that inertia is occurring on the element.</span></span>  
  
 <span data-ttu-id="5e656-1125">To zdarzenie służy do określania zachowania bezwładności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1125">You can use this event to specify the behavior of the inertia.</span></span>  <span data-ttu-id="5e656-1126">Na przykład można ustawić prędkość początkowa, używany, gdy rozpoczyna się bezwładności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1126">For example, you can set the initial velocity that is used when inertia begins.</span></span>  <span data-ttu-id="5e656-1127">Można również określić ilość bezwładności, ustawiając odpowiednią opóźnienia lub ustawiając odpowiednią umieszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1127">You can also specify the amount of inertia by setting the desired deceleration or by setting the desired placement.</span></span>  <span data-ttu-id="5e656-1128">Te wartości dla każdego typu manipulacji (tłumaczenia, rozszerzenia lub obrotu) można skonfigurować niezależnie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1128">You can set these values for each type of manipulation (translation, expansion, or rotation) independently.</span></span>  <span data-ttu-id="5e656-1129">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1129">For more information, see <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>  
  
 <span data-ttu-id="5e656-1130">Aby uzyskać więcej informacji na temat manipulacje, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1130">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="5e656-1131">Na przykład aplikacja, która odpowiada manipulacje zobacz [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1131">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationInertiaStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1132">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1132">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1133">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1133">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationInertiaStartingEvent>|  
|<span data-ttu-id="5e656-1134">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1134">Routing strategy</span></span>|<span data-ttu-id="5e656-1135">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1135">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1136">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1136">Delegate</span></span>|<span data-ttu-id="5e656-1137"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1137"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-1138">W poniższym przykładzie przedstawiono <xref:System.Windows.UIElement.ManipulationInertiaStarting> obsługi zdarzeń i ustawia żądany prędkości tłumaczenia, rozszerzenia i obracanie, który jest używany podczas bezwładności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1138">The following example shows the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event handler and sets the desired deceleration for translation, expansion, and rotation that is used during inertia.</span></span> <span data-ttu-id="5e656-1139">Ten przykład jest częścią większego przykładu w [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1139">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]
 [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationInertiaStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationInertiaStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationInertiaStartingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1140">Identyfikuje <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1140">Identifies the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarted As EventHandler(Of ManipulationStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartedEventArgs ^&gt; ^ ManipulationStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1141">Występuje, gdy urządzenie wejściowe rozpoczyna się manipulowania <see cref="T:System.Windows.UIElement" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1141">Occurs when an input device begins a manipulation on the <see cref="T:System.Windows.UIElement" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1142"><xref:System.Windows.UIElement.ManipulationStarted> Po wystąpieniu zdarzenia <xref:System.Windows.UIElement.ManipulationStarting> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1142">The <xref:System.Windows.UIElement.ManipulationStarted> event occurs after the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span>  <span data-ttu-id="5e656-1143">Możesz wykonywać następujące z <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span><span class="sxs-lookup"><span data-stu-id="5e656-1143">You can do the following with the <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span></span>  
  
-   <span data-ttu-id="5e656-1144">Pobierz element manipulowania pozycji względem przy użyciu <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-1144">Get the element that the manipulation's position is relative to by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> property.</span></span>  
  
-   <span data-ttu-id="5e656-1145">Uzyskiwanie pochodzenia operowanie przy użyciu <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-1145">Get the origin of the manipulation by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> property.</span></span>  
  
-   <span data-ttu-id="5e656-1146">Anuluj operowanie przez wywołanie metody <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="5e656-1146">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> method.</span></span>  
  
 <span data-ttu-id="5e656-1147">Aby uzyskać więcej informacji na temat manipulacje, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1147">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="5e656-1148">Na przykład aplikacja, która odpowiada manipulacje zobacz [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1148">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1149">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1149">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1150">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1150">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartedEvent>|  
|<span data-ttu-id="5e656-1151">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1151">Routing strategy</span></span>|<span data-ttu-id="5e656-1152">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1152">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1153">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1153">Delegate</span></span>|<span data-ttu-id="5e656-1154"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1154"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1155">Identyfikuje <see cref="E:System.Windows.UIElement.ManipulationStarted" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1155">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarting As EventHandler(Of ManipulationStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartingEventArgs ^&gt; ^ ManipulationStarting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1156">Występuje, gdy procesor manipulowania pierwszego tworzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1156">Occurs when the manipulation processor is first created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1157"><xref:System.Windows.UIElement.ManipulationStarting> Wystąpienia zdarzenia na element, który ma <xref:System.Windows.UIElement.IsManipulationEnabled%2A> ustawioną właściwość `true` gdy użytkownik umieszcza palcem na nim.</span><span class="sxs-lookup"><span data-stu-id="5e656-1157">The <xref:System.Windows.UIElement.ManipulationStarting> event occurs on an element that has the <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property set to `true` when the user puts a finger on it.</span></span> <span data-ttu-id="5e656-1158">Domyślnie zdarzenia kolejnych manipulowania raport pozycji manipulacji względem elementu, który ma <xref:System.Windows.UIElement.IsManipulationEnabled%2A> ustawioną `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-1158">By default, subsequent manipulation events report the position of the manipulation relative to the element that has <xref:System.Windows.UIElement.IsManipulationEnabled%2A> set to `true`.</span></span>  <span data-ttu-id="5e656-1159">Można określić, czy pozycja powinna być określona względem innego elementu, ustawiając <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-1159">You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span> <span data-ttu-id="5e656-1160">Na przykład możesz wprowadzić manipulowania względem elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1160">For example, you can make the manipulation relative to the parent of the element.</span></span>  
  
 <span data-ttu-id="5e656-1161">Możesz również wykonać następujące czynności w obsłudze zdarzeń dla <xref:System.Windows.UIElement.ManipulationStarting>:</span><span class="sxs-lookup"><span data-stu-id="5e656-1161">You can also do the following in an event handler for <xref:System.Windows.UIElement.ManipulationStarting>:</span></span>  
  
-   <span data-ttu-id="5e656-1162">Określ, czy użytkownik potrzebuje więcej niż jeden palca przeprowadzać manipulacji przez ustawienie <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-1162">Specify whether the user needs more than one finger to perform the manipulations by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="5e656-1163">Określ, jakie typy manipulowania są włączone przez ustawienie <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> właściwości <xref:System.Windows.Input.ManipulationModes> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1163">Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.</span></span>  
  
-   <span data-ttu-id="5e656-1164">Określ środek obrotu jednym palca, ustawiając <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-1164">Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="5e656-1165">Anuluj operowanie przez wywołanie metody <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="5e656-1165">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5e656-1166">Aby uzyskać więcej informacji na temat manipulacje, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1166">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="5e656-1167">Na przykład aplikacja, która odpowiada manipulacje zobacz [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1167">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1168">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1168">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1169">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1169">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartingEvent>|  
|<span data-ttu-id="5e656-1170">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1170">Routing strategy</span></span>|<span data-ttu-id="5e656-1171">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1171">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1172">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1172">Delegate</span></span>|<span data-ttu-id="5e656-1173"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1173"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-1174">W poniższym przykładzie pokazano programu obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationStarting> zdarzenia i ustawia <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> do elementu nadrzędnego, który odbiera zdarzenia manipulowania, tak aby były współrzędne operowanie względem elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1174">The following example shows the event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> to the parent element that receives the manipulation events so that the coordinates of the manipulation are relative to the parent element.</span></span>  <span data-ttu-id="5e656-1175">Ten przykład jest częścią większego przykładu w [wskazówki: tworzenie swój pierwszy Touch aplikacji](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1175">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationstarting)]
 [!code-vb[BasicManipulation#ManipulationStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationstarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1176">Identyfikuje <see cref="E:System.Windows.UIElement.ManipulationStarting" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1176">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="C#" Value="public void Measure (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Measure(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Measure (availableSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Measure(System::Windows::Size availableSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="5e656-1177">Dostępne miejsce przydzielić element podrzędny elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1177">The available space that a parent element can allocate a child element.</span></span> <span data-ttu-id="5e656-1178">Element podrzędny mogą żądać obszaru większego niż dostępna; Podany rozmiar może pomieścić, czy przewijanie jest możliwe w modelu zawartości dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1178">A child element can request a larger space than what is available; the provided size might be accommodated if scrolling is possible in the content model for the current element.</span></span></param>
        <summary><span data-ttu-id="5e656-1179">Aktualizacje <see cref="P:System.Windows.UIElement.DesiredSize" /> z <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-1179">Updates the <see cref="P:System.Windows.UIElement.DesiredSize" /> of a <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="5e656-1180">Elementy nadrzędne ta metoda jest wywoływana z własnych <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> implementacje do utworzenia układu cykliczne aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1180">Parent elements call this method from their own <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> implementations to form a recursive layout update.</span></span> <span data-ttu-id="5e656-1181">Wywołanie tej metody oznacza akceptację pierwszym przebiegu aktualizacji układu (przebiegu "Measure").</span><span class="sxs-lookup"><span data-stu-id="5e656-1181">Calling this method constitutes the first pass (the "Measure" pass) of a layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1182">Obliczenia układu pozycjonowania w [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] składa się z <xref:System.Windows.UIElement.Measure%2A> wywołania i <xref:System.Windows.UIElement.Arrange%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1182">Computation of layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] is comprised of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="5e656-1183">Podczas <xref:System.Windows.UIElement.Measure%2A> wywołania elementu określa wymagania jego rozmiar za pomocą `availableSize` wejściowego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1183">During the <xref:System.Windows.UIElement.Measure%2A> call, an element determines its size requirements by using an `availableSize` input.</span></span> <span data-ttu-id="5e656-1184">Podczas <xref:System.Windows.UIElement.Arrange%2A> wywołanie, rozmiaru elementu jest zakończona.</span><span class="sxs-lookup"><span data-stu-id="5e656-1184">During the <xref:System.Windows.UIElement.Arrange%2A> call, the element size is finalized.</span></span>  
  
 <span data-ttu-id="5e656-1185">`availableSize` może być dowolna liczba od 0 do nieskończonej.</span><span class="sxs-lookup"><span data-stu-id="5e656-1185">`availableSize` can be any number from zero to infinite.</span></span> <span data-ttu-id="5e656-1186">Elementów uczestniczących w układzie powinien zwrócić wartości minimalnej <xref:System.Windows.Size> wymagają dla danego `availableSize`.</span><span class="sxs-lookup"><span data-stu-id="5e656-1186">Elements participating in layout should return the minimum <xref:System.Windows.Size> they require for a given `availableSize`.</span></span>  
  
 <span data-ttu-id="5e656-1187">W przypadku wystąpienia układ zawsze odbierze <xref:System.Windows.UIElement.Measure%2A> wywołać przed <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1187">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="5e656-1188">Po pierwszym przebiegu układu go otrzymać <xref:System.Windows.UIElement.Arrange%2A> wywołania bez <xref:System.Windows.UIElement.Measure%2A>; może się to zdarzyć, gdy właściwość, która wpływa tylko na <xref:System.Windows.UIElement.Arrange%2A> zmianie (na przykład wyrównanie), lub gdy odbierze nadrzędnego <xref:System.Windows.UIElement.Arrange%2A> bez <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1188">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="5e656-1189">A <xref:System.Windows.UIElement.Measure%2A> wywołania automatycznie spowoduje unieważnienie <xref:System.Windows.UIElement.Arrange%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1189">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="5e656-1190">Aktualizacje układu nastąpić asynchronicznie, tak, aby nie oczekuje wątku głównego dla każdej zmiany układu możliwe.</span><span class="sxs-lookup"><span data-stu-id="5e656-1190">Layout updates happen asynchronously, such that the main thread is not waiting for every possible layout change.</span></span> <span data-ttu-id="5e656-1191">Podczas badania elementu za pomocą kodem sprawdzanie wartości właściwości mogą nie natychmiast uwzględniać zmiany właściwości współpracujące z właściwościami zmiany rozmiaru ani układu ( <xref:System.Windows.FrameworkElement.Width%2A> właściwości, na przykład).</span><span class="sxs-lookup"><span data-stu-id="5e656-1191">Querying an element via code-behind checking of property values may not immediately reflect changes to properties that interact with the sizing or layout characteristics (the <xref:System.Windows.FrameworkElement.Width%2A> property, for example).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5e656-1192">Aktualizacje układu można wymusić za pomocą <xref:System.Windows.UIElement.UpdateLayout%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="5e656-1192">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method.</span></span> <span data-ttu-id="5e656-1193">Jednak wywołaniem tej metody jest zazwyczaj zbędne i mogą spowodować słabą wydajność.</span><span class="sxs-lookup"><span data-stu-id="5e656-1193">However, calling this method is usually unnecessary and can cause poor performance.</span></span>  
  
 <span data-ttu-id="5e656-1194">System układu utrzymuje dwa oddzielne kolejek nieprawidłowy układów, jeden dla <xref:System.Windows.UIElement.Measure%2A> i jeden dla <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1194">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="5e656-1195">Kolejki układu są sortowane według na kolejność elementów w drzewie wizualnym elementu wykonywania układu; elementy wyżej w drzewie znajdowały się u góry kolejki, aby uniknąć nadmiarowe układów spowodowany przez powtarzające zmiany elementów nadrzędnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1195">The layout queue is sorted based upon the order of elements in the visual tree of the element performing layout; elements higher in the tree are at the top of the queue, to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="5e656-1196">Zduplikowane pozycje są automatycznie usuwane z kolejki, a elementy są automatycznie usuwane z kolejki, jeśli są one już zweryfikowana układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1196">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already layout-validated.</span></span>  
  
 <span data-ttu-id="5e656-1197">Podczas aktualizowania układ <xref:System.Windows.UIElement.Measure%2A> kolejki jest opróżniany najpierw, a następnie <xref:System.Windows.UIElement.Arrange%2A> kolejki.</span><span class="sxs-lookup"><span data-stu-id="5e656-1197">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="5e656-1198">Element <xref:System.Windows.UIElement.Arrange%2A> kolejki nigdy nie będzie ułożone, jeśli jest elementem <xref:System.Windows.UIElement.Measure%2A> kolejki.</span><span class="sxs-lookup"><span data-stu-id="5e656-1198">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Size MeasureCore (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Size MeasureCore(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MeasureCore (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Size MeasureCore(System::Windows::Size availableSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="5e656-1199">Dostępny rozmiar przydzielić elementu nadrzędnego dla obiekt podrzędny.</span><span class="sxs-lookup"><span data-stu-id="5e656-1199">The available size that the parent element can allocate for the child.</span></span></param>
        <summary><span data-ttu-id="5e656-1200">W przypadku przesłonięcia w klasie pochodnej udostępnia logikę miary dotyczące ustalania rozmiaru tego elementu prawidłowo, z uwzględnieniem wielkości zawartość elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1200">When overridden in a derived class, provides measurement logic for sizing this element properly, with consideration of the size of any child element content.</span></span></summary>
        <returns><span data-ttu-id="5e656-1201">Wymagany rozmiar tego elementu w układzie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1201">The desired size of this element in layout.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1202">Częściej pochodzić od elementu są <xref:System.Windows.FrameworkElement> zamiast <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1202">It is more common to derive an element from <xref:System.Windows.FrameworkElement> rather than <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="5e656-1203">Jeśli są wynikających z <xref:System.Windows.FrameworkElement>, należy pamiętać, że zastępująca <xref:System.Windows.UIElement.MeasureCore%2A> na <xref:System.Windows.FrameworkElement> zamknięcia <xref:System.Windows.UIElement.MeasureCore%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="5e656-1203">If you are deriving from <xref:System.Windows.FrameworkElement>, note that an override of <xref:System.Windows.UIElement.MeasureCore%2A> on <xref:System.Windows.FrameworkElement> seals the <xref:System.Windows.UIElement.MeasureCore%2A> method.</span></span> <span data-ttu-id="5e656-1204">W związku z tym należy zastąpić tylko <xref:System.Windows.UIElement.MeasureCore%2A> jako środek do zmiany układu miary właściwości, jeśli pochodzi od <xref:System.Windows.UIElement> poprzez dziedziczenie, która nie zawiera <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1204">Therefore, you only override <xref:System.Windows.UIElement.MeasureCore%2A> as a means to alter layout measure characteristics if you derive from <xref:System.Windows.UIElement> through an inheritance that does not include <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="5e656-1205">Może to mieć miejsce, jeśli próbujesz własne implementacji rozbudowywać [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] poziom core.</span><span class="sxs-lookup"><span data-stu-id="5e656-1205">This might be the case if you are attempting to build your own implementation on the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] core-level.</span></span> <span data-ttu-id="5e656-1206">W przeciwnym razie, jeśli są wynikających z <xref:System.Windows.FrameworkElement>, Szablon wdrożenia dla miary zachowanie jest <xref:System.Windows.FrameworkElement> implementacja.<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1206">Otherwise, if you are deriving from <xref:System.Windows.FrameworkElement>, then the implementation template for Measure behavior is the <xref:System.Windows.FrameworkElement> implementation of .<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span></span>  
  
 <span data-ttu-id="5e656-1207">Należy wywołać element nadrzędny z elementami podrzędnymi <xref:System.Windows.UIElement.Measure%2A> na poszczególne elementy podrzędne, w przeciwnym razie te elementy podrzędne nie są o rozmiarze lub ułożone i efektywnie zniknie z układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1207">A parent element with child elements must call <xref:System.Windows.UIElement.Measure%2A> on each child, otherwise these child elements are not sized or arranged and will effectively disappear from layout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-1208">Typowy zastępowania <xref:System.Windows.UIElement.MeasureCore%2A> następuje tego wzorca przybliżonej (nie ma wbudowanej kolekcji o nazwie `VisualChildren`; `VisualChildren` to symbol zastępczy reprezentujący niezależnie od podrzędnej kolekcji przechowuje nazwę elementu).</span><span class="sxs-lookup"><span data-stu-id="5e656-1208">A typical override of <xref:System.Windows.UIElement.MeasureCore%2A> follows this approximate pattern (there is not a built-in collection called `VisualChildren`; `VisualChildren` is a  placeholder that represents whatever child collection your element maintains).</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementmeasureoverride)]
 [!code-vb[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementmeasureoverride)]  
  
-   <span data-ttu-id="5e656-1209">Należy wywołać <xref:System.Windows.UIElement.Measure%2A> dla każdego elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1209">You must call <xref:System.Windows.UIElement.Measure%2A> on each child element.</span></span>  
  
-   <span data-ttu-id="5e656-1210">Ogólnie rzecz biorąc, wdrożenie powinien pamięci podręcznej informacji pomiaru między <xref:System.Windows.UIElement.MeasureCore%2A> i <xref:System.Windows.UIElement.ArrangeCore%2A> metoda wywołuje w tym samym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1210">Generally, your implementation should cache measurement information between the <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> method calls in the same element.</span></span>  
  
-   <span data-ttu-id="5e656-1211">Wywoływanie podstawowych implementacji <xref:System.Windows.UIElement.MeasureCore%2A> nie jest wymagana, ale może być odpowiednie, jeśli podstawowa implementacja udostępnia funkcję żądany układ.</span><span class="sxs-lookup"><span data-stu-id="5e656-1211">Calling base implementations of <xref:System.Windows.UIElement.MeasureCore%2A> is not required, but might be appropriate if the base implementation provides a desired layout capability.</span></span>  
  
-   <span data-ttu-id="5e656-1212">Wywołuje się <xref:System.Windows.UIElement.Measure%2A> na podrzędne elementy powinno przekazać ona taka sama `availableSize` jako element nadrzędny lub podzbiór obszaru, w zależności od typu układu elementu nadrzędnego obsługuje.</span><span class="sxs-lookup"><span data-stu-id="5e656-1212">Calls to <xref:System.Windows.UIElement.Measure%2A> on child elements should pass either the same `availableSize` as the parent, or a subset of the area, depending on the type of layout the parent element supports.</span></span> <span data-ttu-id="5e656-1213">Na przykład byłoby nieprawidłowe Usuń obszar obramowania specyficzne dla elementu lub uzupełnienie, paska przewijania lub kontrolkę niestandardową.</span><span class="sxs-lookup"><span data-stu-id="5e656-1213">For example, it would be valid to remove the area for an element-specific border or padding, a scrollbar, or a custom control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5e656-1214">Implementacje musi być w stanie przetworzyć wartość podana dla <paramref name="availableSize" /> jest nieograniczony.</span><span class="sxs-lookup"><span data-stu-id="5e656-1214">Implementations must be able to process a value provided for <paramref name="availableSize" /> that is infinite.</span></span> <span data-ttu-id="5e656-1215">Nieskończona wartość oznacza żądanych ograniczeń i efektywnie różni się pomiaru wyboru do elementu nadrzędnego, za pośrednictwem cykliczne wywołania miary.</span><span class="sxs-lookup"><span data-stu-id="5e656-1215">An infinite value indicates no requested constraints, and effectively defers measurement choice to the parent element, through recursive Measure calls.</span></span>  
  
 <span data-ttu-id="5e656-1216">Implementacje można wziąć pod uwagę wartość podana dla <paramref name="availableSize" /> za słabe ograniczenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1216">Implementations can consider the value provided for <paramref name="availableSize" /> to be a soft constraint.</span></span> <span data-ttu-id="5e656-1217">Element podrzędny może określ większy rozmiar, nawet w przypadku innych aspektów kodu aplikacji był w stanie określić bieżącego rozmiaru rzeczywistego elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1217">The child element might specify a larger size, even if other aspects of application code were able to determine the current actual size of the parent element.</span></span> <span data-ttu-id="5e656-1218">Żądanie duży rozmiar jest Konwencji, która wskazuje, że element podrzędny sprawdza czy Twoje element nadrzędny może obsługiwać przewijanie zawartości w obrębie regionu wyświetlanie zawartości.</span><span class="sxs-lookup"><span data-stu-id="5e656-1218">The large size request is a convention that indicates that the child element is querying whether your parent element can support content scrolling within a content display region.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1219">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-1219">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1220">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.MouseDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-1220">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-1221">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.MouseDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1221">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-1222"><xref:System.Windows.UIElement.MouseDown> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.UIElement.MouseLeftButtonDown> lub <xref:System.Windows.UIElement.MouseRightButtonDown>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki.</span><span class="sxs-lookup"><span data-stu-id="5e656-1222">The <xref:System.Windows.UIElement.MouseDown> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="5e656-1223"><xref:System.Windows.UIElement.MouseLeftButtonDown> i <xref:System.Windows.UIElement.MouseRightButtonDown> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1223"><xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="5e656-1224">Zobacz uwagi dla <xref:System.Windows.UIElement.MouseLeftButtonDown> lub <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1224">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5e656-1225">Niektóre formanty może być związanego z używaniem klasy obsługi zdarzenia przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1225">Some controls might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="5e656-1226">Lewy przycisk myszy w dół zdarzeń jest najbardziej prawdopodobne zdarzenia klasa Obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1226">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="5e656-1227">Klasy obsługi często oznacza odpowiadającego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsłużone.</span><span class="sxs-lookup"><span data-stu-id="5e656-1227">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="5e656-1228">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1228">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="5e656-1229">Wszystkie inne klasy lub wystąpienia obsługi, które są dołączone do elementów w kierunku propagacji do katalogu głównego w drzewie interfejsu użytkownika również nie zwykle są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1229">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="5e656-1230">Można rozwiązać problem, który jest opisane w poprzednim ważne i nadal odbierać <xref:System.Windows.UIElement.MouseDown> zdarzeń związanych z lewego przycisku myszy w dół zdarzenia w klasie pochodnej, który zawiera klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="5e656-1230">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="5e656-1231">Dołącz obsługi <xref:System.Windows.UIElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="5e656-1231">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="5e656-1232">Zauważyć, że jest zdarzeń w wersji zapoznawczej, dlatego trasy rozpoczyna się w katalogu głównym a tuneli do formantu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1232">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="5e656-1233">Zarejestruj Obsługa w formancie proceduralnie przez wywołanie metody <xref:System.Windows.UIElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1233">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1234">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1234">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1235">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1235">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseDownEvent>|  
|<span data-ttu-id="5e656-1236">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1236">Routing strategy</span></span>|<span data-ttu-id="5e656-1237">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1237">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1238">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1238">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-1239">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1239">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="5e656-1240">Zastąpienie <xref:System.Windows.UIElement.OnMouseDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1240">Override <xref:System.Windows.UIElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1241">Identyfikuje <see cref="E:System.Windows.UIElement.MouseDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1241">Identifies the <see cref="E:System.Windows.UIElement.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1242">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1242">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1243">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1243">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1244">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1244">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1245">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1245">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1246">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1246">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1247">Występuje, gdy wskaźnik myszy zostanie umieszczony granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1247">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1248"><xref:System.Windows.UIElement.MouseEnter> jest używającą bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1248"><xref:System.Windows.UIElement.MouseEnter> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="5e656-1249">Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1249">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="5e656-1250">Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.</span><span class="sxs-lookup"><span data-stu-id="5e656-1250">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="5e656-1251">Mimo że <xref:System.Windows.UIElement.MouseEnter> ścieżki, gdy wskaźnik myszy zostanie umieszczony granice elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement.IsMouseOver%2A> zmieniono wartość właściwości z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1251">Although <xref:System.Windows.UIElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="5e656-1252">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.MouseEnter> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-1252">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-1253">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.MouseEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1253">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-1254">A <xref:System.Windows.Controls.Button> (lub <xref:System.Windows.Controls.Primitives.ButtonBase> klasy) ma natywnej obsługi dla <xref:System.Windows.UIElement.KeyDown> zdarzeń, gdy przycisk ma fokus oraz naciśnięty klawisz spacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1254">A <xref:System.Windows.Controls.Button> (or any <xref:System.Windows.Controls.Primitives.ButtonBase> derived class) has native handling for a <xref:System.Windows.UIElement.KeyDown> event when the button has focus, and the pressed key is the space bar.</span></span> <span data-ttu-id="5e656-1255">Zgłasza natywnej obsługi <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń przy użyciu przycisku jako źródła, a także przechwytuje mysz, nawet jeśli nie ma wskaźnik myszy do przeniesienia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1255">The native handling raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event with the button as the source, and also captures the mouse, even though the mouse pointer does not appear to move.</span></span> <span data-ttu-id="5e656-1256">W wyniku przechwytywanie myszy <xref:System.Windows.UIElement.MouseEnter> zdarzenie powstaje przy użyciu przycisku jako źródło.</span><span class="sxs-lookup"><span data-stu-id="5e656-1256">As a result of the mouse capture, a <xref:System.Windows.UIElement.MouseEnter> event is also raised with the button as the source.</span></span> <span data-ttu-id="5e656-1257">Ogólnie, jeśli element przechwytuje mysz, następnie <xref:System.Windows.UIElement.MouseEnter> jest zgłaszane, jak również <xref:System.Windows.UIElement.GotMouseCapture> i prawdopodobnie inne zdarzenia specyficzne dla formantu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1257">In general, if an element captures the mouse, then <xref:System.Windows.UIElement.MouseEnter> is raised, as well as <xref:System.Windows.UIElement.GotMouseCapture> and possibly other control-specific events.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1258">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1258">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1259">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1259">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseEnterEvent>|  
|<span data-ttu-id="5e656-1260">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1260">Routing strategy</span></span>|<span data-ttu-id="5e656-1261">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-1261">Direct</span></span>|  
|<span data-ttu-id="5e656-1262">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1262">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="5e656-1263">Zastąpienie <xref:System.Windows.UIElement.OnMouseEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1263">Override <xref:System.Windows.UIElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1264">Identyfikuje <see cref="E:System.Windows.UIElement.MouseEnter" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1264">Identifies the <see cref="E:System.Windows.UIElement.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1265">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1265">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1266">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1266">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1267">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1267">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1268">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1268">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1269">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1269">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1270">Występuje po opuszczeniu przez wskaźnik myszy granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1270">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1271"><xref:System.Windows.UIElement.MouseLeave> jest używającą bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1271"><xref:System.Windows.UIElement.MouseLeave> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="5e656-1272">Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1272">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="5e656-1273">Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.</span><span class="sxs-lookup"><span data-stu-id="5e656-1273">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="5e656-1274">Mimo że <xref:System.Windows.UIElement.MouseLeave> ścieżki, gdy mysz opuści elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement.IsMouseOver%2A> zmieniono wartość właściwości z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1274">Although <xref:System.Windows.UIElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="5e656-1275">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.MouseLeave> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-1275">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-1276">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.MouseLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1276">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1277">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1277">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1278">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1278">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeaveEvent>|  
|<span data-ttu-id="5e656-1279">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1279">Routing strategy</span></span>|<span data-ttu-id="5e656-1280">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-1280">Direct</span></span>|  
|<span data-ttu-id="5e656-1281">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1281">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="5e656-1282">Zastąpienie <xref:System.Windows.UIElement.OnMouseLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1282">Override <xref:System.Windows.UIElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1283">Identyfikuje <see cref="E:System.Windows.UIElement.MouseLeave" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1283">Identifies the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1284">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1284">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1285">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1285">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1286">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1286">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1287">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1287">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1288">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1288">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1289">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-1289">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1290">Chociaż wydaje się to wykonaj propagacji trasy do drzewa, faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1290">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="5e656-1291">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1291">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="5e656-1292">Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1292">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="5e656-1293">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1293">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="5e656-1294">Po zaznaczeniu <xref:System.Windows.UIElement.MouseLeftButtonDown> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1294">If you mark <xref:System.Windows.UIElement.MouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="5e656-1295">To prawdopodobnie zawiera wygenerowane klasy obsługi zdarzenia takich jak <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1295">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="5e656-1296">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="5e656-1296">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="5e656-1297">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1297">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="5e656-1298">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1298">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5e656-1299">Niektóre klasy formantów może być związanego z używaniem klasy obsługi zdarzenia przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1299">Some control classes might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="5e656-1300">Lewy przycisk myszy w dół zdarzeń jest najbardziej prawdopodobne zdarzenia klasa Obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1300">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="5e656-1301">Klasy obsługi często oznacza odpowiadającego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsłużone.</span><span class="sxs-lookup"><span data-stu-id="5e656-1301">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="5e656-1302">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1302">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="5e656-1303">Wszystkie inne klasy lub wystąpienia obsługi, które są dołączone do elementów w kierunku propagacji do katalogu głównego w drzewie interfejsu użytkownika również nie zwykle są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1303">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="5e656-1304">Można rozwiązać problem, który jest opisane w poprzednim ważne i nadal odbierać <xref:System.Windows.UIElement.MouseLeftButtonDown> zdarzeń związanych z lewego przycisku myszy w dół zdarzenia w klasie pochodnej, który zawiera klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="5e656-1304">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="5e656-1305">Dołącz obsługi <xref:System.Windows.UIElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="5e656-1305">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="5e656-1306">Zauważyć, że jest zdarzeń w wersji zapoznawczej, dlatego trasy rozpoczyna się w katalogu głównym a tuneli do formantu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1306">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="5e656-1307">Zarejestruj Obsługa w formancie proceduralnie przez wywołanie metody <xref:System.Windows.UIElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1307">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1308">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1308">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1309">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1309">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="5e656-1310">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1310">Routing strategy</span></span>|<span data-ttu-id="5e656-1311">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-1311">Direct</span></span>|  
|<span data-ttu-id="5e656-1312">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1312">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-1313">Zastąpienie <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1313">Override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1314">Identyfikuje <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1314">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1315">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1315">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1316">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1316">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1317">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1317">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1318">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1318">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1319">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1319">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1320">Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-1320">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1321">Chociaż wydaje się to wykonaj propagacji trasy do drzewa, faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1321">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="5e656-1322">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1322">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="5e656-1323">Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1323">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="5e656-1324">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1324">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="5e656-1325">Po zaznaczeniu <xref:System.Windows.UIElement.MouseLeftButtonUp> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1325">If you mark <xref:System.Windows.UIElement.MouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="5e656-1326">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="5e656-1326">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="5e656-1327">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1327">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="5e656-1328">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1328">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1329">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1330">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1330">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="5e656-1331">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1331">Routing strategy</span></span>|<span data-ttu-id="5e656-1332">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-1332">Direct</span></span>|  
|<span data-ttu-id="5e656-1333">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1333">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-1334">Zastąpienie <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1334">Override <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1335">Identyfikuje <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1335">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1336">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1336">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1337">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1337">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1338">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1338">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1339">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1339">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1340">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1340">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1341">Występuje, gdy wskaźnik myszy porusza się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-1341">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1342">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.MouseMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-1342">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-1343">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.MouseMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1343">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1344">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1344">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1345">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1345">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseMoveEvent>|  
|<span data-ttu-id="5e656-1346">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1346">Routing strategy</span></span>|<span data-ttu-id="5e656-1347">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1347">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1348">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1348">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="5e656-1349">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1349">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="5e656-1350">Zastąpienie <xref:System.Windows.UIElement.OnMouseMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1350">Override <xref:System.Windows.UIElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1351">Identyfikuje <see cref="E:System.Windows.UIElement.MouseMove" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1351">Identifies the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1352">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1352">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1353">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1353">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1354">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1354">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1355">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1355">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1356">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1356">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1357">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-1357">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1358">Chociaż wydaje się to wykonaj propagacji trasy do drzewa, faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1358">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="5e656-1359">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1359">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="5e656-1360">Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1360">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="5e656-1361">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1361">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="5e656-1362">Po zaznaczeniu <xref:System.Windows.UIElement.MouseRightButtonDown> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1362">If you mark <xref:System.Windows.UIElement.MouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="5e656-1363">To prawdopodobnie zawiera wygenerowane klasy obsługi zdarzenia takich jak <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1363">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="5e656-1364">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="5e656-1364">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="5e656-1365">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1365">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="5e656-1366">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1366">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="5e656-1367">Prawy przycisk myszy zdarzeń często ma natywnej obsługi w scenariuszach aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1367">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="5e656-1368">Na przykład prawym przyciskiem myszy w dół może wyświetlić menu kontekstowe.</span><span class="sxs-lookup"><span data-stu-id="5e656-1368">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="5e656-1369">Zobacz [omówienie ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-1369">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1370">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1370">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1371">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1371">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="5e656-1372">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1372">Routing strategy</span></span>|<span data-ttu-id="5e656-1373">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-1373">Direct</span></span>|  
|<span data-ttu-id="5e656-1374">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1374">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-1375">Zastąpienie <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1375">Override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1376">Identyfikuje <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1376">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1377">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1377">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1378">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1378">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1379">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1379">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1380">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1380">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1381">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1381">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1382">Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-1382">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1383">Chociaż wydaje się to wykonaj propagacji trasy do drzewa, faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1383">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="5e656-1384">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1384">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="5e656-1385">Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1385">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="5e656-1386">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1386">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="5e656-1387">Po zaznaczeniu <xref:System.Windows.UIElement.MouseRightButtonUp> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1387">If you mark <xref:System.Windows.UIElement.MouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="5e656-1388">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="5e656-1388">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="5e656-1389">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1389">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="5e656-1390">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1390">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1391">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1391">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1392">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1392">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="5e656-1393">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1393">Routing strategy</span></span>|<span data-ttu-id="5e656-1394">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-1394">Direct</span></span>|  
|<span data-ttu-id="5e656-1395">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1395">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-1396">Zastąpienie <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1396">Override <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1397">Identyfikuje <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1397">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1398">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1398">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1399">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1399">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1400">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1400">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1401">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1401">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1402">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1402">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1403">Występuje po zwolnieniu dowolnego przycisku myszy nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-1403">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1404">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.MouseUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-1404">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-1405">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.MouseUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1405">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-1406"><xref:System.Windows.UIElement.MouseUp> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.UIElement.MouseLeftButtonUp> lub <xref:System.Windows.UIElement.MouseRightButtonUp>, które odpowiadają wersji jednego z dwóch przycisków standardowej myszki.</span><span class="sxs-lookup"><span data-stu-id="5e656-1406">The <xref:System.Windows.UIElement.MouseUp> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="5e656-1407"><xref:System.Windows.UIElement.MouseLeftButtonUp> i <xref:System.Windows.UIElement.MouseRightButtonUp> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1407"><xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="5e656-1408">Zobacz uwagi dla <xref:System.Windows.UIElement.MouseLeftButtonUp> lub <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1408">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1409">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1409">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1410">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1410">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseUpEvent>|  
|<span data-ttu-id="5e656-1411">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1411">Routing strategy</span></span>|<span data-ttu-id="5e656-1412">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1412">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1413">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1413">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-1414">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1414">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="5e656-1415">Zastąpienie <xref:System.Windows.UIElement.OnMouseUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1415">Override <xref:System.Windows.UIElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1416">Identyfikuje <see cref="E:System.Windows.UIElement.MouseUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1416">Identifies the <see cref="E:System.Windows.UIElement.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1417">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1417">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1418">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1418">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1419">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1419">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1420">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1420">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1421">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1421">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1422">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-1422">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1423">Przechwytywanie myszy lub fokus pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli zostanie wyświetlony <xref:System.Windows.UIElement.MouseWheel> zdarzeń z elementu ukierunkowanych lub przechwycone, wskaźnik myszy może się okazać za pośrednictwem innego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1423">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.UIElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="5e656-1424">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.MouseWheel> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-1424">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseWheel> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-1425">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.MouseWheel> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1425">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-1426">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-1426">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-1427">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-1427">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseWheelEvent>|  
|<span data-ttu-id="5e656-1428">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-1428">Routing strategy</span></span>|<span data-ttu-id="5e656-1429">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-1429">Bubbling</span></span>|  
|<span data-ttu-id="5e656-1430">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-1430">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="5e656-1431">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1431">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="5e656-1432">Zastąpienie <xref:System.Windows.UIElement.OnMouseWheel%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1432">Override <xref:System.Windows.UIElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-1433">Identyfikuje <see cref="E:System.Windows.UIElement.MouseWheel" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1433">Identifies the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1434">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1434">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-1435">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1435">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-1436">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1436">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-1437">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1437">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-1438">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1438">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="5e656-1439">Żądanie przechodzenie, zawierającego właściwości, która wskazuje albo tryb przechodzenia w istniejących kolejności tabulacji lub kierunek przenoszenia wizualnie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1439">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="5e656-1440">Próbuje Przenieś fokus z tego elementu do innego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1440">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="5e656-1441">Przenieś fokus kierunek jest określany przez kierunek wskazówki jest interpretowana w obrębie organizacji elementu nadrzędnego visual dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1441">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns>
          <span data-ttu-id="5e656-1442"><see langword="true" /> Jeśli wykonano żądanej przechodzenie; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-1442"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1443">Upewnij się, że należy sprawdzić wartość zwrotną tej metody.</span><span class="sxs-lookup"><span data-stu-id="5e656-1443">Make sure you check the return value of this method.</span></span> <span data-ttu-id="5e656-1444">Zwracana wartość `false` może być zwrócony, jeśli działa podczas przechodzenia do tabulatora jest definiowana za pomocą formantu kompozycji, a nie żądał żądania przechodzenia do zakodowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1444">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1445">Dane zdarzenia do zdarzenia klucza dostępu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1445">The event data to the access key event.</span></span> <span data-ttu-id="5e656-1446">Raporty danych zdarzeń klucz, do którego została wywołana i wskazać, czy <see cref="T:System.Windows.Input.AccessKeyManager" /> obiekt, który kontroluje wysyłanie tych zdarzeń również wysyłane to wywołanie klucza dostępu do innych elementów.</span><span class="sxs-lookup"><span data-stu-id="5e656-1446">The event data reports which key was invoked, and indicate whether the <see cref="T:System.Windows.Input.AccessKeyManager" /> object that controls the sending of these events also sent this access key invocation to other elements.</span></span></param>
        <summary><span data-ttu-id="5e656-1447">Zawiera klasy obsługi po klucz dostępu zrozumiały dla tego elementu jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5e656-1447">Provides class handling for when an access key that is meaningful for this element is invoked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1448">Nie ma żadnego rzeczywistego zdarzenia AccessKey w <xref:System.Windows.UIElement> klasy lub w innym miejscu, który można wywołać lub dołączyć programy obsługi dla.</span><span class="sxs-lookup"><span data-stu-id="5e656-1448">There is no actual AccessKey event in the <xref:System.Windows.UIElement> class, or elsewhere, which you can raise or attach handlers for.</span></span> <span data-ttu-id="5e656-1449">Zamiast tego zdarzenia jest pochodzi za pośrednictwem klasy dedykowanych Menedżera <xref:System.Windows.Input.AccessKeyManager>, który przetwarza po wszystkie dane wejściowe do wyszukiwania klucze dostępu, które mają zastosowanie do całego modelu wejściowego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1449">Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5e656-1450">Domyślna implementacja tej metody w <see cref="T:System.Windows.UIElement" /> zestawy klawiatury fokus do tego elementu (wywołując <see cref="M:System.Windows.UIElement.Focus" />).</span><span class="sxs-lookup"><span data-stu-id="5e656-1450">The default implementation of this method in <see cref="T:System.Windows.UIElement" /> sets keyboard focus to this element (by calling <see cref="M:System.Windows.UIElement.Focus" />).</span></span> <span data-ttu-id="5e656-1451">Implementacje powinny widoczny przy obsłudze często to zachowanie, jeśli są one focusable, ponieważ jest to oczekiwane zachowanie dla scenariuszy ułatwień dostępu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1451">Implementations should perpetuate this behavior if they are focusable, because it is an expected behavior for accessibility scenarios.</span></span> <span data-ttu-id="5e656-1452">Zauważ, że podstawowa implementacja nie działa z danymi przekazany zdarzenia i zgłasza brak dalszych zdarzenia; po prostu ustawia fokus.</span><span class="sxs-lookup"><span data-stu-id="5e656-1452">Note that the base implementation does nothing with the passed event data and raises no further event; it just sets the focus.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="5e656-1453">Element podrzędny, który jest zmieniany.</span><span class="sxs-lookup"><span data-stu-id="5e656-1453">The child element that is being resized.</span></span></param>
        <summary><span data-ttu-id="5e656-1454">Obsługuje układ zachowanie, gdy zmieniany jest rozmiar elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1454">Supports layout behavior when a child element is resized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1455">Tej metody zwykle nie jest wywoływany przez kod aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1455">This method is typically not called by your application code.</span></span> <span data-ttu-id="5e656-1456">Jest narażony, ten element pochodny klasy można wprowadzać dodatkowe kontrole stanu układu prawdopodobnie nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1456">It is exposed so that derived element classes can make further checks on their own possibly invalid layout state.</span></span> <span data-ttu-id="5e656-1457">Klasy może również próbować optymalizacji, aby zminimalizować czas przetwarzania dla przebiegu układu, na podstawie rozmiaru zmian do elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-1457">Classes could also attempt optimizations to minimize the processing time for a layout pass based on size changes to child elements.</span></span> <span data-ttu-id="5e656-1458">Przykład pochodnej klasy elementu, który implementuje <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> jest <xref:System.Windows.Controls.Grid> formantu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1458">An example derived element class that implements <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> is the <xref:System.Windows.Controls.Grid> control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5e656-1459"><see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> Metoda ma Domyślna implementacja wywołania metody <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> od siebie samego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1459">The <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> method has the default implementation of calling <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> on itself.</span></span> <span data-ttu-id="5e656-1460">Typowa implementacja byłoby: czy niezależnie od optymalizacji własnego elementu obsługuje, a następnie zwykle wywołują podstawowej <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> z co najmniej jednej z gałęzi kodu (jeden wskazany stan "zakłóconych" na własnych miary buforowanie logiki).</span><span class="sxs-lookup"><span data-stu-id="5e656-1460">A typical implementation would be: do whatever optimization your own element supports, and then typically call base <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> from at least one of the code branches (the one that indicated "dirty" state per your own measure caching logic).</span></span>  
  
 <span data-ttu-id="5e656-1461">Ta metoda jest wywoływana tylko podczas przetwarzania układu, jeśli jest podrzędnego samego, który pochodzi zmiany rozmiaru.</span><span class="sxs-lookup"><span data-stu-id="5e656-1461">This method is only called in the layout processing if it was the child itself that originated the size changes.</span></span> <span data-ttu-id="5e656-1462">W przeciwnym razie, jeśli element nadrzędny inicjuje <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> przekazać, zgodnie z regułami systemu układu nadrzędnego jest ponowne obliczanie układu już.</span><span class="sxs-lookup"><span data-stu-id="5e656-1462">Otherwise, if the parent element initiates the <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> pass, according to the layout system rules, the parent is recalculating layout already.</span></span> <span data-ttu-id="5e656-1463">System układu przetwarza układu kolejności podrzędnej do nadrzędnej, więc bez powrotu do zmiany rozmiaru elementu nadrzędnego z wywołań układu elementu podrzędnego jest niezbędne.</span><span class="sxs-lookup"><span data-stu-id="5e656-1463">The layout system processes layout in the order of child-to-parent, so no return to parent element sizing from the child element layout calls is necessary.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-1464">Zwraca specyficzne <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji dla [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastruktury.</span><span class="sxs-lookup"><span data-stu-id="5e656-1464">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="5e656-1465">Określonego typu <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1465">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5e656-1466">Implementacja tej metody jest zazwyczaj wywołanie konstruktora określonego <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> wdrożenia i zwraca je jako wartości zwracane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1466">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span></span>  
  
 <span data-ttu-id="5e656-1467">Wszystkie <see cref="T:System.Windows.UIElement" /> klas pochodnych należy zaimplementować tę metodę w celu zapewnienia ich własnych określonych <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacje do [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastruktury.</span><span class="sxs-lookup"><span data-stu-id="5e656-1467">All <see cref="T:System.Windows.UIElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span> <span data-ttu-id="5e656-1468">Aby uzyskać szczegółowe informacje dotyczące implementacji tego wzorca, zobacz <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-1468">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1469"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1469">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1470">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1470">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1471">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1471">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1472">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1472">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1473">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1473">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1474">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1474">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1475">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1475">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1476">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1476">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1477">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1477">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1478">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1478">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1479">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1479">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1480">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1480">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1481"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1481">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1482">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragLeave" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1482">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1483">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1483">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1484">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1484">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1485">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1485">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1486">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1486">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1487">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1487">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1488">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1488">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1489">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1489">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1490">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1490">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1491">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1491">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1492">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1492">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1493"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1493">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1494">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragOver" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1494">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1495">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1495">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1496">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1496">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1497">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1497">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1498">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1498">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1499">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1499">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1500">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1500">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1501">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1501">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1502">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1502">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1503">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1503">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1504">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1504">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1505"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1505">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1506">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1506">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1507">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1507">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1508">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1508">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1509">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1509">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1510">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1510">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1511">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1511">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1512">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1512">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1513">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1513">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1514">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1514">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1515">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1515">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1516">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1516">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1517"><see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1517">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1518">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.GiveFeedback" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1518">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1519">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1519">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1520">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1520">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1521">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1521">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1522">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1522">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1523">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1523">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1524">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1524">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1525">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1525">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1526">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1526">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1527">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1527">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1528">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1528">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1529">A <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1529">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="5e656-1530">Te dane zdarzenie musi zawierać identyfikator <see cref="E:System.Windows.UIElement.GotFocus" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1530">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="5e656-1531">Zgłasza <see cref="E:System.Windows.UIElement.GotFocus" /> kierowanego zdarzenia przy użyciu dane zdarzenia przekazane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1531">Raises the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1532">Tej metody, mimo że jest to wirtualne, mają domyślną implementację, który wywołuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1532">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="5e656-1533">To na \* implementacji metody jest przeznaczona do zgłoszenia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby zgłosić zdarzenie po <xref:System.Windows.UIElement.IsFocused%2A> zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-1533">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="5e656-1534"><xref:System.Windows.UIElement.OnGotFocus%2A> Implementacji różni się od niektórych innych [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] na \* implementacji, które zapewniają tylko wygodny sposób, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1534">The <xref:System.Windows.UIElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5e656-1535">W przypadku braku zamierzonego i nietypowych potrzebę nie wywoływanie zdarzeń fokusu, upewnij się, że wdrożenie wywołuje implementacji podstawowej.</span><span class="sxs-lookup"><span data-stu-id="5e656-1535">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="5e656-1536">W przeciwnym razie <see cref="E:System.Windows.UIElement.GotFocus" /> zdarzenie nie jest wywoływane podczas operacji typowych użytkownika, które zwykle Ustaw fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1536">Otherwise, the <see cref="E:System.Windows.UIElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="5e656-1537">Jeśli nie chcesz, aby Twoje element ma być focusable, użytkownik może uniemożliwić element focusable przez ustawienie <see cref="P:System.Windows.UIElement.Focusable" /> do <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-1537">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span></span></para>
        </block>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1538"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1538">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1539">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1539">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1540">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1540">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1541">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1541">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1542">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1542">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1543">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1543">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1544">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1544">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1545">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1545">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1546">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1546">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1547">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1547">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1548">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1548">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1549">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1549">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1550"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1550">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1551">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1551">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1552">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1552">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1553">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1553">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1554">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1554">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1555">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1555">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1556">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1556">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1557">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1557">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1558">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1558">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1559">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1559">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1560">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1560">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1561">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1561">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1562"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1562">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1563">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1563">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1564">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1564">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1565">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1565">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1566">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1566">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1567">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1567">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1568">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1568">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1569">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1569">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1570">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1570">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1571">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1571">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1572">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1572">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1573">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1573">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1574">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1574">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1575">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.GotTouchCapture" /> kierowanego zdarzenia, gdy touch są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-1575">Provides class handling for the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1576"><xref:System.Windows.UIElement.OnGotTouchCapture%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1576">The <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-1577">Zastąpienie <xref:System.Windows.UIElement.OnGotTouchCapture%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.GotTouchCapture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1577">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.GotTouchCapture> event.</span></span> <span data-ttu-id="5e656-1578">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement.OnGotTouchCapture%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1578">Be sure to call the base class’s <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1579"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1579">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1580">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1580">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="5e656-1581">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1581">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1582">Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsKeyboardFocused%2A> zmiany właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1582">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="5e656-1583">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5e656-1583">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="5e656-1584">Następnie przy użyciu <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1584">Then the <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="5e656-1585">Zwróć uwagę, że <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1585">Notice that the  <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="5e656-1586">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1586">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="5e656-1587">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1587">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1588">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1588">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="5e656-1589">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="5e656-1589">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1590">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1590">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1591">Wywoływana tuż przed <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> zdarzenie jest wywoływane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="5e656-1591">Invoked just before the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="5e656-1592">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1592">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1593">Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> zmiany właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1593">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> dependency property changes .</span></span> <span data-ttu-id="5e656-1594">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5e656-1594">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="5e656-1595">Następnie przy użyciu <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1595">Then the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="5e656-1596">Zwróć uwagę, że <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1596">Notice that the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="5e656-1597">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1597">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="5e656-1598">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1598">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1599">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1599">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="5e656-1600">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="5e656-1600">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1601"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1601">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1602">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1602">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="5e656-1603">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1603">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1604">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsMouseCaptured%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1604">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="5e656-1605">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5e656-1605">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="5e656-1606">Następnie przy użyciu <xref:System.Windows.UIElement.IsMouseCapturedChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1606">Then the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="5e656-1607">Zwróć uwagę, że <xref:System.Windows.UIElement.IsMouseCapturedChanged> zdarzenie nie jest kierowanego zdarzenia; W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1607">Notice that the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is not a routed event; Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="5e656-1608">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1608">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1609">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1609">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="5e656-1610">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="5e656-1610">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1611">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1611">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1612">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1612">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="5e656-1613">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1613">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5e656-1614">Tej metody wirtualnej jest wywoływane, gdy wartość <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1614">This virtual method is raised when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="5e656-1615">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5e656-1615">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="5e656-1616">Następnie przy użyciu <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1616">Then the <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="5e656-1617">Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia; W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1617">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="5e656-1618">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1618">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1619">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1619">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="5e656-1620">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="5e656-1620">You may call base either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1621"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1621">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1622">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1622">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="5e656-1623">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1623">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1624">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1624">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="5e656-1625">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5e656-1625">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="5e656-1626">Następnie przy użyciu <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1626">Then the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="5e656-1627">Zwróć uwagę, że <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1627">Notice that the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="5e656-1628">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1628">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="5e656-1629">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1629">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1630">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1630">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="5e656-1631">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="5e656-1631">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1632">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1632">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1633">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1633">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="5e656-1634">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1634">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1635">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsStylusCaptured%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1635">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="5e656-1636">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5e656-1636">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="5e656-1637">Następnie przy użyciu <xref:System.Windows.UIElement.IsStylusCapturedChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1637">Then the <xref:System.Windows.UIElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="5e656-1638">Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1638">Notice that the event is not a routed event.</span></span> <span data-ttu-id="5e656-1639">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1639">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="5e656-1640">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1640">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1641">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1641">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="5e656-1642">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="5e656-1642">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1643"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1643">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1644">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1644">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="5e656-1645">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1645">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1646">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1646">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="5e656-1647">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5e656-1647">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="5e656-1648">Następnie przy użyciu <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1648">Then the <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="5e656-1649">Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1649">Notice that the event is not a routed event.</span></span> <span data-ttu-id="5e656-1650">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1650">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="5e656-1651">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1651">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1652">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1652">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="5e656-1653">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="5e656-1653">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1654"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1654">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1655">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1655">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="5e656-1656">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1656">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1657">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> zmienia się wartość właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-1657">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="5e656-1658">Metoda wirtualna jest wywoływane najpierw i można manipulować danymi zdarzenia w razie potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5e656-1658">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="5e656-1659">Następnie przy użyciu <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> zdarzenia z tego samego wystąpienia danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1659">Then the <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="5e656-1660">Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1660">Notice that the event is not a routed event.</span></span> <span data-ttu-id="5e656-1661">W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1661">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="5e656-1662">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1662">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1663">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1663">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="5e656-1664">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="5e656-1664">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1665"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1665">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1666">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1666">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1667">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1667">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1668">Uderzenia w klawisze są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1668">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="5e656-1669">Inne funkcje programowania, które opierają się na naciśnięcia klawiszy, na przykład powiązania wejściowego i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest uwidaczniany jako ogólne naciśnięcie klawisza.</span><span class="sxs-lookup"><span data-stu-id="5e656-1669">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="5e656-1670">Te dane wejściowe funkcji systemu oznaczanie zdarzenia jako obsługiwany, następnie <xref:System.Windows.UIElement.OnKeyDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5e656-1670">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="5e656-1671">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1671">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1672">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1672">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1673">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1673">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1674">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1674">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1675">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1675">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1676">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1676">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1677">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1677">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1678">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1678">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1679">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1679">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1680"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1680">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1681">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1681">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1682">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1682">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1683">Uderzenia w klawisze są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1683">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="5e656-1684">Inne funkcje programowania, które opierają się na naciśnięcia klawiszy, na przykład powiązania wejściowego i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest uwidaczniany jako ogólne naciśnięcie klawisza.</span><span class="sxs-lookup"><span data-stu-id="5e656-1684">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="5e656-1685">Te dane wejściowe funkcji systemu oznaczanie zdarzenia jako obsługiwany, następnie <xref:System.Windows.UIElement.OnKeyUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5e656-1685">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="5e656-1686">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1686">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1687">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1687">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1688">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1688">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1689">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1689">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1690">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1690">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1691">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1691">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1692">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1692">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1693">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1693">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1694">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1694">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1695">A <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1695">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="5e656-1696">Te dane zdarzenie musi zawierać identyfikator <see cref="E:System.Windows.UIElement.LostFocus" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1696">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="5e656-1697">Zgłasza <see cref="E:System.Windows.UIElement.LostFocus" /> kierowanego zdarzenia przy użyciu dane zdarzenia, które jest dostępne.</span><span class="sxs-lookup"><span data-stu-id="5e656-1697">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1698">Tej metody, mimo że jest to wirtualne, mają domyślną implementację, który wywołuje zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1698">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="5e656-1699">To na \* implementacji metody jest przeznaczona do zgłoszenia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby zgłosić zdarzenie po <xref:System.Windows.UIElement.IsFocused%2A> zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="5e656-1699">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="5e656-1700">Ta implementacja różni się od niektórych innych [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] na \* implementacji, które zapewniają tylko wygodny sposób, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1700">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5e656-1701">W przypadku braku zamierzonego i nietypowych potrzebę nie wywoływanie zdarzeń fokusu, upewnij się, że wdrożenie wywołuje implementacji podstawowej.</span><span class="sxs-lookup"><span data-stu-id="5e656-1701">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="5e656-1702">W przeciwnym razie <see cref="E:System.Windows.UIElement.LostFocus" /> zdarzenie nie jest wywoływane podczas operacji typowych użytkownika, które zwykle Ustaw fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1702">Otherwise, the <see cref="E:System.Windows.UIElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="5e656-1703">Jeśli nie chcesz, aby Twoje element ma być focusable, użytkownik może uniemożliwić element focusable przez ustawienie <see cref="P:System.Windows.UIElement.Focusable" /> do <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-1703">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1704"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1704">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1705">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1705">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1706">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1706">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1707">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1707">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1708">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1708">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1709">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1709">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1710">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1710">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1711">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1711">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1712">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1712">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1713">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1713">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1714">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1714">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1715">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1715">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1716"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1716">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1717">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1717">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1718">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1718">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1719">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1719">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1720">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1720">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1721">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1721">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1722">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1722">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1723">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1723">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1724">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1724">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1725">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1725">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1726">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1726">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1727">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1727">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1728"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1728">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1729">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1729">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1730">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1730">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1731">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1731">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1732">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1732">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1733">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1733">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1734">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1734">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1735">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1735">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1736">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1736">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1737">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1737">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1738">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1738">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1739">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1739">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1740">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1740">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1741">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.LostTouchCapture" /> kierowanego zdarzenia, gdy ten element utraci Przechwytywanie touch.</span><span class="sxs-lookup"><span data-stu-id="5e656-1741">Provides class handling for the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1742"><xref:System.Windows.UIElement.OnLostTouchCapture%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1742">The <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-1743">Zastąpienie <xref:System.Windows.UIElement.OnLostTouchCapture%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.LostTouchCapture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1743">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.LostTouchCapture> event.</span></span> <span data-ttu-id="5e656-1744">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement.OnLostTouchCapture%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1744">Be sure to call the base class’s <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1745">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1745">The data for the event.</span></span></param>
        <summary><span data-ttu-id="5e656-1746">Wywoływane, gdy <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1746">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1747"><xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1747">The <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-1748">Zastąpienie <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1748">Override <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event.</span></span> <span data-ttu-id="5e656-1749">Pamiętaj wywołać <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> metody klasy podstawowej, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1749">Be sure to call the <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationCompleted (System.Windows.Input.ManipulationCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationCompleted(class System.Windows.Input.ManipulationCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationCompleted (e As ManipulationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationCompleted(System::Windows::Input::ManipulationCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1750">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1750">The data for the event.</span></span></param>
        <summary><span data-ttu-id="5e656-1751">Wywoływane, gdy <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1751">Called when the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1752"><xref:System.Windows.UIElement.OnManipulationCompleted%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1752">The <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-1753">Zastąpienie <xref:System.Windows.UIElement.OnManipulationCompleted%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.ManipulationCompleted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1753">Override <xref:System.Windows.UIElement.OnManipulationCompleted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationCompleted> event.</span></span> <span data-ttu-id="5e656-1754">Pamiętaj wywołać <xref:System.Windows.UIElement.OnManipulationCompleted%2A> metody klasy podstawowej, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1754">Be sure to call the <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationDelta">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationDelta (System.Windows.Input.ManipulationDeltaEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationDelta(class System.Windows.Input.ManipulationDeltaEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationDelta (e As ManipulationDeltaEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationDelta(System::Windows::Input::ManipulationDeltaEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationDeltaEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1755">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1755">The data for the event.</span></span></param>
        <summary><span data-ttu-id="5e656-1756">Wywoływane, gdy <see cref="E:System.Windows.UIElement.ManipulationDelta" /> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1756">Called when the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1757"><xref:System.Windows.UIElement.OnManipulationDelta%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1757">The <xref:System.Windows.UIElement.OnManipulationDelta%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-1758">Zastąpienie <xref:System.Windows.UIElement.OnManipulationDelta%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.ManipulationDelta> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1758">Override <xref:System.Windows.UIElement.OnManipulationDelta%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="5e656-1759">Pamiętaj wywołać <xref:System.Windows.UIElement.OnManipulationDelta%2A> metody klasy podstawowej, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1759">Be sure to call the <xref:System.Windows.UIElement.OnManipulationDelta%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationInertiaStarting (System.Windows.Input.ManipulationInertiaStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationInertiaStarting(class System.Windows.Input.ManipulationInertiaStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationInertiaStarting (e As ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationInertiaStarting(System::Windows::Input::ManipulationInertiaStartingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationInertiaStartingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1760">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1760">The data for the event.</span></span></param>
        <summary><span data-ttu-id="5e656-1761">Wywoływane, gdy <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1761">Called when the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1762"><xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1762">The <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-1763">Zastąpienie <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.ManipulationInertiaStarting> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1763">Override <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event.</span></span> <span data-ttu-id="5e656-1764">Pamiętaj wywołać <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> metody klasy podstawowej, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1764">Be sure to call the <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted (System.Windows.Input.ManipulationStartedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted(class System.Windows.Input.ManipulationStartedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted (e As ManipulationStartedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted(System::Windows::Input::ManipulationStartedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1765">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1765">The data for the event.</span></span></param>
        <summary><span data-ttu-id="5e656-1766">Wywoływane, gdy <see cref="E:System.Windows.UIElement.ManipulationStarted" /> zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1766">Called when the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1767"><xref:System.Windows.UIElement.OnManipulationStarted%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1767">The <xref:System.Windows.UIElement.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-1768">Zastąpienie <xref:System.Windows.UIElement.OnManipulationStarted%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.ManipulationStarted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1768">Override <xref:System.Windows.UIElement.OnManipulationStarted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarted> event.</span></span> <span data-ttu-id="5e656-1769">Pamiętaj wywołać <xref:System.Windows.UIElement.OnManipulationStarted%2A> metody klasy podstawowej, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1769">Be sure to call the <xref:System.Windows.UIElement.OnManipulationStarted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarting (System.Windows.Input.ManipulationStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarting(class System.Windows.Input.ManipulationStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarting (e As ManipulationStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarting(System::Windows::Input::ManipulationStartingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1770">A <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1770">A <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1771">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.ManipulationStarting" /> kierowanego zdarzenia, gdy procesor manipulowania jest pierwszy utworzony.</span><span class="sxs-lookup"><span data-stu-id="5e656-1771">Provides class handling for the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event that occurs when the manipulation processor is first created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1772"><xref:System.Windows.UIElement.OnManipulationStarting%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1772">The <xref:System.Windows.UIElement.OnManipulationStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-1773">Zastąpienie <xref:System.Windows.UIElement.OnManipulationStarting%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.ManipulationStarting> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1773">Override <xref:System.Windows.UIElement.OnManipulationStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span> <span data-ttu-id="5e656-1774">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement.OnManipulationStarting%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1774">Be sure to call the base class’s <xref:System.Windows.UIElement.OnManipulationStarting%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1775"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1775">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="5e656-1776">Te dane zdarzeń raporty szczegółowe informacje o został naciśnięty przycisk myszy i stanie obsłużone.</span><span class="sxs-lookup"><span data-stu-id="5e656-1776">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="5e656-1777">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1777">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1778">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1778">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1779">Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1779">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="5e656-1780">Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="5e656-1780">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="5e656-1781">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.UIElement.OnMouseDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5e656-1781">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="5e656-1782">Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.UIElement.MouseLeftButtonDown> i <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1782">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="5e656-1783">Jedną z tych zdarzeń może zostać zgłoszone w elemencie odbierającą podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> odebrania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1783">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="5e656-1784">Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1784">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="5e656-1785">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1785">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="5e656-1786">Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-1786">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="5e656-1787">Obsługa <xref:System.Windows.UIElement.OnMouseDown%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy w dół akcje.</span><span class="sxs-lookup"><span data-stu-id="5e656-1787">By handling <xref:System.Windows.UIElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="5e656-1788">Takie zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1788">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="5e656-1789">Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym \* metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1789">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="5e656-1790">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1790">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1791">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1791">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1792">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1792">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1793">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1793">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1794">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1794">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1795">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1795">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1796">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1796">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1797">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1797">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1798">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1798">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1799"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1799">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1800">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1800">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="5e656-1801">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1801">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1802">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1802">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1803">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1803">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="5e656-1804">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="5e656-1804">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="5e656-1805">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1805">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1806">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia, ze strategii routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1806">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="5e656-1807">Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1807">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1808"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1808">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1809">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1809">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="5e656-1810">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1810">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1811">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1811">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1812">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1812">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="5e656-1813">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="5e656-1813">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="5e656-1814">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1814">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1815">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia, ze strategii routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1815">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="5e656-1816">Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1816">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1817"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1817">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="5e656-1818">Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1818">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="5e656-1819">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> kierowanego zdarzenia w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1819">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="5e656-1820">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1820">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1821"><xref:System.Windows.UIElement.MouseLeftButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="5e656-1821">The <xref:System.Windows.UIElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="5e656-1822"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1822"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="5e656-1823">Mimo że można zaznaczyć <xref:System.Windows.UIElement.MouseLeftButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1823">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="5e656-1824">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1824">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="5e656-1825">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="5e656-1825">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="5e656-1826">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-1826">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="5e656-1827">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1827">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e656-1828">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1828">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="5e656-1829">Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1829">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="5e656-1830">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="5e656-1830">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="5e656-1831">Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1831">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="5e656-1832">Na przykład może pochodzić od <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania Podstawowa implementacja; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1832">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1833"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1833">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="5e656-1834">Dane zdarzenia raporty zwolnienie lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1834">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="5e656-1835">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1835">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1836">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1836">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1837"><xref:System.Windows.UIElement.MouseLeftButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="5e656-1837">The <xref:System.Windows.UIElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="5e656-1838"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1838"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="5e656-1839">Mimo że można zaznaczyć <xref:System.Windows.UIElement.MouseLeftButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1839">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="5e656-1840">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1840">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="5e656-1841">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="5e656-1841">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="5e656-1842">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-1842">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="5e656-1843">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1843">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e656-1844">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1844">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1845"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1845">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1846">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1846">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1847">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1847">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1848">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1848">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1849">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1849">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1850">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1850">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1851">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1851">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1852">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1852">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1853">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1853">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1854">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1854">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1855">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1855">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1856">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1856">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1857"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1857">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="5e656-1858">Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1858">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="5e656-1859">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1859">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1860">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1860">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1861"><xref:System.Windows.UIElement.MouseRightButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="5e656-1861">The <xref:System.Windows.UIElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="5e656-1862"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1862"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="5e656-1863">Mimo że można zaznaczyć <xref:System.Windows.UIElement.MouseRightButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1863">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="5e656-1864">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1864">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="5e656-1865">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="5e656-1865">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="5e656-1866">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-1866">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="5e656-1867">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1867">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e656-1868">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1868">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="5e656-1869">Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-1869">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="5e656-1870">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="5e656-1870">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="5e656-1871">Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1871">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="5e656-1872">Na przykład może pochodzić od <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> jednak w klasie pochodnej bez base wywołujący; to zastąpienie wyłącza kontekstu menu usług formantu, które są częścią z <xref:System.Windows.Controls.Control> zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="5e656-1872">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1873"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1873">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="5e656-1874">Dane zdarzenia raporty zwolnienie prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1874">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="5e656-1875">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1875">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1876">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1876">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1877"><xref:System.Windows.UIElement.MouseRightButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="5e656-1877">The <xref:System.Windows.UIElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="5e656-1878"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1878"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="5e656-1879">Mimo że można zaznaczyć <xref:System.Windows.UIElement.MouseRightButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1879">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="5e656-1880">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1880">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="5e656-1881">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="5e656-1881">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="5e656-1882">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-1882">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="5e656-1883">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1883">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e656-1884">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1884">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1885"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1885">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="5e656-1886">Dane zdarzenia raporty, wydanej przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1886">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="5e656-1887">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1887">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1888">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1888">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1889">Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="5e656-1889">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="5e656-1890">Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="5e656-1890">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="5e656-1891">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.UIElement.OnMouseUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5e656-1891">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="5e656-1892">Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.UIElement.MouseLeftButtonUp> i <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-1892">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="5e656-1893">Jedną z tych zdarzeń może zostać wywołane w elemencie odbierania podczas <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> odebrania.</span><span class="sxs-lookup"><span data-stu-id="5e656-1893">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="5e656-1894">Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1894">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="5e656-1895">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1895">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="5e656-1896">Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-1896">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="5e656-1897">Obsługa <xref:System.Windows.UIElement.OnMouseUp%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy zapasowej akcje.</span><span class="sxs-lookup"><span data-stu-id="5e656-1897">By handling <xref:System.Windows.UIElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="5e656-1898">Takie zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1898">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="5e656-1899">Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym \* metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="5e656-1899">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="5e656-1900">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1900">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1901">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1901">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1902">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1902">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1903">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1903">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1904">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1904">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1905">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1905">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1906">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1906">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1907">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1907">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1908">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1908">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1909"><see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1909">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1910">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1910">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1911">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1911">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1912">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1912">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1913">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1913">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1914">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1914">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1915">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1915">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1916">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1916">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1917">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1917">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1918">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1918">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1919">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1919">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1920">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1920">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1921"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1921">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1922">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1922">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1923">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1923">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1924">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1924">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1925">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1925">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1926">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1926">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1927">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1927">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1928">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1928">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1929">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1929">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1930">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1930">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1931">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1931">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1932">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1932">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-1933">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1933">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1934"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1934">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1935">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1935">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1936">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1936">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1937">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1937">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1938">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1938">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1939">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1939">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1940">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1940">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1941">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1941">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1942">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1942">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1943">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1943">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1944">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1944">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1945">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1945">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-1946">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1946">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1947"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1947">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1948">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1948">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1949">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1949">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1950">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1950">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1951">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1951">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1952">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1952">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1953">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1953">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1954">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1954">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1955">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1955">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1956">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1956">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1957">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1957">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1958">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1958">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-1959">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1959">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1960"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1960">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1961">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDrop" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1961">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1962">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1962">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1963">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1963">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1964">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1964">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1965">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1965">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1966">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1966">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1967">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1967">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1968">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1968">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1969">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1969">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1970">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1970">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1971">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1971">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-1972">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1972">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1973"><see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1973">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1974">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1974">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1975">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1975">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1976">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1976">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1977">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1977">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1978">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1978">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1979">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1979">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1980">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1980">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1981">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1981">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1982">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1982">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1983">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1983">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1984">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1984">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-1985">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1985">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1986"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1986">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-1987">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1987">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-1988">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1988">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-1989">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1989">This method has no default implementation.</span></span> <span data-ttu-id="5e656-1990">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-1990">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-1991">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-1991">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-1992">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1992">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-1993">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-1993">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-1994">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1994">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-1995">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-1995">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-1996">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1996">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-1997">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1997">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-1998">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-1998">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-1999"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-1999">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2000">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2000">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2001">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2001">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2002">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2002">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2003">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2003">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2004">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2004">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2005">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2005">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2006">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2006">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2007">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2007">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2008">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2008">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2009">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2009">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2010">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2010">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2011">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2011">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2012"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2012">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2013">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2013">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2014">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2014">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2015">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2015">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2016">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2016">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2017">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2017">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2018">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2018">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2019">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2019">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2020">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2020">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2021">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2021">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2022">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2022">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2023">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2023">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2024">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2024">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2025"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2025">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2026">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2026">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2027">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2027">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2028">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2028">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2029">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2029">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2030">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2030">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2031">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2031">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2032">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2032">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2033">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2033">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2034">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2034">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2035">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2035">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2036">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2036">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2037">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2037">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2038"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2038">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="5e656-2039">Dane zdarzenia zgłasza, że zostały naciśnięte przyciski myszy jeden lub więcej.</span><span class="sxs-lookup"><span data-stu-id="5e656-2039">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="5e656-2040">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2040">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2041">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2041">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2042">Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="5e656-2042">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="5e656-2043">Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="5e656-2043">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="5e656-2044">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5e656-2044">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="5e656-2045">Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2045">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="5e656-2046">Jedną z tych zdarzeń może zostać zgłoszone w elemencie odbierającą podczas <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> odebrania.</span><span class="sxs-lookup"><span data-stu-id="5e656-2046">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="5e656-2047">Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2047">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="5e656-2048">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2048">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="5e656-2049">Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-2049">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="5e656-2050">Obsługa <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy w dół akcje.</span><span class="sxs-lookup"><span data-stu-id="5e656-2050">By handling <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="5e656-2051">Takie zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2051">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="5e656-2052">Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym \* metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2052">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="5e656-2053">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2053">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2054">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2054">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2055">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2055">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2056">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2056">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2057">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2057">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2058">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2058">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2059">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2059">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2060">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2060">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2061">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2061">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2062">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2062">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2063"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2063">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="5e656-2064">Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2064">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="5e656-2065">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2065">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2066">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2066">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2067"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="5e656-2067">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="5e656-2068"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2068"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="5e656-2069">Mimo że można zaznaczyć <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2069">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="5e656-2070">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2070">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="5e656-2071">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="5e656-2071">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="5e656-2072">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-2072">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="5e656-2073">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2073">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e656-2074">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2074">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="5e656-2075">Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2075">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="5e656-2076">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="5e656-2076">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="5e656-2077">Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2077">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="5e656-2078">Na przykład może pochodzić od <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania Podstawowa implementacja; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2078">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2079"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2079">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="5e656-2080">Dane zdarzenia raporty zwolnienie lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2080">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="5e656-2081">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2081">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2082">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2082">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2083"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="5e656-2083">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="5e656-2084"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2084"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="5e656-2085">Mimo że można zaznaczyć <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2085">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="5e656-2086">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2086">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="5e656-2087">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="5e656-2087">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="5e656-2088">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-2088">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="5e656-2089">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2089">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e656-2090">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2090">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2091"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2091">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2092">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2092">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2093">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2093">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2094">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2094">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2095">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2095">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2096">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2096">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2097">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2097">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2098">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2098">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2099">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2099">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2100">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2100">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2101">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2101">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2102">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2102">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2103">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2103">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2104"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2104">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="5e656-2105">Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2105">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="5e656-2106">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2106">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2107">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2107">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2108"><xref:System.Windows.UIElement.PreviewMouseRightButtonDown> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="5e656-2108">The <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="5e656-2109"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2109"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="5e656-2110">Mimo że można zaznaczyć <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2110">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="5e656-2111">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2111">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="5e656-2112">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="5e656-2112">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="5e656-2113">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-2113">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="5e656-2114">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2114">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e656-2115">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2115">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="5e656-2116">Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2116">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="5e656-2117">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="5e656-2117">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="5e656-2118">Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2118">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="5e656-2119">Na przykład może pochodzić od <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> jednak w klasie pochodnej bez base wywołujący; to zastąpienie wyłącza kontekstu menu usług formantu, które są częścią z <xref:System.Windows.Controls.Control> zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="5e656-2119">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2120"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2120">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="5e656-2121">Dane zdarzenia raporty zwolnienie prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2121">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="5e656-2122">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2122">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2123">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2123">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2124"><xref:System.Windows.UIElement.PreviewMouseRightButtonUp> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich.</span><span class="sxs-lookup"><span data-stu-id="5e656-2124">The <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="5e656-2125"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2125"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="5e656-2126">Mimo że można zaznaczyć <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2126">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="5e656-2127">Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2127">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="5e656-2128">Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="5e656-2128">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="5e656-2129">Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-2129">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="5e656-2130">W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2130">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5e656-2131">Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2131">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2132"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2132">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="5e656-2133">Dane zdarzenia raporty wydane jednego lub więcej przycisków myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2133">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="5e656-2134">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2134">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2135">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2135">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2136">Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego.</span><span class="sxs-lookup"><span data-stu-id="5e656-2136">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="5e656-2137">Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="5e656-2137">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="5e656-2138">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="5e656-2138">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="5e656-2139">Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2139">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="5e656-2140">Jedną z tych zdarzeń może zostać wywołane w elemencie odbierania podczas <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> odebrania.</span><span class="sxs-lookup"><span data-stu-id="5e656-2140">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="5e656-2141">Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2141">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="5e656-2142">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2142">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="5e656-2143">Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-2143">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="5e656-2144">Obsługa <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy zapasowej akcje.</span><span class="sxs-lookup"><span data-stu-id="5e656-2144">By handling <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="5e656-2145">Takie zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2145">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="5e656-2146">Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym \* metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2146">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="5e656-2147">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2147">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2148">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2148">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2149">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2149">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2150">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2150">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2151">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2151">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2152">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2152">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2153">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2153">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2154">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2154">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2155">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2155">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2156"><see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2156">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2157">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2157">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2158">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2158">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2159">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2159">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2160">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2160">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2161">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2161">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2162">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2162">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2163">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2163">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2164">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2164">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2165">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2165">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2166">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2166">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2167">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2167">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2168">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2168">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2169"><see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2169">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2170">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2170">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2171">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2171">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2172">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2172">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2173">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2173">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2174">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2174">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2175">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2175">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2176">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2176">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2177">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2177">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2178">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2178">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2179">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2179">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2180">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2180">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2181">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2181">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2182"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2182">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2183">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2183">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2184">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2184">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2185">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2185">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2186">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2186">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2187">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2187">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2188">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2188">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2189">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2189">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2190">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2190">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2191">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2191">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2192">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2192">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2193">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2193">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2194">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2194">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2195"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2195">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2196">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2196">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2197">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2197">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2198">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2198">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2199">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2199">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2200">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2200">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2201">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2201">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2202">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2202">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2203">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2203">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2204">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2204">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2205">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2205">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2206">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2206">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2207">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2207">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2208"><see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2208">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2209">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2209">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2210">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2210">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2211">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2211">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2212">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2212">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2213">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2213">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2214">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2214">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2215">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2215">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2216">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2216">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2217">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2217">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2218">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2218">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2219">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2219">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2220">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2220">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2221"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2221">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2222">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2222">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2223">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2223">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2224">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2224">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2225">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2225">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2226">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2226">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2227">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2227">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2228">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2228">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2229">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2229">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2230">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2230">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2231">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2231">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2232">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2232">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2233">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2233">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2234"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2234">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2235">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2235">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2236">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2236">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2237">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2237">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2238">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2238">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2239">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2239">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2240">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2240">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2241">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2241">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2242">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2242">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2243">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2243">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2244">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2244">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2245">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2245">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2246">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2246">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2247"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2247">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2248">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2248">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2249">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2249">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2250">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2250">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2251">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2251">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2252">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2252">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2253">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2253">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2254">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2254">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2255">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2255">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2256">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2256">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2257">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2257">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2258">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2258">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2259">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2259">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2260"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2260">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2261">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2261">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2262">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2262">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2263">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2263">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2264">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2264">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2265">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2265">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2266">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2266">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2267">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2267">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2268">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2268">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2269">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2269">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2270">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2270">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2271">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2271">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2272">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2272">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2273"><see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2273">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2274">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2274">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2275">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2275">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2276">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2276">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2277">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2277">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2278">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2278">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2279">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2279">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2280">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2280">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2281">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2281">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2282">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2282">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2283">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2283">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2284">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2284">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2285">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2285">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2286"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2286">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2287">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2287">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2288">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2288">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2289">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2289">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2290">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2290">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2291">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2291">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2292">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2292">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2293">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2293">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2294">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2294">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2295">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2295">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2296">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2296">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2297">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2297">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2298">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2298">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2299"><see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2299">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2300">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2300">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2301">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2301">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2302">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2302">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2303">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2303">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2304">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2304">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2305">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2305">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2306">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2306">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2307">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2307">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2308">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2308">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2309">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2309">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2310">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2310">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="5e656-2311">Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2311">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.UIElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2312">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2312">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2313">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> kierowanego zdarzenia, gdy touch naciśnie tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2313">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2314"><xref:System.Windows.UIElement.OnPreviewTouchDown%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2314">The <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-2315">Zastąpienie <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.PreviewTouchDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2315">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="5e656-2316">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2316">Be sure to call the base class’s <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2317">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2317">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2318">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch znajduje się wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2318">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2319"><xref:System.Windows.UIElement.OnPreviewTouchMove%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2319">The <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-2320">Zastąpienie <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.PreviewTouchMove> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2320">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="5e656-2321">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2321">Be sure to call the base class’s <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2322">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2322">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2323">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> kierowanego zdarzenia, która występuje po zwolnieniu touch wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2323">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2324"><xref:System.Windows.UIElement.OnPreviewTouchUp%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2324">The <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-2325">Zastąpienie <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.PreviewTouchUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2325">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="5e656-2326">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2326">Be sure to call the base class’s <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2327"><see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2327">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2328">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2328">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2329">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2329">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2330">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2330">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2331">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2331">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2332">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2332">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2333">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2333">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2334">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2334">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2335">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2335">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2336">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2336">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2337">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2337">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2338">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2338">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2339"><see cref="T:System.Windows.Input.QueryCursorEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2339">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2340">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2340">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2341">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2341">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2342">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2342">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2343">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2343">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2344">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2344">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2345">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2345">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2346">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2346">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2347">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2347">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2348">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2348">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2349">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2349">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2350">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2350">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected virtual void OnRender (System.Windows.Media.DrawingContext drawingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRender(class System.Windows.Media.DrawingContext drawingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRender(System::Windows::Media::DrawingContext ^ drawingContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="drawingContext"><span data-ttu-id="5e656-2351">Instrukcje rysowania określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2351">The drawing instructions for a specific element.</span></span> <span data-ttu-id="5e656-2352">Ten kontekst został dostarczony do systemu układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2352">This context is provided to the layout system.</span></span></param>
        <summary><span data-ttu-id="5e656-2353">W przypadku przesłonięcia w klasie pochodnej, uczestniczy w operacjach renderowania, które są kierowane przez system układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2353">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span></span> <span data-ttu-id="5e656-2354">Instrukcje renderowania dla tego elementu nie są używane, bezpośrednio po wywołaniu tej metody, a zamiast tego są zachowywane do użytku później asynchroniczne układ i rysowanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2354">The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2355">Ta metoda nie ma żadnej implementacji domyślnej <xref:System.Windows.UIElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2355">This method has no default implementation in the <xref:System.Windows.UIElement> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-2356">Poniższy przykład kodu pokazuje możliwości implementacji dla klasy pochodnej panelu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2356">The following code example shows a possible implementation for a panel derived class.</span></span>  
  
 [!code-csharp[LightWeightCustomPanel#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LightWeightCustomPanel/CSharp/OffsetPanel.cs#1)]
 [!code-vb[LightWeightCustomPanel#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/LightWeightCustomPanel/visualbasic/offsetpanel.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5e656-2357"><see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> Metodę można przesłonić można dodać dodatkowe elementy graficzne (wcześniej zdefiniowane w drzewa logicznego) do renderowanego elementu, takie jak efekty lub modułu definiowania układu kodu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2357">The <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> method can be overridden to add further graphical elements (not previously defined in a logical tree) to a rendered element, such as effects or adorners.</span></span> <span data-ttu-id="5e656-2358">A <see cref="T:System.Windows.Media.DrawingContext" /> obiekt jest przekazywany jako argument, który udostępnia metody Rysowanie kształtów, tekst, obrazy lub wideo.</span><span class="sxs-lookup"><span data-stu-id="5e656-2358">A <see cref="T:System.Windows.Media.DrawingContext" /> object is passed as an argument, which provides methods for drawing shapes, text, images or videos.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRenderSizeChanged (System.Windows.SizeChangedInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRenderSizeChanged (info As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ info);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="5e656-2359">Spakowane parametrów (<see cref="T:System.Windows.SizeChangedInfo" />), w tym rozmiary stary i nowy i które wymiaru faktycznie zmiany.</span><span class="sxs-lookup"><span data-stu-id="5e656-2359">The packaged parameters (<see cref="T:System.Windows.SizeChangedInfo" />), which includes old and new sizes, and which dimension actually changes.</span></span></param>
        <summary><span data-ttu-id="5e656-2360">W przypadku przesłonięcia w klasie pochodnej, uczestniczy w operacjach renderowania, które są kierowane przez system układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2360">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span></span> <span data-ttu-id="5e656-2361">Ta metoda jest wywoływana po zaktualizowaniu układ i przed renderowaniem, jeśli element <see cref="P:System.Windows.UIElement.RenderSize" /> został zmieniony w wyniku aktualizacji układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2361">This method is invoked after layout update, and before rendering, if the element's <see cref="P:System.Windows.UIElement.RenderSize" /> has changed as a result of layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2362">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2362">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2363">Typowy element poziomie struktury WPF używa implementację przesłonięcia z <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2363">A typical WPF framework-level element uses the override implementation from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="5e656-2364"><xref:System.Windows.FrameworkElement> Unieważnia implementacji <xref:System.Windows.FrameworkElement.Width%2A> i <xref:System.Windows.FrameworkElement.Height%2A> właściwości i uchwytów podstawy remaking układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2364">The <xref:System.Windows.FrameworkElement> implementation invalidates the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties and handles the basics of remaking the layout.</span></span> <span data-ttu-id="5e656-2365">Zastępowanie <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> na <xref:System.Windows.UIElement> poziomu oznacza to, że implementacji elementu celowo nie używa implementacji poziomie struktury WPF, w związku z tym danego elementu musi obsługiwać logiki układu więcej bezpośrednio, zwykle przez zapisywanie układ systemu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2365">Overriding <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> at the <xref:System.Windows.UIElement> level implies that your element implementation is deliberately not using the WPF framework-level implementation, and therefore your element must handle layout logic more directly, typically by writing a replacement layout system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2366"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2366">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2367">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2367">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2368">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2368">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2369">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2369">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2370">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2370">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2371">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2371">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2372">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2372">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2373">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2373">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2374">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2374">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2375">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2375">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2376">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2376">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2377">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2377">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2378"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2378">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2379">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2379">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2380">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2380">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2381">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2381">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2382">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2382">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2383">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2383">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2384">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2384">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2385">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2385">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2386">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2386">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2387">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2387">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2388">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2388">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2389">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2389">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2390"><see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2390">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2391">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2391">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2392">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2392">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2393">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2393">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2394">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2394">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2395">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2395">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2396">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2396">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2397">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2397">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2398">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2398">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2399">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2399">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2400">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2400">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2401">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2401">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2402"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2402">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2403">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> dołączone zdarzenie jest zgłaszane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2403">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="5e656-2404">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2404">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2405">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2405">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2406">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2406">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="5e656-2407">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="5e656-2407">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="5e656-2408">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2408">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2409">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2409">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2410">Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2410">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2411"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2411">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2412">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2412">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2413">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2413">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2414">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2414">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2415">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2415">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2416">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2416">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2417">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2417">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2418">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2418">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2419">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2419">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2420">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2420">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2421">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2421">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2422">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2422">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2423"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2423">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2424">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2424">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2425">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2425">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2426">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2426">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2427">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2427">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2428">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2428">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2429">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2429">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2430">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2430">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2431">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2431">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2432">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2432">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2433">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2433">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2434">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2434">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2435"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2435">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2436">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> dołączone zdarzenie jest zgłaszane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2436">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="5e656-2437">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2437">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2438">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2438">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2439">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2439">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="5e656-2440">Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="5e656-2440">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="5e656-2441">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2441">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2442">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2442">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2443">Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2443">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2444"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2444">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2445">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2445">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2446">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2446">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2447">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2447">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2448">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2448">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2449">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2449">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2450">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2450">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2451">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2451">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2452">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2452">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2453">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2453">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2454">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2454">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2455">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2455">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2456"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2456">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2457">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2457">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2458">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2458">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2459">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2459">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2460">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2460">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2461">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2461">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2462">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2462">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2463">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2463">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2464">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2464">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2465">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2465">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2466">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2466">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2467">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2467">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2468"><see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2468">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2469">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2469">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2470">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2470">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2471">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2471">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2472">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2472">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2473">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2473">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2474">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2474">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2475">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2475">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2476">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2476">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2477">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2477">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2478">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2478">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2479">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2479">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2480"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2480">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2481">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2481">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2482">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2482">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2483">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2483">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2484">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2484">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2485">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2485">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2486">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2486">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2487">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2487">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2488">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2488">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2489">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2489">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2490">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2490">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2491">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2491">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2492"><see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2492">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2493">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2493">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="5e656-2494">Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2494">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2495">Ta metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2495">This method has no default implementation.</span></span> <span data-ttu-id="5e656-2496">Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2496">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="5e656-2497">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2497">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="5e656-2498">W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2498">In this case the matching event is a routed event.</span></span> <span data-ttu-id="5e656-2499">Wzorzec implementacji metod On \* są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-2499">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="5e656-2500">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2500">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="5e656-2501">Go nie należy próbować reraise zdarzeń w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="5e656-2501">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="5e656-2502">Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2502">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="5e656-2503">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2503">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2504">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2504">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2505">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.TouchDown" /> kierowanego zdarzenia, gdy touch naciśnie wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2505">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2506"><xref:System.Windows.UIElement.OnTouchDown%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2506">The <xref:System.Windows.UIElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-2507">Zastąpienie <xref:System.Windows.UIElement.OnTouchDown%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.TouchDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2507">Override <xref:System.Windows.UIElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="5e656-2508">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement.OnTouchDown%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2508">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2509">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2509">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2510">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.TouchEnter" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch z zewnątrz do wewnątrz granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2510">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2511"><xref:System.Windows.UIElement.OnTouchEnter%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2511">The <xref:System.Windows.UIElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-2512">Zastąpienie <xref:System.Windows.UIElement.OnTouchEnter%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.TouchEnter> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2512">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchEnter> event.</span></span> <span data-ttu-id="5e656-2513">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement.OnTouchEnter%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2513">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2514">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2514">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2515">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.TouchLeave" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch z wnętrza poza granicami tego <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-2515">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2516"><xref:System.Windows.UIElement.OnTouchLeave%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2516">The <xref:System.Windows.UIElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-2517">Zastąpienie <xref:System.Windows.UIElement.OnTouchLeave%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.TouchLeave> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2517">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchLeave> event.</span></span> <span data-ttu-id="5e656-2518">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement.OnTouchLeave%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2518">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2519">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2519">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2520">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.TouchMove" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch znajduje się wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2520">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2521"><xref:System.Windows.UIElement.OnTouchMove%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2521">The <xref:System.Windows.UIElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-2522">Zastąpienie <xref:System.Windows.UIElement.OnTouchMove%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.TouchMove> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2522">Override <xref:System.Windows.UIElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchMove> event.</span></span> <span data-ttu-id="5e656-2523">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement.OnTouchMove%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2523">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-2524">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2524">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e656-2525">Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement.TouchUp" /> kierowanego zdarzenia, która występuje po zwolnieniu touch wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2525">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2526"><xref:System.Windows.UIElement.OnTouchUp%2A> Metoda ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2526">The <xref:System.Windows.UIElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="5e656-2527">Zastąpienie <xref:System.Windows.UIElement.OnTouchUp%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement.TouchUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2527">Override <xref:System.Windows.UIElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="5e656-2528">Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement.OnTouchUp%2A> metody, która podstawowa klasy odbierać zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2528">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="5e656-2529">Element nadrzędny poprzedniej.</span><span class="sxs-lookup"><span data-stu-id="5e656-2529">The previous parent.</span></span> <span data-ttu-id="5e656-2530">Może to być dostarczone jako <see langword="null" /> Jeśli <see cref="T:System.Windows.DependencyObject" /> nie ma element nadrzędny wcześniej.</span><span class="sxs-lookup"><span data-stu-id="5e656-2530">This may be provided as <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a parent element previously.</span></span></param>
        <summary><span data-ttu-id="5e656-2531">Wywoływane, gdy element nadrzędny tego <see cref="T:System.Windows.UIElement" /> raporty zmiany do elementu nadrzędnego visual podstawowej.</span><span class="sxs-lookup"><span data-stu-id="5e656-2531">Invoked when the parent element of this <see cref="T:System.Windows.UIElement" /> reports a change to its underlying visual parent.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="5e656-2532">Jeśli przesłonić tę metodę, zawsze wywoływać implementację podstawową.</span><span class="sxs-lookup"><span data-stu-id="5e656-2532">If you override this method, always call the base implementation.</span></span> <span data-ttu-id="5e656-2533">Domyślna implementacja podstawowej wykonuje niektóre wewnętrzny konserwacji właściwości dziedziczone wstecznego stanu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2533">The default base implementation performs some internal maintenance of reverse-inherited property state.</span></span> <span data-ttu-id="5e656-2534">Nie można wywoływać implementację podstawową spowoduje unieważnienie tego stanu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2534">Failing to call the base implementation will invalidate this state.</span></span>  
  
 <span data-ttu-id="5e656-2535">Ta metoda zastępuje <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-2535">This method overrides <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span></span> <span data-ttu-id="5e656-2536"><see cref="T:System.Windows.FrameworkElement" /> i <see cref="T:System.Windows.Window" /> zarówno także zastępować <see cref="T:System.Windows.UIElement" /> implementacja <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, i <see cref="T:System.Windows.Window" /> uszczelnienia go.</span><span class="sxs-lookup"><span data-stu-id="5e656-2536"><see cref="T:System.Windows.FrameworkElement" /> and <see cref="T:System.Windows.Window" /> both also override the <see cref="T:System.Windows.UIElement" /> implementation of <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, and <see cref="T:System.Windows.Window" /> seals it.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2537">Pobiera lub ustawia współczynnik przezroczystości do całej <see cref="T:System.Windows.UIElement" /> gdy jest on renderowany w [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5e656-2537">Gets or sets the opacity factor applied to the entire <see cref="T:System.Windows.UIElement" /> when it is rendered in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="5e656-2538">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-2538">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="5e656-2539">Współczynnik przezroczystości.</span><span class="sxs-lookup"><span data-stu-id="5e656-2539">The opacity factor.</span></span> <span data-ttu-id="5e656-2540">Nieprzezroczystość domyślny to 1.0.</span><span class="sxs-lookup"><span data-stu-id="5e656-2540">Default opacity is 1.0.</span></span> <span data-ttu-id="5e656-2541">Oczekiwanych wartości należą do zakresu od 0,0 do 1,0.</span><span class="sxs-lookup"><span data-stu-id="5e656-2541">Expected values are between 0.0 and 1.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2542">Wartość domyślna 1.0 to domyślne, dostarczone przez początkowe metadane ta właściwość zależności na <xref:System.Windows.UIElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2542">The 1.0 default value is the default provided by the initial metadata of this dependency property on the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="5e656-2543">Inne klasy pochodne mogą potencjalnie zmienić wartość domyślną przez zastępowanie metadanych z wewnątrz ich konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2543">Other derived classes may potentially change this default value by overriding the metadata from within their class constructor.</span></span>  
  
 <span data-ttu-id="5e656-2544">Wartość <xref:System.Windows.UIElement.Opacity%2A> nie będzie stosowane do rzeczywistego układu, chyba, że element jest również widoczna (<xref:System.Windows.UIElement.IsVisible%2A> jest `true`).</span><span class="sxs-lookup"><span data-stu-id="5e656-2544">The value of <xref:System.Windows.UIElement.Opacity%2A> won't be applied to actual layout unless the element is also visible (<xref:System.Windows.UIElement.IsVisible%2A> is `true`).</span></span>  
  
 <span data-ttu-id="5e656-2545"><xref:System.Windows.UIElement.Opacity%2A> została zastosowana z elementy nadrzędne w niżej na drzewie element na elementy podrzędne, ale widoczne skutków zagnieżdżonych nieprzezroczystość ustawienia nie są wskazane w wartości właściwości elementów podrzędnych indywidualnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2545"><xref:System.Windows.UIElement.Opacity%2A> is applied from parent elements on down the element tree to child elements, but the visible effects of the nested opacity settings aren't indicated in the property value of individual child elements.</span></span> <span data-ttu-id="5e656-2546">Na przykład, jeśli lista ma nieprzezroczystość 50% (0,5) i jeden z jego elementów listy ma własną nieprzezroczystość ustawioną 20% (0,2), net nieprzezroczystość widoczne dla tego elementu listy będzie renderowany tak, jakby była 10% (0,1), ale wartość właściwości elementu listy <xref:System.Windows.UIElement.Opacity%2A> nadal będzie właściwości  0,2 po otrzymaniu kwerendy.</span><span class="sxs-lookup"><span data-stu-id="5e656-2546">For instance, if a list has a 50% (0.5) opacity and one of its list items has its own opacity set to 20% (0.2), the net visible opacity for that list item will be rendered as if it were 10% (0.1), but the property value of the list item <xref:System.Windows.UIElement.Opacity%2A> property would still be 0.2 when queried.</span></span>  
  
 <span data-ttu-id="5e656-2547">Nawet jeśli nieprzezroczystość zadeklarowane lub obliczane to 0, element nadal uczestniczy w zdarzeniach wejściowych i poleceń i jest potencjalnie focusable.</span><span class="sxs-lookup"><span data-stu-id="5e656-2547">Even if the declared or evaluated opacity is 0, an element still participates in input events and commands, and is potentially focusable.</span></span> <span data-ttu-id="5e656-2548">Ten aspekt mogą być przydatne dla wystąpienia obiektu nieprzezroczystość zero (na przykład kształtu) można używać maskowania obiektów z elementami przezroczysty.</span><span class="sxs-lookup"><span data-stu-id="5e656-2548">This aspect can be useful, for instance you can use an opacity-zero object (such as a shape) for masking underlying objects with transparent elements.</span></span> <span data-ttu-id="5e656-2549">Obiekt zero nieprzezroczystość następnie może obsłużyć zdarzenia wejściowego przetwarzania dla podstawowej obszaru.</span><span class="sxs-lookup"><span data-stu-id="5e656-2549">The opacity-zero object can then handle all the input event processing for an underlying area.</span></span> <span data-ttu-id="5e656-2550">Jednak `Background` lub `Fill` obiektu lub kształt powinien mieć ustawioną wartość, nawet jeśli jest ona <xref:System.Windows.Media.Brushes.Transparent%2A>, w przeciwnym razie testowania trafień nie jest włączona i zdarzenia nie są odbierane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2550">However, the `Background` or `Fill` of the object or shape should be set to a value, even if it is <xref:System.Windows.Media.Brushes.Transparent%2A>, otherwise hit testing is not enabled, and no events are received.</span></span>  
  
<a name="dependencyPropertyInfo_Opacity"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-2551">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-2551">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2552">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2552">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityProperty>|  
|<span data-ttu-id="5e656-2553">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-2553">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-2554">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-2554">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.OpacityMask" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMask">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush OpacityMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush OpacityMask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.OpacityMask" />
      <MemberSignature Language="VB.NET" Value="Public Property OpacityMask As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ OpacityMask { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2555">Pobiera lub ustawia maskę przezroczystości jako <see cref="T:System.Windows.Media.Brush" /> implementację, która jest stosowana do dowolnego maskowania kanału alfa dla renderowanej zawartości tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2555">Gets or sets an opacity mask, as a <see cref="T:System.Windows.Media.Brush" /> implementation that is applied to any alpha-channel masking for the rendered content of this element.</span></span>  <span data-ttu-id="5e656-2556">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-2556">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="5e656-2557">Pędzla do użycia na potrzeby nieprzezroczystość maskowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-2557">The brush to use for opacity masking.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2558">Ta właściwość używa tylko niezależnie od kanału alfa wartość jest podana <xref:System.Windows.Media.Brush>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2558">This property only uses whatever the alpha channel value is for the supplied <xref:System.Windows.Media.Brush>.</span></span> <span data-ttu-id="5e656-2559">Inne kanały <xref:System.Windows.Media.Brush>do renderowania zawartości (czerwony, zielony lub niebieski) są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2559">The other channels of the <xref:System.Windows.Media.Brush>'s rendered content (Red, Green, or Blue) are ignored.</span></span>  
  
 <span data-ttu-id="5e656-2560">Najbardziej typowym <xref:System.Windows.Media.Brush> dla tego celu jest <xref:System.Windows.Media.ImageBrush>, której można użyć różnych technik, takich jak winiet maskowania fotografii.</span><span class="sxs-lookup"><span data-stu-id="5e656-2560">The most typical <xref:System.Windows.Media.Brush> for this purpose is an <xref:System.Windows.Media.ImageBrush>, which can be used for a variety of photo masking techniques such as a vignette.</span></span> <span data-ttu-id="5e656-2561">Ale zdefiniowanych <xref:System.Windows.Media.Brush> (takie jak <xref:System.Windows.Media.LinearGradientBrush>) mogą być używane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2561">But any defined <xref:System.Windows.Media.Brush> (such as <xref:System.Windows.Media.LinearGradientBrush>) can be used.</span></span>  
  
 <span data-ttu-id="5e656-2562">W [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], wartość tej właściwości można użyć składni wbudowanego, specyficzne dla każdego wdrożenia <xref:System.Windows.Media.Brush> klasy abstrakcyjnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-2562">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property value can use an inline syntax that is specific to each implementation of the <xref:System.Windows.Media.Brush> abstract class.</span></span> <span data-ttu-id="5e656-2563">Aby uzyskać więcej informacji, zobacz [Malowanie z kolorami i przegląd gradienty](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-2563">For more information, see [Painting with Solid Colors and Gradients Overview](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_OpacityMask"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-2564">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-2564">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2565">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2565">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityMaskProperty>|  
|<span data-ttu-id="5e656-2566">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-2566">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-2567">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-2567">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-2568">W poniższym przykładzie pokazano kod znaczników <xref:System.Windows.Media.ImageBrush> maskę przezroczystości stosowane do innego <xref:System.Windows.Controls.Image>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2568">The following markup example shows an <xref:System.Windows.Media.ImageBrush> opacity mask applied to another <xref:System.Windows.Controls.Image>.</span></span>  
  
 [!code-xaml[OpacityMasksSnippet#UIElementOpacityMask](~/samples/snippets/csharp/VS_Snippets_Wpf/OpacityMasksSnippet/CS/ImageBrushExample.xaml#uielementopacitymask)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Opacity" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMaskProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityMaskProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityMaskProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityMaskProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityMaskProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityMaskProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2569">Identyfikuje <see cref="P:System.Windows.UIElement.OpacityMask" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-2569">Identifies the <see cref="P:System.Windows.UIElement.OpacityMask" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2570">Identyfikuje <see cref="P:System.Windows.UIElement.Opacity" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-2570">Identifies the <see cref="P:System.Windows.UIElement.Opacity" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistId">
      <MemberSignature Language="C#" Value="public int PersistId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PersistId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.PersistId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PersistId { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2571">Pobiera wartość, która identyfikuje ten element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2571">Gets a value that uniquely identifies this element.</span></span></summary>
        <value><span data-ttu-id="5e656-2572">Unikatowy identyfikator dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2572">The unique identifier for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2573"><xref:System.Windows.UIElement.PersistId%2A> Unikatowy identyfikator każdego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2573"><xref:System.Windows.UIElement.PersistId%2A> uniquely identifies each element.</span></span> <span data-ttu-id="5e656-2574">Element śledzi takie same <xref:System.Windows.UIElement.PersistId%2A> za każdym razem, gdy taka sama [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] jest ładowany (w tym reprezentacje binarny).</span><span class="sxs-lookup"><span data-stu-id="5e656-2574">An element keeps the same <xref:System.Windows.UIElement.PersistId%2A> every time the same [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] is loaded (including binary representations).</span></span> <span data-ttu-id="5e656-2575">Ten identyfikator jest używany wewnętrzny wymagania dotyczące ładowania, analizy i serializacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2575">This identifier is used for internal loading, parsing and serialization requirements.</span></span> <span data-ttu-id="5e656-2576">Nie jest on przeznaczony do użycia przez kod aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2576">It is not intended to be used by your application code.</span></span>  
  
 <span data-ttu-id="5e656-2577">Ta właściwość nie ma żadnych relacji <xref:System.Object.GetHashCode%2A> wynik dla dowolnego danego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2577">This property has no relationship to the <xref:System.Object.GetHashCode%2A> result for any given instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="5e656-2578">Kierunek przechodzenie żądanego fokus.</span><span class="sxs-lookup"><span data-stu-id="5e656-2578">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="5e656-2579">W przypadku przesłonięcia w klasie pochodnej zwraca element, który będzie fokusu dla kierunku przechodzenie określonego fokus bez faktycznie przeniesienie fokusu do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2579">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="5e656-2580">Element otrzymałby fokus <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> zostały faktycznie wywołany.</span><span class="sxs-lookup"><span data-stu-id="5e656-2580">The element that would have received focus if <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2581">Domyślna implementacja tej metody tej klasy jest niekompletne i zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="5e656-2581">The default implementation of this method in this class is incomplete, and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2582">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z tego elementu jako element docelowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="5e656-2582">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2583">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewDragEnter> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2583">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2584">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewDragEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2584">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2585">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2585">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2586">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2586">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="5e656-2587">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2587">Routing strategy</span></span>|<span data-ttu-id="5e656-2588">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2588">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2589">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2589">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="5e656-2590">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2590">The corresponding bubbling event is <xref:System.Windows.UIElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="5e656-2591">Zastąpienie <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2591">Override <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2592">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewDragEnter" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2592">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2593">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2593">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2594">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2594">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2595">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2595">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2596">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2596">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2597">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2597">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2598">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to element źródłowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="5e656-2598">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2599">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewDragLeave> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2599">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2600">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewDragLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2600">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2601">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2601">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2602">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2602">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="5e656-2603">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2603">Routing strategy</span></span>|<span data-ttu-id="5e656-2604">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2604">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2605">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2605">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="5e656-2606">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2606">The corresponding bubbling event is <xref:System.Windows.UIElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="5e656-2607">Zastąpienie <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2607">Override <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2608">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewDragLeave" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2608">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2609">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2609">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2610">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2610">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2611">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2611">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2612">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2612">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2613">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2613">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2614">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-2614">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2615">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewDragOver> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2615">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2616">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewDragOver> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2616">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2617">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2617">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2618">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2618">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragOverEvent>|  
|<span data-ttu-id="5e656-2619">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2619">Routing strategy</span></span>|<span data-ttu-id="5e656-2620">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2620">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2621">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2621">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="5e656-2622">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2622">The corresponding bubbling event is <xref:System.Windows.UIElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="5e656-2623">Zastąpienie <xref:System.Windows.UIElement.OnPreviewDragOver%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2623">Override <xref:System.Windows.UIElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2624">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewDragOver" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2624">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2625">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2625">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2626">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2626">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2627">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2627">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2628">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2628">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2629">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2629">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2630">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania z tego elementu jako element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-2630">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2631">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewDrop> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2631">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDrop> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2632">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewDrop> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2632">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2633">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2633">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2634">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2634">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDropEvent>|  
|<span data-ttu-id="5e656-2635">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2635">Routing strategy</span></span>|<span data-ttu-id="5e656-2636">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2636">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2637">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2637">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="5e656-2638">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2638">The corresponding bubbling event is <xref:System.Windows.UIElement.Drop>.</span></span>  
  
-   <span data-ttu-id="5e656-2639">Zastąpienie <xref:System.Windows.UIElement.OnPreviewDrop%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2639">Override <xref:System.Windows.UIElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2640">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewDrop" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2640">Identifies the <see cref="E:System.Windows.UIElement.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2641">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2641">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2642">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2642">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2643">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2643">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2644">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2644">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2645">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2645">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2646">Występuje, gdy rozpoczęto operację przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-2646">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2647"><xref:System.Windows.UIElement.PreviewGiveFeedback> Zdarzeń umożliwia źródło zdarzeń przeciągnij, aby zmodyfikować wygląd wskaźnika myszy, aby przekazać opinię visual użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-2647">The <xref:System.Windows.UIElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="5e656-2648">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewGiveFeedback> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2648">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2649">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewGiveFeedback> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2649">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2650">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2650">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2651">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2651">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="5e656-2652">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2652">Routing strategy</span></span>|<span data-ttu-id="5e656-2653">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2653">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2654">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2654">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="5e656-2655">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2655">The corresponding bubbling event is <xref:System.Windows.UIElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="5e656-2656">Zastąpienie <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2656">Override <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2657">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2657">Identifies the <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2658">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2658">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2659">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2659">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2660">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2660">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2661">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2661">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2662">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2662">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2663">Występuje, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2663">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2664">Ponieważ to zdarzenie używa tunelowania routingu, element, który ma fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-2664">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="5e656-2665">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywistego elementu, który ma fokus.</span><span class="sxs-lookup"><span data-stu-id="5e656-2665">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="5e656-2666">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2666">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2667">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2667">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2668">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2668">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2669">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2669">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="5e656-2670">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2670">Routing strategy</span></span>|<span data-ttu-id="5e656-2671">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2671">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2672">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2672">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="5e656-2673">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2673">The corresponding bubbling event is <xref:System.Windows.UIElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="5e656-2674">Zastąpienie <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2674">Override <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2675">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2675">Identifies the <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2676">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2676">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2677">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2677">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2678">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2678">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2679">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2679">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2680">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2680">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2681">Występuje po naciśnięciu klawisza, gdy fokus jest w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2681">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2682">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst.</span><span class="sxs-lookup"><span data-stu-id="5e656-2682">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="5e656-2683"><xref:System.Windows.UIElement.KeyDown> Zdarzenie jest zdarzenie wprowadzania tekstu niższego poziomu, które mogą nie działać zgodnie z oczekiwaniami w niektórych formantów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2683">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="5e656-2684">Jest tak, ponieważ niektóre formanty mają składania kontroli lub klasy obsługi udostępnia wyższego poziomu wersji tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="5e656-2684">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="5e656-2685">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewKeyDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2685">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2686">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewKeyDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2686">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2687">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2687">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2688">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2688">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="5e656-2689">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2689">Routing strategy</span></span>|<span data-ttu-id="5e656-2690">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2690">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2691">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2691">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="5e656-2692">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2692">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="5e656-2693">Zastąpienie <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2693">Override <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2694">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewKeyDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2694">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2695">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2695">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2696">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2696">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2697">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2697">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2698">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2698">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2699">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2699">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2700">Występuje po zwolnieniu klawisza, gdy fokus jest w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2700">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2701">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst.</span><span class="sxs-lookup"><span data-stu-id="5e656-2701">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="5e656-2702"><xref:System.Windows.UIElement.KeyUp> Zdarzenie jest zdarzenie wprowadzania tekstu niższego poziomu, które mogą nie działać zgodnie z oczekiwaniami w niektórych formantów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2702">The <xref:System.Windows.UIElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="5e656-2703">Jest tak, ponieważ niektóre formanty mają składania kontroli lub klasy obsługi udostępnia wyższego poziomu wersji tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="5e656-2703">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="5e656-2704">Aby uzyskać więcej informacji Sprawdź dokumentację dla pojedynczych formantów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2704">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="5e656-2705">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewKeyUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2705">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2706">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewKeyUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2706">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2707">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2707">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2708">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2708">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="5e656-2709">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2709">Routing strategy</span></span>|<span data-ttu-id="5e656-2710">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2710">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2711">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2711">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="5e656-2712">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2712">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="5e656-2713">Zastąpienie <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2713">Override <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2714">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewKeyUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2714">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2715">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2715">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2716">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2716">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2717">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2717">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2718">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2718">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2719">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2719">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2720">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-2720">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2721">Ponieważ to zdarzenie używa tunelowania routingu, element utracie fokusu może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony.</span><span class="sxs-lookup"><span data-stu-id="5e656-2721">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="5e656-2722">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w ustalić utracie fokusu rzeczywisty element danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2722">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="5e656-2723">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2723">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2724">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2724">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2725">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2725">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2726">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2726">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="5e656-2727">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2727">Routing strategy</span></span>|<span data-ttu-id="5e656-2728">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2728">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2729">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2729">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="5e656-2730">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2730">The corresponding bubbling event is <xref:System.Windows.UIElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="5e656-2731">Zastąpienie <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2731">Override <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2732">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2732">Identifies the <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2733">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2733">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2734">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2734">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2735">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2735">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2736">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2736">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2737">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2737">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2738">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-2738">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2739">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewMouseDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2739">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2740">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewMouseDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2740">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-2741"><xref:System.Windows.UIElement.PreviewMouseDown> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki.</span><span class="sxs-lookup"><span data-stu-id="5e656-2741">The <xref:System.Windows.UIElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="5e656-2742"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2742"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="5e656-2743">Zobacz uwagi dla <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2743">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2744">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2744">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2745">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2745">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="5e656-2746">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2746">Routing strategy</span></span>|<span data-ttu-id="5e656-2747">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2747">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2748">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2748">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-2749">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2749">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="5e656-2750">Zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2750">Override <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2751">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2751">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2752">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2752">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2753">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2753">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2754">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2754">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2755">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2755">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2756">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2756">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2757">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-2757">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2758">Chociaż wydaje się to wykonaj tunelowania trasy do drzewa, faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2758">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="5e656-2759">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2759">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="5e656-2760">Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2760">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="5e656-2761">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2761">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="5e656-2762">Po zaznaczeniu <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2762">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="5e656-2763">To prawdopodobnie zawiera wygenerowane klasy obsługi zdarzenia takich jak <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2763">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="5e656-2764">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="5e656-2764">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="5e656-2765">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2765">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="5e656-2766">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2766">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2767">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2767">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2768">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2768">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="5e656-2769">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2769">Routing strategy</span></span>|<span data-ttu-id="5e656-2770">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-2770">Direct</span></span>|  
|<span data-ttu-id="5e656-2771">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2771">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-2772">Zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2772">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2773">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2773">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2774">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2774">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2775">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2775">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2776">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2776">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2777">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2777">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2778">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2778">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2779">Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-2779">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2780">Chociaż wydaje się to wykonaj tunelowania trasy do drzewa, faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2780">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="5e656-2781">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2781">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="5e656-2782">Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2782">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="5e656-2783">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2783">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="5e656-2784">Po zaznaczeniu <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2784">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="5e656-2785">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="5e656-2785">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="5e656-2786">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2786">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="5e656-2787">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2787">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2788">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2788">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2789">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2789">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="5e656-2790">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2790">Routing strategy</span></span>|<span data-ttu-id="5e656-2791">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-2791">Direct</span></span>|  
|<span data-ttu-id="5e656-2792">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2792">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-2793">Zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2793">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2794">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2794">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2795">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2795">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2796">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2796">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2797">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2797">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2798">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2798">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2799">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2799">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2800">Występuje po przemieszczeniu wskaźnika myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-2800">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2801">To zdarzenie zarówno występuje, gdy wskaźnik myszy po raz pierwszy najedzie na granice elementu, a także gdy wskaźnik myszy jest przesuwany zachowując nadal w granicach elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2801">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="5e656-2802">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewMouseMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2802">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2803">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewMouseMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2803">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2804">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2804">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2805">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2805">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="5e656-2806">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2806">Routing strategy</span></span>|<span data-ttu-id="5e656-2807">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2807">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2808">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2808">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="5e656-2809">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2809">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="5e656-2810">Zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2810">Override <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2811">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseMove" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2811">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2812">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2812">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2813">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2813">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2814">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2814">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2815">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2815">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2816">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2816">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2817">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-2817">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2818">Chociaż wydaje się to wykonaj tunelowania trasy do drzewa, faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2818">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="5e656-2819">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2819">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="5e656-2820">Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2820">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="5e656-2821">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2821">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="5e656-2822">Po zaznaczeniu <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2822">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="5e656-2823">To prawdopodobnie zawiera wygenerowane klasy obsługi zdarzenia takich jak <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2823">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="5e656-2824">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="5e656-2824">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="5e656-2825">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2825">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="5e656-2826">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2826">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2827">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2827">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2828">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2828">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="5e656-2829">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2829">Routing strategy</span></span>|<span data-ttu-id="5e656-2830">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-2830">Direct</span></span>|  
|<span data-ttu-id="5e656-2831">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2831">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-2832">Zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2832">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2833">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2833">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2834">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2834">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2835">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2835">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2836">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2836">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2837">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2837">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2838">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2838">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2839">Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-2839">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2840">Chociaż wydaje się to wykonaj tunelowania trasy do drzewa, faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2840">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="5e656-2841">To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2841">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="5e656-2842">Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-2842">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="5e656-2843">Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2843">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="5e656-2844">Po zaznaczeniu <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2844">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="5e656-2845">Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="5e656-2845">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="5e656-2846">Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2846">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="5e656-2847">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2847">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2848">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2848">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2849">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2849">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="5e656-2850">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2850">Routing strategy</span></span>|<span data-ttu-id="5e656-2851">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-2851">Direct</span></span>|  
|<span data-ttu-id="5e656-2852">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2852">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-2853">Zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2853">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2854">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2854">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2855">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2855">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2856">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2856">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2857">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2857">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2858">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2858">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2859">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2859">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2860">Występuje po zwolnieniu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-2860">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2861">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewMouseUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2861">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2862">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewMouseUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2862">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-2863"><xref:System.Windows.UIElement.PreviewMouseUp> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki.</span><span class="sxs-lookup"><span data-stu-id="5e656-2863">The <xref:System.Windows.UIElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="5e656-2864"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2864"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="5e656-2865">Zobacz uwagi dla <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2865">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2866">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2866">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2867">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2867">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="5e656-2868">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2868">Routing strategy</span></span>|<span data-ttu-id="5e656-2869">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2869">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2870">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2870">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-2871">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2871">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="5e656-2872">Zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2872">Override <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2873">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2873">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2874">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2874">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2875">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2875">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2876">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2876">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2877">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2877">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2878">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2878">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2879">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-2879">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2880">Przechwytywanie myszy lub fokus pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli to zdarzenie zostanie wyświetlony w elemencie ukierunkowanych lub przechwycone, wskaźnik myszy może się okazać za pośrednictwem innego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-2880">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="5e656-2881">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewMouseMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2881">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2882">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewMouseMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2882">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2883">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2883">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2884">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2884">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="5e656-2885">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2885">Routing strategy</span></span>|<span data-ttu-id="5e656-2886">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2886">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2887">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2887">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="5e656-2888">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2888">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="5e656-2889">Zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2889">Override <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2890">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2890">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2891">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2891">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2892">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2892">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2893">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2893">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2894">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2894">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2895">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2895">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2896">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-2896">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2897"><xref:System.Windows.UIElement.PreviewQueryContinueDrag> Zdarzeń umożliwia źródła przeciągania zadeklarować, czy można anulować operację przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-2897">The <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="5e656-2898">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewQueryContinueDrag> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2898">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2899">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewQueryContinueDrag> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2899">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2900">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2900">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2901">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2901">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="5e656-2902">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2902">Routing strategy</span></span>|<span data-ttu-id="5e656-2903">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2903">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2904">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2904">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="5e656-2905">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2905">The corresponding bubbling event is <xref:System.Windows.UIElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="5e656-2906">Zastąpienie <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2906">Override <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2907">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2907">Identifies the <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2908">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2908">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2909">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2909">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2910">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2910">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2911">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2911">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2912">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2912">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2913">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-2913">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2914">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusButtonDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2914">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2915">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusButtonDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2915">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-2916">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2916">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-2917">Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-2917">For more information, see [Touch Input Support in Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2918">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2918">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2919">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2919">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="5e656-2920">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2920">Routing strategy</span></span>|<span data-ttu-id="5e656-2921">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2921">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2922">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2922">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-2923">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2923">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="5e656-2924">Zastąpienie <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2924">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2925">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2925">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2926">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2926">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2927">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2927">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2928">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2928">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2929">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2929">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2930">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2930">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2931">Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-2931">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2932">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusButtonUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2932">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2933">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusButtonUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2933">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-2934">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2934">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-2935">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-2935">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2936">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2936">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2937">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2937">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="5e656-2938">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2938">Routing strategy</span></span>|<span data-ttu-id="5e656-2939">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2939">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2940">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2940">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-2941">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2941">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="5e656-2942">Zastąpienie <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2942">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2943">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2943">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2944">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2944">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2945">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2945">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2946">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2946">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2947">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2947">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2948">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2948">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2949">Występuje, gdy pióro dotyka digitizera, gdy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-2949">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2950">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2950">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2951">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2951">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-2952">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2952">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-2953">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-2953">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2954">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2954">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2955">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2955">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="5e656-2956">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2956">Routing strategy</span></span>|<span data-ttu-id="5e656-2957">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2957">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2958">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2958">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="5e656-2959">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2959">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="5e656-2960">Zastąpienie <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2960">Override <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2961">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2961">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2962">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2962">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2963">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2963">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2964">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2964">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2965">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2965">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2966">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2966">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2967">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="5e656-2967">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2968">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusInAirMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2968">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2969">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusInAirMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2969">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-2970">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2970">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-2971">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-2971">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2972">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2972">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2973">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2973">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="5e656-2974">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2974">Routing strategy</span></span>|<span data-ttu-id="5e656-2975">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2975">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2976">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2976">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-2977">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2977">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="5e656-2978">Zastąpienie <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2978">Override <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2979">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2979">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2980">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2980">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2981">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2981">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-2982">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-2982">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-2983">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2983">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-2984">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2984">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2985">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-2985">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2986">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusInRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-2986">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-2987">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusInRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2987">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-2988">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-2988">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-2989">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-2989">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-2990">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-2990">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-2991">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-2991">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="5e656-2992">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-2992">Routing strategy</span></span>|<span data-ttu-id="5e656-2993">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-2993">Tunneling</span></span>|  
|<span data-ttu-id="5e656-2994">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-2994">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-2995">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="5e656-2995">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="5e656-2996">Zastąpienie <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-2996">Override <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-2997">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusInRange" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2997">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-2998">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-2998">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-2999">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-2999">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3000">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3000">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3001">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3001">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3002">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3002">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3003">Występuje, gdy pióro jest przemieszczane nad elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3003">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="5e656-3004">Pióro musi być przemieszczane podczas wykrywania przez Dyskretyzator Aby zgłosić to zdarzenie, w przeciwnym razie <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> zgłaszane jest zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="5e656-3004">The stylus must move while being detected by the digitizer to raise this event, otherwise, <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3005">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3005">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3006">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3006">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3007">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3007">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3008">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3008">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3009">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3009">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3010">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3010">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="5e656-3011">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3011">Routing strategy</span></span>|<span data-ttu-id="5e656-3012">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-3012">Tunneling</span></span>|  
|<span data-ttu-id="5e656-3013">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3013">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-3014">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3014">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="5e656-3015">Zastąpienie <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3015">Override <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3016">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusMove" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3016">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3017">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3017">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3018">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3018">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3019">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3019">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3020">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3020">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3021">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3021">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3022">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte.</span><span class="sxs-lookup"><span data-stu-id="5e656-3022">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3023">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusOutOfRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3023">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3024">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusOutOfRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3024">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3025">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3025">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3026">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3026">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3027">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3027">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3028">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3028">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="5e656-3029">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3029">Routing strategy</span></span>|<span data-ttu-id="5e656-3030">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-3030">Tunneling</span></span>|  
|<span data-ttu-id="5e656-3031">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3031">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-3032">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3032">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="5e656-3033">Zastąpienie <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3033">Override <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3034">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3034">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3035">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3035">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3036">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3036">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3037">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3037">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3038">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3038">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3039">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3039">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3040">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span><span class="sxs-lookup"><span data-stu-id="5e656-3040">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3041">Informacje o gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3041">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="5e656-3042">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusSystemGesture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3042">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3043">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusSystemGesture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3043">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3044">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3044">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3045">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3045">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3046">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3046">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3047">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3047">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="5e656-3048">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3048">Routing strategy</span></span>|<span data-ttu-id="5e656-3049">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-3049">Tunneling</span></span>|  
|<span data-ttu-id="5e656-3050">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3050">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="5e656-3051">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3051">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="5e656-3052">Zastąpienie <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3052">Override <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3053">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3053">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3054">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3054">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3055">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3055">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3056">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3056">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3057">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3057">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3058">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3058">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3059">Występuje, gdy użytkownik wywołuje pióra od dyskretyzatora, gdy pióro znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3059">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3060">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3060">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3061">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3061">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3062">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3062">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3063">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3063">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3064">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3064">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3065">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3065">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="5e656-3066">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3066">Routing strategy</span></span>|<span data-ttu-id="5e656-3067">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-3067">Tunneling</span></span>|  
|<span data-ttu-id="5e656-3068">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3068">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-3069">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3069">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="5e656-3070">Zastąpienie <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3070">Override <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3071">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3071">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3072">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3072">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3073">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3073">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3074">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3074">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3075">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3075">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3076">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3076">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3077">Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3077">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3078"><xref:System.Windows.UIElement.PreviewTextInput> Zdarzeń umożliwia składnika lub aplikacji do nasłuchiwania wprowadzanie tekstu w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3078">The <xref:System.Windows.UIElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="5e656-3079">Klawiatura jest podstawowy sposób <xref:System.Windows.UIElement.PreviewTextInput>; ale można również generować mowy, pisma ręcznego i innych urządzeniach wejściowych <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3079">The keyboard is the primary means of <xref:System.Windows.UIElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="5e656-3080">Z powodu kombinacji klawiszy — w klawiatury domyślne lub za pośrednictwem edytory input method — wiele zdarzeń klucza mogą zgłaszać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3080">Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="5e656-3081">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.PreviewTextInput> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3081">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3082">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewTextInput> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3082">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3083">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3083">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3084">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3084">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTextInputEvent>|  
|<span data-ttu-id="5e656-3085">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3085">Routing strategy</span></span>|<span data-ttu-id="5e656-3086">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-3086">Tunneling</span></span>|  
|<span data-ttu-id="5e656-3087">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3087">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="5e656-3088">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3088">The corresponding bubbling event is <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="5e656-3089">Zastąpienie <xref:System.Windows.UIElement.OnPreviewTextInput%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3089">Override <xref:System.Windows.UIElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3090">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewTextInput" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3090">Identifies the <see cref="E:System.Windows.UIElement.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3091">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3091">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3092">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3092">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3093">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3093">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3094">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3094">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3095">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3095">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3096">Występuje, gdy palcem krawędzi ekranu, gdy palca znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3096">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3097">Domyślnie <xref:System.Windows.UIElement.PreviewTouchDown> i <xref:System.Windows.UIElement.TouchDown> zdarzeń nie występują dopóki palcem dotyka ekranu i przenosi.</span><span class="sxs-lookup"><span data-stu-id="5e656-3097">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="5e656-3098">Naciśnięcie klawisza palcem na ekranie i zawierający bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3098">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="5e656-3099">Naciśnij i przytrzymaj klawisz jest odpowiednikiem kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-3099">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="5e656-3100">Powoduje <xref:System.Windows.UIElement.PreviewTouchDown> i <xref:System.Windows.UIElement.TouchDown> zdarzenia jak palcem krawędzi ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączona właściwość do `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3100">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3101">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3101">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3102">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3102">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="5e656-3103">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3103">Routing strategy</span></span>|<span data-ttu-id="5e656-3104">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-3104">Tunneling</span></span>|  
|<span data-ttu-id="5e656-3105">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3105">Delegate</span></span>|<span data-ttu-id="5e656-3106"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3106"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="5e656-3107">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3107">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="5e656-3108">Zastąpienie <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3108">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3109">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3109">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3110">Występuje po przemieszczeniu palcem na ekranie, gdy palca znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3110">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3111">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3111">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3112">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3112">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="5e656-3113">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3113">Routing strategy</span></span>|<span data-ttu-id="5e656-3114">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-3114">Tunneling</span></span>|  
|<span data-ttu-id="5e656-3115">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3115">Delegate</span></span>|<span data-ttu-id="5e656-3116"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3116"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="5e656-3117">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3117">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="5e656-3118">Zastąpienie <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3118">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3119">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3119">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3120">Występuje, gdy jest wywoływane palcem poza ekran, gdy palca znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3120">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3121">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3121">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3122">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3122">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="5e656-3123">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3123">Routing strategy</span></span>|<span data-ttu-id="5e656-3124">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="5e656-3124">Tunneling</span></span>|  
|<span data-ttu-id="5e656-3125">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3125">Delegate</span></span>|<span data-ttu-id="5e656-3126"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3126"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="5e656-3127">Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3127">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="5e656-3128">Zastąpienie <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3128">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3129">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3129">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3130">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="5e656-3130">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3131"><xref:System.Windows.UIElement.QueryContinueDrag> Zdarzeń umożliwia ustalenie, czy można anulować operację przeciągania i upuszczania źródła przeciągania.</span><span class="sxs-lookup"><span data-stu-id="5e656-3131">The <xref:System.Windows.UIElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="5e656-3132">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.QueryContinueDrag> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3132">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3133">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.QueryContinueDrag> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3133">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3134">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3134">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3135">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3135">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryContinueDragEvent>|  
|<span data-ttu-id="5e656-3136">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3136">Routing strategy</span></span>|<span data-ttu-id="5e656-3137">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3137">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3138">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3138">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="5e656-3139">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3139">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="5e656-3140">Zastąpienie <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3140">Override <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3141">Identyfikuje <see cref="E:System.Windows.UIElement.QueryContinueDrag" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3141">Identifies the <see cref="E:System.Windows.UIElement.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3142">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3142">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3143">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3143">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3144">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3144">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3145">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3145">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3146">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3146">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3147">Występuje, gdy kursor jest wymagane do wyświetlenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3147">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="5e656-3148">To zdarzenie jest zgłaszane w elemencie każdym razem, gdy wskaźnik myszy jest przesuwany do nowej lokalizacji, która oznacza, że obiekt kursora może zaistnieć konieczność zmiany na podstawie jego nowego położenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3148">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3149">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.QueryCursor> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3149">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryCursor> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3150">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.QueryCursor> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3150">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3151">Kursor jest odwołuje się ta nazwa zdarzenia nie jest kursor tekstu (czasem nazywane punktu wstawiania).</span><span class="sxs-lookup"><span data-stu-id="5e656-3151">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="5e656-3152">Zamiast tego kursor znajduje się w tym kontekście jest obiekt, który deklaruje na ekranie graficzną związane z kilku możliwych urządzeń związanych z danych wejściowych lub pojęcia dotyczące programowania w języku systemu Windows.</span><span class="sxs-lookup"><span data-stu-id="5e656-3152">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="5e656-3153">Ten obiekt jest reprezentowana przez <xref:System.Windows.Input.Cursor> klasy na platformie WPF.</span><span class="sxs-lookup"><span data-stu-id="5e656-3153">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="5e656-3154">System wejściowy WPF umożliwia zmianę tego kursora, gdy reprezentuje na ekranie położenia wskaźnika myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-3154">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="5e656-3155">Możesz użyć wstępnie zdefiniowanych wartości z <xref:System.Windows.Input.Cursors> wyliczenia, lub można zadeklarować niestandardowych kursora jako plik obrazu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3155">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="5e656-3156">Nasłuchiwanie <xref:System.Windows.UIElement.QueryCursor> zdarzenie nie jest technikę efektywne zarządzanie kursora.</span><span class="sxs-lookup"><span data-stu-id="5e656-3156">Listening for the <xref:System.Windows.UIElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="5e656-3157">Zamiast tego każdy element powinien definiować własne zachowania kursora w <xref:System.Windows.FrameworkContentElement.Cursor%2A> i <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3157">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="5e656-3158">Należy polegać wyłącznie na <xref:System.Windows.UIElement.QueryCursor> WPF poziomie struktury podstawowych elementów nie jest używany, czy w dodatkowej okolicznościach gdy Definiowanie zachowania kursor na podstawie na element nie spełnia Twoje potrzeby.</span><span class="sxs-lookup"><span data-stu-id="5e656-3158">You should only rely on <xref:System.Windows.UIElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="5e656-3159">Aby uzyskać więcej informacji na implementacji zachowanie kursora w odpowiedzi na <xref:System.Windows.UIElement.QueryCursor>, zobacz <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3159">For more information on implementing cursor behavior in response to <xref:System.Windows.UIElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3160">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3160">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3161">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3161">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryCursorEvent>|  
|<span data-ttu-id="5e656-3162">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3162">Routing strategy</span></span>|<span data-ttu-id="5e656-3163">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3163">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3164">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3164">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="5e656-3165">Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-3165">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="5e656-3166">Zastąpienie <xref:System.Windows.UIElement.OnQueryCursor%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3166">Override <xref:System.Windows.UIElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3167">Identyfikuje <see cref="E:System.Windows.UIElement.QueryCursor" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3167">Identifies the <see cref="E:System.Windows.UIElement.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3168">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3168">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3169">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3169">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3170">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3170">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3171">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3171">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3172">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3172">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="5e656-3173">A <see cref="T:System.Windows.RoutedEventArgs" /> zawiera dane zdarzeń i identyfikuje również zdarzeń, aby wywołać.</span><span class="sxs-lookup"><span data-stu-id="5e656-3173">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="5e656-3174">Wywołuje określone kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3174">Raises a specific routed event.</span></span> <span data-ttu-id="5e656-3175"><see cref="T:System.Windows.RoutedEvent" /> Wygenerowany zostanie zidentyfikowana w <see cref="T:System.Windows.RoutedEventArgs" /> wystąpienia, który został dostarczony (jako <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości danych zdarzeń).</span><span class="sxs-lookup"><span data-stu-id="5e656-3175">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3176">`e` Parametr jest typu jako typu podstawowego wspólne dla wszystkich danych kierowanego zdarzenia; jednak dane zdarzenia powinny być podane specyficzny typem danych zdarzenia, który jest dostępny dla zdarzeń zgłaszanych, ponieważ <xref:System.Windows.RoutedEventArgs> zawiera klasy pochodne rzeczywiste dane określone właściwości, które są przeznaczone do określonego zdarzenia, gdy jest on uruchamiany.</span><span class="sxs-lookup"><span data-stu-id="5e656-3176">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="5e656-3177"><xref:System.Windows.RoutedEventArgs> nie jest tylko właściwości stan dla zdarzeń; identyfikuje które kierowanego zdarzenia, aby wywołać.</span><span class="sxs-lookup"><span data-stu-id="5e656-3177"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="5e656-3178">Ten wzorzec wywoływanie zdarzeń i danych kierowanego zdarzenia zarówno różnią się od [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] klasy zdarzenia i dane, które zwykle zawierają tylko właściwości, które są powiązane ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3178">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-3179">Poniższy przykład tworzy dane zdarzenia, dołącza identyfikator zdarzenia do danych, a następnie używa wystąpienie danych zdarzeń, aby wywołać zdarzenie niestandardowe routingiem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3179">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[RoutedEventCustom#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#raiseevent)]
 [!code-vb[RoutedEventCustom#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-3180">Zwalnia wszystkie urządzenia touch przechwyconych z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3180">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-3181">Jeżeli ten element przechwytywania, zwalnia przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-3181">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3182">Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3182">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="5e656-3183">Należy wziąć pod uwagę wartości <xref:System.Windows.UIElement.IsMouseCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="5e656-3183">Consider checking the value of <xref:System.Windows.UIElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-3184">Poniższy przykład jest równoległe, na przykład dla <xref:System.Windows.UIElement.CaptureMouse%2A>: obsługuje przycisku myszy do przechwytywania myszy zlecenia i ponownie włączyć przesuwanie wskaźnika myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-3184">The following example is the parallel to the example given for <xref:System.Windows.UIElement.CaptureMouse%2A>: it handles mouse button up to release mouse capture and re-enable moving the mouse.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-3185">Zwalnia Przechwytywanie urządzenia pióra, jeżeli ten element przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="5e656-3185">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3186">Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3186">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="5e656-3187">Należy wziąć pod uwagę wartości <xref:System.Windows.UIElement.IsStylusCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="5e656-3187">Consider checking the value of <xref:System.Windows.UIElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="5e656-3188">Urządzenie do zwolnienia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3188">The device to release.</span></span></param>
        <summary><span data-ttu-id="5e656-3189">Próbuje zwolnić urządzenia określonego touch z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3189">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns>
          <span data-ttu-id="5e656-3190"><see langword="true" /> Jeśli urządzenie touch zwolnieniu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-3190"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5e656-3191"><paramref name="touchDevice" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-3191"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="5e656-3192">Identyfikator kierowanego zdarzenia, dla którego jest umocowana Obsługa.</span><span class="sxs-lookup"><span data-stu-id="5e656-3192">The identifier of the routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="5e656-3193">Implementacja określony program obsługi, aby usunąć z kolekcji programu obsługi zdarzeń w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-3193">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="5e656-3194">Usuwa obsługi określonego kierowanego zdarzenia z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3194">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3195">Najbardziej typowym scenariuszem stosowania to [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] jest podczas implementowania [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzeń "otoki", który jest skojarzony z routingiem zdarzenie niestandardowe, w szczególności, gdy należy wdrożyć logikę "Usuń" dla programów obsługi na [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] poziom.</span><span class="sxs-lookup"><span data-stu-id="5e656-3195">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="5e656-3196">Przykład, w którym następuje to uwagi części przedstawiono w tym scenariuszu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3196">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="5e656-3197">Wywołanie tej metody nie ma znaczenia, jeśli nie było żadnych programów obsługi zarejestrowany z kryteriami, które odpowiadają parametrów wejściowych dla wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="5e656-3197">Calling this method has no effect if there were no handlers registered with criteria that matches the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="5e656-3198">Jeśli więcej niż jeden program obsługi jest dołączony pasujących kryteria tylko pierwszego programu obsługi w przypadku obsługi magazyn zostanie usunięty.</span><span class="sxs-lookup"><span data-stu-id="5e656-3198">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="5e656-3199">To zachowanie jest zgodne z [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zachowanie `-=` operatora.</span><span class="sxs-lookup"><span data-stu-id="5e656-3199">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="5e656-3200">Ani `routedEvent` ani `handler` może być `null`.</span><span class="sxs-lookup"><span data-stu-id="5e656-3200">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="5e656-3201">Podjęto próbę podać te wartości jako `null` zgłosi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="5e656-3201">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="5e656-3202">Ta metoda powoduje ignorowanie `handledEventsToo` informacje o parametrach, która jest dostępna, jeśli program obsługi został po raz pierwszy dodane z <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisie, który włącza obsługę zdarzeń już obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3202">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="5e656-3203">Dowolnego typu program obsługi zostanie usunięta.</span><span class="sxs-lookup"><span data-stu-id="5e656-3203">Either type of handler is removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-3204">W poniższym przykładzie użyto <xref:System.Windows.UIElement.RemoveHandler%2A> jako część definicji otoki zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3204">The following example uses <xref:System.Windows.UIElement.RemoveHandler%2A> as part of an event wrapper definition.</span></span>  
  
 [!code-csharp[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#addremovehandler)]
 [!code-vb[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#addremovehandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="RenderSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size RenderSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size RenderSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderSize" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size RenderSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3205">Pobiera lub ustawia rozmiar renderowania końcowego tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3205">Gets (or sets) the final render size of this element.</span></span></summary>
        <value><span data-ttu-id="5e656-3206">Rozmiar renderowanych dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3206">The rendered size for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="5e656-3207">Nie należy próbować ustawić tę właściwość, albo w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] lub w kodzie, jeśli system układu poziomie struktury WPF.</span><span class="sxs-lookup"><span data-stu-id="5e656-3207">Do not attempt to set this property, either in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or in code, if using the WPF framework-level layout system.</span></span> <span data-ttu-id="5e656-3208">Prawie wszystkie scenariusze Typowa aplikacja będzie używać tego systemu układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3208">Nearly all typical application scenarios will use this layout system.</span></span> <span data-ttu-id="5e656-3209">Układ systemu nie będzie uwzględniał rozmiary w <xref:System.Windows.UIElement.RenderSize%2A> właściwości bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="5e656-3209">The layout system will not respect sizes set in the <xref:System.Windows.UIElement.RenderSize%2A> property directly.</span></span> <span data-ttu-id="5e656-3210"><xref:System.Windows.UIElement.RenderSize%2A> Właściwość zadeklarowana zapisywalny umożliwiające niektórych WPF poziomu core, łączenie przypadków, które celowo obejścia protokołów typowe układu, takie jak obsługa <xref:System.Windows.Documents.Adorner> klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-3210">The <xref:System.Windows.UIElement.RenderSize%2A> property is declared writable only to enable certain WPF core-level bridging cases that deliberately circumvent the typical layout protocols, such as support for the <xref:System.Windows.Documents.Adorner> class.</span></span>  
  
 <span data-ttu-id="5e656-3211">Ta właściwość może służyć do sprawdzania rozmiar renderowania stosowanych w ramach układu systemu przesłania, takich jak <xref:System.Windows.UIElement.OnRender%2A> lub <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3211">This property can be used for checking the applicable render size within layout system overrides such as <xref:System.Windows.UIElement.OnRender%2A> or <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span></span>  
  
 <span data-ttu-id="5e656-3212">Obsługa jest bardziej typowego scenariusza <xref:System.Windows.FrameworkElement.SizeChanged> zastąpienie zdarzeń z obsługą klasy lub <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-3212">A more common scenario is handling the <xref:System.Windows.FrameworkElement.SizeChanged> event with the class handler override or the <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> event.</span></span>  
  
## Examples  
 <span data-ttu-id="5e656-3213">W poniższym przykładzie pokazano, jak używa niestandardowego modułu definiowania układu kodu <xref:System.Windows.UIElement.RenderSize%2A> wartości do utworzenia i rozmiaru grafiki prostokąt, który definiuje moduł definiowania układu kodu, w ramach jego <xref:System.Windows.UIElement.OnRender%2A> implementacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3213">The following example shows how a custom adorner uses the <xref:System.Windows.UIElement.RenderSize%2A> value in order to create and size the rectangle graphic that defines the adorner, as part of its <xref:System.Windows.UIElement.OnRender%2A> implementation.</span></span>  
  
 [!code-csharp[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/csharp/VS_Snippets_Wpf/AdornersMiscCode/CSharp/Window1.xaml.cs#uielementdesiredsize)]
 [!code-vb[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AdornersMiscCode/visualbasic/window1.xaml.vb#uielementdesiredsize)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform RenderTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform RenderTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Transform ^ RenderTransform { System::Windows::Media::Transform ^ get(); void set(System::Windows::Media::Transform ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3214">Pobiera lub ustawia informacje o transformacji wpływającej na miejsce renderowania tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3214">Gets or sets transform information that affects the rendering position of this element.</span></span>  <span data-ttu-id="5e656-3215">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-3215">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="5e656-3216">W tym artykule opisano charakterystyki transformacji renderowania żądany.</span><span class="sxs-lookup"><span data-stu-id="5e656-3216">Describes the specifics of the desired render transform.</span></span> <span data-ttu-id="5e656-3217">Wartość domyślna to <see cref="P:System.Windows.Media.Transform.Identity" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-3217">The default is <see cref="P:System.Windows.Media.Transform.Identity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3218">Transformacji renderowania nie wygenerować układu rozmiar lub renderować informacje o rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="5e656-3218">A render transform does not regenerate layout size or render size information.</span></span> <span data-ttu-id="5e656-3219">Renderowanie przekształceń są głównie używane w animacji lub chwilowego efektu do elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3219">Render transforms are typically intended for animating or applying a temporary effect to an element.</span></span> <span data-ttu-id="5e656-3220">Na przykład element może być powiększony fokus lub moused za pośrednictwem lub może zakłóceń Ładuj Rysuj oka część [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="5e656-3220">For example, the element might zoom when focused or moused over, or might jitter on load to draw the eye to that part of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransform"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-3221">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-3221">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3222">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3222">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformProperty>|  
|<span data-ttu-id="5e656-3223">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-3223">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-3224">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-3224">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point RenderTransformOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point RenderTransformOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransformOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransformOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point RenderTransformOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3225">Pobiera lub ustawia centralny punkt każdej możliwej transformacji renderowania deklarowana przez <see cref="P:System.Windows.UIElement.RenderTransform" />, względem granic elementu przez.</span><span class="sxs-lookup"><span data-stu-id="5e656-3225">Gets or sets the center point of any possible render transform declared by <see cref="P:System.Windows.UIElement.RenderTransform" />, relative to the bounds of the element.</span></span>  <span data-ttu-id="5e656-3226">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-3226">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="5e656-3227">Wartość, która deklaruje transformacji renderowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-3227">The value that declares the render transform.</span></span> <span data-ttu-id="5e656-3228">Wartość domyślna to <see cref="T:System.Windows.Point" /> z współrzędne (0,0).</span><span class="sxs-lookup"><span data-stu-id="5e656-3228">The default value is a <see cref="T:System.Windows.Point" /> with coordinates (0,0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3229"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> ma nieco niestandardowe użycie <xref:System.Windows.Point> struktury wartości, w którym <xref:System.Windows.Point> nie reprezentuje bezwzględny lokalizacji w układzie współrzędnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3229"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> has a somewhat nonstandard use of the <xref:System.Windows.Point> structure value, in that the <xref:System.Windows.Point> does not represent an absolute location in a coordinate system.</span></span> <span data-ttu-id="5e656-3230">Zamiast tego wartości od 0 do 1 będą interpretowane jako dla zakresu bieżący element w każdym x osi y.</span><span class="sxs-lookup"><span data-stu-id="5e656-3230">Instead, values between 0 and 1 are interpreted as a factor for the range of the current element in each x,y axis.</span></span> <span data-ttu-id="5e656-3231">Na przykład spowoduje, że transformacji renderowania do wyśrodkowany w elemencie (0.5,0.5) lub (1,1) czy umieścić transformacji renderowania u dołu prawym rogu elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3231">For example, (0.5,0.5) will cause the render transform to be centered on the element, or (1,1) would place the render transform at the bottom right corner of the element.</span></span> <span data-ttu-id="5e656-3232"><xref:System.Double.NaN> nie jest akceptowane wartości.</span><span class="sxs-lookup"><span data-stu-id="5e656-3232"><xref:System.Double.NaN> is not an accepted value.</span></span>  
  
 <span data-ttu-id="5e656-3233">Wartości innych niż 0 i 1 są również akceptowane i spowoduje więcej efektów niekonwencjonalne transformacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3233">Values beyond 0 and 1 are also accepted, and will result in more unconventional transform effects.</span></span> <span data-ttu-id="5e656-3234">Na przykład jeśli ustawisz <xref:System.Windows.UIElement.RenderTransformOrigin%2A> można (5,5), a następnie zastosować <xref:System.Windows.Media.RotateTransform>, punktu obrotu będzie również poza granicami samego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3234">For instance, if you set <xref:System.Windows.UIElement.RenderTransformOrigin%2A> to be (5,5), and then apply a <xref:System.Windows.Media.RotateTransform>, the rotation point will be well outside the bounds of the element itself.</span></span> <span data-ttu-id="5e656-3235">Transformacja będzie pokrętła nazwę elementu wokół w dużych okręgu wynikająca poza prawym dolnym rogu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3235">The transform will spin your element around in a big circle that originates beyond bottom right.</span></span> <span data-ttu-id="5e656-3236">Punkt początkowy może być gdzieś w jego elemencie nadrzędnym i może być prawdopodobnie poza ramki lub widoku.</span><span class="sxs-lookup"><span data-stu-id="5e656-3236">The origin might be somewhere inside its parent element and could possibly be possibly out of frame or view.</span></span> <span data-ttu-id="5e656-3237">Wartości ujemne są podobne, zostaną one wykracza poza zakresem lewej górnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-3237">Negative point values are similar, these will go beyond the top left bounds.</span></span>  
  
 <span data-ttu-id="5e656-3238">Renderowanie transformacji nie wpływają na układ i są zwykle używane do animowania lub zastosować do elementu chwilowego efektu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3238">Render transforms do not affect layout, and are typically used to animate or apply a temporary effect to an element.</span></span>  
  
<a name="xamlAttributeUsage_RenderTransformOrigin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5e656-3239">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="5e656-3239">XAML Attribute Usage</span></span>  
  
```  
<object RenderTransformOrigin="xOrigin, yOrigin"/>  
```  
  
<a name="xamlPropertyElementUsage_RenderTransformOrigin"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="5e656-3240">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="5e656-3240">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.RenderTransformOrigin>  
    <Point X=" xOrigin " Y=" yOrigin "/>  
  </object.RenderTransformOrigin>  
</object>  
```  
  
<a name="xamlValues_RenderTransformOrigin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5e656-3241">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="5e656-3241">XAML Values</span></span>  
 <span data-ttu-id="5e656-3242">*xOrigin*</span><span class="sxs-lookup"><span data-stu-id="5e656-3242">*xOrigin*</span></span>  
 <span data-ttu-id="5e656-3243">Współczynnik początek w poziomie.</span><span class="sxs-lookup"><span data-stu-id="5e656-3243">The horizontal origin factor.</span></span> <span data-ttu-id="5e656-3244">Jest to zazwyczaj podawana jako wartość z zakresu od 0 do 1.</span><span class="sxs-lookup"><span data-stu-id="5e656-3244">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="5e656-3245">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="5e656-3245">See Remarks.</span></span>  
  
 <span data-ttu-id="5e656-3246">*yOrigin*</span><span class="sxs-lookup"><span data-stu-id="5e656-3246">*yOrigin*</span></span>  
 <span data-ttu-id="5e656-3247">Współczynnik początek w pionie.</span><span class="sxs-lookup"><span data-stu-id="5e656-3247">The vertical origin factor.</span></span> <span data-ttu-id="5e656-3248">Jest to zazwyczaj podawana jako wartość z zakresu od 0 do 1.</span><span class="sxs-lookup"><span data-stu-id="5e656-3248">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="5e656-3249">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="5e656-3249">See Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransformOrigin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-3250">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-3250">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3251">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3251">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformOriginProperty>|  
|<span data-ttu-id="5e656-3252">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-3252">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-3253">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-3253">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-3254">Poniższy przykład tworzy elementów w kodzie, mają zastosowanie <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, a następnie stosuje <xref:System.Windows.UIElement.RenderTransform%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3254">The following example builds up elements in code, applies a <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, and then applies a  <xref:System.Windows.UIElement.RenderTransform%2A>.</span></span>  
  
 [!code-csharp[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/csharp/VS_Snippets_Wpf/transformanimations_snip/CSharp/RotateAboutCenterExample.cs#uielementrendertransformorigin)]
 [!code-vb[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/visualbasic/VS_Snippets_Wpf/transformanimations_snip/visualbasic/rotateaboutcenterexample.vb#uielementrendertransformorigin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.RenderTransform" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOriginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformOriginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformOriginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformOriginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformOriginProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3255">Identyfikuje <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-3255">Identifies the <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3256">Identyfikuje <see cref="P:System.Windows.UIElement.RenderTransform" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-3256">Identifies the <see cref="P:System.Windows.UIElement.RenderTransform" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-3257">Zwraca czy procesy serializacji powinny serializować zawartości <see cref="P:System.Windows.UIElement.CommandBindings" /> właściwości wystąpienia tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-3257">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns>
          <span data-ttu-id="5e656-3258"><see langword="true" /> Jeśli <see cref="P:System.Windows.UIElement.CommandBindings" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-3258"><see langword="true" /> if the <see cref="P:System.Windows.UIElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3259">Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.UIElement.CommandBindings%2A> lokalnie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="5e656-3259">This will return `true` if <xref:System.Windows.UIElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="5e656-3260">To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.UIElement.CommandBindings%2A> właściwość nie ma wartości domyślnej proste.</span><span class="sxs-lookup"><span data-stu-id="5e656-3260">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="5e656-3261">Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-3261">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="5e656-3262">Zwykle wywołuje tę metodę albo opracowywanie projektanta lub tworzenie własnych Dołączanie formantu <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3262">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="5e656-3263">Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych z ShouldSerialize i zresetować metody](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3263">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-3264">Zwraca czy procesy serializacji powinny serializować zawartości <see cref="P:System.Windows.UIElement.InputBindings" /> właściwości wystąpienia tej klasy.</span><span class="sxs-lookup"><span data-stu-id="5e656-3264">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns>
          <span data-ttu-id="5e656-3265"><see langword="true" /> Jeśli <see cref="P:System.Windows.UIElement.InputBindings" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-3265"><see langword="true" /> if the <see cref="P:System.Windows.UIElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3266">Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.UIElement.InputBindings%2A> lokalnie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="5e656-3266">This will return `true` if <xref:System.Windows.UIElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="5e656-3267">To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.UIElement.InputBindings%2A> właściwość nie ma wartości domyślnej proste.</span><span class="sxs-lookup"><span data-stu-id="5e656-3267">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="5e656-3268">Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej.</span><span class="sxs-lookup"><span data-stu-id="5e656-3268">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="5e656-3269">Zwykle wywołuje tę metodę albo opracowywanie projektanta lub tworzenie własnych Dołączanie formantu <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3269">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="5e656-3270">Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych z ShouldSerialize i zresetować metody](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3270">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixels">
      <MemberSignature Language="C#" Value="public bool SnapsToDevicePixels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SnapsToDevicePixels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberSignature Language="VB.NET" Value="Public Property SnapsToDevicePixels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SnapsToDevicePixels { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3271">Pobiera lub ustawia wartość określającą, czy renderowanie dla tego elementu powinno używać urządzenia określonych ustawień piksela podczas renderowania.</span><span class="sxs-lookup"><span data-stu-id="5e656-3271">Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.</span></span>  <span data-ttu-id="5e656-3272">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-3272">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="5e656-3273"><see langword="true" /> Jeśli element powinien renderować zgodnie z następującą liczbę pikseli urządzenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-3273"><see langword="true" /> if the element should render in accordance to device pixels; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5e656-3274">Domyślnie zadeklarowana na <see cref="T:System.Windows.UIElement" /> jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-3274">The default as declared on <see cref="T:System.Windows.UIElement" /> is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3275">Tę właściwość można ustawić, `true` w elemencie głównym, aby włączyć pikseli przyciąganie renderowanie typu Pixel interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="5e656-3275">You can set this property to `true` on your root element to enable pixel snap rendering throughout the UI.</span></span> <span data-ttu-id="5e656-3276">Dla urządzeń działających z rozdzielczością większą niż 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], pikseli przyciąganie renderowania można zminimalizować wygładzanie artefaktów spowodowanych antyaliasingiem w pobliżu linii pojedynczej grubości.</span><span class="sxs-lookup"><span data-stu-id="5e656-3276">For devices operating at greater than 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], pixel snap rendering can minimize anti-aliasing visual artifacts in the vicinity of single-unit solid lines.</span></span>  
  
 <span data-ttu-id="5e656-3277">Gdy dziedziczone przez <xref:System.Windows.FrameworkElement> lub wszystkie możliwe pochodne klasy, <xref:System.Windows.FrameworkElement> zastępuje metadane dla tej właściwości zależności ustawić <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> właściwości metadanych `true`.</span><span class="sxs-lookup"><span data-stu-id="5e656-3277">When inherited by <xref:System.Windows.FrameworkElement> or any possible derived classes, <xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property to set the <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> metadata property to `true`.</span></span> <span data-ttu-id="5e656-3278">To osiągnięcie jest tylko najbardziej zewnętrznego elementu poddrzewo musi określać <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> jako `true`, a następnie prześle wszystkie elementy podrzędne tego poddrzewa <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> jako `true` i będzie miał <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> efekt.</span><span class="sxs-lookup"><span data-stu-id="5e656-3278">What this achieves is that only the outermost element in a subtree needs to specify <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true`, and all child elements of that subtree will then report <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true` and will have the <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> visual effect.</span></span>  
  
<a name="dependencyPropertyInfo_SnapsToDevicePixels"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-3279">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-3279">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3280">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3280">Identifier field</span></span>|<xref:System.Windows.UIElement.SnapsToDevicePixelsProperty>|  
|<span data-ttu-id="5e656-3281">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-3281">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-3282">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-3282">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixelsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SnapsToDevicePixelsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SnapsToDevicePixelsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SnapsToDevicePixelsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3283">Identyfikuje <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-3283">Identifies the <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3284">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3284">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3285">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.StylusButtonDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3285">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3286">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusButtonDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3286">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3287">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3287">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3288">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3288">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3289">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3289">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3290">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3290">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonDownEvent>|  
|<span data-ttu-id="5e656-3291">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3291">Routing strategy</span></span>|<span data-ttu-id="5e656-3292">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3292">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3293">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3293">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-3294">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3294">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="5e656-3295">Zastąpienie <xref:System.Windows.UIElement.OnStylusButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3295">Override <xref:System.Windows.UIElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3296">Identyfikuje <see cref="E:System.Windows.UIElement.StylusButtonDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3296">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3297">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3297">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3298">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3298">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3299">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3299">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3300">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3300">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3301">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3301">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3302">Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3302">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3303">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.StylusButtonUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3303">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3304">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusButtonUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3304">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3305">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3305">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3306">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3306">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3307">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3307">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3308">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3308">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonUpEvent>|  
|<span data-ttu-id="5e656-3309">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3309">Routing strategy</span></span>|<span data-ttu-id="5e656-3310">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3310">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3311">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3311">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="5e656-3312">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3312">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="5e656-3313">Zastąpienie <xref:System.Windows.UIElement.OnStylusButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3313">Override <xref:System.Windows.UIElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3314">Identyfikuje <see cref="E:System.Windows.UIElement.StylusButtonUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3314">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3315">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3315">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3316">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3316">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3317">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3317">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3318">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3318">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3319">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3319">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3320">Występuje, gdy pióro dotyka digitizera, gdy pióro znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3320">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3321">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.StylusDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3321">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3322">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3322">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3323">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3323">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3324">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3324">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3325">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3325">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3326">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3326">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusDownEvent>|  
|<span data-ttu-id="5e656-3327">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3327">Routing strategy</span></span>|<span data-ttu-id="5e656-3328">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3328">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3329">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3329">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="5e656-3330">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3330">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="5e656-3331">Zastąpienie <xref:System.Windows.UIElement.OnStylusDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3331">Override <xref:System.Windows.UIElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3332">Identyfikuje <see cref="E:System.Windows.UIElement.StylusDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3332">Identifies the <see cref="E:System.Windows.UIElement.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3333">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3333">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3334">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3334">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3335">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3335">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3336">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3336">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3337">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3337">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3338">Występuje po pokonaniu przez pióro granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3338">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3339"><xref:System.Windows.UIElement.StylusEnter> jest używającą bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-3339"><xref:System.Windows.UIElement.StylusEnter> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="5e656-3340">Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3340">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="5e656-3341">Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.</span><span class="sxs-lookup"><span data-stu-id="5e656-3341">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="5e656-3342">Mimo że <xref:System.Windows.UIElement.StylusEnter> śledzi po pokonaniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement.IsStylusOver%2A> zmieniono wartość właściwości z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-3342">Although <xref:System.Windows.UIElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="5e656-3343">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.StylusEnter> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3343">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3344">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3344">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3345">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3345">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3346">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3346">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3347">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3347">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3348">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3348">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusEnterEvent>|  
|<span data-ttu-id="5e656-3349">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3349">Routing strategy</span></span>|<span data-ttu-id="5e656-3350">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-3350">Direct</span></span>|  
|<span data-ttu-id="5e656-3351">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3351">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-3352">Zastąpienie <xref:System.Windows.UIElement.OnStylusEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3352">Override <xref:System.Windows.UIElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3353">Identyfikuje <see cref="E:System.Windows.UIElement.StylusEnter" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3353">Identifies the <see cref="E:System.Windows.UIElement.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3354">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3354">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3355">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3355">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3356">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3356">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3357">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3357">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3358">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3358">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3359">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="5e656-3359">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3360">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.StylusInAirMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3360">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3361">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusInAirMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3361">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3362">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3362">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3363">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3363">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3364">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3364">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3365">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3365">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="5e656-3366">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3366">Routing strategy</span></span>|<span data-ttu-id="5e656-3367">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3367">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3368">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3368">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-3369">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3369">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="5e656-3370">Zastąpienie <xref:System.Windows.UIElement.OnStylusInAirMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3370">Override <xref:System.Windows.UIElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3371">Identyfikuje <see cref="E:System.Windows.UIElement.StylusInAirMove" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3371">Identifies the <see cref="E:System.Windows.UIElement.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3372">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3372">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3373">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3373">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3374">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3374">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3375">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3375">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3376">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3376">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3377">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3377">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3378">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.StylusInRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3378">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3379">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusInRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3379">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3380">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3380">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3381">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3381">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3382">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3382">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3383">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3383">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInRangeEvent>|  
|<span data-ttu-id="5e656-3384">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3384">Routing strategy</span></span>|<span data-ttu-id="5e656-3385">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3385">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3386">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3386">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-3387">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3387">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="5e656-3388">Zastąpienie <xref:System.Windows.UIElement.OnStylusInRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3388">Override <xref:System.Windows.UIElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3389">Identyfikuje <see cref="E:System.Windows.UIElement.StylusInRange" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3389">Identifies the <see cref="E:System.Windows.UIElement.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3390">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3390">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3391">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3391">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3392">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3392">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3393">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3393">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3394">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3394">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3395">Występuje po opuszczeniu przez pióro granic elementu przez.</span><span class="sxs-lookup"><span data-stu-id="5e656-3395">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3396"><xref:System.Windows.UIElement.StylusLeave> jest używającą bezpośredniej obsługi strategii routingu zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-3396"><xref:System.Windows.UIElement.StylusLeave> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="5e656-3397">Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3397">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="5e656-3398">Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.</span><span class="sxs-lookup"><span data-stu-id="5e656-3398">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="5e656-3399">Mimo że <xref:System.Windows.UIElement.StylusLeave> śledzi po opuszczeniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement.IsStylusOver%2A> zmieniono wartość właściwości z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="5e656-3399">Although <xref:System.Windows.UIElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="5e656-3400">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.StylusLeave> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3400">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3401">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3401">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3402">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3402">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3403">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3403">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3404">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3404">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3405">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3405">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusLeaveEvent>|  
|<span data-ttu-id="5e656-3406">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3406">Routing strategy</span></span>|<span data-ttu-id="5e656-3407">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-3407">Direct</span></span>|  
|<span data-ttu-id="5e656-3408">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3408">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-3409">Zastąpienie <xref:System.Windows.UIElement.OnStylusLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3409">Override <xref:System.Windows.UIElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3410">Identyfikuje <see cref="E:System.Windows.UIElement.StylusLeave" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3410">Identifies the <see cref="E:System.Windows.UIElement.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3411">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3411">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3412">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3412">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3413">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3413">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3414">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3414">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3415">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3415">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3416">Występuje, gdy pióro jest przemieszczane nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3416">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="5e656-3417">Pióro musi dotykać powierzchni dyskretyzatora, aby zgłosić to zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="5e656-3417">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="5e656-3418">W przeciwnym razie <see cref="E:System.Windows.UIElement.StylusInAirMove" /> zgłaszane jest zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="5e656-3418">Otherwise, <see cref="E:System.Windows.UIElement.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3419">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.StylusMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3419">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3420">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3420">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3421">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3421">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3422">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3422">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3423">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3423">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3424">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3424">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusMoveEvent>|  
|<span data-ttu-id="5e656-3425">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3425">Routing strategy</span></span>|<span data-ttu-id="5e656-3426">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3426">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3427">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3427">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-3428">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3428">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="5e656-3429">Zastąpienie <xref:System.Windows.UIElement.OnStylusMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3429">Override <xref:System.Windows.UIElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3430">Identyfikuje <see cref="E:System.Windows.UIElement.StylusMove" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3430">Identifies the <see cref="E:System.Windows.UIElement.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3431">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3431">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3432">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3432">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3433">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3433">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3434">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3434">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3435">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3435">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3436">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3436">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3437">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.StylusOutOfRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3437">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3438">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusOutOfRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3438">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3439">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3439">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3440">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3440">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3441">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3441">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3442">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3442">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="5e656-3443">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3443">Routing strategy</span></span>|<span data-ttu-id="5e656-3444">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3444">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3445">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3445">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-3446">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3446">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="5e656-3447">Zastąpienie <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3447">Override <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3448">Identyfikuje <see cref="E:System.Windows.UIElement.StylusOutOfRange" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3448">Identifies the <see cref="E:System.Windows.UIElement.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3449">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3449">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3450">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3450">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3451">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3451">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3452">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3452">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3453">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3453">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusPlugIns">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.StylusPlugIns" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StylusPlugIns As StylusPlugInCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ StylusPlugIns { System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.StylusPlugInCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3454">Pobiera kolekcję obiektów wtyczki (Dostosowywanie) pióro skojarzony z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3454">Gets a collection of all stylus plug-in (customization) objects associated with this element.</span></span></summary>
        <value><span data-ttu-id="5e656-3455">Kolekcja wtyczek pióra jako wyspecjalizowane kolekcji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3455">The collection of stylus plug-ins, as a specialized collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3456">Na przykład formant, który wypełnia tej kolekcji <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3456">An example of a control that populates this collection is <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="5e656-3457"><xref:System.Windows.Controls.InkCanvas> dodaje <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> jako elementu kolekcji, co pozwala <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> do interakcji z wprowadzania danych piórem oraz tworzenia unikatowy renderowania w odpowiedzi na pióro zmiennych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3457"><xref:System.Windows.Controls.InkCanvas> adds the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> as a collection item, which enables the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to interact with stylus input and produce the unique rendering in response to stylus driven events.</span></span>  
  
 <span data-ttu-id="5e656-3458">Aby uzyskać informacje na temat tworzenia niestandardowych dodatków plug-in, który może odbierać i interpretować wprowadzania danych piórem, zobacz [przechwytują dane wejściowe z pióro](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3458">For information on creating custom plug-ins that can receive and interpret stylus input, see [Intercepting Input from the Stylus](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e656-3459">Poniższy przykład tworzy <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> wystąpienia i dodaje go do <xref:System.Windows.UIElement.StylusPlugIns%2A> kolekcji dla niestandardowych odręczne, obsługa formantu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3459">The following example creates a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> instance and adds it to the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection for a custom ink handling control.</span></span>  
  
 [!code-csharp[StylusPluginSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusPluginSamples/CSharp/StylusControl.cs#3)]
 [!code-vb[StylusPluginSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusPluginSamples/VisualBasic/StylusControl.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />
        <altmember cref="T:System.Windows.Controls.InkCanvas" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3460">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span><span class="sxs-lookup"><span data-stu-id="5e656-3460">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3461">Aby uzyskać więcej informacji na temat gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3461">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="5e656-3462">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.StylusSystemGesture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3462">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3463">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusSystemGesture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3463">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3464">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3464">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3465">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3465">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3466">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3467">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3467">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="5e656-3468">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3468">Routing strategy</span></span>|<span data-ttu-id="5e656-3469">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3469">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3470">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3470">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="5e656-3471">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3471">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="5e656-3472">Zastąpienie <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3472">Override <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3473">Identyfikuje <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3473">Identifies the <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3474">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3474">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3475">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3475">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3476">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3476">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3477">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3477">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3478">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3478">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3479">Występuje, gdy użytkownik wywołuje pióra od dyskretyzatora, gdy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3479">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3480">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.StylusUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3480">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3481">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3481">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="5e656-3482">Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="5e656-3482">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="5e656-3483">Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="5e656-3483">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3484">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3484">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3485">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3485">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusUpEvent>|  
|<span data-ttu-id="5e656-3486">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3486">Routing strategy</span></span>|<span data-ttu-id="5e656-3487">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3487">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3488">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3488">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="5e656-3489">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3489">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="5e656-3490">Zastąpienie <xref:System.Windows.UIElement.OnStylusUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3490">Override <xref:System.Windows.UIElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3491">Identyfikuje <see cref="E:System.Windows.UIElement.StylusUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3491">Identifies the <see cref="E:System.Windows.UIElement.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3492">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3492">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3493">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3493">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3494">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3494">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3495">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3495">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3496">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3496">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3497">Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3497">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="5e656-3498">To zdarzenie może już oznaczony jako obsługiwany przez wewnętrznych implementacje połączone formantów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3498">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="5e656-3499">Zobacz uwagi poniżej.</span><span class="sxs-lookup"><span data-stu-id="5e656-3499">See Remark below.</span></span>  
  
 <span data-ttu-id="5e656-3500"><xref:System.Windows.UIElement.TextInput> Zdarzeń już może być oznaczony jako obsługiwany przez wewnętrznych implementacje połączone formantów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3500">The <xref:System.Windows.UIElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="5e656-3501">Na przykład <xref:System.Windows.Controls.TextBox> jest formantem połączone gdzie <xref:System.Windows.UIElement.TextInput> zdarzeń jest już oznaczona jako obsługiwany; w jego składania.</span><span class="sxs-lookup"><span data-stu-id="5e656-3501">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.UIElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="5e656-3502">Formanty to zrobić, ponieważ formant wymaga interpretować niektóre typy danych wejściowych, takich jak klawiszy strzałek jako mające specjalne znaczenie tego formantu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3502">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="5e656-3503">Jeśli używasz <xref:System.Windows.UIElement.PreviewTextInput> jako zdarzenie, gdzie możesz dołączyć obsługi wprowadzania tekstu, może zostać wyświetlony w poszukiwaniu lepszych wyników.</span><span class="sxs-lookup"><span data-stu-id="5e656-3503">If you use <xref:System.Windows.UIElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="5e656-3504">Ta technika prowadzenia większości przypadkach, gdy formant kompozycji już oznaczył to zdarzenie, ponieważ obsługiwane i uniemożliwia odbieranie zdarzeń wzdłuż trasy zdarzenia programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="5e656-3504">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="5e656-3505"><xref:System.Windows.UIElement.TextInput> Zdarzeń umożliwia składnika lub aplikacji do nasłuchiwania wprowadzanie tekstu w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3505">The <xref:System.Windows.UIElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="5e656-3506">Klawiatura jest podstawowy sposób <xref:System.Windows.UIElement.TextInput>, ale może też wiązać mowy, pisma ręcznego i innych urządzeniach wejściowych <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3506">The keyboard is the primary means of <xref:System.Windows.UIElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
 <span data-ttu-id="5e656-3507">Z powodu kombinacji klawiszy — w klawiatury domyślne lub za pośrednictwem edytory input method — wiele zdarzeń klucza może zgłaszać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3507">Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="5e656-3508">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement.TextInput> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement> jest dziedziczona jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="5e656-3508">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.TextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="5e656-3509">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.TextInput> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3509">Event handlers that are attached to the <xref:System.Windows.UIElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3510">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3510">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3511">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3511">Identifier field</span></span>|<xref:System.Windows.UIElement.TextInputEvent>|  
|<span data-ttu-id="5e656-3512">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3512">Routing strategy</span></span>|<span data-ttu-id="5e656-3513">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3513">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3514">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3514">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="5e656-3515">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3515">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="5e656-3516">Zastąpienie <xref:System.Windows.UIElement.OnTextInput%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3516">Override <xref:System.Windows.UIElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3517">Identyfikuje <see cref="E:System.Windows.UIElement.TextInput" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3517">Identifies the <see cref="E:System.Windows.UIElement.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3518">Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3518">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="5e656-3519">Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3519">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="5e656-3520">Aby dodać obsługę klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="5e656-3520">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="5e656-3521">Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3521">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="5e656-3522">Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3522">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3523">Występuje, gdy palcem krawędzi ekranu, gdy palca znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3523">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3524">Domyślnie <xref:System.Windows.UIElement.PreviewTouchDown> i <xref:System.Windows.UIElement.TouchDown> zdarzeń nie występują dopóki palcem dotyka ekranu i przenosi.</span><span class="sxs-lookup"><span data-stu-id="5e656-3524">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="5e656-3525">Naciśnięcie klawisza palcem na ekranie i zawierający bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3525">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="5e656-3526">Naciśnij i przytrzymaj klawisz jest odpowiednikiem kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="5e656-3526">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="5e656-3527">Powoduje <xref:System.Windows.UIElement.PreviewTouchDown> i <xref:System.Windows.UIElement.TouchDown> zdarzenia jak palcem krawędzi ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączona właściwość do `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3527">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3528">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3528">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3529">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3529">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchDownEvent>|  
|<span data-ttu-id="5e656-3530">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3530">Routing strategy</span></span>|<span data-ttu-id="5e656-3531">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3531">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3532">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3532">Delegate</span></span>|<span data-ttu-id="5e656-3533"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3533"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="5e656-3534">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3534">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="5e656-3535">Zastąpienie <xref:System.Windows.UIElement.OnTouchDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3535">Override <xref:System.Windows.UIElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3536">Identyfikuje <see cref="E:System.Windows.UIElement.TouchDown" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3536">Identifies the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3537">Występuje po przemieszczeniu touch z zewnątrz do wewnątrz granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3537">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3538">To zdarzenie jest zawsze zgłaszane, czy urządzenie touch są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3538">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3539">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3539">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3540">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3540">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchEnterEvent>|  
|<span data-ttu-id="5e656-3541">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3541">Routing strategy</span></span>|<span data-ttu-id="5e656-3542">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-3542">Direct</span></span>|  
|<span data-ttu-id="5e656-3543">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3543">Delegate</span></span>|<span data-ttu-id="5e656-3544"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3544"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="5e656-3545">Zastąpienie <xref:System.Windows.UIElement.OnTouchEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3545">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3546">Identyfikuje <see cref="E:System.Windows.UIElement.TouchEnter" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3546">Identifies the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3547">Pobiera wszystkie urządzenia touch, które są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3547">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="5e656-3548">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3548">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3549">Pobiera wszystkie urządzenia touch, które są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="5e656-3549">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="5e656-3550">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="5e656-3550">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3551">Pobiera wszystkie urządzenia touch znajdujących się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3551">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="5e656-3552">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów znajdujących się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3552">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3553">Pobiera wszystkie urządzenia touch znajdujących się nad tym elementem lub wszystkie elementy podrzędne w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="5e656-3553">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="5e656-3554">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przez ten element lub wszystkie elementy podrzędne w jego drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="5e656-3554">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3555">Występuje po przemieszczeniu touch z wnętrza poza granicami tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3555">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3556">To zdarzenie jest zawsze zgłaszane, czy urządzenie touch są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3556">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3557">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3557">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3558">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3558">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchLeaveEvent>|  
|<span data-ttu-id="5e656-3559">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3559">Routing strategy</span></span>|<span data-ttu-id="5e656-3560">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="5e656-3560">Direct</span></span>|  
|<span data-ttu-id="5e656-3561">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3561">Delegate</span></span>|<span data-ttu-id="5e656-3562"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3562"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="5e656-3563">Zastąpienie <xref:System.Windows.UIElement.OnTouchLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3563">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3564">Identyfikuje <see cref="E:System.Windows.UIElement.TouchLeave" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3564">Identifies the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3565">Występuje po przemieszczeniu palcem na ekranie, gdy palca znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3565">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3566">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3566">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3567">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3567">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchMoveEvent>|  
|<span data-ttu-id="5e656-3568">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3568">Routing strategy</span></span>|<span data-ttu-id="5e656-3569">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3569">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3570">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3570">Delegate</span></span>|<span data-ttu-id="5e656-3571"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3571"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="5e656-3572">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3572">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="5e656-3573">Zastąpienie <xref:System.Windows.UIElement.OnTouchMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3573">Override <xref:System.Windows.UIElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3574">Identyfikuje <see cref="E:System.Windows.UIElement.TouchMove" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3574">Identifies the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3575">Występuje, gdy jest wywoływane palcem poza ekran, gdy palca znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="5e656-3575">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5e656-3576">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="5e656-3576">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3577">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3577">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchUpEvent>|  
|<span data-ttu-id="5e656-3578">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="5e656-3578">Routing strategy</span></span>|<span data-ttu-id="5e656-3579">Propagacji</span><span class="sxs-lookup"><span data-stu-id="5e656-3579">Bubbling</span></span>|  
|<span data-ttu-id="5e656-3580">Delegate</span><span class="sxs-lookup"><span data-stu-id="5e656-3580">Delegate</span></span>|<span data-ttu-id="5e656-3581"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3581"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="5e656-3582">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3582">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="5e656-3583">Zastąpienie <xref:System.Windows.UIElement.OnTouchUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3583">Override <xref:System.Windows.UIElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3584">Identyfikuje <see cref="E:System.Windows.UIElement.TouchUp" /> kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3584">Identifies the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslatePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point TranslatePoint (System.Windows.Point point, System.Windows.UIElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point TranslatePoint(valuetype System.Windows.Point point, class System.Windows.UIElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point TranslatePoint(System::Windows::Point point, System::Windows::UIElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="relativeTo" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="5e656-3585">Punkt wartości jako względem tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3585">The point value, as relative to this element.</span></span></param>
        <param name="relativeTo"><span data-ttu-id="5e656-3586">Element do tłumaczenia do danego punktu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3586">The element to translate the given point into.</span></span></param>
        <summary><span data-ttu-id="5e656-3587">Wykonuje translację punktu względem tego elementu, aby współrzędne, które są względem określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3587">Translates a point relative to this element to coordinates that are relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="5e656-3588">Wartość punktu teraz względem elementu docelowego zamiast tego elementu źródła.</span><span class="sxs-lookup"><span data-stu-id="5e656-3588">A point value, now relative to the target element rather than this source element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3589">Przekazywanie `null` dla `relativeTo` jest dozwolone i wskazuje, czy współrzędne powinna być określona względem elementu głównego w drzewie logicznym należącego do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3589">Passing `null` for `relativeTo` is permitted, and indicates that coordinates should be relative to the root element in the logical tree that this element belongs to.</span></span>  
  
 <span data-ttu-id="5e656-3590">Ta metoda jest używana do tłumaczenia wartości punktów testu trafienia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3590">This method is used for translating hit test point values.</span></span> <span data-ttu-id="5e656-3591">Wywołanie tej metody jest głównie istotne, jeśli są Tworzenie formantu i musi przetworzyć danych wejściowych na niższym poziomie.</span><span class="sxs-lookup"><span data-stu-id="5e656-3591">Calling this method is mainly relevant if you are authoring a control and need to process input at a lower level.</span></span> <span data-ttu-id="5e656-3592">Jeśli korzystasz z istniejących formantów, można zwykle założyć, że ukończono formantów będzie zgłaszać wyników testu trafienia poprawnie przetłumaczonego.</span><span class="sxs-lookup"><span data-stu-id="5e656-3592">If you are using existing controls, you can generally assume that completed controls will report correctly translated hit test results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uid">
      <MemberSignature Language="C#" Value="public string Uid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Uid" />
      <MemberSignature Language="VB.NET" Value="Public Property Uid As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uid { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3593">Pobiera lub ustawia Unikatowy identyfikator (lokalizacja) dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3593">Gets or sets the unique identifier (for localization) for this element.</span></span> <span data-ttu-id="5e656-3594">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-3594">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="5e656-3595">Ciąg, który jest unikatowy identyfikator dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3595">A string that is the unique identifier for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3596">Używane przez projektantów do pobrania `x:Uid` wartość (zobacz [omówienie lokalizacja i globalizacja WPF](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) Aby uzyskać więcej informacji).</span><span class="sxs-lookup"><span data-stu-id="5e656-3596">Used by designers to get the `x:Uid` value (see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) for more information).</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-3597">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-3597">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3598">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3598">Identifier field</span></span>|<xref:System.Windows.UIElement.UidProperty>|  
|<span data-ttu-id="5e656-3599">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-3599">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-3600">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-3600">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UidProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UidProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UidProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.UidProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UidProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UidProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3601">Identyfikuje <see cref="P:System.Windows.UIElement.Uid" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-3601">Identifies the <see cref="P:System.Windows.UIElement.Uid" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLayout">
      <MemberSignature Language="C#" Value="public void UpdateLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.UpdateLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLayout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e656-3602">Zapewnia, że wszystkie elementy wizualne podrzędne tego elementu są zaktualizowane prawidłowo układu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3602">Ensures that all visual child elements of this element are properly updated for layout.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3603">Podczas wywołania tej metody, elementy z <xref:System.Windows.UIElement.IsMeasureValid%2A> `false` lub <xref:System.Windows.UIElement.IsArrangeValid%2A> `false` wywoła specyficzne dla elementu <xref:System.Windows.UIElement.MeasureCore%2A> i <xref:System.Windows.UIElement.ArrangeCore%2A> zaktualizować metody, które wymusza układ i wszystkich rozmiarów obliczanej zostaną zweryfikowane.</span><span class="sxs-lookup"><span data-stu-id="5e656-3603">When you call this method, elements with <xref:System.Windows.UIElement.IsMeasureValid%2A>`false` or <xref:System.Windows.UIElement.IsArrangeValid%2A>`false` will call element-specific <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> methods, which forces layout update, and all computed sizes will be validated.</span></span>  
  
 <span data-ttu-id="5e656-3604">Wywołanie tej metody nie ma znaczenia w przypadku układu bez zmian lub rozmieszczenie ani pomiaru stan układ jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="5e656-3604">Calling this method has no effect if layout is unchanged, or if neither arrangement nor measurement state of a layout is invalid.</span></span> <span data-ttu-id="5e656-3605">Jednakże, gdy układ jest nieprawidłowy w każdym odniesieniu <xref:System.Windows.UIElement.UpdateLayout%2A> wywołanie zostanie ponownie cały układ.</span><span class="sxs-lookup"><span data-stu-id="5e656-3605">However, if layout is invalid in either respect, the <xref:System.Windows.UIElement.UpdateLayout%2A> call will redo the entire layout.</span></span> <span data-ttu-id="5e656-3606">W związku z tym należy unikać wywoływania <xref:System.Windows.UIElement.UpdateLayout%2A> po każdej zmianie przyrostowych i pomocniczych w drzewie elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3606">Therefore, you should avoid calling <xref:System.Windows.UIElement.UpdateLayout%2A> after each incremental and minor change in the element tree.</span></span> <span data-ttu-id="5e656-3607">Układ systemu wykona układu elementu w sposób odroczonego przy użyciu algorytmu, który równoważy wydajność i walut, i ze strategią wagi, które mają być odroczone zmiany do katalogów głównych, dopóki wszystkie elementy podrzędne są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="5e656-3607">The layout system will perform element layout in a deferred manner, using an algorithm that balances performance and currency, and with a weighting strategy to defer changes to roots until all child elements are valid.</span></span> <span data-ttu-id="5e656-3608">Powinny wywoływać tylko <xref:System.Windows.UIElement.UpdateLayout%2A> Jeśli bezwzględnie konieczne zaktualizowane rozmiarów i pozycji i tylko wtedy, gdy masz pewność, że wykonywane są wszystkie zmiany właściwości, czy formant i który może mieć wpływ na układ.</span><span class="sxs-lookup"><span data-stu-id="5e656-3608">You should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if you absolutely need updated sizes and positions, and only after you are certain that all changes to properties that you control and that may affect layout are completed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3609">Pobiera lub ustawia [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] widoczność tego elementu.</span><span class="sxs-lookup"><span data-stu-id="5e656-3609">Gets or sets the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] visibility of this element.</span></span>  <span data-ttu-id="5e656-3610">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-3610">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="5e656-3611">Wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="5e656-3611">A value of the enumeration.</span></span> <span data-ttu-id="5e656-3612">Wartość domyślna to <see cref="F:System.Windows.Visibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="5e656-3612">The default value is <see cref="F:System.Windows.Visibility.Visible" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e656-3613">Ustawienie tej właściwości ma wpływ na wartość <xref:System.Windows.UIElement.IsVisible%2A>, który z kolei mogą zgłaszać <xref:System.Windows.UIElement.IsVisibleChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="5e656-3613">Setting this property affects the value of <xref:System.Windows.UIElement.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement.IsVisibleChanged> event.</span></span> <span data-ttu-id="5e656-3614">Jednak <xref:System.Windows.UIElement.IsVisible%2A> ma innych czynników, które wpływają, na przykład ustawień widoczności elementów nadrzędnych, które zawierałoby proces.</span><span class="sxs-lookup"><span data-stu-id="5e656-3614">However, <xref:System.Windows.UIElement.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it.</span></span>  
  
 <span data-ttu-id="5e656-3615">Elementy gdzie <xref:System.Windows.UIElement.Visibility%2A> nie jest <xref:System.Windows.Visibility.Visible> nie uczestniczą w wejściowych zdarzeń (lub polecenia), nie wpływają na środka lub Rozmieść przekazuje układu nie znajdują się w sekwencji kartę i nie będą raportowane podczas testowania trafień.</span><span class="sxs-lookup"><span data-stu-id="5e656-3615">Elements where <xref:System.Windows.UIElement.Visibility%2A> is not <xref:System.Windows.Visibility.Visible> do not participate in input events (or commands), do not influence either the Measure or Arrange passes of layout, are not in a tab sequence, and will not be reported in hit testing.</span></span>  
  
 <span data-ttu-id="5e656-3616">Gdy dziedziczone przez <xref:System.Windows.Window> lub jej klas pochodnych <xref:System.Windows.Window> ponownie definiuje wartość domyślna tej właściwości należy <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3616">When inherited by <xref:System.Windows.Window> or its derived classes, <xref:System.Windows.Window> redefines the default value of this property to be <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="5e656-3617">Ma to wpływu na początkowo utworzony nieuruchomiona przebiegu miary układu <xref:System.Windows.Window>, i <xref:System.Windows.UIElement.RenderSize%2A> zwraca (0,0).</span><span class="sxs-lookup"><span data-stu-id="5e656-3617">This has the effect of not running the Measure pass of layout on an initially created <xref:System.Windows.Window>, and <xref:System.Windows.UIElement.RenderSize%2A> returns (0,0).</span></span> <span data-ttu-id="5e656-3618">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3618">For details, see <xref:System.Windows.Window>.</span></span> <span data-ttu-id="5e656-3619"><xref:System.Windows.Controls.Primitives.Popup> również ponownie definiuje wartość domyślna ma być <xref:System.Windows.Visibility.Collapsed>, z podobne efekty dla <xref:System.Windows.Controls.Primitives.Popup> i jej klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="5e656-3619"><xref:System.Windows.Controls.Primitives.Popup> also redefines the default value to be <xref:System.Windows.Visibility.Collapsed>, with similar resulting behavior for <xref:System.Windows.Controls.Primitives.Popup> and its derived classes.</span></span>  
  
<a name="dependencyPropertyInfo_Visibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="5e656-3620">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="5e656-3620">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5e656-3621">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="5e656-3621">Identifier field</span></span>|<xref:System.Windows.UIElement.VisibilityProperty>|  
|<span data-ttu-id="5e656-3622">Wartość właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="5e656-3622">Metadata properties set to `true`</span></span>|<span data-ttu-id="5e656-3623">Brak</span><span class="sxs-lookup"><span data-stu-id="5e656-3623">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="5e656-3624">Poniższy przykład zawiera implementację programu obsługi, który odwołuje się do dwóch różnych przycisków nazwanego, które mają być parę wykluczają się wzajemnie w interfejsie użytkownika.</span><span class="sxs-lookup"><span data-stu-id="5e656-3624">The following example implements a handler that references two different named buttons that are intended to be a mutually exclusive pair in the user interface.</span></span> <span data-ttu-id="5e656-3625">Przed uruchomieniem logiki rzeczywiste program skojarzony z przyciskiem, przycisk jest ustawiony na <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, a inny przycisk pary jest ustawiona na <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e656-3625">Prior to running the actual program logic associated with the button, the button itself is set to be <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, and the other button in the pair is set to <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[MediaElement_snip#UIElementVisibility](~/samples/snippets/csharp/VS_Snippets_Wpf/MediaElement_snip/CSharp/PlaybackExample.cs#uielementvisibility)]
 [!code-vb[MediaElement_snip#UIElementVisibility](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MediaElement_snip/VB/PlaybackExample.vb#uielementvisibility)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsVisible" />
        <altmember cref="T:System.Windows.Visibility" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e656-3626">Identyfikuje <see cref="P:System.Windows.UIElement.Visibility" /> właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="5e656-3626">Identifies the <see cref="P:System.Windows.UIElement.Visibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>