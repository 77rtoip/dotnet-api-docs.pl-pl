<Type Name="UIElement" FullName="System.Windows.UIElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f7d26184645aa25e665b5de3e0d7b8197edfb1f7" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53232993" /></Metadata><TypeSignature Language="C#" Value="public class UIElement : System.Windows.Media.Visual, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UIElement extends System.Windows.Media.Visual implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIElement" />
  <TypeSignature Language="VB.NET" Value="Public Class UIElement&#xA;Inherits Visual&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElement : System::Windows::Media::Visual, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type UIElement = class&#xA;    inherit Visual&#xA;    interface IAnimatable&#xA;    interface IInputElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Visual</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.UidProperty("Uid")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="968fc-101"><see cref="T:System.Windows.UIElement" /> jest klasą bazową dla implementacji poziomu core WPF opierając się na elementy Windows Presentation Foundation (WPF) i właściwości podstawowe prezentacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-101"><see cref="T:System.Windows.UIElement" /> is a base class for WPF core level implementations building on Windows Presentation Foundation (WPF) elements and basic presentation characteristics.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-102"><xref:System.Windows.UIElement> stanowi punkt wyjścia dla elementu layout charakterystyki i ujawnia, którą można przesłonić metody wirtualne, które klasy pochodne, które mogą wpływać na układ renderowanie elementów zachowanie elementu i jego podrzędny.</span><span class="sxs-lookup"><span data-stu-id="968fc-102"><xref:System.Windows.UIElement> provides a starting point for element layout characteristics, and also exposes virtual methods that derived classes can override, which can influence the layout rendering behavior of the element and its child elements.</span></span>  
  
 <span data-ttu-id="968fc-103">Większość danych wejściowych i skoncentrowanie zachowanie dla elementów, ogólnie rzecz biorąc również jest zdefiniowany w <xref:System.Windows.UIElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-103">Much of the input and focusing behavior for elements in general is also defined in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="968fc-104">Obejmuje to zdarzenia klawiatury, myszy wejście pióra i właściwości powiązanych stanu.</span><span class="sxs-lookup"><span data-stu-id="968fc-104">This includes the events for keyboard, mouse and stylus input, and related status properties.</span></span> <span data-ttu-id="968fc-105">Wiele z tych zdarzeń są zdarzenia trasowane i mają wiele zdarzeń związanych z danych wejściowych, zarówno propagacji routingu wersji, a także tunelowania wersję zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-105">Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.</span></span> <span data-ttu-id="968fc-106">Te zdarzenia sparowane zwykle są interesujące największy autorom kontroli zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-106">These paired events are typically the events of greatest interest to control authors.</span></span>  
  
 <span data-ttu-id="968fc-107"><xref:System.Windows.UIElement> zawiera również [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] wydania [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modelu zdarzeń, łącznie z metod, które można podnieść określony kierowane zdarzenia, które pochodzą z wystąpienia elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-107"><xref:System.Windows.UIElement> also includes [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that relate to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance.</span></span>  
  
 <span data-ttu-id="968fc-108">Pod względem architektury <xref:System.Windows.UIElement> mogą zostać uwzględnione w przybliżeniu równa uchwyt okna w [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programowania lub elementu [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] programowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-108">In terms of architecture, <xref:System.Windows.UIElement> can be considered roughly equivalent to a window handle in [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programming, or an Element in [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] programming.</span></span> <span data-ttu-id="968fc-109"><xref:System.Windows.UIElement> to podstawowy element na poziomie core WPF.</span><span class="sxs-lookup"><span data-stu-id="968fc-109"><xref:System.Windows.UIElement> is a base element at the WPF core level.</span></span>  
  
 <span data-ttu-id="968fc-110">A <xref:System.Windows.UIElement> ma następujące możliwości, które w szczególności są definiowane przez <xref:System.Windows.UIElement> klasy:</span><span class="sxs-lookup"><span data-stu-id="968fc-110">A <xref:System.Windows.UIElement> has the following capabilities that are specifically defined by the <xref:System.Windows.UIElement> class:</span></span>  
  
-   <span data-ttu-id="968fc-111">Można renderować jako element podrzędny (<xref:System.Windows.UIElement> pochodzi od klasy <xref:System.Windows.Media.Visual>, klasa wysokiego poziomu grafiki)</span><span class="sxs-lookup"><span data-stu-id="968fc-111">Can render as a child element (<xref:System.Windows.UIElement> derives from <xref:System.Windows.Media.Visual>, a high level graphics class)</span></span>  
  
-   <span data-ttu-id="968fc-112">Zawiera logikę, która jest używany rozmiar i położenie elementów podrzędnych możliwe <xref:System.Windows.UIElement> (jeśli jest to interpretowane przez system układu)</span><span class="sxs-lookup"><span data-stu-id="968fc-112">Contains logic that is used to size and position possible child elements of a <xref:System.Windows.UIElement> (when interpreted by a layout system)</span></span>  
  
-   <span data-ttu-id="968fc-113">Może reagować na dane wejściowe użytkownika (w tym kontrolę nad dane wejściowe wprowadzenie wysyłania do za pośrednictwem ich obsługi zdarzenia, routing lub routingu poleceń)</span><span class="sxs-lookup"><span data-stu-id="968fc-113">Can respond to user input (including control of where input is getting sent to via their handling of event routing, or routing of commands)</span></span>  
  
-   <span data-ttu-id="968fc-114">Można zgłosić zdarzenia trasowane, używane podczas podróży trasę przez drzewo logiczne elementów</span><span class="sxs-lookup"><span data-stu-id="968fc-114">Can raise routed events that travel a route through the logical element tree</span></span>  
  
-   <span data-ttu-id="968fc-115">Obsługuje niektóre aspekty systemu animacji</span><span class="sxs-lookup"><span data-stu-id="968fc-115">Supports some aspects of the animation system</span></span>  
  
 <span data-ttu-id="968fc-116"><xref:System.Windows.FrameworkElement> jest klasa poziomie struktury implementacji WPF, która opiera się na <xref:System.Windows.UIElement>i dodaje specyficznych interakcji z poziomu framework WPF.</span><span class="sxs-lookup"><span data-stu-id="968fc-116"><xref:System.Windows.FrameworkElement> is the WPF framework-level implementation class that builds on <xref:System.Windows.UIElement>, and adds specific interactions with the WPF framework level.</span></span> <span data-ttu-id="968fc-117"><xref:System.Windows.FrameworkElement> dodaje i definiuje następujące możliwości:</span><span class="sxs-lookup"><span data-stu-id="968fc-117"><xref:System.Windows.FrameworkElement> adds and defines the following capabilities:</span></span>  
  
-   <span data-ttu-id="968fc-118">Dodatkowe właściwa dla struktury layout charakterystyki</span><span class="sxs-lookup"><span data-stu-id="968fc-118">Additional framework-specific layout characteristics</span></span>  
  
-   <span data-ttu-id="968fc-119">Obsługa metadanych bardziej rozbudowane raporty dotyczące właściwości</span><span class="sxs-lookup"><span data-stu-id="968fc-119">Support for richer metadata reporting on properties</span></span>  
  
-   <span data-ttu-id="968fc-120">Implementacja specyficzna dla klasy niektórych wejściowe klas podstawowych i ich dołączone właściwości lub zdarzeń dołączonych</span><span class="sxs-lookup"><span data-stu-id="968fc-120">Class-specific implementation of certain input base classes and their attached properties or attached events</span></span>  
  
-   <span data-ttu-id="968fc-121">Obsługa stylów</span><span class="sxs-lookup"><span data-stu-id="968fc-121">Style support</span></span>  
  
-   <span data-ttu-id="968fc-122">Uzyskania dalszej pomocy animacji</span><span class="sxs-lookup"><span data-stu-id="968fc-122">Further animation support</span></span>  
  
 <span data-ttu-id="968fc-123">Inny powiązane, klasa jest <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-123">Another related class is <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="968fc-124"><xref:System.Windows.ContentElement> Klasa implementuje wiele z tych samych członków, jak <xref:System.Windows.UIElement>; różnicy między tymi dwoma klasami musiał z ich zamierzone należy umieszczać w modelu ogólnej zawartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-124">The <xref:System.Windows.ContentElement> class implements many of the same members as does <xref:System.Windows.UIElement>; the difference between these two classes has to do with their intended place in the overall content model.</span></span> <span data-ttu-id="968fc-125">A <xref:System.Windows.UIElement> Klasa pochodna definiuje zazwyczaj stosunkowo sztywne model zawartości, co oznacza, że nie istnieją ograniczenia dotyczące elementy mogą być elementy podrzędne w znacznikach.</span><span class="sxs-lookup"><span data-stu-id="968fc-125">A <xref:System.Windows.UIElement> derived class typically defines a relatively rigid content model, meaning that there are restrictions on what elements may be child elements in markup.</span></span> <span data-ttu-id="968fc-126">Może to być pojemność przyjęcie mniej restrykcyjny zawartość elementu podrzędnego <xref:System.Windows.UIElement>, ale ta pojemność jest zazwyczaj scentralizowane w wyznaczonym właściwości zawartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-126">There might be capacity for taking less restrictive child content in a <xref:System.Windows.UIElement>, but that capacity is typically centralized in designated content properties.</span></span> <span data-ttu-id="968fc-127">A <xref:System.Windows.ContentElement> zazwyczaj klasy pochodnej nie jest tak restrykcyjne o zawartości do obsługi scenariuszy, takich jak dokumenty w formacie przepływu.</span><span class="sxs-lookup"><span data-stu-id="968fc-127">A <xref:System.Windows.ContentElement> derived class is typically not as restrictive about content, to support scenarios such as flow-format documents.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="968fc-128"><xref:System.Windows.UIElement.Visibility%2A> stan ma wpływ na wszystkie dane wejściowe, przetwarzane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-128"><xref:System.Windows.UIElement.Visibility%2A> state affects all input handling by that element.</span></span> <span data-ttu-id="968fc-129">Elementy, które nie są widoczne nie biorą udziału w zakresie testowania trafień i nie otrzymywać zdarzeń wejściowych, nawet, jeśli kursor znajduje się nad zakresem jeżeli byłoby elementu jeśli były widoczne.</span><span class="sxs-lookup"><span data-stu-id="968fc-129">Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds where the element would be if were visible.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.UIElement" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-130">Initializes a new instance of the <see cref="T:System.Windows.UIElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-131">Tworzenie nowego wystąpienia, które jest typu <xref:System.Windows.UIElement> jest nietypowy w kodzie aplikacji, ponieważ <xref:System.Windows.UIElement> to podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-131">Creating a new instance that is actually of type <xref:System.Windows.UIElement> is uncommon in application code, because <xref:System.Windows.UIElement> is a base element.</span></span> <span data-ttu-id="968fc-132">Zobacz [podstawowy przegląd elementy](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-132">See [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="968fc-133">Dodaje program obsługi zdarzenia trasowanego określonego zdarzenia trasowane, dodanie obsługi kolekcji programu obsługi dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-133">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="968fc-134">Identyfikator zdarzenia trasowanego mają być obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-134">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="968fc-135">Odwołanie do implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-135">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="968fc-136">Dodaje program obsługi zdarzenia trasowanego określonego zdarzenia trasowane, dodanie obsługi kolekcji programu obsługi dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-136">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-137">Tę samą procedurę obsługi zdarzenie, dla którego można dodać wiele razy bez zgłaszania wyjątku.</span><span class="sxs-lookup"><span data-stu-id="968fc-137">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="968fc-138">Jednak program obsługi jest faktycznie wywoływana wiele razy, gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-138">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="968fc-139">W związku z tym należy rozważyć, jak to zachowanie może mieć skutki uboczne, które należy uwzględnić w implementację programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-139">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="968fc-140">Zazwyczaj ta metoda umożliwia implementację metody dostępu "add", aby uzyskać [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorzec dostępu do zdarzenia niestandardowe zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-140">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="uIElement.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="968fc-141">Identyfikator zdarzenia trasowanego mają być obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-141">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="968fc-142">Odwołanie do implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-142">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="968fc-143"><see langword="true" /> można zarejestrować program obsługi w taki sposób, że jest wywoływana, nawet wtedy, gdy zdarzenie trasowane jest oznaczony jako obsługiwane w jej danych zdarzeń; <see langword="false" /> zarejestrować program obsługi z warunkiem domyślne, które nie będą wywoływane, jeśli zdarzenie trasowane jest oznaczona jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-143"><see langword="true" /> to register the handler such that it is invoked even when  the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
<span data-ttu-id="968fc-144">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-144">The default is <see langword="false" />.</span></span>  
  
<span data-ttu-id="968fc-145">Nie rutynowo poproś o rehandle zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-145">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="968fc-146">Dodaje program obsługi zdarzenia trasowanego określonego zdarzenia trasowane, dodanie obsługi kolekcji programu obsługi dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-146">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="968fc-147">Określ <paramref name="handledEventsToo" /> jako <see langword="true" /> zapewnienie podana program obsługi, można wywołać dla zdarzenia trasowanego, który już został oznaczony jako obsługiwane w innym elemencie wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-147">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-148">Przetwarzanie zdarzeń wejściowych niskiego poziomu w praktycznym sposobem jest złożonym zadaniem.</span><span class="sxs-lookup"><span data-stu-id="968fc-148">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="968fc-149">Wiele kontrolek zaimplementować zachowanie, gdzie określone zdarzenie jest oznaczony jako obsłużony i zastępuje inne zdarzenie bardziej intuicyjne.</span><span class="sxs-lookup"><span data-stu-id="968fc-149">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="968fc-150">Ogólnie rzecz biorąc kontrolki tylko oznaczy zdarzenie wejściowe platformy jako obsługiwane w przypadku niektórych zamiar projekt, aby to zrobić.</span><span class="sxs-lookup"><span data-stu-id="968fc-150">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="968fc-151">W niektórych scenariuszach te zamiarach projekt może nie być, wymaga usługi określonego obsługi zdarzeń wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-151">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="968fc-152">Jest on przeznaczony dla tych scenariuszy tego rejestrowanie obsługi za pomocą `handledEventsToo` jako `true` jest odpowiednia.</span><span class="sxs-lookup"><span data-stu-id="968fc-152">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="968fc-153">Jednak możesz nie należy tego robić regularnie.</span><span class="sxs-lookup"><span data-stu-id="968fc-153">But you should not do this routinely.</span></span> <span data-ttu-id="968fc-154">Wywoływanie programów obsługi w odpowiedzi na wszystkie zdarzenia, nawet jeśli obsługiwany będzie skomplikować własnych zdarzeń aplikacji logiki przetwarzania.</span><span class="sxs-lookup"><span data-stu-id="968fc-154">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="968fc-155">Jeśli logika obsługi jest istotne, mogą pojawić się spadek wydajności.</span><span class="sxs-lookup"><span data-stu-id="968fc-155">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="968fc-156">Należy zarezerwować użytkowania dołączanie programy obsługi dla już obsługi zdarzeń dla sytuacji, w którym możesz mieć już odnaleziony podczas procesu projektowania, że niektóre formanty obsługi zdarzeń, które chcesz nadal obsługiwać za pomocą aplikacji logiki.</span><span class="sxs-lookup"><span data-stu-id="968fc-156">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="968fc-157">Inna technika unikanie klasy zachowania niektórych kombinacji kontroli zdarzenie obsługi polega na użyciu alternatywne (wersja zapoznawcza) to zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-157">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="968fc-158">Na przykład jeśli <xref:System.Windows.UIElement.MouseLeftButtonDown> jest oznaczony jako obsłużonych Obsługa klasy może być możliwe dodanie obsługi <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="968fc-158">For example, if <xref:System.Windows.UIElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="968fc-159">Tę samą procedurę obsługi zdarzenie, dla którego można dodać wiele razy bez zgłaszania wyjątku.</span><span class="sxs-lookup"><span data-stu-id="968fc-159">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="968fc-160">Jednak program obsługi jest faktycznie wywoływana wiele razy, gdy zdarzenie jest obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-160">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="968fc-161">W związku z tym należy rozważyć, jak to zachowanie może mieć skutki uboczne, które należy uwzględnić w implementację programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-161">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="968fc-162">Zazwyczaj ta metoda umożliwia implementację metody dostępu "add", aby uzyskać [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorzec dostępu do zdarzenia niestandardowe zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-162">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-163">Poniższy przykład wykonuje program obsługi wywoływane na <xref:System.Windows.FrameworkElement.Initialized> zdarzenie na stronie, która dołącza obsługę zdefiniowanych do jednego z nazwanych elementów na stronie za pomocą `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-163">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="968fc-164">Czy można wywołać ten program obsługi, nawet wtedy, gdy inny element wzdłuż trasy oznaczone dane zdarzenia udostępnionego jako obsłużony przed osiągnięciem element obsługi dla trasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-164">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="968fc-165">Programy obsługi są dodawane do trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-165">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="968fc-166">Dane zdarzenia, które służy do dodawania obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-166">The event data that is used to add the handlers.</span></span> <span data-ttu-id="968fc-167">Ta metoda używa <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości danych zdarzenia, aby utworzyć procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-167">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the event data to create the handlers.</span></span></param>
        <summary><span data-ttu-id="968fc-168">Dodaje obsługi do określonego <see cref="T:System.Windows.EventRoute" /> dla bieżącego <see cref="T:System.Windows.UIElement" /> kolekcję procedur obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-168">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.UIElement" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-169">Ta metoda może być używana przez elementy host zawartości (albo te, które implementują <xref:System.Windows.IContentHost> lub tych, które nie) można dodać procedury obsługi dla elementów podrzędnych do <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="968fc-169">This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>.</span></span> <span data-ttu-id="968fc-170">Zazwyczaj nie jest to wymagane dla <xref:System.Windows.UIElement>, ponieważ programy obsługi są automatycznie dodawane dla wszystkich elementów w ukończonej drzewo logiczne.</span><span class="sxs-lookup"><span data-stu-id="968fc-170">Ordinarily, this is not required for <xref:System.Windows.UIElement>, because handlers are automatically added for all elements found in a completed logical tree.</span></span> <span data-ttu-id="968fc-171">W niektórych przypadkach, gdzie <xref:System.Windows.ContentElement> i <xref:System.Windows.UIElement> są zmieszane w drzewach oparte na szablonach, aktywne elementów pochodzących z konieczności szablon ma zostać dodany do trasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-171">However, in some cases where <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are mixed in templated trees, intervening elements that came from the template need to be added to a route.</span></span> <span data-ttu-id="968fc-172">Zarówno <xref:System.Windows.ContentElement> i <xref:System.Windows.UIElement> obsługuje wersję tej metody.</span><span class="sxs-lookup"><span data-stu-id="968fc-172">Both <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> support a version of this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.UIElement.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-173">Pobiera lub ustawia wartość wskazującą, czy ten element może służyć jako obiekt docelowy operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-173">Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.</span></span>  <span data-ttu-id="968fc-174">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-174">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-175"><see langword="true" /> Jeśli ten element może być używany jako obiekt docelowy operacji przeciągania i upuszczania. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-175"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-176">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-176">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-177">Operacje przeciągania i upuszczania nie są domyślnie włączone i musi być włączona celowo <xref:System.Windows.UIElement.AllowDrop%2A> do `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-177">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.UIElement.AllowDrop%2A> to `true`.</span></span> <span data-ttu-id="968fc-178">Po przekroczeniu tego ustawienia podstawowe, przeciągnij i upuść działanie zależy wyłącznie od implementacji i nie jest zdefiniowany przez <xref:System.Windows.UIElement> lub dowolnej klasy elementu podstawowego.</span><span class="sxs-lookup"><span data-stu-id="968fc-178">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement> or any other base element class.</span></span> <span data-ttu-id="968fc-179">Niektóre kontrolki, na przykład <xref:System.Windows.Controls.RichTextBox>, mają zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="968fc-179">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior.</span></span> <span data-ttu-id="968fc-180">Aby uzyskać więcej informacji na temat przeciągania i upuszczania, zobacz [przeciągania i upuszczania Przegląd](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-180">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="968fc-181"><xref:System.Windows.FrameworkElement> zastępuje metadanych dla tej właściwości zależności w swojej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-181"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="968fc-182">W szczególności <xref:System.Windows.FrameworkElement> wyznacza tę właściwość, aby zezwolić na przejęcie wartości właściwości (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> jest `true` w metadanych).</span><span class="sxs-lookup"><span data-stu-id="968fc-182">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="968fc-183">Dziedziczenie wartości właściwości w tym kontekście oznacza, że jeśli są elementami podrzędnymi bez innych wartości dla <xref:System.Windows.UIElement.AllowDrop%2A> przypisane przy użyciu wartości lokalnych lub style, wartość przypisaną wartość (ponownie, albo w stylach domyślnie najbliższym elemencie nadrzędnym wartości lub wartości lokalnej), a następnie będzie można przypisać wartości z elementu nadrzędnego do wszystkie elementy podrzędne wcześniej nieprzypisane przez system właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-183">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from the parent element will be assigned to all previously unassigned child elements by the property system.</span></span> <span data-ttu-id="968fc-184">W praktyce oznacza to, że można określić, czy zezwalać na operacje listy w elemencie głównym i że wartość będzie propagowany do wszystkich elementów podrzędnych, które nie mają przypisanych go jako `false`.</span><span class="sxs-lookup"><span data-stu-id="968fc-184">In practice this means that you can specify whether to allow drop operations at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-185">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-185">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-186">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-186">Identifier field</span></span>|<xref:System.Windows.UIElement.AllowDropProperty>|  
|<span data-ttu-id="968fc-187">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-187">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-188">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-188">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-189">Poniższy przykład ustawia znaczników <xref:System.Windows.UIElement.AllowDrop%2A> właściwość `true` przy użyciu atrybutu na <xref:System.Windows.Controls.TextBox>, jak również niektóre inne ustawienie powiązane właściwości umożliwiające w agregacji, które <xref:System.Windows.Controls.TextBox> jako obiekt docelowy obiekt danych Tekst wielowierszowy po zostanie przesunięte.</span><span class="sxs-lookup"><span data-stu-id="968fc-189">The following markup example sets the <xref:System.Windows.UIElement.AllowDrop%2A> property `true` using an attribute on a <xref:System.Windows.Controls.TextBox>, as well as setting some other related properties that in aggregate enable that <xref:System.Windows.Controls.TextBox> to be the target of a multiline text data object when it is dragged in.</span></span> <span data-ttu-id="968fc-190">Aby uzyskać pełny przykład, zobacz [Załaduj przykład pliku porzucony](https://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span><span class="sxs-lookup"><span data-stu-id="968fc-190">For the complete sample, see [Load a Dropped File Sample](https://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span></span>  
  
 [!code-xaml[DragDrop_DropOpenTextFile#UIElementAllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DropOpenTextFile/CS/window1.xaml#uielementallowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-191">Identyfikuje <see cref="P:System.Windows.UIElement.AllowDrop" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-191">Identifies the <see cref="P:System.Windows.UIElement.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="968fc-192">Stosuje animacji z właściwością określona zależność, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-192">Applies an animation to a specified dependency property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-193">Ta metoda jest zapieczętowany i nie może być zastąpiona.</span><span class="sxs-lookup"><span data-stu-id="968fc-193">This method is sealed and cannot be overridden.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="uIElement.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="968fc-194">Identyfikator właściwości animować.</span><span class="sxs-lookup"><span data-stu-id="968fc-194">The identifier for the property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="968fc-195">Zegar animacji, formantów, która deklaruje animacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-195">The animation clock that controls and declares the animation.</span></span></param>
        <summary><span data-ttu-id="968fc-196">Stosuje animacji z właściwością określona zależność, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-196">Applies an animation to a specified dependency property on this element.</span></span> <span data-ttu-id="968fc-197">Istniejących animacjach zostaną zatrzymane i zastąpione nowej animacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-197">Any existing animations are stopped and replaced with the new animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-198">Aby usunąć animacji z właściwością, należy określić identyfikator dla tej właściwości jako `dp` i określ `clock` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="968fc-198">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="968fc-199">Spowoduje to usunięcie animacji i animowany właściwość jest ustawiona na wartość podstawowa.</span><span class="sxs-lookup"><span data-stu-id="968fc-199">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="968fc-200">Zegar pierwotnie skojarzone animacji nie jest wyłączana.</span><span class="sxs-lookup"><span data-stu-id="968fc-200">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="968fc-201">Inne animacji przypisane do tego zegara będzie kontynuował pracę.</span><span class="sxs-lookup"><span data-stu-id="968fc-201">Any other animations assigned to that clock will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-202">W poniższym przykładzie <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` ma określonego czasu Animacja przez wywołanie metody <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span><span class="sxs-lookup"><span data-stu-id="968fc-202">In the following example, a <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` has a particular timing animation applied to it by calling <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/ClockControllerSpeedRatioExample.cs#uielementapplyanimationclock)]
 [!code-vb[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/clockcontrollerspeedratioexample.vb#uielementapplyanimationclock)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="uIElement.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="968fc-203">Właściwość animować.</span><span class="sxs-lookup"><span data-stu-id="968fc-203">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="968fc-204">Zegar animacji, formantów, która deklaruje animacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-204">The animation clock that controls and declares the animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="968fc-205">Wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-205">A value of the enumeration.</span></span> <span data-ttu-id="968fc-206">Wartość domyślna to <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, co spowoduje zatrzymanie wszelkich istniejących animacji i Zastąp nowym plikiem.</span><span class="sxs-lookup"><span data-stu-id="968fc-206">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span></span></param>
        <summary><span data-ttu-id="968fc-207">Dotyczy animacji właściwości określonej zależności w tym elemencie, umożliwiającym określenie, co się stanie, jeśli właściwość jest już uruchomiona Animacja.</span><span class="sxs-lookup"><span data-stu-id="968fc-207">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-208">Aby usunąć animacji z właściwością, należy określić identyfikator dla tej właściwości jako `dp` i określ `clock` jako `null`.</span><span class="sxs-lookup"><span data-stu-id="968fc-208">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="968fc-209">Spowoduje to usunięcie animacji i animowany właściwość jest ustawiona na wartość podstawowa.</span><span class="sxs-lookup"><span data-stu-id="968fc-209">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="968fc-210">Zegar pierwotnie skojarzone animacji nie jest wyłączana.</span><span class="sxs-lookup"><span data-stu-id="968fc-210">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="968fc-211">Inne animacji przypisane do tego zegara będzie kontynuował pracę.</span><span class="sxs-lookup"><span data-stu-id="968fc-211">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-212">Pobiera wartość wskazującą, czy co najmniej jednego dotknięcia są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-212">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value><span data-ttu-id="968fc-213"><see langword="true" /> Jeśli co najmniej jeden touch, które są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-213"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-214">Identyfikuje <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-214">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-215">Pobiera wartość wskazującą, czy co najmniej jednego dotknięcia są przechwytywane do tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-215">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="968fc-216"><see langword="true" /> Jeśli co najmniej jeden touch, które są przechwytywane do tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-216"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-217">Identyfikuje <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-217">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-218">Pobiera wartość wskazującą, czy co najmniej jednego dotknięcia wciśnięto się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-218">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value><span data-ttu-id="968fc-219"><see langword="true" /> Jeśli co najmniej jednego dotknięcia jest wciśnięty nad tym elementem; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-219"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-220">Identyfikuje <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-220">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-221">Pobiera wartość wskazującą, czy co najmniej jednego dotknięcia naciśnięciu za pośrednictwem tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-221">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="968fc-222"><see langword="true" /> Jeśli co najmniej jednego dotknięcia jest wciśnięty za pośrednictwem tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-222"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-223">Identyfikuje <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-223">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public void Arrange (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Arrange(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Arrange (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Arrange(System::Windows::Rect finalRect);" />
      <MemberSignature Language="F#" Value="member this.Arrange : System.Windows.Rect -&gt; unit" Usage="uIElement.Arrange finalRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect"><span data-ttu-id="968fc-224">Rozmiaru końcowego, który element nadrzędny oblicza elementu podrzędnego, podana jako <see cref="T:System.Windows.Rect" /> wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-224">The final size that the parent computes for the child element, provided as a <see cref="T:System.Windows.Rect" /> instance.</span></span></param>
        <summary><span data-ttu-id="968fc-225">Określa położenie elementów podrzędnych i określa rozmiar dla <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-225">Positions child elements and determines a size for a <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="968fc-226">Elementy nadrzędne wywołanie tej metody z ich <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> implementacji (lub równoważne poziomie struktury WPF) w celu utworzenia aktualizację układu cykliczne.</span><span class="sxs-lookup"><span data-stu-id="968fc-226">Parent elements call this method from their <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> implementation (or a WPF framework-level equivalent) to form a recursive layout update.</span></span> <span data-ttu-id="968fc-227">Ta metoda tworzy drugi przebieg aktualizacji układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-227">This method constitutes the second pass of a layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-228">Dla elementu poziomie struktury WPF, wynikające zachowanie dla scenariuszy <xref:System.Windows.UIElement.Arrange%2A> nie powinien i nie może, chyba że użytkownik w tle można zmienić.</span><span class="sxs-lookup"><span data-stu-id="968fc-228">For WPF framework-level element deriving scenarios, behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="968fc-229">Zamiast tego należy zastąpić <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementacji w klasie.</span><span class="sxs-lookup"><span data-stu-id="968fc-229">Instead, you should override the <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation in your class.</span></span> <span data-ttu-id="968fc-230">Twoje <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementacja jest wywoływana wewnętrznie przez <xref:System.Windows.UIElement.Arrange%2A> jako część operacji układu poziomie struktury WPF domyślne.</span><span class="sxs-lookup"><span data-stu-id="968fc-230">Your <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="968fc-231">Twoje <xref:System.Windows.UIElement.ArrangeCore%2A> także wywołać implementację <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> dla każdego elementu podrzędnego, jeśli ma on elementy podrzędne.</span><span class="sxs-lookup"><span data-stu-id="968fc-231">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> on each child element, if it has child elements.</span></span>  
  
 <span data-ttu-id="968fc-232">Dla elementu podstawowego poziomu WPF wynikające zachowanie dla scenariuszy <xref:System.Windows.UIElement.Arrange%2A> nie powinien i nie może, chyba że użytkownik w tle można zmienić.</span><span class="sxs-lookup"><span data-stu-id="968fc-232">For WPF core-level element deriving scenarios, the behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="968fc-233">Zamiast tego należy zastąpić <xref:System.Windows.UIElement.ArrangeCore%2A> w klasie.</span><span class="sxs-lookup"><span data-stu-id="968fc-233">Instead, you should override <xref:System.Windows.UIElement.ArrangeCore%2A> in your class.</span></span> <span data-ttu-id="968fc-234">Twoje <xref:System.Windows.UIElement.ArrangeCore%2A> implementacja jest wywoływana wewnętrznie przez <xref:System.Windows.UIElement.Arrange%2A> jako część operacji układu poziomie struktury WPF domyślne.</span><span class="sxs-lookup"><span data-stu-id="968fc-234">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="968fc-235">Jednak założono, że używasz układ poziomie struktury platformy WPF i jego system układu, który często nie jest tak, jeśli są specjalnie wyprowadzanie elementy w WPF poziomie core z <xref:System.Windows.UIElement> element klasy bazowej.</span><span class="sxs-lookup"><span data-stu-id="968fc-235">However, this assumes you are using WPF framework-level layout and its layout system, which is often not the case if you are specifically deriving elements at the WPF core-level from the <xref:System.Windows.UIElement> base element class.</span></span> <span data-ttu-id="968fc-236">Twoje <xref:System.Windows.UIElement.ArrangeCore%2A> także wywołać implementację <xref:System.Windows.UIElement.Arrange%2A> dla każdego elementu podrzędnego, jeśli ma on elementy podrzędne.</span><span class="sxs-lookup"><span data-stu-id="968fc-236">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.UIElement.Arrange%2A> on each child element, if it has child elements.</span></span> <span data-ttu-id="968fc-237">Uwaga scenariusz poziom core WPF oznacza, że nie używasz <xref:System.Windows.FrameworkElement> pochodne klasy, ponieważ <xref:System.Windows.FrameworkElement> zamknięcia <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-237">Note that the WPF core-level scenario implies that you are not using a <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span>  
  
 <span data-ttu-id="968fc-238">Obliczenie WPF poziomie struktury układzie strony [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] składa się z <xref:System.Windows.UIElement.Measure%2A> wywołania i <xref:System.Windows.UIElement.Arrange%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="968fc-238">Computation of WPF framework-level layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] consists of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="968fc-239">Podczas <xref:System.Windows.UIElement.Measure%2A> wywołanie, system układu określa wymagań dotyczących rozmiaru elementu przy użyciu podanego <xref:System.Windows.Size> (`availableSize`) argumentów.</span><span class="sxs-lookup"><span data-stu-id="968fc-239">During the <xref:System.Windows.UIElement.Measure%2A> call, the layout system determines an element's size requirements using a provided <xref:System.Windows.Size> (`availableSize`) argument.</span></span> <span data-ttu-id="968fc-240">Podczas <xref:System.Windows.UIElement.Arrange%2A> wywołanie, system układu Kończenie znajdujących się rozmiar i położenie elementu obwiedni.</span><span class="sxs-lookup"><span data-stu-id="968fc-240">During the <xref:System.Windows.UIElement.Arrange%2A> call, the layout system finalizes the size and position of an element's bounding box.</span></span>  <span data-ttu-id="968fc-241">Aby uzyskać więcej informacji, zobacz [układ](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-241">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 <span data-ttu-id="968fc-242">`availableSize` może być dowolną liczbę od 0 do nieskończoności.</span><span class="sxs-lookup"><span data-stu-id="968fc-242">`availableSize` can be any number from zero to infinity.</span></span> <span data-ttu-id="968fc-243">Elementy, aby zostać rozmieszczony Zwróć minimum <xref:System.Windows.Size> potrzebują za pośrednictwem `availableSize` parametru.</span><span class="sxs-lookup"><span data-stu-id="968fc-243">Elements to be laid out return the minimum <xref:System.Windows.Size> they require through the `availableSize` parameter.</span></span>  
  
 <span data-ttu-id="968fc-244">Gdy układ najpierw zostanie uruchomiony, zawsze otrzymuje <xref:System.Windows.UIElement.Measure%2A> wywołanie przed <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-244">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="968fc-245">Jednak po pierwszym przebiegu układ go może zostać wyświetlony <xref:System.Windows.UIElement.Arrange%2A> wywołania bez <xref:System.Windows.UIElement.Measure%2A>; może się to zdarzyć, gdy właściwość, która ma wpływ tylko na <xref:System.Windows.UIElement.Arrange%2A> zmianie (na przykład wyrównanie), lub gdy odbierze element nadrzędny <xref:System.Windows.UIElement.Arrange%2A> bez <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-245">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="968fc-246">A <xref:System.Windows.UIElement.Measure%2A> wywołanie automatycznie spowoduje unieważnienie <xref:System.Windows.UIElement.Arrange%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="968fc-246">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="968fc-247">Aktualizacje układu są zazwyczaj wykonywane asynchronicznie (o godzinie określany przez system układu).</span><span class="sxs-lookup"><span data-stu-id="968fc-247">Layout updates generally occur asynchronously (at a time determined by the layout system).</span></span> <span data-ttu-id="968fc-248">Element nie może być odzwierciedla natychmiast zmiany właściwości, które wpływają na zmiany rozmiaru elementu (takie jak <xref:System.Windows.FrameworkElement.Width%2A>).</span><span class="sxs-lookup"><span data-stu-id="968fc-248">An element might not immediately reflect changes to properties that affect element sizing (such as <xref:System.Windows.FrameworkElement.Width%2A>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="968fc-249">Aktualizacje układu aktualizację można wymusić przy użyciu <xref:System.Windows.UIElement.UpdateLayout%2A> metody; jednak wywołaniu tej funkcji nie jest zalecane, ponieważ jest zazwyczaj zbędna i mogą powodować spadek wydajności.</span><span class="sxs-lookup"><span data-stu-id="968fc-249">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method; however, calling this function is not recommended, as it is usually unnecessary and can cause poor performance.</span></span> <span data-ttu-id="968fc-250">W wielu sytuacjach, w przypadku, gdy wywołanie <xref:System.Windows.UIElement.UpdateLayout%2A> może być odpowiednie, system układu będzie prawdopodobnie już przetwarzanie aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-250">In many situations where calling <xref:System.Windows.UIElement.UpdateLayout%2A> might be appropriate, the layout system will probably already be processing updates.</span></span> <span data-ttu-id="968fc-251">System układu może przetwarzać zmiany układu w taki sposób, który można zoptymalizować wszystkie niezbędne aktualizacje w ramach pakietu.</span><span class="sxs-lookup"><span data-stu-id="968fc-251">The layout system can process layout changes in a manner that can optimize all necessary updates as part of a package.</span></span>  
  
 <span data-ttu-id="968fc-252">System układu przechowuje dwie oddzielne kolejki nieprawidłowy układów, jeden dla <xref:System.Windows.UIElement.Measure%2A> i jeden dla <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-252">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="968fc-253">Kolejka układu są sortowane na podstawie kolejności elementów w drzewie wizualnym.</span><span class="sxs-lookup"><span data-stu-id="968fc-253">The layout queue is sorted based upon the order of elements in the visual tree.</span></span> <span data-ttu-id="968fc-254">Wyżej w drzewie elementów znajdują się na początku kolejki, aby uniknąć nadmiarowe układy spowodowany przez powtarzające zmiany elementów nadrzędnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-254">Elements higher in the tree are at the top of the queue, in order to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="968fc-255">Zduplikowane wpisy są automatycznie usuwane z kolejki, a elementy zostaną automatycznie usunięte z kolejki, jeśli są one już prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="968fc-255">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already valid.</span></span>  
  
 <span data-ttu-id="968fc-256">Podczas aktualizowania układu <xref:System.Windows.UIElement.Measure%2A> kolejki jest opróżniany najpierw następuje <xref:System.Windows.UIElement.Arrange%2A> kolejki.</span><span class="sxs-lookup"><span data-stu-id="968fc-256">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="968fc-257">Element <xref:System.Windows.UIElement.Arrange%2A> kolejki nigdy nie będą ułożone, jeśli element <xref:System.Windows.UIElement.Measure%2A> kolejki.</span><span class="sxs-lookup"><span data-stu-id="968fc-257">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeCore">
      <MemberSignature Language="C#" Value="protected virtual void ArrangeCore (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ArrangeCore(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ArrangeCore (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ArrangeCore(System::Windows::Rect finalRect);" />
      <MemberSignature Language="F#" Value="abstract member ArrangeCore : System.Windows.Rect -&gt; unit&#xA;override this.ArrangeCore : System.Windows.Rect -&gt; unit" Usage="uIElement.ArrangeCore finalRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect"><span data-ttu-id="968fc-258">Końcowe obszaru nadrzędnym tego elementu należy używać rozmieścić wraz z jego elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-258">The final area within the parent that element should use to arrange itself and its child elements.</span></span></param>
        <summary><span data-ttu-id="968fc-259">Określa szablon dla poziomu core WPF Rozmieść definicji układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-259">Defines the template for WPF core-level arrange layout definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="968fc-260">Zastąpienie tej metody przydaje się, tylko jeśli są wyprowadzanie na poziomie core WPF i nie używasz system poziomie struktury układu WPF i <xref:System.Windows.FrameworkElement> pochodne klasy, ponieważ <xref:System.Windows.FrameworkElement> zamknięcia <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-260">Overriding this method is only appropriate if you are deriving at the WPF core-level, and you are not using the WPF framework-level layout system and <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span> <span data-ttu-id="968fc-261">Jeśli używasz systemu układów poziomie struktury WPF odpowiedniej metody do przesłonięcia dla układu swoiste dla klas Rozmieść zachowanie jest <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-261">If you are using the WPF framework-level layout system, the appropriate method to override for class-specific layout arrange behavior is <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-262"><xref:System.Windows.UIElement.ArrangeCore%2A> implementacje powinny wywoływać implementację podstawową, aby zwrócić rozmiar, następnie wywołać <xref:System.Windows.UIElement.Arrange%2A> metoda każdego elementu podrzędnego widoczne i uzgadniają rozmiary zwrócone przez te <xref:System.Windows.UIElement.Arrange%2A> wywołania z rozmiarem implementację podstawową.</span><span class="sxs-lookup"><span data-stu-id="968fc-262"><xref:System.Windows.UIElement.ArrangeCore%2A> implementations should call the base implementation to return a size, then call the <xref:System.Windows.UIElement.Arrange%2A> method of each visible child element, and reconcile the sizes returned by these <xref:System.Windows.UIElement.Arrange%2A> calls with the size of the base implementation.</span></span> <span data-ttu-id="968fc-263">Logika uzgadniania aspektów <xref:System.Windows.UIElement.ArrangeCore%2A> wdrażania może się różnić w zależności od layout charakterystyki elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-263">The logic for the reconciliation aspect of a <xref:System.Windows.UIElement.ArrangeCore%2A> implementation might vary, depending on the layout characteristics of your element.</span></span> <span data-ttu-id="968fc-264">W poniższym przykładowym szablonie `VisualChildren` jest właściwością hipotetyczny, nazwę elementu może zdefiniować ułatwiające wyliczyć jego zawartości; <xref:System.Windows.UIElement> nie definiuje kolekcje zawartości na tym poziomie architektura poziomie struktury WPF odracza zachowania zawartości do elementów pochodnych, takich jak określonych kontrolek lub klas bazowych kontroli.</span><span class="sxs-lookup"><span data-stu-id="968fc-264">In the following example template, `VisualChildren` is a hypothetical property that your element might define to help enumerate its content; <xref:System.Windows.UIElement> does not define content collections at this level, the WPF framework-level architecture defers content behavior to derived elements such as specific controls or control base classes.</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementarrangeoverride)]
 [!code-vb[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementarrangeoverride)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="968fc-265">Jeśli tworzysz elementów na poziomie core WPF, należy zastąpić to metodę, aby nadać unikatową nazwę elementu podstawowego poziomu WPF rozmieszczanie układu zachowanie lub się układ właściwe decyzje dotyczące elementów podrzędnych elementów.</span><span class="sxs-lookup"><span data-stu-id="968fc-265">If you are developing elements at the WPF core level,you should override this method to give your WPF core-level element a unique arrange layout behavior, or to make proper layout decisions about the child elements of your elements.</span></span> <span data-ttu-id="968fc-266">Zastąpienie może być konieczne, jeśli te elementy podrzędne nie są takie jak rozpoznać ze zdefiniowanym wzorzec <see cref="T:System.Windows.Controls.ItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-266">An override might be necessary if those child elements are not recognizable from a defined pattern such as an <see cref="T:System.Windows.Controls.ItemCollection" />.</span></span>  
  
<span data-ttu-id="968fc-267">Element nadrzędny musi wywołać swoiste dla klas <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> dla każdego elementu podrzędnego, w przeciwnym razie te elementy podrzędne nie są renderowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-267">A parent element must call the class-specific <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on each child element, otherwise those child elements are not rendered.</span></span></para></block>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="968fc-268">W tym elemencie, rozpoczyna się animacji dla określonej właściwości animowany.</span><span class="sxs-lookup"><span data-stu-id="968fc-268">Starts an animation for a specified animated property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="uIElement.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="968fc-269">Właściwość, animować, określany jako identyfikator właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-269">The property to animate, which is specified as a dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="968fc-270">Oś czasu animacji, aby rozpocząć.</span><span class="sxs-lookup"><span data-stu-id="968fc-270">The timeline of the animation to start.</span></span></param>
        <summary><span data-ttu-id="968fc-271">W tym elemencie, rozpoczyna się animacji dla określonej właściwości animowany.</span><span class="sxs-lookup"><span data-stu-id="968fc-271">Starts an animation for a specified animated property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-272">Podczas sprawdzania, czy właściwość jest animowany, pamiętaj, że animacja rozpocznie się i uznaje się animowany podczas renderowania pierwszej ramki poza — animowane punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="968fc-272">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="968fc-273">Jeśli <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> dla `animation` jest `null`, a następnie zostaną usunięte wszystkie bieżące animacji i bieżącą wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="968fc-273">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="968fc-274">Jeśli cały `animation` wartość `null`wszystkich animacji są usuwane z właściwości i wartości właściwości wraca do swojej wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="968fc-274">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="968fc-275">Oś czasu animacji pierwotnie skojarzone nie jest wyłączana.</span><span class="sxs-lookup"><span data-stu-id="968fc-275">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="968fc-276">Inne animacji, przypisany do tej osi czasu będzie kontynuował pracę.</span><span class="sxs-lookup"><span data-stu-id="968fc-276">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-277">Poniższy przykład tworzy animacji, przypisuje do niego, a następnie wywołuje <xref:System.Windows.UIElement.BeginAnimation%2A> go uruchomić.</span><span class="sxs-lookup"><span data-stu-id="968fc-277">The following example creates an animation, assigns it, and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> to start it.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#beginanimation)]
 [!code-vb[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#beginanimation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="uIElement.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="968fc-278">Właściwość, animować, określany jako identyfikator właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-278">The property to animate, which is specified as the dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="968fc-279">Oś czasu animacji, które mają być stosowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-279">The timeline of the animation to be applied.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="968fc-280">Wartość wyliczenia, która określa, jak nowej animacji współdziała z dowolnego animacji bieżącego (uruchomione), które już mają wpływ na wartość właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-280">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="968fc-281">Rozpoczyna się, które określonych animacji dla określonej właściwości animowany, w tym elemencie, przy użyciu opcji określania, co się stanie, jeśli właściwość jest już uruchomiona Animacja.</span><span class="sxs-lookup"><span data-stu-id="968fc-281">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-282">Podczas sprawdzania, czy właściwość jest animowany, pamiętaj, że animacja rozpocznie się i uznaje się animowany podczas renderowania pierwszej ramki poza — animowane punkt początkowy.</span><span class="sxs-lookup"><span data-stu-id="968fc-282">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="968fc-283">Jeśli <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> dla `animation` jest `null`, a następnie zostaną usunięte wszystkie bieżące animacji i bieżącą wartość właściwości jest utrzymywana.</span><span class="sxs-lookup"><span data-stu-id="968fc-283">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="968fc-284">Jeśli cały `animation` wartość `null`wszystkich animacji są usuwane z właściwości i wartości właściwości wraca do swojej wartości podstawowej.</span><span class="sxs-lookup"><span data-stu-id="968fc-284">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="968fc-285">Oś czasu animacji pierwotnie skojarzone nie jest wyłączana.</span><span class="sxs-lookup"><span data-stu-id="968fc-285">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="968fc-286">Inne animacji, przypisany do tej osi czasu będzie kontynuował pracę.</span><span class="sxs-lookup"><span data-stu-id="968fc-286">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-287">Poniższy przykład wykonuje program obsługi, który uzyskuje dostęp do istniejących animacji z zasobem, a następnie wywołuje <xref:System.Windows.UIElement.BeginAnimation%2A> z działaniem określonym przekazywanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-287">The following example implements a handler that obtains an existing animation from a resource and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> with a specified handoff behavior.</span></span>  
  
 [!code-csharp[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesIntroduction/CSharp/SampleViewer.xaml.cs#beginanimationhandoff)]
 [!code-vb[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesIntroduction/visualbasic/sampleviewer.xaml.vb#beginanimationhandoff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect BitmapEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffect BitmapEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffect As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffect ^ BitmapEffect { System::Windows::Media::Effects::BitmapEffect ^ get(); void set(System::Windows::Media::Effects::BitmapEffect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BitmapEffect : System.Windows.Media.Effects.BitmapEffect with get, set" Usage="System.Windows.UIElement.BitmapEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-288">Pobiera lub ustawia efekt mapy bitowej stosowanego bezpośrednio do renderowanej zawartości dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-288">Gets or sets a bitmap effect that applies directly to the rendered content for this element.</span></span>  <span data-ttu-id="968fc-289">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-289">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-290">Efekt mapy bitowej do zastosowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-290">The bitmap effect to apply.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-291"><xref:System.Windows.Media.Effects.BitmapEffect> Dlatego jest typem abstrakcyjnym [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] użycie wymaga zaimplementowano klasy pochodnej <xref:System.Windows.Media.Effects.BitmapEffect>, takich jak <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="968fc-291"><xref:System.Windows.Media.Effects.BitmapEffect> is an abstract type, therefore the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage requires an implemented derived class of <xref:System.Windows.Media.Effects.BitmapEffect>, such as <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span></span> <span data-ttu-id="968fc-292">Uwaga jeden implementowana Klasa pochodna jest typ kolekcji, który służy do określenia więcej niż jedną sekwencyjne <xref:System.Windows.Media.Effects.BitmapEffect>, przy użyciu składni tagów zagnieżdżonych.</span><span class="sxs-lookup"><span data-stu-id="968fc-292">Note that one implemented derived class is a collection type that allows you to specify more than one sequential <xref:System.Windows.Media.Effects.BitmapEffect>, using a nested tag syntax.</span></span>  
  
 <span data-ttu-id="968fc-293">Nie istniejących pochodne klasy <xref:System.Windows.Media.Effects.BitmapEffect> obsługuje konwertera typów więc [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] składnia używana dla tej właściwości jest ogólnie składni elementu właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-293">No existing derived class of <xref:System.Windows.Media.Effects.BitmapEffect> supports a type converter, so the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax that you use for this property is generally property element syntax.</span></span>  
  
<a name="dependencyPropertyInfo_BitmapEffect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-294">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-294">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-295">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-295">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectProperty>|  
|<span data-ttu-id="968fc-296">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-296">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-297">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-297">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-298">W poniższym przykładzie ustawiono mapy bitowej efektu, za pomocą <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="968fc-298">The following example sets a bitmap effect, using <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span></span>  
  
 [!code-csharp[EffectsGallery_snip#CodeBehindBlurCodeBehindExampleInline](~/samples/snippets/csharp/VS_Snippets_Wpf/EffectsGallery_snip/CSharp/blurcodebehindexample.xaml.cs#codebehindblurcodebehindexampleinline)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffectInput" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffectInput As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffectInput ^ BitmapEffectInput { System::Windows::Media::Effects::BitmapEffectInput ^ get(); void set(System::Windows::Media::Effects::BitmapEffectInput ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BitmapEffectInput : System.Windows.Media.Effects.BitmapEffectInput with get, set" Usage="System.Windows.UIElement.BitmapEffectInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-299">Pobiera lub ustawia źródło wejścia dla efektu mapy bitowej stosowanego bezpośrednio do renderowanej zawartości dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-299">Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.</span></span>  <span data-ttu-id="968fc-300">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-300">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-301">Źródło dla efektów mapy bitowej.</span><span class="sxs-lookup"><span data-stu-id="968fc-301">The source for bitmap effects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BitmapEffectInput"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-302">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-302">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-303">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-303">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectInputProperty>|  
|<span data-ttu-id="968fc-304">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-304">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-305">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-305">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInputProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectInputProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectInputProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectInputProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectInputProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BitmapEffectInputProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-306">Identyfikuje <see cref="P:System.Windows.UIElement.BitmapEffectInput" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-306">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffectInput" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BitmapEffectProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.BitmapEffectProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-307">Identyfikuje <see cref="P:System.Windows.UIElement.BitmapEffect" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-307">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffect" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CacheMode CacheMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CacheMode CacheMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CacheMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheMode As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CacheMode ^ CacheMode { System::Windows::Media::CacheMode ^ get(); void set(System::Windows::Media::CacheMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheMode : System.Windows.Media.CacheMode with get, set" Usage="System.Windows.UIElement.CacheMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-308">Pobiera lub ustawia pamięci podręcznej reprezentację <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-308">Gets or sets a cached representation of the <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <value><span data-ttu-id="968fc-309">A <see cref="T:System.Windows.Media.CacheMode" /> zawierający reprezentację pamięci podręcznej <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-309">A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.UIElement" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-310">Ustaw <xref:System.Windows.UIElement.CacheMode%2A> właściwość, jeśli zachodzi konieczność zwiększenia wydajności dla zawartości, która jest czasochłonne do renderowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-310">Set the <xref:System.Windows.UIElement.CacheMode%2A> property when you need to increase performance for content that is time consuming to render.</span></span> <span data-ttu-id="968fc-311">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Media.BitmapCache>.</span><span class="sxs-lookup"><span data-stu-id="968fc-311">For more information, see <xref:System.Windows.Media.BitmapCache>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.CacheMode" />
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="CacheModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CacheModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CacheModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.CacheModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CacheModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CacheModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CacheModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.CacheModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-312">Identyfikuje <see cref="P:System.Windows.UIElement.CacheMode" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-312">Identifies the <see cref="P:System.Windows.UIElement.CacheMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="uIElement.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-313">Próbuje wymusić przechwytywanie myszy do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-313">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns><span data-ttu-id="968fc-314"><see langword="true" /> Jeśli przycisk myszy jest pomyślnie przechwycono; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-314"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-315">Mają być przechwycone, element musi być włączona.</span><span class="sxs-lookup"><span data-stu-id="968fc-315">To be captured, an element must be enabled.</span></span> <span data-ttu-id="968fc-316">Sprawdź, czy <xref:System.Windows.UIElement.IsEnabled%2A> jest `true` przed wywołaniem <xref:System.Windows.UIElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-316">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.UIElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="968fc-317">Jeśli wywołanie <xref:System.Windows.UIElement.CaptureMouse%2A> zwraca `true`, następnie <xref:System.Windows.UIElement.IsMouseCaptured%2A> jest również `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-317">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.UIElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="968fc-318">Wywołanie <xref:System.Windows.UIElement.CaptureMouse%2A> zwraca `true`, a następnie <xref:System.Windows.UIElement.GotMouseCapture> i <xref:System.Windows.UIElement.IsMouseCapturedChanged> zdarzenia są wywoływane, za pomocą <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> w zdarzeniu dane raportowane jako element gdzie <xref:System.Windows.UIElement.CaptureMouse%2A> metoda jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="968fc-318">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.UIElement.GotMouseCapture> and <xref:System.Windows.UIElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.UIElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="968fc-319">Jeśli wymusisz przechwytywania, może zakłócać istniejącego przechwycenia — szczególnie w przypadku przechwytywania, które odnoszą się do przeciągania i upuszczania za pomocą myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-319">If you force capture, you might interfere with existing captures - especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="968fc-320">Aby wyczyścić przechwytywanie myszy ze wszystkich elementów, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> z `element` podana jako parametr `null`.</span><span class="sxs-lookup"><span data-stu-id="968fc-320">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-321">Poniższy przykład implementuje parę obsługi myszy i kombinacji klawiszy danych wejściowych, które przechwytywania (i uncapture) myszy i włączyć myszy specjalnego trybu wyświetlania modelu 3D.</span><span class="sxs-lookup"><span data-stu-id="968fc-321">The following example implements a pair of handlers for mouse and key input combination that capture (and uncapture) the mouse and enable a special mouse mode for viewing a 3D model.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="uIElement.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-322">Próbuje wymusić Przechwytywanie pióra do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-322">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns><span data-ttu-id="968fc-323"><see langword="true" /> Jeśli pióro została pomyślnie przechwycona; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-323"><see langword="true" /> if the stylus was successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-324">Domyślna implementacja oparte na podstawowej domyślnego urządzenia pióro zawsze zwraca `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-324">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="968fc-325">Jednak jeśli rozszerzania wejściowych urządzeń, które zapewniają implementację urządzenia wejściowego systemu jest możliwe utworzenie systemu z implementacją urządzenia alternatywnych pióra, która może zwracać różne wyniki.</span><span class="sxs-lookup"><span data-stu-id="968fc-325">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="968fc-326">Po przechwyceniu pióra przez element, odbierze wejście pióra, nawet wtedy, gdy pióro znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="968fc-326">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="968fc-327">Pióro są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-327">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="968fc-328">Wywołanie tej metody wywołuje odpowiednią statyczne <xref:System.Windows.Input.Stylus> metoda <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-328">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="968fc-329">Zachowanie rzeczywistego przechwytywania jest implementowany przez wdrożenia urządzeniami active pióra.</span><span class="sxs-lookup"><span data-stu-id="968fc-329">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="968fc-330">Mają być przechwycone, element musi być włączona.</span><span class="sxs-lookup"><span data-stu-id="968fc-330">To be captured, an element must be enabled.</span></span> <span data-ttu-id="968fc-331">Sprawdź, czy <xref:System.Windows.UIElement.IsEnabled%2A> jest `true` zwrócić przed wywołaniem <xref:System.Windows.UIElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-331">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.UIElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="968fc-332">Jeśli wywołanie <xref:System.Windows.UIElement.CaptureStylus%2A> zwraca `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> jest również `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-332">If calling <xref:System.Windows.UIElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="968fc-333">Urządzenie do przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="968fc-333">The device to capture.</span></span></param>
        <summary><span data-ttu-id="968fc-334">Próbuje wymusić przechwytywania touch do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-334">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns><span data-ttu-id="968fc-335"><see langword="true" /> Jeśli określony touch są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-335"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-336"><xref:System.Windows.UIElement.CaptureTouch%2A> zwróci `false` Jeśli <xref:System.Windows.Input.TouchDevice> aktualnie są przechwytywane do innego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-336"><xref:System.Windows.UIElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="968fc-337">Jeśli <xref:System.Windows.UIElement.CaptureTouch%2A> zwraca `true`, a następnie <xref:System.Windows.UIElement.GotTouchCapture> zdarzenie jest wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-337">If <xref:System.Windows.UIElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.UIElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="968fc-338">Aby zwolnić przechwytywania jednym naciśnięciem przycisku z tego elementu, należy użyć <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> metodę i określić urządzeń dotykowych do wydania.</span><span class="sxs-lookup"><span data-stu-id="968fc-338">To release capture of a single touch from this element, use the <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="968fc-339">Aby zwolnić wszystkie ma z tego elementu, należy użyć <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="968fc-339">To release all touches from this element, use the <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="968fc-340"><paramref name="touchDevice" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-340"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry Clip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Property Clip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Geometry ^ Clip { System::Windows::Media::Geometry ^ get(); void set(System::Windows::Media::Geometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clip : System.Windows.Media.Geometry with get, set" Usage="System.Windows.UIElement.Clip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-341">Pobiera lub ustawia geometrię użytą do zdefiniowania konturu zawartości elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-341">Gets or sets the geometry used to define the outline of the contents of an element.</span></span>  <span data-ttu-id="968fc-342">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-342">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-343">Geometria służący do zmiany rozmiaru obszaru przycinania.</span><span class="sxs-lookup"><span data-stu-id="968fc-343">The geometry to be used for clipping area sizing.</span></span> <span data-ttu-id="968fc-344">Wartość domyślna to null <see cref="T:System.Windows.Media.Geometry" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-344">The default is a null <see cref="T:System.Windows.Media.Geometry" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-345">Elementy spoza geometrii zostaną graficznie przycięte w renderowanym układzie.</span><span class="sxs-lookup"><span data-stu-id="968fc-345">Elements outside the geometry will be visually clipped in the rendered layout.</span></span> <span data-ttu-id="968fc-346">Geometria nie ma być prostokątny.</span><span class="sxs-lookup"><span data-stu-id="968fc-346">The geometry does not have to be rectangular.</span></span>  
  
<a name="dependencyPropertyInfo_Clip"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-347">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-347">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-348">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-348">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipProperty>|  
|<span data-ttu-id="968fc-349">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-349">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-350">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-350">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-351">Ten przykład pokazuje jak zdefiniować framework element <xref:System.Windows.UIElement.Clip%2A> regionu.</span><span class="sxs-lookup"><span data-stu-id="968fc-351">This example shows how to define a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="968fc-352">Aby zdefiniować klipu, należy użyć <xref:System.Windows.Media.Geometry> (na przykład <xref:System.Windows.Media.EllipseGeometry> można ustawić elementu <xref:System.Windows.UIElement.Clip%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-352">To define a clip, use a <xref:System.Windows.Media.Geometry> (for example, an <xref:System.Windows.Media.EllipseGeometry> to set the element's <xref:System.Windows.UIElement.Clip%2A> property.</span></span> <span data-ttu-id="968fc-353">Widoczne będą tylko obszar, który znajduje się w regionie geometrii.</span><span class="sxs-lookup"><span data-stu-id="968fc-353">Only the area that is within the region of the geometry will be visible.</span></span>  
  
 <span data-ttu-id="968fc-354">W poniższym przykładzie przedstawiono <xref:System.Windows.Controls.Image> elementu bez zdefiniowanym obszarem przycinania.</span><span class="sxs-lookup"><span data-stu-id="968fc-354">The following example shows an <xref:System.Windows.Controls.Image> element without a defined clip region.</span></span> <span data-ttu-id="968fc-355">Ponieważ nie zdefiniowano żadnych obszar przycinania, cały obraz jest wyświetlany.</span><span class="sxs-lookup"><span data-stu-id="968fc-355">Because no clip region is defined, the entire image is displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#2)]  
  
 <span data-ttu-id="968fc-356">![Obiekt przed zastosowaniem obszar przycinania](~/add/media/mil-task-clip-region-noclip.png "obiekt przed zastosowaniem obszar przycinania")</span><span class="sxs-lookup"><span data-stu-id="968fc-356">![An object before applying a clip region](~/add/media/mil-task-clip-region-noclip.png "An object before applying a clip region")</span></span>  
<span data-ttu-id="968fc-357">Obraz z nie obszar przycinania</span><span class="sxs-lookup"><span data-stu-id="968fc-357">Image with No Clip Region</span></span>  
  
 <span data-ttu-id="968fc-358">W następnym przykładzie jest tworzony obraz identyczne, z tą różnicą, że ma region zdefiniowany klipu.</span><span class="sxs-lookup"><span data-stu-id="968fc-358">In the next example, an identical Image is created, except that it has a defined clip region.</span></span> <span data-ttu-id="968fc-359">Tylko część obrazu, który znajduje się w obszarze <xref:System.Windows.Media.EllipseGeometry> będą wyświetlane.</span><span class="sxs-lookup"><span data-stu-id="968fc-359">Only the part of the image that is within the area the <xref:System.Windows.Media.EllipseGeometry> will be displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#4)]  
  
 <span data-ttu-id="968fc-360">![Przycięty obiekt](~/add/media/mil-task-clip-region-ellispe.PNG "przycięty obiekt")</span><span class="sxs-lookup"><span data-stu-id="968fc-360">![A clipped object](~/add/media/mil-task-clip-region-ellispe.PNG "A clipped object")</span></span>  
<span data-ttu-id="968fc-361">Obraz z regionem klipu eliptycznego</span><span class="sxs-lookup"><span data-stu-id="968fc-361">Image with an Elliptical Clip Region</span></span>  
  
 <span data-ttu-id="968fc-362">Poniższy przykład pokazuje, jak animowanie framework elementu <xref:System.Windows.UIElement.Clip%2A> regionu.</span><span class="sxs-lookup"><span data-stu-id="968fc-362">The following example shows how animate a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="968fc-363">W tym przykładzie <xref:System.Windows.Media.EllipseGeometry> służy do definiowania region eliptycznego klipu <xref:System.Windows.Controls.Image> elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-363">In this example, an <xref:System.Windows.Media.EllipseGeometry> is used to define an elliptical clip region for an <xref:System.Windows.Controls.Image> element.</span></span> <span data-ttu-id="968fc-364">A <xref:System.Windows.Media.Animation.PointAnimation> animuje geometrii elipsy <xref:System.Windows.Media.EllipseGeometry.Center%2A> właściwość (0, 0) do (200, 150).</span><span class="sxs-lookup"><span data-stu-id="968fc-364">A <xref:System.Windows.Media.Animation.PointAnimation> animates the ellipse geometry's <xref:System.Windows.Media.EllipseGeometry.Center%2A> property from (0, 0) to (200, 150).</span></span> <span data-ttu-id="968fc-365">Animacja rozpoczyna odtwarzanie po obraz, który jest ładowany i jest powtarzany na czas nieokreślony.</span><span class="sxs-lookup"><span data-stu-id="968fc-365">The animation starts playing after the image is loaded and repeats indefinitely.</span></span>  
  
 [!code-xaml[ClipPathExample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#5)]  
  
 <span data-ttu-id="968fc-366">Aby uzyskać pełny przykład, zobacz [przykładowe Region klipu](https://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span><span class="sxs-lookup"><span data-stu-id="968fc-366">For the full sample, see the [Clip Region Sample](https://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
      </Docs>
    </Member>
    <Member MemberName="ClipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClipProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.ClipProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-367">Identyfikuje <see cref="P:System.Windows.UIElement.Clip" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-367">Identifies the <see cref="P:System.Windows.UIElement.Clip" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipToBounds">
      <MemberSignature Language="C#" Value="public bool ClipToBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClipToBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.ClipToBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipToBounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ClipToBounds { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ClipToBounds : bool with get, set" Usage="System.Windows.UIElement.ClipToBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-368">Pobiera lub ustawia wartość wskazującą, czy należy przyciąć zawartość tego elementu (lub zawartość pochodzącą z elementy podrzędne tego elementu) aby dopasować do rozmiarów elementu zawierającego.</span><span class="sxs-lookup"><span data-stu-id="968fc-368">Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.</span></span>   <span data-ttu-id="968fc-369">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-369">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-370"><see langword="true" /> Jeśli przycinania zawartości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-370"><see langword="true" /> if the content should be clipped; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-371">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-371">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-372">Dla elementów podrzędnych <xref:System.Windows.UIElement.ClipToBounds%2A> ma inny wpływ na układ zachowań w zależności od tego, czy wysokość i szerokość elementu nadrzędnego jest zależą od <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> lub <xref:System.Windows.FrameworkElement.MaxHeight%2A>  /  <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-372">For child elements, <xref:System.Windows.UIElement.ClipToBounds%2A> has different effects on layout behaviors depending on whether the height and width of the parent element are being determined by <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span> <span data-ttu-id="968fc-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> elementu nadrzędnego zawsze są przestrzegane niezależnie od wartości <xref:System.Windows.UIElement.ClipToBounds%2A> i skuteczne wycinka będzie zawsze zawartości, w oparciu o te maksymalne wartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> of the parent element are always respected regardless of the value of <xref:System.Windows.UIElement.ClipToBounds%2A> and the effective clipping will always clip the content based on these maximums.</span></span> <span data-ttu-id="968fc-374">Nadrzędnego <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> ustawienia nie będą przyciąć zawartość po <xref:System.Windows.UIElement.ClipToBounds%2A> jest `false`, ale będzie obcina zawartości if <xref:System.Windows.UIElement.ClipToBounds%2A> jest `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-374">The parent's <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> settings will not clip the content when <xref:System.Windows.UIElement.ClipToBounds%2A> is `false`, but will clip the content if <xref:System.Windows.UIElement.ClipToBounds%2A> is `true`.</span></span>  
  
 <span data-ttu-id="968fc-375">Należy pamiętać, że przyjęto wartość domyślną `false` jest ogólne zachowanie zaimplementowanego w <xref:System.Windows.UIElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-375">Note that defaulting to `false` is the general behavior as implemented in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="968fc-376">Istnieje możliwość, że dany element, który pochodzi od klasy <xref:System.Windows.UIElement> zastąpić metadane zależności właściwości dla tej właściwości, w tym wystąpieniu na domyślne `true` zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="968fc-376">It is possible for any given element that derives from <xref:System.Windows.UIElement> to override the dependency property metadata for this property in that instance to default to `true` instead.</span></span> <span data-ttu-id="968fc-377">Kilka istniejących klas pochodnych zastępują te metadane i/lub dostosować wartość domyślna właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-377">Several existing derived classes override this metadata and/or adjust the dependency property default value.</span></span>  
  
 <span data-ttu-id="968fc-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, i <xref:System.Windows.Controls.Primitives.Popup> każdego zastąpić wartość domyślna ma być `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.Popup> each override the default value to be `true`.</span></span>  
  
 <span data-ttu-id="968fc-379"><xref:System.Windows.FrameworkElement> zastępuje metadanych dla tej właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-379"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property.</span></span> <span data-ttu-id="968fc-380">W szczególności <xref:System.Windows.FrameworkElement> wyznacza tę właściwość, aby zezwolić na przejęcie wartości właściwości (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> jest `true` w metadanych).</span><span class="sxs-lookup"><span data-stu-id="968fc-380">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="968fc-381">Dziedziczenie wartości właściwości w tym kontekście oznacza, że jeśli są elementami podrzędnymi bez innych wartości dla <xref:System.Windows.UIElement.ClipToBounds%2A> przypisane przy użyciu wartości lokalnych lub style, wartość przypisaną wartość (ponownie, albo w stylach domyślnie najbliższym elemencie nadrzędnym wartości, lub wartość lokalnie), a następnie będzie można przypisać wartości z elementu nadrzędnego do wszystkich elementów podrzędnych nieprzypisane przez system właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-381">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.ClipToBounds%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a locally value), then the value from the parent element will be assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="968fc-382">W praktyce oznacza to, że można określić, czy zezwalać na klip granice w elemencie głównym i że wartość będzie propagowany do wszystkich elementów podrzędnych, które nie mają przypisanych go jako `false`.</span><span class="sxs-lookup"><span data-stu-id="968fc-382">In practice this means that you can specify whether to allow clip to bounds at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_ClipToBounds"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-383">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-383">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-384">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-384">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipToBoundsProperty>|  
|<span data-ttu-id="968fc-385">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-385">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-386">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-386">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Clip" />
      </Docs>
    </Member>
    <Member MemberName="ClipToBoundsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipToBoundsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipToBoundsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipToBoundsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipToBoundsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClipToBoundsProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-387">Identyfikuje <see cref="P:System.Windows.UIElement.ClipToBounds" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-387">Identifies the <see cref="P:System.Windows.UIElement.ClipToBounds" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.UIElement.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-388">Pobiera kolekcję <see cref="T:System.Windows.Input.CommandBinding" /> obiektów skojarzonych z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-388">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects associated with this element.</span></span> <span data-ttu-id="968fc-389">A <see cref="T:System.Windows.Input.CommandBinding" /> umożliwia obsługę dla tego elementu oraz deklaruje powiązanie między poleceniem, jego zdarzeniami i procedurami obsługi dołączonymi przez ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-389">A <see cref="T:System.Windows.Input.CommandBinding" /> enables command handling for this element, and declares the linkage between a command, its events, and the handlers attached by this element.</span></span></summary>
        <value><span data-ttu-id="968fc-390">Kolekcja wszystkich <see cref="T:System.Windows.Input.CommandBinding" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="968fc-390">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-391">Inny typowy sposób, aby wypełnić <xref:System.Windows.UIElement.CommandBindings%2A> kolekcji jest użycie <xref:System.Windows.Input.CommandManager> metody programowo.</span><span class="sxs-lookup"><span data-stu-id="968fc-391">Another typical way to populate the <xref:System.Windows.UIElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="968fc-392">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="968fc-392">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  
  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="968fc-393">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="968fc-393">XAML Values</span></span>  
 <span data-ttu-id="968fc-394">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="968fc-394">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="968fc-395">Co najmniej jeden <xref:System.Windows.Input.CommandBinding> elementów.</span><span class="sxs-lookup"><span data-stu-id="968fc-395">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="968fc-396">Każdy z nich powinien mieć <xref:System.Windows.Input.CommandBinding.Command%2A> znane polecenie ustawioną wartość atrybutu i atrybuty ustawione dla <xref:System.Windows.Input.CommandBinding.CanExecute> i <xref:System.Windows.Input.CommandBinding.Executed> implementacji programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-396">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="968fc-397">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="968fc-397">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-398">W poniższym przykładzie dodano <xref:System.Windows.Input.CommandBinding> do okna przy użyciu znaczników.</span><span class="sxs-lookup"><span data-stu-id="968fc-398">The following example adds a <xref:System.Windows.Input.CommandBinding> to a window using markup.</span></span> <span data-ttu-id="968fc-399">Należy pamiętać, że w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.Input.CommandBindingCollection> nie został zadeklarowany w znacznikach jako element; obiekt kolekcji jest wnioskowany według typu, który pobiera właściwości i możesz wypełnić element właściwości z co najmniej <xref:System.Windows.Input.CommandBinding> elementy:</span><span class="sxs-lookup"><span data-stu-id="968fc-399">Note that in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the <xref:System.Windows.Input.CommandBindingCollection> is not declared in the markup as an element; the collection object is inferred by the type that the property takes, and you populate the property element with one or more <xref:System.Windows.Input.CommandBinding> elements:</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 <span data-ttu-id="968fc-400">Aby uzyskać więcej informacji na temat [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] składni dla kolekcji, zobacz [składnia XAML w szczegółów](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-400">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 <span data-ttu-id="968fc-401">Poniższy przykład działa zasadniczo tak samo w kodzie:</span><span class="sxs-lookup"><span data-stu-id="968fc-401">The following example does essentially the same thing in code:</span></span>  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesiredSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size DesiredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size DesiredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.DesiredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size DesiredSize { System::Windows::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredSize : System.Windows.Size" Usage="System.Windows.UIElement.DesiredSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-402">Pobiera rozmiar, który ten element obliczone podczas przebiegu miary procesu układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-402">Gets the size that this element computed during the measure pass of the layout process.</span></span></summary>
        <value><span data-ttu-id="968fc-403">Obliczona rozmiar, który będzie wymagany rozmiar Rozmieść — dostęp próbny.</span><span class="sxs-lookup"><span data-stu-id="968fc-403">The computed size, which becomes the desired size for the arrange pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-404">Wartość zwrócona przez tę właściwość tylko będzie prawidłowa, jeśli wartość <xref:System.Windows.UIElement.IsMeasureValid%2A> właściwość `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-404">The value returned by this property will only be a valid measurement if the value of the <xref:System.Windows.UIElement.IsMeasureValid%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="968fc-405"><xref:System.Windows.UIElement.DesiredSize%2A> jest zazwyczaj sprawdzana zgodnie z jednym z czynników pomiaru podczas implementowania zachowanie układu zastępuje takich jak <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, lub <xref:System.Windows.UIElement.OnRender%2A> (w <xref:System.Windows.UIElement.OnRender%2A> zamierzone, Zapisz, użytkownik może również obejmować kontrolę <xref:System.Windows.UIElement.RenderSize%2A> zamiast tego, ale zależy to od usługi Implementacja).</span><span class="sxs-lookup"><span data-stu-id="968fc-405"><xref:System.Windows.UIElement.DesiredSize%2A> is typically checked as one of the measurement factors when you implement layout behavior overrides such as <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, or <xref:System.Windows.UIElement.OnRender%2A> (in the <xref:System.Windows.UIElement.OnRender%2A> case, you might check <xref:System.Windows.UIElement.RenderSize%2A> instead, but this depends on your implementation).</span></span> <span data-ttu-id="968fc-406">W zależności od scenariusza <xref:System.Windows.UIElement.DesiredSize%2A> może być w pełni przestrzegane przez logika implementacji ograniczenia na <xref:System.Windows.UIElement.DesiredSize%2A> może być stosowana, i takie ograniczenia mogą również zmienić inne cechy elementu nadrzędnego lub element podrzędny.</span><span class="sxs-lookup"><span data-stu-id="968fc-406">Depending on the scenario, <xref:System.Windows.UIElement.DesiredSize%2A> might be fully respected by your implementation logic, constraints on <xref:System.Windows.UIElement.DesiredSize%2A> might be applied, and such constraints might also change other characteristics of either the parent element or child element.</span></span> <span data-ttu-id="968fc-407">Na przykład formant, który obsługuje przewijany regionach (ale nie będzie dziedziczyć z formantów WPF poziomie struktury, umożliwiające już przewijany regionów) można porównać dostępny rozmiar do <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-407">For example, a control that supports scrollable regions (but chooses not to derive from the WPF framework-level controls that already enable scrollable regions) could compare available size to <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="968fc-408">Kontrolki, następnie można ustawić stanu wewnętrznego, która umożliwiała paski przewijania w [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] dla tej kontrolki.</span><span class="sxs-lookup"><span data-stu-id="968fc-408">The control could then set an internal state that enabled scrollbars in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] for that control.</span></span> <span data-ttu-id="968fc-409">Ewentualnie <xref:System.Windows.UIElement.DesiredSize%2A> potencjalnie może zostać zignorowane również w niektórych scenariuszach.</span><span class="sxs-lookup"><span data-stu-id="968fc-409">Or, <xref:System.Windows.UIElement.DesiredSize%2A> could potentially also be ignored in certain scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-410">W poniższym przykładzie przedstawiono <xref:System.Windows.UIElement.DesiredSize%2A> jako część <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-410">The following example shows <xref:System.Windows.UIElement.DesiredSize%2A> as part of a <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementation.</span></span> <span data-ttu-id="968fc-411">Zwróć uwagę jak <xref:System.Windows.UIElement.Measure%2A> jest wywoływana bezpośrednio przed uzyskiwanie <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-411">Notice how <xref:System.Windows.UIElement.Measure%2A> is called immediately prior to obtaining <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="968fc-412">Gwarantuje to, że <xref:System.Windows.UIElement.DesiredSize%2A> przechowuje wartość uzasadnione.</span><span class="sxs-lookup"><span data-stu-id="968fc-412">This assures that <xref:System.Windows.UIElement.DesiredSize%2A> holds a legitimate value.</span></span>  
  
 [!code-cpp[PlotPanel#2](~/samples/snippets/cpp/VS_Snippets_Wpf/PlotPanel/CPP/PlotPanel.cpp#2)]
 [!code-csharp[PlotPanel#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PlotPanel/CSharp/PlotPanel.cs#2)]
 [!code-vb[PlotPanel#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PlotPanel/VisualBasic/PlotPanel.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-413">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania przy użyciu tego elementu jako element docelowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="968fc-413">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-414">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-414">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-415">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.DragEnter> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-415">Event handlers that are attached to the <xref:System.Windows.UIElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-416">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-416">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-417">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-417">Identifier field</span></span>|<xref:System.Windows.UIElement.DragEnterEvent>|  
|<span data-ttu-id="968fc-418">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-418">Routing strategy</span></span>|<span data-ttu-id="968fc-419">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-419">Bubbling</span></span>|  
|<span data-ttu-id="968fc-420">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-420">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="968fc-421">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="968fc-421">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="968fc-422">Zastąp <xref:System.Windows.UIElement.OnDragEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-422">Override <xref:System.Windows.UIElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-423">Identyfikuje <see cref="E:System.Windows.UIElement.DragEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-423">Identifies the <see cref="E:System.Windows.UIElement.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-424">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-424">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-425">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-425">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-426">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-426">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-427">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-427">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-428">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-428">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-429">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania przy użyciu tego elementu jako element źródłowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="968fc-429">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-430">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-430">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-431">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.DragLeave> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-431">Event handlers that are attached to the <xref:System.Windows.UIElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-432">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-432">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-433">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-433">Identifier field</span></span>|<xref:System.Windows.UIElement.DragLeaveEvent>|  
|<span data-ttu-id="968fc-434">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-434">Routing strategy</span></span>|<span data-ttu-id="968fc-435">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-435">Bubbling</span></span>|  
|<span data-ttu-id="968fc-436">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-436">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="968fc-437">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="968fc-437">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="968fc-438">Zastąp <xref:System.Windows.UIElement.OnDragLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-438">Override <xref:System.Windows.UIElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-439">Identyfikuje <see cref="E:System.Windows.UIElement.DragLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-439">Identifies the <see cref="E:System.Windows.UIElement.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-440">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-440">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-441">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-441">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-442">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-442">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-443">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-443">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-444">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-444">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-445">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-445">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-446">To zdarzenie występuje nawet wtedy, gdy przeciągania pochodzi z granicami elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-446">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="968fc-447">Jeśli przeciąganie rozpoczyna się poza granicami i przenosi wewnątrz, to zdarzenie jest również inicjowane, jak również <xref:System.Windows.UIElement.DragEnter> i powiązane zdarzenia (wersja zapoznawcza).</span><span class="sxs-lookup"><span data-stu-id="968fc-447">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="968fc-448">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-448">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-449">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.DragOver> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-449">Event handlers that are attached to the <xref:System.Windows.UIElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-450">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-450">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-451">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-451">Identifier field</span></span>|<xref:System.Windows.UIElement.DragOverEvent>|  
|<span data-ttu-id="968fc-452">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-452">Routing strategy</span></span>|<span data-ttu-id="968fc-453">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-453">Bubbling</span></span>|  
|<span data-ttu-id="968fc-454">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-454">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="968fc-455">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="968fc-455">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="968fc-456">Zastąp <xref:System.Windows.UIElement.OnDragOver%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-456">Override <xref:System.Windows.UIElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-457">Identyfikuje <see cref="E:System.Windows.UIElement.DragOver" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-457">Identifies the <see cref="E:System.Windows.UIElement.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-458">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-458">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-459">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-459">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-460">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-460">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-461">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-461">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-462">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-462">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-463">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania za pomocą tego elementu jako element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-463">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-464">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-464">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-465">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.Drop> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-465">Event handlers that are attached to the <xref:System.Windows.UIElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-466">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-467">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-467">Identifier field</span></span>|<xref:System.Windows.UIElement.DropEvent>|  
|<span data-ttu-id="968fc-468">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-468">Routing strategy</span></span>|<span data-ttu-id="968fc-469">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-469">Bubbling</span></span>|  
|<span data-ttu-id="968fc-470">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-470">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="968fc-471">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="968fc-471">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="968fc-472">Zastąp <xref:System.Windows.UIElement.OnDrop%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-472">Override <xref:System.Windows.UIElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-473">Identyfikuje <see cref="E:System.Windows.UIElement.Drop" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-473">Identifies the <see cref="E:System.Windows.UIElement.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-474">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-474">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-475">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-475">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-476">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-476">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-477">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-477">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-478">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-478">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.Effect Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::Effect ^ Effect { System::Windows::Media::Effects::Effect ^ get(); void set(System::Windows::Media::Effects::Effect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Effect : System.Windows.Media.Effects.Effect with get, set" Usage="System.Windows.UIElement.Effect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-479">Pobiera lub ustawia efekt mapy bitowej do zastosowania do <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-479">Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="968fc-480">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-480">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-481"><see cref="T:System.Windows.Media.Effects.Effect" /> Reprezentujący efekt mapy bitowej.</span><span class="sxs-lookup"><span data-stu-id="968fc-481">An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-482">Użyj <xref:System.Windows.UIElement.Effect%2A> właściwości, aby zastosować efekt mapy bitowej do <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-482">Use the <xref:System.Windows.UIElement.Effect%2A> property to apply a bitmap effect to a <xref:System.Windows.UIElement>.</span></span>  
  
<a name="dependencyPropertyInfo_Effect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-483">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-483">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-484">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-484">Identifier field</span></span>|<xref:System.Windows.UIElement.EffectProperty>|  
|<span data-ttu-id="968fc-485">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-485">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-486">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-486">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-487">Następujące XAML pokazuje, jak przypisać niestandardowe <xref:System.Windows.Media.Effects.ShaderEffect> do <xref:System.Windows.UIElement.Effect%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-487">The following XAML shows how to assign a custom <xref:System.Windows.Media.Effects.ShaderEffect> to the <xref:System.Windows.UIElement.Effect%2A> property.</span></span>  
  
 [!code-xaml[System.Windows.Media.Effects.ShaderEffect#1000](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Window1.xaml#1000)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="EffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.EffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EffectProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EffectProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.EffectProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-488">Identyfikuje <see cref="P:System.Windows.UIElement.Effect" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-488">Identifies the <see cref="P:System.Windows.UIElement.Effect" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="uIElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-489">Próbuje ustawić fokus na ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-489">Attempts to set focus to this element.</span></span></summary>
        <returns><span data-ttu-id="968fc-490"><see langword="true" /> Jeśli ustawiono fokus klawiatury i logiczny fokus do tego elementu; <see langword="false" /> czy tylko fokus logiczny została ustawiona na ten element, czy wywołanie tej metody nie wymuszać fokus do zmiany.</span><span class="sxs-lookup"><span data-stu-id="968fc-490"><see langword="true" /> if keyboard focus and logical focus were set to this element; <see langword="false" /> if only logical focus was set to this element, or if the call to this method did not force the focus to change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-491">Jako focusable, <xref:System.Windows.UIElement.Focusable%2A> i <xref:System.Windows.UIElement.IsEnabled%2A> muszą być `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-491">To be focusable, <xref:System.Windows.UIElement.Focusable%2A> and <xref:System.Windows.UIElement.IsEnabled%2A> must both be `true`.</span></span>  
  
 <span data-ttu-id="968fc-492">Nawet, jeśli element jest obsługa zdarzeń focusable i włączony, w obrębie określonego drzewa, (takie jak w przypadku kontrolek złożonych) może odpowiadać na zdarzenia fokusu w wersji zapoznawczej, nie zezwalając fokus, więc ta metoda zwróci `false`.</span><span class="sxs-lookup"><span data-stu-id="968fc-492">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="968fc-493">Fokus na ogół jest regulowane przez dwie oddzielne koncepcje: za pomocą klawiatury fokus i fokus logiczny, które nie zawsze są identyczne.</span><span class="sxs-lookup"><span data-stu-id="968fc-493">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span>  <span data-ttu-id="968fc-494">Aby uzyskać więcej informacji, zobacz [Przegląd fokus](~/docs/framework/wpf/advanced/focus-overview.md) lub [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-494">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) or [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="968fc-495">Jeśli wywołanie <xref:System.Windows.UIElement.Focus%2A> zwraca `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> i <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> są również `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-495">If calling <xref:System.Windows.UIElement.Focus%2A> returns `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="968fc-496">Jeśli powiązane właściwości nie są już `true`, gdy wywołujesz <xref:System.Windows.UIElement.Focus%2A>, co najmniej jeden z następujących zdarzeń, które są wywoływane w następującej kolejności: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (źródło jest nowy obiekt docelowy fokus), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (źródło jest nowy obiekt docelowy koncentracji uwagi).</span><span class="sxs-lookup"><span data-stu-id="968fc-496">If the related properties are not already `true`, when you call  <xref:System.Windows.UIElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
 <span data-ttu-id="968fc-497">Aby to wywołanie zakończy się powodzeniem innego elementu w aplikacji niezbędnych do wcześniej fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-497">In order for this call to be successful, some other element in the application needed to have focus previously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-498">W poniższym przykładzie ustawiono fokus <xref:System.Windows.Controls.TextBox> odwołuje <xref:System.Windows.FrameworkElement.Name%2A>, a następnie dopasowuje pozycję kursora w ramach <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="968fc-498">The following example sets focus to a <xref:System.Windows.Controls.TextBox> referenced by <xref:System.Windows.FrameworkElement.Name%2A>, and then adjusts the position of the cursor within the <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBox_CursorToEnd/CSharp/Window1.xaml.cs#uielementfocus)]
 [!code-vb[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBox_CursorToEnd/VisualBasic/Window1.xaml.vb#uielementfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.UIElement.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-499">Pobiera lub ustawia wartość wskazującą, czy element może odebrać fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-499">Gets or sets a value that indicates whether the element can receive focus.</span></span>  <span data-ttu-id="968fc-500">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-500">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-501"><see langword="true" /> Jeśli element jest focusable; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-501"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="968fc-502">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-502">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-503">Tylko wąsko zdefiniowany element otrzymuje dane wejściowe z klawiatury.</span><span class="sxs-lookup"><span data-stu-id="968fc-503">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="968fc-504"><xref:System.Windows.UIElement.Focusable%2A> jest [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] metody dostępu właściwości w celu przedstawienia w rzeczywistości właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-504"><xref:System.Windows.UIElement.Focusable%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="968fc-505">Ta właściwość określonej zależności dość często ma wartość jawnego "domyślna" ustawione inaczej w element pochodny klas, zwłaszcza w kontrolkach.</span><span class="sxs-lookup"><span data-stu-id="968fc-505">This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly in controls.</span></span> <span data-ttu-id="968fc-506">Zwykle dzieje się to jeden z dwóch sposobów:</span><span class="sxs-lookup"><span data-stu-id="968fc-506">This commonly occurs in one of two ways:</span></span>  
  
-   <span data-ttu-id="968fc-507">Właściwość zależności jest dziedziczona przez konkretnej klasy pochodnej, ale pochodnych przesłonięć klasy metadanych właściwości zależności i zmienia wartość domyślna właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-507">The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.</span></span>  
  
-   <span data-ttu-id="968fc-508">Stylu lub szablonu jest stosowana do elementu, który ustawia tę wartość właściwości zależności inaczej.</span><span class="sxs-lookup"><span data-stu-id="968fc-508">A style or template is applied to an element, which sets that dependency property value differently.</span></span>  
  
 <span data-ttu-id="968fc-509">Na przykład jawnego "domyślną" <xref:System.Windows.UIElement.Focusable%2A> dla <xref:System.Windows.Controls.Button> formant będzie `true`, nawet jeśli <xref:System.Windows.Controls.Button> dziedziczy <xref:System.Windows.UIElement.Focusable%2A> jako [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] właściwość bezpośrednio z <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-509">For example, the apparent "default" of <xref:System.Windows.UIElement.Focusable%2A> for a <xref:System.Windows.Controls.Button> control will be `true`, even though <xref:System.Windows.Controls.Button> inherits <xref:System.Windows.UIElement.Focusable%2A> as a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property directly from <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="968fc-510">Jest to spowodowane stosowanie metadanych wartość <xref:System.Windows.UIElement.Focusable%2A> właściwość zależności została zastąpiona w konstruktorze statycznym z <xref:System.Windows.Controls.Control> podstawowej klasy, która znajduje się między <xref:System.Windows.Controls.Button> i <xref:System.Windows.UIElement> w hierarchii klas.</span><span class="sxs-lookup"><span data-stu-id="968fc-510">This is because the applied metadata value for the <xref:System.Windows.UIElement.Focusable%2A> dependency property was overridden within the static constructor of the <xref:System.Windows.Controls.Control> base class, which is situated between <xref:System.Windows.Controls.Button> and <xref:System.Windows.UIElement> in the class hierarchy.</span></span>  
  
 <span data-ttu-id="968fc-511">W przypadku dziedziczonych przez <xref:System.Windows.Controls.Control> lub jej klasy pochodne <xref:System.Windows.Controls.Control> redefiniuje wartość domyślna tej właściwości to `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-511">When inherited by <xref:System.Windows.Controls.Control> or its derived classes, <xref:System.Windows.Controls.Control> redefines the default value of this property to be `true`.</span></span>  
  
 <span data-ttu-id="968fc-512">W przypadku dziedziczonych przez <xref:System.Windows.Controls.Label> (czyli <xref:System.Windows.Controls.Control> klasy pochodnej), wartością domyślną jest ponownie zdefiniować jej ponownie jako `false`.</span><span class="sxs-lookup"><span data-stu-id="968fc-512">When inherited by <xref:System.Windows.Controls.Label> (which is a <xref:System.Windows.Controls.Control> derived class), the default value is again redefined to be `false`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-513">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-513">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-514">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-514">Identifier field</span></span>|<xref:System.Windows.UIElement.FocusableProperty>|  
|<span data-ttu-id="968fc-515">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-515">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-516">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-516">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-517">Poniższy przykład kodu ilustruje szablonu kontrolki dla określonego formantu niestandardowego, który ustawia <xref:System.Windows.UIElement.Focusable%2A> `false` na jeden z elementów w ramach szablonu.</span><span class="sxs-lookup"><span data-stu-id="968fc-517">The following example code illustrates a control template for a particular custom control, which sets <xref:System.Windows.UIElement.Focusable%2A> `false` on one of the elements within the template.</span></span>  
  
 [!code-xaml[RichTextBox_NoScrollViewer#_ControlTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBox_NoScrollViewer/CS/window1.xaml#_controltemplate)]
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="968fc-518">Podczas wyprowadzania z <see cref="T:System.Windows.UIElement" /> bezpośrednio (w przeciwieństwie do z <see cref="T:System.Windows.Controls.Control" />), należy wziąć pod uwagę, czy chcesz, aby Twoje element ma być focusable, ponieważ domyślny element nie będzie focusable.</span><span class="sxs-lookup"><span data-stu-id="968fc-518">When deriving from <see cref="T:System.Windows.UIElement" /> directly (as opposed to from <see cref="T:System.Windows.Controls.Control" />), consider whether you wish your element to be focusable, because by default the element will not be focusable.</span></span> <span data-ttu-id="968fc-519">Jeśli chcesz, aby Twoje element ma być focusable, Zastąp metadanych dla tej właściwości w konstruktorze statycznym danego typu w następujący sposób:</span><span class="sxs-lookup"><span data-stu-id="968fc-519">If you wish your element to be focusable, override the metadata for this property within your type's static constructor as follows:</span></span> 
<span data-ttu-id="968fc-520">[! code-csharp[CorePseudocode #UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [! kodu vb[CorePseudocode #UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span><span class="sxs-lookup"><span data-stu-id="968fc-520">[!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span></span> 
<span data-ttu-id="968fc-521">gdzie <paramref name="myElement" /> powinna być nazwą klasy typu, który jest zastąpienie wartości metadanych na.</span><span class="sxs-lookup"><span data-stu-id="968fc-521">where <paramref name="myElement" /> should be the class name of the type that you are overriding the metadata value on.</span></span></para></block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-522">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.Focusable" /> zmiany właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-522">Occurs when the value of the <see cref="P:System.Windows.UIElement.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-523">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-523">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-524">Identyfikuje <see cref="P:System.Windows.UIElement.Focusable" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-524">Identifies the <see cref="P:System.Windows.UIElement.Focusable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="uIElement.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="968fc-525">Właściwość zależności do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-525">The dependency property to check.</span></span></param>
        <summary><span data-ttu-id="968fc-526">Zwraca wartość właściwości podstawowej dla określonej właściwości dla tego elementu, bez uwzględnienia wszelkie animowane wartość z bieżącą lub zatrzymać animację.</span><span class="sxs-lookup"><span data-stu-id="968fc-526">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span></span></summary>
        <returns><span data-ttu-id="968fc-527">Właściwość wartości tak, jakby nie animacji są dołączone do właściwości określonej zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-527">The property value as if no animations are attached to the specified dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-528">Jeśli nie animacje są dołączone do właściwości, a następnie <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> wartość zwracana jest zawsze taka sama jak <xref:System.Windows.DependencyObject.GetValue%2A> zwracają wartość.</span><span class="sxs-lookup"><span data-stu-id="968fc-528">If no animations are attached to the property, then the <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="968fc-529">W przypadku dołączonych animacji, następnie wszystkie możliwe animacje uzyskane wartości w tym początek wartości są ignorowane i wartość właściwości jest ustalana na wszystkich innych możliwych danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-529">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="968fc-530">Aby uzyskać więcej informacji, zobacz [następstwo wartości właściwości](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-530">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-531">Poniższy przykład wykonuje program obsługi, który zgłasza wartość podstawową animowany <xref:System.Windows.FrameworkElement.Width%2A> właściwość <xref:System.Windows.Controls.Button>, a także wartości bazowej przekształcenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-531">The following example implements a handler that reports the base value of an animated <xref:System.Windows.FrameworkElement.Width%2A> property on a <xref:System.Windows.Controls.Button>, as well as the base value of a transform.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalue)]
 [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalue)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutClip">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Geometry GetLayoutClip(valuetype System.Windows.Size layoutSlotSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetLayoutClip (layoutSlotSize As Size) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Geometry ^ GetLayoutClip(System::Windows::Size layoutSlotSize);" />
      <MemberSignature Language="F#" Value="abstract member GetLayoutClip : System.Windows.Size -&gt; System.Windows.Media.Geometry&#xA;override this.GetLayoutClip : System.Windows.Size -&gt; System.Windows.Media.Geometry" Usage="uIElement.GetLayoutClip layoutSlotSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutSlotSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="layoutSlotSize"><span data-ttu-id="968fc-532">Dostępny rozmiar podane przez element.</span><span class="sxs-lookup"><span data-stu-id="968fc-532">The available size provided by the element.</span></span></param>
        <summary><span data-ttu-id="968fc-533">Zwraca geometrię wycinka alternatywne, która reprezentuje region, który może zostać obcięty, jeśli <see cref="P:System.Windows.UIElement.ClipToBounds" /> ustawiono <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-533">Returns an alternative clipping geometry that represents the region that would be clipped if <see cref="P:System.Windows.UIElement.ClipToBounds" /> were set to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="968fc-534">Potencjalne geometrii wycinka.</span><span class="sxs-lookup"><span data-stu-id="968fc-534">The potential clipping geometry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-535">Domyślna implementacja zwróci wartość uzasadnione, ale nie używa `layoutSlotSize` parametru w obliczeniach.</span><span class="sxs-lookup"><span data-stu-id="968fc-535">The default implementation will return a legitimate value, but does not use the `layoutSlotSize` parameter in its calculations.</span></span> <span data-ttu-id="968fc-536">Zamiast tego wykorzystuje wartość <xref:System.Windows.UIElement.RenderSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-536">Instead it uses the value of <xref:System.Windows.UIElement.RenderSize%2A>.</span></span>  
  
 <span data-ttu-id="968fc-537">Ta metoda jest znacznie zastąpiona przez natychmiastowe pochodnej <xref:System.Windows.FrameworkElement> klasy i <xref:System.Windows.FrameworkElement> zastąpienie tworzy dokładniejsze zachowanie ogólne WPF poziomie struktury elementów.</span><span class="sxs-lookup"><span data-stu-id="968fc-537">This method is substantially overridden by the immediately derived <xref:System.Windows.FrameworkElement> class, and the <xref:System.Windows.FrameworkElement> override produces a more sophisticated behavior for general WPF framework-level elements.</span></span> <span data-ttu-id="968fc-538">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="968fc-538">For details, see <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="abstract member GetUIParentCore : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="uIElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-539">Po przesłonięciu w klasie pochodnej zwraca alternatywę [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] nadrzędny dla tego elementu, jeśli istnieje visual elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-539">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="968fc-540">Obiekt, który, jeśli implementacja klasy pochodnej z połączeniem alternatywny nadrzędny do raportu.</span><span class="sxs-lookup"><span data-stu-id="968fc-540">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-541">Domyślna implementacja wirtualnych tej metody zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="968fc-541">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="968fc-542"><xref:System.Windows.FrameworkElement> udostępnia implementację praktyczne.</span><span class="sxs-lookup"><span data-stu-id="968fc-542"><xref:System.Windows.FrameworkElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="968fc-543">Alternatywne nadrzędnych są używane do routingu zdarzeń, w przypadkach, gdy element tworzy alternatywnych nadrzędnej struktury tak, aby jego zdarzeń są kierowane w taki sposób, że diverges ze standardowego wzorca routingu w górę drzewa wizualnego do standardowego elementu nadrzędnego, lub w dół w Wyświetl podgląd strategii routingu.</span><span class="sxs-lookup"><span data-stu-id="968fc-543">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-544">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania i upuszczania, które obejmuje ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-544">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-545"><xref:System.Windows.UIElement.GiveFeedback> Zdarzeń umożliwia źródło zdarzenia przeciągania, aby modyfikować wygląd wskaźnika myszy, aby dać wizualną opinię użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-545">The <xref:System.Windows.UIElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="968fc-546">Wizualną opinię wzmacnia to, że trwa operacja przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-546">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="968fc-547">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.GiveFeedback> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-547">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-548">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.GiveFeedback> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-548">Event handlers that are attached to the <xref:System.Windows.UIElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-549">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-549">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-550">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-550">Identifier field</span></span>|<xref:System.Windows.UIElement.GiveFeedbackEvent>|  
|<span data-ttu-id="968fc-551">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-551">Routing strategy</span></span>|<span data-ttu-id="968fc-552">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-552">Bubbling</span></span>|  
|<span data-ttu-id="968fc-553">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-553">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="968fc-554">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="968fc-554">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="968fc-555">Zastąp <xref:System.Windows.UIElement.OnGiveFeedback%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-555">Override <xref:System.Windows.UIElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-556">Identyfikuje <see cref="E:System.Windows.UIElement.GiveFeedback" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-556">Identifies the <see cref="E:System.Windows.UIElement.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-557">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-557">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-558">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-558">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-559">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-559">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-560">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-560">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-561">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-561">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-562">Występuje, gdy ten element pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="968fc-562">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-563">Fokus logiczny różni się od fokus klawiatury, gdy fokus jest celowo wymuszone za pomocą wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="968fc-563">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="968fc-564">W tym scenariuszu fokus klawiatury pozostaje, gdzie jest i element gdzie <xref:System.Windows.UIElement.Focus%2A> wywoływana jest metoda nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="968fc-564">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="968fc-565">Bardziej precyzyjne interpretacji to zdarzenie jest jej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsFocused%2A> zmiany właściwości elementu w trasie z `false` do `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-565">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="968fc-566">Ponieważ to zdarzenie używa routingu propagacji, element, który otrzymuje fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-566">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="968fc-567">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który zdobyte fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-567">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-568">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-568">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-569">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-569">Identifier field</span></span>|<xref:System.Windows.UIElement.GotFocusEvent>|  
|<span data-ttu-id="968fc-570">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-570">Routing strategy</span></span>|<span data-ttu-id="968fc-571">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-571">Bubbling</span></span>|  
|<span data-ttu-id="968fc-572">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-572">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="968fc-573">Nie ma żadnego odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-573">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="968fc-574">Zastąp <xref:System.Windows.UIElement.OnGotFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-574">Override <xref:System.Windows.UIElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-575">Identyfikuje <see cref="E:System.Windows.UIElement.GotFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-575">Identifies the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-576">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-576">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-577">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-577">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-578">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-578">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-579">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-579">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-580">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-580">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-581">Występuje, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-581">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-582"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> jest podobne zdarzenie, który śledzi zmiany stanu we właściwości, która przechowuje stan aktywny elementu; <xref:System.Windows.UIElement.GotKeyboardFocus> zdarzenie jest zgłaszane w wielu z tych samych warunkach.</span><span class="sxs-lookup"><span data-stu-id="968fc-582"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.UIElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="968fc-583">Ponieważ to zdarzenie używa routingu propagacji, element, który ma fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-583">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="968fc-584">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który jest ustawiony fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-584">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="968fc-585">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.GotKeyboardFocus> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-585">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-586">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.GotKeyboardFocus> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-586">Event handlers that are attached to the <xref:System.Windows.UIElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-587">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-587">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-588">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-588">Identifier field</span></span>|<xref:System.Windows.UIElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="968fc-589">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-589">Routing strategy</span></span>|<span data-ttu-id="968fc-590">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-590">Bubbling</span></span>|  
|<span data-ttu-id="968fc-591">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-591">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="968fc-592">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="968fc-592">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="968fc-593">Zastąp <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-593">Override <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-594">Identyfikuje <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-594">Identifies the <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-595">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-595">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-596">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-596">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-597">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-597">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-598">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-598">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-599">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-599">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-600">Występuje, gdy ten element przechwytuje mysz.</span><span class="sxs-lookup"><span data-stu-id="968fc-600">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-601">Gdy element przechwytuje mysz, otrzymuje wejście myszy nawet wtedy, gdy wskaźnik myszy znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="968fc-601">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="968fc-602">Mysz są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania i pozostaje przechwycone, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-602">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="968fc-603">Ponieważ to zdarzenie używa routingu propagacji, element, który ma przechwytywania może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-603">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="968fc-604">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w zdarzeniu przechwytywania danych, aby określić rzeczywisty element, który ma myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-604">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="968fc-605">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.GotMouseCapture> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-605">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.UIElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-606">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.GotMouseCapture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-606">Event handlers that are attached to the <xref:System.Windows.UIElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-607">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-607">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-608">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-608">Identifier field</span></span>|<xref:System.Windows.UIElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="968fc-609">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-609">Routing strategy</span></span>|<span data-ttu-id="968fc-610">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-610">Bubbling</span></span>|  
|<span data-ttu-id="968fc-611">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-611">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="968fc-612">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-612">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="968fc-613">Zastąp <xref:System.Windows.UIElement.OnGotMouseCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-613">Override <xref:System.Windows.UIElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-614">Identyfikuje <see cref="E:System.Windows.UIElement.GotMouseCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-614">Identifies the <see cref="E:System.Windows.UIElement.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-615">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-615">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-616">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-616">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-617">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-617">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-618">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-618">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-619">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-619">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-620">Występuje, gdy ten element przechwytuje pióro.</span><span class="sxs-lookup"><span data-stu-id="968fc-620">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-621">Po przechwyceniu pióra przez element, odbierze wejście pióra, nawet jeśli kursor znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="968fc-621">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="968fc-622">Pióro są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania i zachowuje przechwytywania, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-622">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="968fc-623">Ponieważ to zdarzenie używa routingu propagacji, element, który ma przechwytywania może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-623">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="968fc-624">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który ma przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="968fc-624">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="968fc-625">To zdarzenie tworzy alias dla dołączone zdarzenie dla tej klasy, aby <xref:System.Windows.UIElement.GotStylusCapture> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-625">This event creates an alias for the attached event for this class so that <xref:System.Windows.UIElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-626">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.GotStylusCapture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-626">Event handlers that are attached to the <xref:System.Windows.UIElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-627">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-627">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-628">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-628">Identifier field</span></span>|<xref:System.Windows.UIElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="968fc-629">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-629">Routing strategy</span></span>|<span data-ttu-id="968fc-630">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-630">Bubbling</span></span>|  
|<span data-ttu-id="968fc-631">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-631">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-632">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-632">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="968fc-633">Zastąp <xref:System.Windows.UIElement.OnGotStylusCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-633">Override <xref:System.Windows.UIElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-634">Identyfikuje <see cref="E:System.Windows.UIElement.GotStylusCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-634">Identifies the <see cref="E:System.Windows.UIElement.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-635">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-635">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-636">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-636">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-637">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-637">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-638">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-638">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-639">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-639">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-640">Występuje, gdy touch są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-640">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-641">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-641">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-642">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-642">Identifier field</span></span>|<xref:System.Windows.UIElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="968fc-643">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-643">Routing strategy</span></span>|<span data-ttu-id="968fc-644">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-644">Bubbling</span></span>|  
|<span data-ttu-id="968fc-645">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-645">Delegate</span></span>|<span data-ttu-id="968fc-646"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-646"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="968fc-647">Zastąp <xref:System.Windows.UIElement.OnGotTouchCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-647">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-648">Identyfikuje <see cref="E:System.Windows.UIElement.GotTouchCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-648">Identifies the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.UIElement.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-649">Pobiera wartość wskazującą, czy ten element ma wszystkie właściwości animowany.</span><span class="sxs-lookup"><span data-stu-id="968fc-649">Gets a value indicating whether this element has any animated properties.</span></span></summary>
        <value><span data-ttu-id="968fc-650"><see langword="true" /> Jeśli ten element ma animacji dołączone do żadnej z jej właściwości; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-650"><see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-651">Ta właściwość zwraca `true` zarówno dla trwałego animacji (unclocked, zawsze uruchomiona), i animacji, które mają szczególne osi czasu.</span><span class="sxs-lookup"><span data-stu-id="968fc-651">This property returns `true` either for persistent (unclocked, always-running) animations, or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEffectiveKeyboardFocus : bool" Usage="System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-652">Pobiera wartość wskazującą, czy <see cref="T:System.Windows.UIElement" /> jest ustawiony fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-652">Gets a value that indicates whether the <see cref="T:System.Windows.UIElement" /> has focus.</span></span></summary>
        <value><span data-ttu-id="968fc-653"><see langword="true" /> Jeśli <see cref="T:System.Windows.UIElement" /> ma fokus; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-653"><see langword="true" /> if the <see cref="T:System.Windows.UIElement" /> has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-654">Podklasy mogą przesłaniać tę właściwość, aby określić, kiedy element ma fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="968fc-654">Subclasses can override this property to specify when the element has keyboard focus.</span></span>  <span data-ttu-id="968fc-655">To jest przydatne, gdy Twoje <xref:System.Windows.UIElement> zawiera elementy, które mogą mieć fokus klawiatury i chcesz, aby Twoje element do raportu, że ma ona fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-655">This is useful when your <xref:System.Windows.UIElement> contains elements that can have keyboard focus and you want your element to report that it has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="968fc-656">Implementuje <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> umożliwiają określanie wartości podstawowy element trafień zachowanie testowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-656">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult" Usage="uIElement.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="968fc-657">W tym artykule opisano trafień testów do wykonania, łącznie z pierwszym punktem trafień.</span><span class="sxs-lookup"><span data-stu-id="968fc-657">Describes the hit test to perform, including the initial hit point.</span></span></param>
        <summary><span data-ttu-id="968fc-658">Implementuje <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> umożliwiają określanie wartości podstawowy element trafień testowania zachowanie (zwracanie <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span><span class="sxs-lookup"><span data-stu-id="968fc-658">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span></span></summary>
        <returns><span data-ttu-id="968fc-659">Wyniki testu, w tym geometrycznych oceniono.</span><span class="sxs-lookup"><span data-stu-id="968fc-659">Results of the test, including the evaluated geometry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-660">Zobacz oryginalnej metody wirtualnej <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> dla informacji w przypadku przesłaniania tej metody w dalszych klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-660">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="968fc-661">Należy pamiętać, że kilku określonych kontrolek (<xref:System.Windows.Controls.TextBlock>, na przykład) mają różne implementacji, które zastąpią ten zestaw.</span><span class="sxs-lookup"><span data-stu-id="968fc-661">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override this one.</span></span>  
  
 <span data-ttu-id="968fc-662">Ta metoda nie jest przeznaczona do wywoływania z kodu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-662">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="968fc-663">Ta metoda obsługuje zachowania wewnętrznego testowania trafień, udostępnianych przez różne aspekty systemu wprowadzania (czy wskaźnik myszy nad elementem, na przykład).</span><span class="sxs-lookup"><span data-stu-id="968fc-663">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="uIElement.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="968fc-664">W tym artykule opisano trafień testów do wykonania, łącznie z pierwszym punktem trafień.</span><span class="sxs-lookup"><span data-stu-id="968fc-664">Describes the hit test to perform, including the initial hit point.</span></span></param>
        <summary><span data-ttu-id="968fc-665">Implementuje <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> umożliwiają określanie wartości podstawowy element trafień testowania zachowanie (zwracanie <see cref="T:System.Windows.Media.HitTestResult" />).</span><span class="sxs-lookup"><span data-stu-id="968fc-665">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.HitTestResult" />).</span></span></summary>
        <returns><span data-ttu-id="968fc-666">Wyniki testu, w tym ocenianą punktu.</span><span class="sxs-lookup"><span data-stu-id="968fc-666">Results of the test, including the evaluated point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-667">Zobacz oryginalnej metody wirtualnej <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> dla informacji w przypadku przesłaniania tej metody w dalszych klas pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-667">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="968fc-668">Należy pamiętać, że kilku określonych kontrolek (<xref:System.Windows.Controls.TextBlock>, na przykład) mają różne implementacje, które zastąpią <xref:System.Windows.UIElement.HitTestCore%2A> zgodnie z definicją <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-668">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override <xref:System.Windows.UIElement.HitTestCore%2A> as defined by <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="968fc-669">Ta metoda nie jest przeznaczona do wywoływania z kodu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-669">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="968fc-670">Ta metoda obsługuje zachowania wewnętrznego testowania trafień, udostępnianych przez różne aspekty systemu wprowadzania (czy wskaźnik myszy nad elementem, na przykład).</span><span class="sxs-lookup"><span data-stu-id="968fc-670">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.UIElement.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-671">Pobiera kolekcję powiązań wejściowych skojarzonych z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-671">Gets the collection of input bindings associated with this element.</span></span></summary>
        <value><span data-ttu-id="968fc-672">Kolekcja powiązania danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-672">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-673">Powiązania danych wejściowych obsługuje powiązanie polecenia, aby urządzenia wejściowe.</span><span class="sxs-lookup"><span data-stu-id="968fc-673">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="968fc-674">Na przykład <xref:System.Windows.Input.MouseBinding> implementuje wejściowych powiązania, które zawierają właściwości, które są urządzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-674">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices.</span></span>  
  
 <span data-ttu-id="968fc-675">Kolekcja powiązania danych wejściowych będzie zawierać zarówno powiązania danych wejściowych, które odnoszą się do typu, jak i powiązania danych wejściowych, które są zadeklarowane w wystąpieniu.</span><span class="sxs-lookup"><span data-stu-id="968fc-675">The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="968fc-676">Powiązaną właściwość <xref:System.Windows.UIElement.CommandBindings%2A>, przechowuje kolekcję powiązań polecenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-676">A related property, <xref:System.Windows.UIElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="968fc-677">Różnią się od powiązania danych wejściowych, w tym, że reprezentują wyższy poziom szczegółów przetwarzania polecenia - akcje, które są powiązane z znanych poleceń.</span><span class="sxs-lookup"><span data-stu-id="968fc-677">These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="968fc-678">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="968fc-678">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  
  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="968fc-679">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="968fc-679">XAML Values</span></span>  
 <span data-ttu-id="968fc-680">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="968fc-680">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="968fc-681">Co najmniej jeden <xref:System.Windows.Input.InputBinding> elementów (zazwyczaj <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding> klas pochodnych).</span><span class="sxs-lookup"><span data-stu-id="968fc-681">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="968fc-682">Każdy z nich powinny mieć <xref:System.Windows.Input.InputBinding.Command%2A> i <xref:System.Windows.Input.InputBinding.Gesture%2A> atrybut.</span><span class="sxs-lookup"><span data-stu-id="968fc-682">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-683">Poniższy przykład powoduje wypełnienie tej właściwości na <xref:System.Windows.Window>, za pomocą jednego <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="968fc-683">The following example populates this property on a <xref:System.Windows.Window>, with a single <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-xaml[CommandingOverviewSnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="968fc-684">Aby uzyskać więcej informacji na temat [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] składni dla kolekcji, zobacz [składnia XAML w szczegółów](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-684">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.InputHitTest : System.Windows.Point -&gt; System.Windows.IInputElement" Usage="uIElement.InputHitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="968fc-685">Przesunięcie współrzędne w ramach tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-685">The offset coordinates within this element.</span></span></param>
        <summary><span data-ttu-id="968fc-686">Zwraca element input w bieżącym elemencie, który znajduje się na określonych współrzędnych, względem bieżącego elementu początkowego.</span><span class="sxs-lookup"><span data-stu-id="968fc-686">Returns the input element within the current element that is at the specified coordinates, relative to the current element's origin.</span></span></summary>
        <returns><span data-ttu-id="968fc-687">Element podrzędny, która znajduje się na pozycji.</span><span class="sxs-lookup"><span data-stu-id="968fc-687">The element child that is located at the given position.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-688"><xref:System.Windows.IInputElement> jest zwracana jako typ zwracany, ponieważ ten typ jest wspólny interfejs dla obu <xref:System.Windows.UIElement> i <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-688"><xref:System.Windows.IInputElement> is returned as the return type, because that type is a common interface for both <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="968fc-689">Można następnie odpowiednio rzutować zwracany typ lub użyć wystąpienia interfejsu dla niektórych elementów członkowskich, które są definiowane przez <xref:System.Windows.IInputElement> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="968fc-689">You can then cast the return type appropriately, or use the interface instance for certain members that are defined by the <xref:System.Windows.IInputElement> interface.</span></span>  
  
 <span data-ttu-id="968fc-690">Ta metoda nie jest zazwyczaj wywoływana z kodu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-690">This method typically is not called from your application code.</span></span> <span data-ttu-id="968fc-691">Wywołanie tej metody jest tylko jeśli zamierzasz potrzebę ponownego zaimplementowania rozległe niskopoziomowy odpowiedzialny funkcje danych wejściowych, które już istnieją, takie jak ponowne tworzenie logiki urządzeń myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-691">Calling this method is only appropriate if you intend to re-implement a substantial amount of the low level input features that are already present, such as recreating mouse device logic.</span></span>  
  
 <span data-ttu-id="968fc-692"><xref:System.Windows.IContentHost> kontrakty <xref:System.Windows.IContentHost.InputHitTest%2A> metody z tym samym podpisie, niektóre elementy zadecydować o stosowaniu jawnie.</span><span class="sxs-lookup"><span data-stu-id="968fc-692"><xref:System.Windows.IContentHost> contracts an <xref:System.Windows.IContentHost.InputHitTest%2A> method with the same signature, which some elements choose to implement explicitly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateArrange">
      <MemberSignature Language="C#" Value="public void InvalidateArrange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateArrange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateArrange" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateArrange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateArrange();" />
      <MemberSignature Language="F#" Value="member this.InvalidateArrange : unit -&gt; unit" Usage="uIElement.InvalidateArrange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-693">Unieważnia stanu Rozmieść (układ) dla elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-693">Invalidates the arrange state (layout) for the element.</span></span> <span data-ttu-id="968fc-694">Po unieważniania, element mieć jej układ zaktualizowane, będzie występować asynchronicznie, chyba że następnie wymuszone przez <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-694">After the invalidation, the element will have its layout updated, which will occur asynchronously unless subsequently forced by <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-695">Częste wywołania <xref:System.Windows.UIElement.InvalidateArrange%2A> lub, w szczególności <xref:System.Windows.UIElement.UpdateLayout%2A> mieć konsekwencje istotnie poprawiającą wydajność.</span><span class="sxs-lookup"><span data-stu-id="968fc-695">Frequent calls to <xref:System.Windows.UIElement.InvalidateArrange%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="968fc-696">W związku z tym, należy unikać wywołanie tej metody, chyba że potrzebujesz absolutnie stanu dokładny układ dla kolejnych wywołań do innych [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] w kodzie.</span><span class="sxs-lookup"><span data-stu-id="968fc-696">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span> <span data-ttu-id="968fc-697">Zaawansowany scenariusz, w którym może wywołać <xref:System.Windows.UIElement.InvalidateArrange%2A> jest, jeśli tworzysz <xref:System.Windows.PropertyChangedCallback> dla właściwości zależności, który nie jest włączony <xref:System.Windows.Freezable> lub <xref:System.Windows.FrameworkElement> pochodne klasy, która nadal ma wpływ przebiegu rozmieszczanie układu, gdy zmienia się.</span><span class="sxs-lookup"><span data-stu-id="968fc-697">An advanced scenario where you might call <xref:System.Windows.UIElement.InvalidateArrange%2A> is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the arrange pass of layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasure">
      <MemberSignature Language="C#" Value="public void InvalidateMeasure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateMeasure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateMeasure" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateMeasure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateMeasure();" />
      <MemberSignature Language="F#" Value="member this.InvalidateMeasure : unit -&gt; unit" Usage="uIElement.InvalidateMeasure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-698">Unieważnia stanu pomiaru (układ) dla elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-698">Invalidates the measurement state (layout) for the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-699">Wywołanie tej metody także wywołania <xref:System.Windows.UIElement.InvalidateArrange%2A> wewnętrznie, nie ma potrzeby wywołać <xref:System.Windows.UIElement.InvalidateMeasure%2A> i <xref:System.Windows.UIElement.InvalidateArrange%2A> w odstępie czasu.</span><span class="sxs-lookup"><span data-stu-id="968fc-699">Calling this method also calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally, there is no need to call <xref:System.Windows.UIElement.InvalidateMeasure%2A> and <xref:System.Windows.UIElement.InvalidateArrange%2A> in succession.</span></span> <span data-ttu-id="968fc-700">Po unieważniania, element będzie mieć jej układ zaktualizowany, nastąpi asynchronicznie, chyba że <xref:System.Windows.UIElement.UpdateLayout%2A> jest wywoływana, aby wymusić zmianę układu synchroniczne.</span><span class="sxs-lookup"><span data-stu-id="968fc-700">After the invalidation, the element will have its layout updated, which will occur asynchronously, unless <xref:System.Windows.UIElement.UpdateLayout%2A> is called to force a synchronous layout change.</span></span>  
  
 <span data-ttu-id="968fc-701">System układu poziomie struktury WPF nie obchodzenie zmian w drzewie wizualnym elementu, a w typowych przypadkach unieważniania układu systemu układów wywołuje wielokrotność tej metody, gdy jest to konieczne.</span><span class="sxs-lookup"><span data-stu-id="968fc-701">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and in most common layout invalidation cases the layout system is calling the equivalent of this method when necessary.</span></span> <span data-ttu-id="968fc-702">Tej metody powinny wywoływać tylko w przypadku, jeśli eksportują implementacji układ pełny bezpośrednie manipulowanie drzewo elementów lub podobne zaawansowanych scenariuszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-702">You should only call this method if you are producing a complete layout implementation, which does direct manipulation of the element tree, or similar advanced scenarios.</span></span> <span data-ttu-id="968fc-703">Taki scenariusz zaawansowane jest, jeśli tworzysz <xref:System.Windows.PropertyChangedCallback> dla właściwości zależności, który nie jest włączony <xref:System.Windows.Freezable> lub <xref:System.Windows.FrameworkElement> pochodne klasy, która nadal ma wpływ przebiegu miary układu, gdy zmienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-703">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the measure pass of layout when it changes.</span></span>  
  
 <span data-ttu-id="968fc-704">Częste wywołania <xref:System.Windows.UIElement.InvalidateMeasure%2A> lub, w szczególności <xref:System.Windows.UIElement.UpdateLayout%2A> mieć konsekwencje istotnie poprawiającą wydajność.</span><span class="sxs-lookup"><span data-stu-id="968fc-704">Frequent calls to <xref:System.Windows.UIElement.InvalidateMeasure%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="968fc-705">W związku z tym, należy unikać wywołanie tej metody, chyba że potrzebujesz absolutnie stanu dokładny układ dla kolejnych wywołań do innych [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] w kodzie.</span><span class="sxs-lookup"><span data-stu-id="968fc-705">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateVisual">
      <MemberSignature Language="C#" Value="public void InvalidateVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateVisual() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateVisual" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateVisual ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateVisual();" />
      <MemberSignature Language="F#" Value="member this.InvalidateVisual : unit -&gt; unit" Usage="uIElement.InvalidateVisual " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-706">Renderowanie elementu unieważnia i wymusza pełną nowe przekazanie układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-706">Invalidates the rendering of the element, and forces a complete new layout pass.</span></span> <span data-ttu-id="968fc-707"><see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> jest wywoływana po zakończeniu cyklu układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-707"><see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> is called after the layout cycle is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-708">Ta metoda wywołuje <xref:System.Windows.UIElement.InvalidateArrange%2A> wewnętrznie.</span><span class="sxs-lookup"><span data-stu-id="968fc-708">This method calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally.</span></span>  
  
 <span data-ttu-id="968fc-709">Ta metoda nie jest zazwyczaj wywoływana z kodu aplikacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-709">This method is not generally called from your application code.</span></span> <span data-ttu-id="968fc-710">System układu poziomie struktury WPF nie obchodzenie zmian w drzewie wizualnym elementu, a będzie wywoływać wielokrotność tej metody, gdy jest to konieczne już.</span><span class="sxs-lookup"><span data-stu-id="968fc-710">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and would be calling the equivalent of this method when necessary already.</span></span> <span data-ttu-id="968fc-711">Wywołanie tej metody jest niezbędne tylko w przypadku zaawansowanych scenariuszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-711">Calling this method is necessary only for advanced scenarios.</span></span> <span data-ttu-id="968fc-712">Taki scenariusz zaawansowane jest, jeśli tworzysz <xref:System.Windows.PropertyChangedCallback> dla właściwości zależności, który nie jest włączony <xref:System.Windows.Freezable> lub <xref:System.Windows.FrameworkElement> pochodne klasy, która nadal ma wpływ układ, gdy zmienia się.</span><span class="sxs-lookup"><span data-stu-id="968fc-712">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
      </Docs>
    </Member>
    <Member MemberName="IsArrangeValid">
      <MemberSignature Language="C#" Value="public bool IsArrangeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArrangeValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsArrangeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArrangeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArrangeValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsArrangeValid : bool" Usage="System.Windows.UIElement.IsArrangeValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-713">Pobiera wartość wskazującą, czy obliczanej rozmiar i położenie elementów podrzędnych w układzie tego elementu są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="968fc-713">Gets a value indicating whether the computed size and position of child elements in this element's layout are valid.</span></span></summary>
        <value><span data-ttu-id="968fc-714"><see langword="true" /> Jeśli rozmiar i położenie układu są ważne. w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-714"><see langword="true" /> if the size and position of layout are valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-715">Można wymusić rozwiązań do unieważniony przez wywołanie metody <xref:System.Windows.UIElement.InvalidateArrange%2A> tego elementu (lub jego elementów nadrzędnych).</span><span class="sxs-lookup"><span data-stu-id="968fc-715">You can force arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateArrange%2A> on this element (or its parents).</span></span> <span data-ttu-id="968fc-716">Flagi układ recomposition, w czasie, gdy system układ określa.</span><span class="sxs-lookup"><span data-stu-id="968fc-716">This flags the layout for recomposition at such time as the layout system determines.</span></span> <span data-ttu-id="968fc-717">Alternatywnie natychmiastowego wywołania <xref:System.Windows.UIElement.UpdateLayout%2A> można ustanowić, ale to powinno mieć miejsce tylko, gdy jest pewność, że nie dalsze invalidations pochodzą oczekujące (konsekwencje wydajności ma dużą liczbę aktualizacji niepotrzebnie wymuszonego).</span><span class="sxs-lookup"><span data-stu-id="968fc-717">Alternatively, an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A> could be made, but this should only be done if it is certain that no further invalidations are pending (a large number of unnecessarily forced updates has performance consequences).</span></span>  
  
 <span data-ttu-id="968fc-718"><xref:System.Windows.UIElement.IsArrangeValid%2A> nie może być `true` chyba że <xref:System.Windows.UIElement.IsMeasureValid%2A> jest również `true` (w procesie układ rozmieszczenie nie może być nieprawidłowy bez miary, najpierw jest nieprawidłowy).</span><span class="sxs-lookup"><span data-stu-id="968fc-718"><xref:System.Windows.UIElement.IsArrangeValid%2A> cannot be `true` unless <xref:System.Windows.UIElement.IsMeasureValid%2A> is also `true` (in the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
        <altmember cref="P:System.Windows.UIElement.IsMeasureValid" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.UIElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-719">Pobiera lub ustawia wartość wskazującą, czy ten element jest włączony w [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="968fc-719">Gets or sets a value indicating whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="968fc-720">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-720">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-721"><see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-721"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-722">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-722">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-723">Należy pamiętać, ta właściwość ma wpływ implementacje swoiste dla klas <xref:System.Windows.UIElement.IsEnabledCore%2A> na konkretne elementy, często w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="968fc-723">Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement.IsEnabledCore%2A> on particular elements, often at runtime.</span></span> <span data-ttu-id="968fc-724">W związku z tym wartość domyślną, wskazane jest czasami nie skuteczne.</span><span class="sxs-lookup"><span data-stu-id="968fc-724">Therefore, the default value listed here is sometimes not effective.</span></span> <span data-ttu-id="968fc-725">Na przykład <xref:System.Windows.Controls.Primitives.ScrollBar> będzie <xref:System.Windows.UIElement.IsEnabled%2A> `false` zawsze, gdy okaże się, że nie ma potrzeby obsługi paska przewijania.</span><span class="sxs-lookup"><span data-stu-id="968fc-725">For instance, a <xref:System.Windows.Controls.Primitives.ScrollBar> will be <xref:System.Windows.UIElement.IsEnabled%2A> `false` whenever it is determined that there is no need to support a scrollbar.</span></span> <span data-ttu-id="968fc-726">Trwa próba skonfigurowania tej wartości, również potencjalnie zostanie przesłonięta przez wartość zwrócona przez obiekt <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-726">Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span></span>  
  
 <span data-ttu-id="968fc-727">Elementy, które nie są włączone nie uczestniczą w testowania trafień lub koncentracji uwagi i w związku z tym nie będzie źródeł zdarzeń wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-727">Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.</span></span>  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-728">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-728">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-729">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-729">Identifier field</span></span>|<xref:System.Windows.UIElement.IsEnabledProperty>|  
|<span data-ttu-id="968fc-730">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-730">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-731">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-731">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-732">W poniższym przykładzie pokazano program obsługi na jednym przycisku, gdy wartość zostanie wykonany <xref:System.Windows.UIElement.IsEnabled%2A> `false` na inny przycisk o nazwie `b1`.</span><span class="sxs-lookup"><span data-stu-id="968fc-732">The following example shows a handler on one button that when executed will set <xref:System.Windows.UIElement.IsEnabled%2A> `false` on another named button `b1`.</span></span>  
  
 [!code-csharp[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/CSharp/default.xaml.cs#handler)]
 [!code-vb[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/VisualBasic/default.xaml.vb#handler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-733">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsEnabled" /> właściwość zmiany tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-733">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-734">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-734">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.UIElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-735">Pobiera wartość, która staje się wartość zwracaną przez <see cref="P:System.Windows.UIElement.IsEnabled" /> w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-735">Gets a value that becomes the return value of <see cref="P:System.Windows.UIElement.IsEnabled" /> in derived classes.</span></span></summary>
        <value><span data-ttu-id="968fc-736"><see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-736"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="968fc-737">Domyślna implementacja tej właściwości przechowuje wartość i oblicza również, czy element nadrzędny tego elementu jest włączony.</span><span class="sxs-lookup"><span data-stu-id="968fc-737">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="968fc-738">(Jeśli element nadrzędny nie jest włączona, element podrzędny nie może skutecznie włączone w praktyczne [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Jeśli chcesz przesłonić tę implementację, należy upewnić się, że wywoływać implementację podstawową, aby zachować to zachowanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-738">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span>  
  
<span data-ttu-id="968fc-739"><see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> Klasa udostępnia istniejącą implementację zastąpienie tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-739">The <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> class provides an existing override implementation of this property.</span></span> <span data-ttu-id="968fc-740">To zastąpienie Określa, czy zawartość wewnątrz obszaru zawartości prezentację przekracza dostępny obszar.</span><span class="sxs-lookup"><span data-stu-id="968fc-740">This override determines whether the content inside the content presentation area exceeds the available area.</span></span> <span data-ttu-id="968fc-741">Jeśli zawartość jest większa niż obszar, część paska przewijania jest włączona.</span><span class="sxs-lookup"><span data-stu-id="968fc-741">If the content does exceed the area, the scrollbar portion is enabled.</span></span> <span data-ttu-id="968fc-742">W przeciwnym razie nie włączono paska przewijania.</span><span class="sxs-lookup"><span data-stu-id="968fc-742">Otherwise, the scrollbar is not enabled.</span></span></para></block>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
        <altmember cref="P:System.Windows.UIElement.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-743">Identyfikuje <see cref="P:System.Windows.UIElement.IsEnabled" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-743">Identifies the <see cref="P:System.Windows.UIElement.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.UIElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-744">Pobiera wartość określającą, czy ten element ma fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="968fc-744">Gets a value that determines whether this element has logical focus.</span></span>  <span data-ttu-id="968fc-745">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-745">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-746"><see langword="true" /> Jeśli ten element ma fokus logiczny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-746"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-747">Fokus logiczny może różnić się od fokus klawiatury, jeśli aplikacja ma wiele działów fokus, takich jak między zawartość menu i pozostałą częścią aplikacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-747">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="968fc-748">W tym scenariuszu fokus klawiatury może być tylko na jednym z elementów interfejsu użytkownika aplikacji, jednak niektóre elementy w innych działów fokus może nadal przechowywać fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="968fc-748">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="968fc-749">Aby uzyskać więcej informacji na temat logiczny fokus, zobacz [Przegląd fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-749">For more information on logical focus, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="968fc-750">Nie należy ustawiać fokus przez ustawienie tej właściwości (jest tylko do odczytu).</span><span class="sxs-lookup"><span data-stu-id="968fc-750">You do not set focus by setting this property (it is read-only).</span></span> <span data-ttu-id="968fc-751">Typowym zastosowaniem dla tej właściwości jest używana jako właściwość zależności <xref:System.Windows.Setter> lub <xref:System.Windows.EventTrigger>.</span><span class="sxs-lookup"><span data-stu-id="968fc-751">The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>.</span></span> <span data-ttu-id="968fc-752">Aby programowo ustawić fokus, należy wywołać <xref:System.Windows.UIElement.Focus%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-752">To set focus programmatically, call <xref:System.Windows.UIElement.Focus%2A>.</span></span> <span data-ttu-id="968fc-753">Fokus można również ustawić wyniku akcji użytkownika lub przez implementacje kontrolki, które prawdopodobnie obejmować zachowanie przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-753">Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-754">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-754">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-755">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-755">Identifier field</span></span>|<xref:System.Windows.UIElement.IsFocusedProperty>|  
|<span data-ttu-id="968fc-756">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-756">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-757">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-757">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-758">Poniższy przykład dotyczy programu obsługi kodu, który zmienia tła kontrolki, gdy koncentruje się.</span><span class="sxs-lookup"><span data-stu-id="968fc-758">The following example is a code handler that changes the background of a control when it is focused.</span></span>  
  
 [!code-csharp[PopupSimple#IsFocused](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml.cs#isfocused)]  
  
 <span data-ttu-id="968fc-759">Inny typowy sposób, aby osiągnąć ten sam efekt jest umieszczenie <xref:System.Windows.Trigger> w <xref:System.Windows.Style> kontrolki; to podejście nie wymaga obsługi określonych zdarzeń z kodem i pozwala projektantom lepszy dostęp do interaktywnych i graficzny rodzaj [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="968fc-759">Another common way to achieve this same effect is to place a <xref:System.Windows.Trigger> in the <xref:System.Windows.Style> of a control; this approach does not require handling specific events with code-behind and allows designers greater access to the interactive and graphical nature of the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="968fc-760">Aby uzyskać przykład, zobacz [jak: Tworzenie efektu zewnętrzna poświata](https://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span><span class="sxs-lookup"><span data-stu-id="968fc-760">For an example, see [How to: Create an Outer Glow Effect](https://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-761">Identyfikuje <see cref="P:System.Windows.UIElement.IsFocused" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-761">Identifies the <see cref="P:System.Windows.UIElement.IsFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisible">
      <MemberSignature Language="C#" Value="public bool IsHitTestVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsHitTestVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHitTestVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisible : bool with get, set" Usage="System.Windows.UIElement.IsHitTestVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-762">Pobiera lub ustawia wartość, która deklaruje, czy ten element może być zwrócony jako wynik testu trafienia z niektórych części zrenderowanej zawartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-762">Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.</span></span> <span data-ttu-id="968fc-763">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-763">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-764"><see langword="true" /> Jeśli ten element mogą być zwracane jako wynik testu trafienia z co najmniej jeden punkt; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-764"><see langword="true" /> if this element could be returned as a hit test result from at least one point; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-765">Wartość domyślna to <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-765">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-766">Skuteczne wartość tej właściwości jest wpływ względne położenie trafień sprawdzalnego działa zgodnie elementy w drzewie logicznym.</span><span class="sxs-lookup"><span data-stu-id="968fc-766">The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.</span></span> <span data-ttu-id="968fc-767">Na przykład, jeśli element jest elementem podrzędnym elementu element, który jest nie przeprowadzanie testu trafienia widoczne, będą nadal obowiązywać wartość właściwości w elemencie podrzędnym `false`nawet wtedy, gdy lokalnie ustawieniem tej wartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-767">For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally.</span></span> <span data-ttu-id="968fc-768">Z tego powodu ważne jest, że nie zostanie ustawiony <xref:System.Windows.UIElement.IsHitTestVisible%2A> do `false` sterowanie złożone chyba, że nie ma żadnych danych wejściowych lub testowania kontrolkę trafień.</span><span class="sxs-lookup"><span data-stu-id="968fc-768">For this reason, it is important that you do not set <xref:System.Windows.UIElement.IsHitTestVisible%2A> to `false` on a composited control unless you do not want any input or hit testing on that control.</span></span> <span data-ttu-id="968fc-769">Aby uzyskać więcej informacji na temat testowania trafień, zobacz [trafień testowania w warstwie wizualnej](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-769">For more information on hit testing, see [Hit Testing in the Visual Layer](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHitTestVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-770">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-770">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-771">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-771">Identifier field</span></span>|<xref:System.Windows.UIElement.IsHitTestVisibleProperty>|  
|<span data-ttu-id="968fc-772">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-772">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-773">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-773">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsHitTestVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsHitTestVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-774">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> zmiany właściwości zależności w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-774">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-775">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-775">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHitTestVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHitTestVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHitTestVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-776">Identyfikuje <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-776">Identifies the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-777">Pobiera wartość wskazującą, czy system metodę wprowadzania, takich jak [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], jest włączone do przetwarzania danych wejściowych do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-777">Gets a value indicating whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)],  is enabled for processing the input to this element.</span></span></summary>
        <value><span data-ttu-id="968fc-778"><see langword="true" /> Jeśli metoda wprowadzania danych jest aktywna; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-778"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-779">Wartość domyślna właściwości dołączone to <see langword="true;" /> jednak to będzie zależeć od rzeczywistego stanu metody wprowadzania danych w czasie wykonywania.</span><span class="sxs-lookup"><span data-stu-id="968fc-779">The default value of the underlying attached property is <see langword="true;" /> however, this will be influenced by the actual state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-780">Ta właściwość zwraca wartość, która jest zwracana przez właściwość dołączonych <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> dla aktualnie włączonego metody wprowadzania (klawiatury, mowy i inne urządzenia wejściowego).</span><span class="sxs-lookup"><span data-stu-id="968fc-780">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.UIElement.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-781">Pobiera wartość wskazującą, czy ten element ma fokus klawiatury.</span><span class="sxs-lookup"><span data-stu-id="968fc-781">Gets a value indicating whether this element has keyboard focus.</span></span>  <span data-ttu-id="968fc-782">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-782">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-783"><see langword="true" /> Jeśli ten element ma fokus klawiatury; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-783"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-784">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-784">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-785">Zmiany ustalona wartość tej właściwości może towarzyszyć zdarzeń związanych z fokusem.</span><span class="sxs-lookup"><span data-stu-id="968fc-785">Changes to the determined value of this property may be accompanied by focus-related events.</span></span>  
  
 <span data-ttu-id="968fc-786"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> i <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> są często używane w ramach procedury obsługi zdarzeń klasy dla innych zdarzeń związanych z danych wejściowych, na przykład aby ustalić, czy element jest już ma fokus klawiatury lub aby oznaczeń, gdy wskaźnik myszy zdarzeń i zdarzeń klawiatury występują w połączeniu.</span><span class="sxs-lookup"><span data-stu-id="968fc-786"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-787">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-787">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-788">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-788">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="968fc-789">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-789">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-790">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-790">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
        <altmember cref="E:System.Windows.UIElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-791">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-791">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-792">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-792">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-793">Identyfikuje <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-793">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-794">Pobiera wartość wskazującą, czy fokus klawiatury mieści się w dowolnym miejscu elementu lub jego elementy podrzędne drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-794">Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.</span></span>  <span data-ttu-id="968fc-795">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-795">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-796"><see langword="true" /> Jeśli fokus klawiatury jest ustawiony na element lub jego elementy podrzędne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-796"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-797">Zmiana wartości tej właściwości zwykle podnieść <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> zdarzeń, chyba że klasa pochodna przesłoniła <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> do pomijania zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-797">Changes to the value of this property typically raise the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="968fc-798">Ta właściwość nie zostanie ustawiony bezpośrednio, ale można ustawić fokus na element przez wywołanie metody <xref:System.Windows.UIElement.Focus%2A>, lub przez dokonywanie <xref:System.Windows.UIElement.MoveFocus%2A> żądania.</span><span class="sxs-lookup"><span data-stu-id="968fc-798">You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement.Focus%2A>, or by making a <xref:System.Windows.UIElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="968fc-799">Jedną z tych wywołań metody wywołuje może zmienić wartość tej właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-799">Either of these method calls might change this property value.</span></span>  
  
 <span data-ttu-id="968fc-800"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> i <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> są zwykle używane w ramach procedury obsługi zdarzeń klasy dla innych zdarzeń związanych z danych wejściowych, na przykład aby ustalić, czy element jest już ma fokus klawiatury lub aby oznaczeń, gdy wskaźnik myszy zdarzeń i zdarzeń klawiatury występują w połączeniu.</span><span class="sxs-lookup"><span data-stu-id="968fc-800"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-801">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-801">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-802">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-802">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="968fc-803">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-803">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-804">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-804">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-805">Występuje, gdy wartość <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-805">Occurs when the value of the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-806">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-806">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-807">Identyfikuje <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-807">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabled">
      <MemberSignature Language="C#" Value="public bool IsManipulationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManipulationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsManipulationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsManipulationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManipulationEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsManipulationEnabled : bool with get, set" Usage="System.Windows.UIElement.IsManipulationEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-808">Pobiera lub ustawia wartość wskazującą, czy do manipulowania zdarzenia są włączone na tym <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-808">Gets or sets a value that indicates whether manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <value><span data-ttu-id="968fc-809"><see langword="true" /> Jeśli do manipulowania zdarzenia są włączone na tym <see cref="T:System.Windows.UIElement" />; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-809"><see langword="true" /> if manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-810">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-810">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-811">Ustaw tę właściwość na true, jeśli chcesz, aby <xref:System.Windows.UIElement> do odbierania <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, i <xref:System.Windows.UIElement.ManipulationCompleted> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-811">Set this property to true if you want the <xref:System.Windows.UIElement> to receive the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, and <xref:System.Windows.UIElement.ManipulationCompleted> events.</span></span> <span data-ttu-id="968fc-812">Aby uzyskać więcej informacji na temat manipulacje zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-812">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="968fc-813">Na przykład aplikację, która odpowiada na manipulacje zobacz [instruktażu: Tworzenie pierwszej aplikacji dotykowej](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-813">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-814">Poniższy przykład tworzy aplikację, która ma czerwonym prostokątem.</span><span class="sxs-lookup"><span data-stu-id="968fc-814">The following example creates an application that has a red Rectangle.</span></span>  <span data-ttu-id="968fc-815"><xref:System.Windows.UIElement.IsManipulationEnabled%2A> Prostokąta zostaje ustalona wartość PRAWDA, a aplikacja subskrybuje okna <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, i <xref:System.Windows.UIElement.ManipulationInertiaStarting> zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-815">The <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property of the Rectangle is set to true and the application's window subscribes to the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, and <xref:System.Windows.UIElement.ManipulationInertiaStarting> events.</span></span> <span data-ttu-id="968fc-816">W tym przykładzie jest częścią większego przykładu w [instruktażu: Tworzenie pierwszej aplikacji dotykowej](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-816">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-xaml[BasicManipulation#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsManipulationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsManipulationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsManipulationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsManipulationEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsManipulationEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-817">Identyfikuje <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-817">Identifies the <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMeasureValid">
      <MemberSignature Language="C#" Value="public bool IsMeasureValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMeasureValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMeasureValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMeasureValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMeasureValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMeasureValid : bool" Usage="System.Windows.UIElement.IsMeasureValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-818">Pobiera wartość wskazującą, czy bieżący rozmiar zwrócony przez miarę układu jest prawidłowa.</span><span class="sxs-lookup"><span data-stu-id="968fc-818">Gets a value indicating whether the current size returned by layout measure is valid.</span></span></summary>
        <value><span data-ttu-id="968fc-819"><see langword="true" /> Jeśli miara zakończy się pomyślnie z układu zwróciła wartość prawidłowe i aktualne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-819"><see langword="true" /> if the measure pass of layout returned a valid and current value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-820">Można wymusić pomiaru i rozmieszczenie do unieważniony przez wywołanie metody <xref:System.Windows.UIElement.InvalidateMeasure%2A> tego elementu (lub dowolnego elementu nadrzędnego w górę drzewa wizualnego).</span><span class="sxs-lookup"><span data-stu-id="968fc-820">You can force measurement and arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateMeasure%2A> on this element (or any parent element up the visual tree).</span></span> <span data-ttu-id="968fc-821">Określa układ recomposition asynchronicznie, występujące w danym momencie określany przez system układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-821">This designates the layout for recomposition asynchronously, occurring at a time determined by the layout system.</span></span> <span data-ttu-id="968fc-822">Alternatywnie, można dokonać natychmiastowego wywołania <xref:System.Windows.UIElement.UpdateLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-822">Alternatively, you could make an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A>.</span></span> <span data-ttu-id="968fc-823">Jednakże, należy wywołać tylko <xref:System.Windows.UIElement.UpdateLayout%2A> Jeśli prawdopodobnie oczekujących nie dalsze invalidations (dużą liczbę aktualizacji niepotrzebnie wymuszonego będą mieć konsekwencje wydajności).</span><span class="sxs-lookup"><span data-stu-id="968fc-823">However, you should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if it is likely that no further invalidations are pending (a large number of unnecessarily forced updates will have performance consequences).</span></span>  
  
 <span data-ttu-id="968fc-824">Jeśli <xref:System.Windows.UIElement.IsMeasureValid%2A> jest `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> musi być także `false` (przez wymuszone logiki procesu układ rozmieszczenie nie może być prawidłowy bez miary, najpierw jest nieprawidłowy).</span><span class="sxs-lookup"><span data-stu-id="968fc-824">If <xref:System.Windows.UIElement.IsMeasureValid%2A> is `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> must also be `false` (by the enforced logic of the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.UIElement.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-825">Pobiera wartość wskazującą, czy przycisk myszy jest przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-825">Gets a value indicating whether the mouse is captured to this element.</span></span>  <span data-ttu-id="968fc-826">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-826">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-827"><see langword="true" /> Jeśli element ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-827"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-828">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-828">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-829">Stanu przechwytywanie myszy powiązany jest w trakcie operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-829">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-830">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-830">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-831">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-831">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="968fc-832">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-832">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-833">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-833">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-834">Poniższy przykład włącza stanu przechwytywanie myszy lub wyłącza zależnie od tego, czy wskaźnik myszy jest już przechwytywany dla elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-834">The following example turns the mouse capture state on or off based on whether the mouse is already captured for the element.</span></span>  
  
 <span data-ttu-id="968fc-835">Przechwytywanie myszy czy gdzie indziej, przechwytywanie myszy jest ustawiona na ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-835">If mouse capture is elsewhere, the mouse capture is set to that element.</span></span> <span data-ttu-id="968fc-836">Jeśli element przechwytywanie myszy, jest wyczyszczone, wywołując <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> przy użyciu wartości null danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-836">If the element had mouse capture, it is cleared by calling <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with a null input.</span></span>  
  
 [!code-csharp[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#ismousecaptured)]
 [!code-vb[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-837">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-837">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-838">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-838">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-839">Identyfikuje <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-839">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-840">Pobiera wartość określającą, czy przechwytywanie myszy są przechowywane przez ten element lub elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-840">Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.</span></span> <span data-ttu-id="968fc-841">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-841">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-842"><see langword="true" /> Jeśli ten element lub element zawarty ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-842"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-843">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-843">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-844">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-844">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="968fc-845">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-845">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-846">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-846">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-847">Występuje, gdy wartość <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> zmiany w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-847">Occurs when the value of the <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-848">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-848">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-849">Identyfikuje <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-849">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-850">Pobiera wartość wskazującą, czy pozycji wskaźnika myszy odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="968fc-850">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span>  <span data-ttu-id="968fc-851">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-851">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-852"><see langword="true" /> Jeśli wskaźnik myszy znajduje się nad ten sam wynik elementu jako hit test; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-852"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-853">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-853">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-854">W odróżnieniu od <xref:System.Windows.UIElement.IsMouseOver%2A>, ta właściwość jest tylko `true` gdy wskaźnik myszy znajduje się nad elementem literału — podobnie jak w przypadku hit test.</span><span class="sxs-lookup"><span data-stu-id="968fc-854">Unlike <xref:System.Windows.UIElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element - as it is for a hit test.</span></span> <span data-ttu-id="968fc-855">Jeśli zamiast tego wskaźnik myszy znajduje się za pośrednictwem elementu podrzędnego, w szczególności za pośrednictwem elementy, które są częścią szablonu bardziej elementu i składania, ta właściwość będzie miał `false`.</span><span class="sxs-lookup"><span data-stu-id="968fc-855">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="968fc-856">Jeśli nie masz pewności, jak kontrolka jest złożone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który zdefiniujesz), ta właściwość może zwrócić nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="968fc-856">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="968fc-857">W przypadku większości scenariuszy, w którym nie tworzenia formantów, należy użyć <xref:System.Windows.UIElement.IsMouseOver%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="968fc-857">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="968fc-858">Jeśli przycisk myszy jest przechwytywany przez ten element, a ta właściwość jest `true` w czasie przechwytywania, ta właściwość będzie zwracać `true` dopóki przechwytywanie myszy zostanie utracone i wskaźnik nie znajduje się nad jej zakresem.</span><span class="sxs-lookup"><span data-stu-id="968fc-858">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-859">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-859">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-860">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-860">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="968fc-861">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-861">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-862">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-862">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-863">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-863">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-864">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-864">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-865">Identyfikuje <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-865">Identifies the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.UIElement.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-866">Pobiera wartość wskazującą, czy wskaźnik myszy znajduje się nad tym elementem (w tym elementy podrzędne w drzewie wizualnym).</span><span class="sxs-lookup"><span data-stu-id="968fc-866">Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).</span></span>  <span data-ttu-id="968fc-867">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-867">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-868"><see langword="true" /> Jeśli wskaźnik myszy znajduje się za pośrednictwem elementu lub jego elementy podrzędne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-868"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-869">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-869">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-870">Formanty są zazwyczaj złożone taki sposób, że wszystkie różne elementy wewnątrz formantu (drzewo wizualne) będzie zgłaszać stan myszy zawierający kontrolki.</span><span class="sxs-lookup"><span data-stu-id="968fc-870">Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.</span></span> <span data-ttu-id="968fc-871">Na przykład <xref:System.Windows.Controls.ListBox> zgłosi kontrolka stylu <xref:System.Windows.UIElement.IsMouseOver%2A> jako `true` w przypadku myszy dowolnego miejsca za pośrednictwem jego geometrii, wraz ze wszystkimi <xref:System.Windows.Controls.ListBoxItem>.</span><span class="sxs-lookup"><span data-stu-id="968fc-871">For example, a <xref:System.Windows.Controls.ListBox> style control will report <xref:System.Windows.UIElement.IsMouseOver%2A> as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>.</span></span>  
  
 <span data-ttu-id="968fc-872">Chociaż analogiczne zdarzenie "IsMouseOverChanged" nie istnieje, są w kilku podobne zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-872">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="968fc-873">Na przykład, można obsługiwać <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, i <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="968fc-873">For example, you can handle <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="968fc-874">Jeśli ten element przechwytuje mysz, ta właściwość pozostaje `true` dopóki przechwytywanie myszy zostanie utracona i opuszczeniu granic elementu przez wskaźnik myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-874">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
 <span data-ttu-id="968fc-875">Niektóre kontrolki celowo przechwytywanie myszy w pewnych działań, które nie są wyświetlane bezpośrednio obejmować myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-875">Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.</span></span> <span data-ttu-id="968fc-876">Może to prowadzić do <xref:System.Windows.UIElement.IsMouseOver%2A> trwa `true` nawet, jeśli nie przeniósł najwyraźniej myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-876">This can lead to <xref:System.Windows.UIElement.IsMouseOver%2A> being `true` even though the mouse has not apparently moved.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-877">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-877">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-878">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-878">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseOverProperty>|  
|<span data-ttu-id="968fc-879">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-879">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-880">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-880">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-881">Poniższy przykład odwołuje się do tej właściwości jako typ właściwości <xref:System.Windows.Trigger>stanowiący część \<v sekci > bloku.</span><span class="sxs-lookup"><span data-stu-id="968fc-881">The following example references this property as the property type of a <xref:System.Windows.Trigger>, part of a \<Style.Triggers> block.</span></span> <span data-ttu-id="968fc-882">Jeśli wskaźnik myszy nad kontrolką niebieskie tekst formantu i postać dłoni.</span><span class="sxs-lookup"><span data-stu-id="968fc-882">If the mouse is over the control, the control text turns blue and the cursor becomes a hand.</span></span>  
  
 [!code-xaml[ListViewChkBox#Trigger](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewChkBox/CS/window1.xaml#trigger)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-883">Identyfikuje <see cref="P:System.Windows.UIElement.IsMouseOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-883">Identifies the <see cref="P:System.Windows.UIElement.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.UIElement.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-884">Pobiera wartość wskazującą, czy pióro są przechwytywane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-884">Gets a value indicating whether the stylus is captured by this element.</span></span>  <span data-ttu-id="968fc-885">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-885">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-886"><see langword="true" /> Jeśli element ma Przechwytywanie pióra; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-886"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-887">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-887">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-888">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-888">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-889">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-889">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-890">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-890">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-891">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-891">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="968fc-892">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-892">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-893">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-893">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-894">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-894">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-895">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-895">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-896">Identyfikuje <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-896">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-897">Pobiera wartość określającą, czy przechwytywanie pióra jest przechowywany przez ten element lub elemencie granice elementu i jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-897">Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.</span></span> <span data-ttu-id="968fc-898">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-898">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-899"><see langword="true" /> Jeśli ten element lub element zawarty ma Przechwytywanie pióra; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-899"><see langword="true" /> if this element or a contained element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-900">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-900">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-901">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-901">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-902">Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) i [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-902">For more information, see [Touch Input Support in Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-903">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-903">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-904">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-904">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="968fc-905">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-905">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-906">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-906">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="P:System.Windows.UIElement.IsStylusCaptured" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-907">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-907">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-908">Jest to [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-908">This is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-909">Identyfikuje <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-909">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-910">Pobiera wartość wskazującą, czy pozycja Pióro odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</span><span class="sxs-lookup"><span data-stu-id="968fc-910">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span>  <span data-ttu-id="968fc-911">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-911">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-912"><see langword="true" /> Jeśli wskaźnik Pióro znajduje się nad ten sam wynik elementu jako hit test; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-912"><see langword="true" /> if the stylus pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-913">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-913">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-914">W odróżnieniu od <xref:System.Windows.UIElement.IsStylusOver%2A>, ta właściwość jest tylko `true` , gdy pióro znajduje się nad elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-914">Unlike <xref:System.Windows.UIElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="968fc-915">W przypadku pióro zamiast za pośrednictwem elementu podrzędnego lub elementy, które są częścią elementu bardziej składania (drzewo wizualne), ta właściwość będzie miał `false`.</span><span class="sxs-lookup"><span data-stu-id="968fc-915">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`.</span></span>  
  
 <span data-ttu-id="968fc-916">Jeśli nie masz pewności, jak kontrolka jest złożone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który zdefiniujesz), ta właściwość może zwrócić nieoczekiwane wyniki.</span><span class="sxs-lookup"><span data-stu-id="968fc-916">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="968fc-917">W przypadku większości scenariuszy, w którym nie tworzenia formantów, należy użyć <xref:System.Windows.UIElement.IsStylusOver%2A> zamiast tego.</span><span class="sxs-lookup"><span data-stu-id="968fc-917">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="968fc-918">Jeśli ten element ma Przechwytywanie pióra, ta właściwość jest `true` w czasie przechwytywania, ta właściwość pozostaje `true` aż do przechwycenia pióra zostaną utracone i pióro nie znajduje się nad jej zakresem.</span><span class="sxs-lookup"><span data-stu-id="968fc-918">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="968fc-919">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-919">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-920">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-920">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-921">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-921">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-922">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-922">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="968fc-923">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-923">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-924">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-924">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-925">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-925">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-926">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-926">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-927">Identyfikuje <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-927">Identifies the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.UIElement.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-928">Pobiera wartość wskazującą, czy kursor pióra znajduje się nad tym elementem (w tym elementy podrzędne visual).</span><span class="sxs-lookup"><span data-stu-id="968fc-928">Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).</span></span>  <span data-ttu-id="968fc-929">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-929">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-930"><see langword="true" /> Jeśli kursor pióra przez element lub jego elementy podrzędne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-930"><see langword="true" /> if stylus cursor is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-931">Wartość domyślna to <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-931">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-932">Jeśli ten element ma Przechwytywanie pióra, ta właściwość będzie w dalszym ciągu zwracają `true` aż do przechwycenia pióra zostaną utracone i wskaźnik znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="968fc-932">If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="968fc-933">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-933">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-934">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-934">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-935">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-935">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-936">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-936">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusOverProperty>|  
|<span data-ttu-id="968fc-937">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-937">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-938">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-938">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-939">Identyfikuje <see cref="P:System.Windows.UIElement.IsStylusOver" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-939">Identifies the <see cref="P:System.Windows.UIElement.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.UIElement.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-940">Pobiera wartość wskazującą, czy ten element jest widoczny w [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="968fc-940">Gets a value indicating whether this element is visible in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="968fc-941">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-941">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-942"><see langword="true" /> Jeśli element jest widoczny; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-942"><see langword="true" /> if the element is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-943">Oznaczanie <xref:System.Windows.UIElement.IsVisible%2A> wartość uwzględnia wszystkie czynniki układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-943">Determination of the <xref:System.Windows.UIElement.IsVisible%2A> value takes all factors of layout into account.</span></span> <span data-ttu-id="968fc-944">Z kolei <xref:System.Windows.UIElement.Visibility%2A>, czyli konfigurowalną właściwość tylko wskazuje zamiar programowo uczynienia elementu widoczny lub niewidoczny.</span><span class="sxs-lookup"><span data-stu-id="968fc-944">In contrast, <xref:System.Windows.UIElement.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.</span></span>  
  
 <span data-ttu-id="968fc-945">Elementy gdzie <xref:System.Windows.UIElement.IsVisible%2A> jest `false` nie uczestniczą w zdarzenia wejściowe (lub poleceń), czy nie mają wpływ na obu miary lub Rozmieść przebiegów układ, nie są focusable, nie są w kolejności karty i nie będą raportowane podczas testowania trafień.</span><span class="sxs-lookup"><span data-stu-id="968fc-945">Elements where <xref:System.Windows.UIElement.IsVisible%2A> is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.</span></span> <span data-ttu-id="968fc-946">Z drugiej strony, elementy gdzie <xref:System.Windows.UIElement.IsEnabled%2A> jest `false` nadal będą uczestniczyć w zdarzeniach i poleceń i testowania trafień, ale nie są również focusable.</span><span class="sxs-lookup"><span data-stu-id="968fc-946">In contrast, elements where <xref:System.Windows.UIElement.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable.</span></span>  
  
<a name="dependencyPropertyInfo_IsVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-947">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-947">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-948">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-948">Identifier field</span></span>|<xref:System.Windows.UIElement.IsVisibleProperty>|  
|<span data-ttu-id="968fc-949">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-949">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-950">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-950">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-951">Występuje, gdy wartość <see cref="P:System.Windows.UIElement.IsVisible" /> zmiany właściwości, w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-951">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsVisible" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-952">To zdarzenie nie jest inicjowane, jeśli element nie jest renderowany przez system układu, z powodów innych niż wartość <xref:System.Windows.UIElement.IsVisible%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-952">This event is not raised if the element is not being rendered by the layout system, for reasons other than the value of the <xref:System.Windows.UIElement.IsVisible%2A> property.</span></span> <span data-ttu-id="968fc-953">Na przykład element nie może być skojarzone wizualizacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-953">For example, the element might not have an associated visual.</span></span>  
  
 <span data-ttu-id="968fc-954">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-954">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.IsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-955">Identyfikuje <see cref="P:System.Windows.UIElement.IsVisible" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-955">Identifies the <see cref="P:System.Windows.UIElement.IsVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-956">Występuje po naciśnięciu klawisza, gdy fokus znajduje się w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-956">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-957">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak polecenia i tekst.</span><span class="sxs-lookup"><span data-stu-id="968fc-957">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="968fc-958"><xref:System.Windows.UIElement.KeyDown> Zdarzeń jest tekst niższego poziomu zdarzenie danych wejściowych, które mogą nie zachowywać się, zgodnie z oczekiwaniami na niektórych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="968fc-958">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="968fc-959">Jest to, ponieważ niektóre kontrolki zostały składania do sterowania lub obsługa klasy, zapewniająca wyższego poziomu wersję tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="968fc-959">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="968fc-960">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.KeyDown> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-960">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.KeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-961">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.KeyDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-961">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-962">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-962">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-963">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-963">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyDownEvent>|  
|<span data-ttu-id="968fc-964">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-964">Routing strategy</span></span>|<span data-ttu-id="968fc-965">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-965">Bubbling</span></span>|  
|<span data-ttu-id="968fc-966">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-966">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="968fc-967">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-967">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="968fc-968">Zastąp <xref:System.Windows.UIElement.OnKeyDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-968">Override <xref:System.Windows.UIElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-969">Identyfikuje <see cref="E:System.Windows.UIElement.KeyDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-969">Identifies the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-970">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-970">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-971">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-971">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-972">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-972">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-973">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-973">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-974">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-974">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-975">Występuje po zwolnieniu klawisza gdy fokus znajduje się w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-975">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-976">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.KeyUp> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-976">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.UIElement.KeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-977">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.KeyUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-977">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-978">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-978">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-979">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-979">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyUpEvent>|  
|<span data-ttu-id="968fc-980">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-980">Routing strategy</span></span>|<span data-ttu-id="968fc-981">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-981">Bubbling</span></span>|  
|<span data-ttu-id="968fc-982">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-982">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="968fc-983">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-983">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="968fc-984">Zastąp <xref:System.Windows.UIElement.OnKeyUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-984">Override <xref:System.Windows.UIElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-985">Identyfikuje <see cref="E:System.Windows.UIElement.KeyUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-985">Identifies the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-986">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-986">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-987">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-987">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-988">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-988">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-989">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-989">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-990">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-990">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LayoutUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutUpdated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LayoutUpdated;" />
      <MemberSignature Language="F#" Value="member this.LayoutUpdated : EventHandler " Usage="member this.LayoutUpdated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-991">Występuje, gdy układ różnych elementów wizualnych skojarzone z bieżącym <see cref="T:System.Windows.Threading.Dispatcher" /> zmiany.</span><span class="sxs-lookup"><span data-stu-id="968fc-991">Occurs when the layout of the various visual elements associated with the current <see cref="T:System.Windows.Threading.Dispatcher" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-992">Aktualizacja układ może wystąpić w wyniku zmiany właściwości, zmiana rozmiaru okna lub żądania użytkownika.</span><span class="sxs-lookup"><span data-stu-id="968fc-992">A layout update can occur as a result of a property change, a window resize, or an explicit user request.</span></span>  
  
 <span data-ttu-id="968fc-993">Ten element jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-993">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-994">Występuje po utracie fokusu logicznego przez ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-994">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-995">Fokus logiczny różni się od fokus klawiatury, gdy fokus jest celowo wymuszone natychmiast za pomocą wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie.</span><span class="sxs-lookup"><span data-stu-id="968fc-995">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="968fc-996">W tym scenariuszu, pozostaje fokus klawiatury, gdzie jest i element gdzie <xref:System.Windows.UIElement.Focus%2A> wywoływana jest metoda nadal pobiera fokus logiczny.</span><span class="sxs-lookup"><span data-stu-id="968fc-996">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="968fc-997">Bardziej precyzyjne interpretacji to zdarzenie jest jej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsFocused%2A> właściwość elementu w trasie zmieni się z `true` do `false`.</span><span class="sxs-lookup"><span data-stu-id="968fc-997">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="968fc-998">Ponieważ to zdarzenie używa routingu propagacji, element, który traci fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-998">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="968fc-999">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który zdobyte fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-999">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1000">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1000">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1001">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1001">Identifier field</span></span>|<xref:System.Windows.UIElement.LostFocusEvent>|  
|<span data-ttu-id="968fc-1002">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1002">Routing strategy</span></span>|<span data-ttu-id="968fc-1003">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1003">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1004">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1004">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="968fc-1005">Nie ma żadnego odpowiedniego zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-1005">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="968fc-1006">Zastąp <xref:System.Windows.UIElement.OnLostFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1006">Override <xref:System.Windows.UIElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1007">Identyfikuje <see cref="E:System.Windows.UIElement.LostFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1007">Identifies the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1008">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1008">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1009">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1009">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1010">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1010">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1011">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1011">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1012">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1012">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1013">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1013">Occurs when the keyboard is no longer focused on this element,.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1014">Ponieważ to zdarzenie używa routingu propagacji, element, który utraty fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1014">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="968fc-1015">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który utraty fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-1015">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="968fc-1016">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.LostKeyboardFocus> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-1016">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-1017">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.LostKeyboardFocus> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1017">Event handlers that are attached to the <xref:System.Windows.UIElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1018">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1018">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1019">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1019">Identifier field</span></span>|<xref:System.Windows.UIElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="968fc-1020">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1020">Routing strategy</span></span>|<span data-ttu-id="968fc-1021">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1021">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1022">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1022">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="968fc-1023">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1023">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="968fc-1024">Zastąp <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1024">Override <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1025">Identyfikuje <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1025">Identifies the <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1026">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1026">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1027">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1027">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1028">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1028">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1029">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1029">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1030">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1030">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1031">Występuje, gdy ten element utraci przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1031">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1032">Gdy element przechwytuje mysz, otrzymuje wejście myszy nawet wtedy, gdy wskaźnik myszy znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="968fc-1032">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="968fc-1033">Mysz są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-1033">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="968fc-1034">Ponieważ to zdarzenie używa routingu propagacji, element utraci Przechwytywanie może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1034">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="968fc-1035">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który utraty przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="968fc-1035">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="968fc-1036">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.LostMouseCapture> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-1036">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-1037">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.LostMouseCapture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1037">Event handlers that are attached to the <xref:System.Windows.UIElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1038">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1038">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1039">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1039">Identifier field</span></span>|<xref:System.Windows.UIElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="968fc-1040">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1040">Routing strategy</span></span>|<span data-ttu-id="968fc-1041">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1041">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1042">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1042">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="968fc-1043">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-1043">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="968fc-1044">Zastąp <xref:System.Windows.UIElement.OnLostMouseCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1044">Override <xref:System.Windows.UIElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1045">Identyfikuje <see cref="E:System.Windows.UIElement.LostMouseCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1045">Identifies the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1046">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1046">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1047">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1047">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1048">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1048">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1049">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1049">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1050">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1050">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1051">Występuje, gdy ten element utraci Przechwytywanie pióra.</span><span class="sxs-lookup"><span data-stu-id="968fc-1051">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1052">Po przechwyceniu pióra przez element, odbierze wejście pióra, nawet jeśli kursor znajduje się poza jej granicami.</span><span class="sxs-lookup"><span data-stu-id="968fc-1052">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="968fc-1053">Pióro są zazwyczaj przechwytywane tylko podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-1053">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="968fc-1054">Ponieważ to zdarzenie używa routingu propagacji, element, który traci fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1054">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="968fc-1055">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który utraty fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-1055">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="968fc-1056">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.LostStylusCapture> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-1056">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-1057">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.LostStylusCapture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1057">Event handlers that are attached to the <xref:System.Windows.UIElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1058">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1058">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1059">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1059">Identifier field</span></span>|<xref:System.Windows.UIElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="968fc-1060">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1060">Routing strategy</span></span>|<span data-ttu-id="968fc-1061">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1061">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1062">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1062">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-1063">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-1063">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="968fc-1064">Zastąp <xref:System.Windows.UIElement.OnLostStylusCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1064">Override <xref:System.Windows.UIElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1065">Identyfikuje <see cref="E:System.Windows.UIElement.LostStylusCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1065">Identifies the <see cref="E:System.Windows.UIElement.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1066">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1066">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1067">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1067">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1068">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1068">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1069">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1069">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1070">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1070">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1071">Występuje, gdy ten element utraci Przechwytywanie touch.</span><span class="sxs-lookup"><span data-stu-id="968fc-1071">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1072">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1072">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1073">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1073">Identifier field</span></span>|<xref:System.Windows.UIElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="968fc-1074">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1074">Routing strategy</span></span>|<span data-ttu-id="968fc-1075">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1075">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1076">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1076">Delegate</span></span>|<span data-ttu-id="968fc-1077"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1077"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="968fc-1078">Zastąp <xref:System.Windows.UIElement.OnLostTouchCapture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1078">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1079">Identyfikuje <see cref="E:System.Windows.UIElement.LostTouchCapture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1079">Identifies the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationBoundaryFeedback As EventHandler(Of ManipulationBoundaryFeedbackEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^&gt; ^ ManipulationBoundaryFeedback;" />
      <MemberSignature Language="F#" Value="member this.ManipulationBoundaryFeedback : EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; " Usage="member this.ManipulationBoundaryFeedback : System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1080">Występuje, gdy operowanie napotka granicy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1080">Occurs when the manipulation encounters a boundary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_ManipulationBoundaryFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1081">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1081">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1082">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1082">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent>|  
|<span data-ttu-id="968fc-1083">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1083">Routing strategy</span></span>|<span data-ttu-id="968fc-1084">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1084">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1085">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1085">Delegate</span></span>|<span data-ttu-id="968fc-1086"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1086"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationBoundaryFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationBoundaryFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1087">Identyfikuje <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1087">Identifies the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationCompleted As EventHandler(Of ManipulationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationCompletedEventArgs ^&gt; ^ ManipulationCompleted;" />
      <MemberSignature Language="F#" Value="member this.ManipulationCompleted : EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; " Usage="member this.ManipulationCompleted : System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1088">Występuje, gdy manipulacji i bezwładności w <see cref="T:System.Windows.UIElement" /> obiektu zostało zakończone.</span><span class="sxs-lookup"><span data-stu-id="968fc-1088">Occurs when a manipulation and inertia on the <see cref="T:System.Windows.UIElement" /> object is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1089">To zdarzenie można użyć, aby uzyskać informacje dotyczące modyfikowania, po jego ukończeniu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1089">You can use this event to get information about the manipulation when it completes.</span></span>  <span data-ttu-id="968fc-1090">Na przykład, można użyć <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> zmienione właściwości w celu określenia łączna kwota pozycji manipulacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1090">For example, you can use the <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> property to determine the total amount the position of the manipulation changed.</span></span>  
  
 <span data-ttu-id="968fc-1091">Aby uzyskać więcej informacji na temat manipulacje zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1091">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="968fc-1092">Na przykład aplikację, która odpowiada na manipulacje zobacz [instruktażu: Tworzenie pierwszej aplikacji dotykowej](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1092">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationCompleted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1093">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1093">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1094">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1094">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationCompletedEvent>|  
|<span data-ttu-id="968fc-1095">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1095">Routing strategy</span></span>|<span data-ttu-id="968fc-1096">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1096">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1097">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1097">Delegate</span></span>|<span data-ttu-id="968fc-1098"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1098"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompletedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationCompletedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationCompletedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationCompletedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationCompletedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationCompletedEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1099">Identyfikuje <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1099">Identifies the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDelta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationDelta" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationDelta As EventHandler(Of ManipulationDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationDeltaEventArgs ^&gt; ^ ManipulationDelta;" />
      <MemberSignature Language="F#" Value="member this.ManipulationDelta : EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; " Usage="member this.ManipulationDelta : System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1100">Występuje, gdy urządzenie wejściowe pozycji podczas manipulowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-1100">Occurs when the input device changes position during a manipulation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1101"><xref:System.Windows.UIElement.ManipulationDelta> Zdarzeń powtarza się wielokrotnie, gdy użytkownik przeciągnie palców za pośrednictwem ekranu podczas manipulowania, i ponownie po wystąpieniu bezwładności.</span><span class="sxs-lookup"><span data-stu-id="968fc-1101">The <xref:System.Windows.UIElement.ManipulationDelta> event occurs multiple times when the user drags fingers over the screen during a manipulation and again when inertia occurs.</span></span>  <span data-ttu-id="968fc-1102">Możesz użyć <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> właściwość do sprawdzenia, czy zdarzenie ma miejsce podczas bezwładności.</span><span class="sxs-lookup"><span data-stu-id="968fc-1102">You can use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> property to check whether the event is occurring during inertia.</span></span>  
  
 <span data-ttu-id="968fc-1103">Element na z <xref:System.Windows.UIElement.ManipulationDelta> wystąpi zdarzenie nie występuje w jakikolwiek sposób po wystąpieniu zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1103">The element on with <xref:System.Windows.UIElement.ManipulationDelta> event occurs is not affected in any way when the event occurs.</span></span>  <span data-ttu-id="968fc-1104">Należy podać logikę do elementu, który ma być zmieniane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1104">You must provide the logic to the element that is to be manipulated.</span></span>  <span data-ttu-id="968fc-1105"><xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> i <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> właściwości, które są typu <xref:System.Windows.Input.ManipulationDelta>, zawiera dane o jak zmienić położenie manipulacje i interpretowane jako przenoszenie, zmienianie rozmiaru lub obracanie obiektu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1105">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> properties, which are of type <xref:System.Windows.Input.ManipulationDelta>, contain data about how the position of the manipulations change and interpreted as moving, resizing, or rotating an object.</span></span>  <span data-ttu-id="968fc-1106">Te informacje można zastosować do elementu, który ma być zmieniane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1106">You apply that information to the element that is to be manipulated.</span></span>  
  
 <span data-ttu-id="968fc-1107">Aby uzyskać więcej informacji na temat manipulacje zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1107">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="968fc-1108">Na przykład aplikację, która odpowiada na manipulacje zobacz [instruktażu: Tworzenie pierwszej aplikacji dotykowej](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1108">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationDelta"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1109">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1109">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1110">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1110">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationDeltaEvent>|  
|<span data-ttu-id="968fc-1111">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1111">Routing strategy</span></span>|<span data-ttu-id="968fc-1112">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1112">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1113">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1113">Delegate</span></span>|<span data-ttu-id="968fc-1114"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1114"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-1115">W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationDelta> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1115">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="968fc-1116">W przykładzie użyto <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> właściwość przenoszenie, zmienianie rozmiaru i Obróć <xref:System.Windows.Shapes.Rectangle>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1116">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span>  <span data-ttu-id="968fc-1117">Przykład również sprawdza, czy <xref:System.Windows.UIElement.ManipulationDelta> zdarzenie wystąpiło podczas bezwładności i czy prostokąt zachodzi krawędzi okna.</span><span class="sxs-lookup"><span data-stu-id="968fc-1117">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span>  <span data-ttu-id="968fc-1118">Jeśli te przypadki są spełnione, aplikacja przestaje manipulowania, aby zapobiec prostokąta od opuszczenia obszaru aplikacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1118">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="968fc-1119">W tym przykładzie jest częścią większego przykładu w [instruktażu: Tworzenie pierwszej aplikacji dotykowej](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1119">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDeltaEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationDeltaEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationDeltaEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationDeltaEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationDeltaEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationDeltaEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1120">Identyfikuje <see cref="E:System.Windows.UIElement.ManipulationDelta" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1120">Identifies the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationInertiaStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationInertiaStarting As EventHandler(Of ManipulationInertiaStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationInertiaStartingEventArgs ^&gt; ^ ManipulationInertiaStarting;" />
      <MemberSignature Language="F#" Value="member this.ManipulationInertiaStarting : EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; " Usage="member this.ManipulationInertiaStarting : System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1121">Występuje, gdy urządzenie wejściowe traci kontaktu z <see cref="T:System.Windows.UIElement" /> obiektu podczas manipulacji i bezwładności rozpoczyna się.</span><span class="sxs-lookup"><span data-stu-id="968fc-1121">Occurs when the input device loses contact with the <see cref="T:System.Windows.UIElement" /> object during a manipulation and inertia begins.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1122"><xref:System.Windows.UIElement.ManipulationInertiaStarting> Zdarzenie występuje, gdy użytkownik wind wszystkich palców od ekranu podczas manipulowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-1122">The <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs when the user lifts all of the fingers from the screen during a manipulation.</span></span> <span data-ttu-id="968fc-1123">Na przykład, jeśli użytkownik "zgłasza" <xref:System.Windows.UIElement> po powierzchni, użytkownik będzie w ogóle <xref:System.Windows.UIElement> można rozpocząć akcji, na ekranie poruszają się palcem na krótką odległość, a następnie zwolnij <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1123">For example, if a user "throws" a <xref:System.Windows.UIElement> across a surface, the user will touch the <xref:System.Windows.UIElement> to begin the action, move the finger across the screen for a short distance, and then release the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="968fc-1124">Gdy użytkownik zwolni elementu, bezwładności rozpoczyna się i <xref:System.Windows.UIElement.ManipulationInertiaStarting> wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1124">When the user releases the element, inertia begins and the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs.</span></span>  <span data-ttu-id="968fc-1125"><xref:System.Windows.UIElement> Będzie nadal otrzymywać <xref:System.Windows.UIElement.ManipulationDelta> zdarzenia w celu wskazania, że bezwładności odbywa się w elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1125">The <xref:System.Windows.UIElement> continues to receive <xref:System.Windows.UIElement.ManipulationDelta> events to indicate that inertia is occurring on the element.</span></span>  
  
 <span data-ttu-id="968fc-1126">To zdarzenie służy do określania zachowania bezwładności.</span><span class="sxs-lookup"><span data-stu-id="968fc-1126">You can use this event to specify the behavior of the inertia.</span></span>  <span data-ttu-id="968fc-1127">Na przykład można ustawić prędkości początkowej używany, gdy rozpoczyna się bezwładności.</span><span class="sxs-lookup"><span data-stu-id="968fc-1127">For example, you can set the initial velocity that is used when inertia begins.</span></span>  <span data-ttu-id="968fc-1128">Można również określić ilość bezwładności, ustawiając żądany opóźnienia lub poprzez skonfigurowanie żądanego położenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1128">You can also specify the amount of inertia by setting the desired deceleration or by setting the desired placement.</span></span>  <span data-ttu-id="968fc-1129">Te wartości dla każdego typu manipulowania (tłumaczenia, rozszerzenia lub obrót) można ustawić niezależnie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1129">You can set these values for each type of manipulation (translation, expansion, or rotation) independently.</span></span>  <span data-ttu-id="968fc-1130">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1130">For more information, see <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>  
  
 <span data-ttu-id="968fc-1131">Aby uzyskać więcej informacji na temat manipulacje zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1131">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="968fc-1132">Na przykład aplikację, która odpowiada na manipulacje zobacz [instruktażu: Tworzenie pierwszej aplikacji dotykowej](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1132">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationInertiaStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1133">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1133">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1134">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1134">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationInertiaStartingEvent>|  
|<span data-ttu-id="968fc-1135">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1135">Routing strategy</span></span>|<span data-ttu-id="968fc-1136">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1136">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1137">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1137">Delegate</span></span>|<span data-ttu-id="968fc-1138"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1138"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-1139">W poniższym przykładzie przedstawiono <xref:System.Windows.UIElement.ManipulationInertiaStarting> program obsługi zdarzeń i ustawia żądany prędkości dla translacji, rozszerzenia i obrót, który jest używany podczas bezwładności.</span><span class="sxs-lookup"><span data-stu-id="968fc-1139">The following example shows the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event handler and sets the desired deceleration for translation, expansion, and rotation that is used during inertia.</span></span> <span data-ttu-id="968fc-1140">W tym przykładzie jest częścią większego przykładu w [instruktażu: Tworzenie pierwszej aplikacji dotykowej](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1140">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]
 [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationInertiaStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationInertiaStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationInertiaStartingEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1141">Identyfikuje <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1141">Identifies the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarted As EventHandler(Of ManipulationStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartedEventArgs ^&gt; ^ ManipulationStarted;" />
      <MemberSignature Language="F#" Value="member this.ManipulationStarted : EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; " Usage="member this.ManipulationStarted : System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1142">Występuje, gdy urządzenie wejściowe rozpoczyna się manipulowania <see cref="T:System.Windows.UIElement" /> obiektu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1142">Occurs when an input device begins a manipulation on the <see cref="T:System.Windows.UIElement" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1143"><xref:System.Windows.UIElement.ManipulationStarted> Zdarzenie występuje po <xref:System.Windows.UIElement.ManipulationStarting> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1143">The <xref:System.Windows.UIElement.ManipulationStarted> event occurs after the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span>  <span data-ttu-id="968fc-1144">Możesz skorzystać z poniższej procedury z <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span><span class="sxs-lookup"><span data-stu-id="968fc-1144">You can do the following with the <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span></span>  
  
-   <span data-ttu-id="968fc-1145">Pobierz element manipulowania pozycja względem przy użyciu <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1145">Get the element that the manipulation's position is relative to by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> property.</span></span>  
  
-   <span data-ttu-id="968fc-1146">Uzyskiwanie źródła operowanie przy użyciu <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1146">Get the origin of the manipulation by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> property.</span></span>  
  
-   <span data-ttu-id="968fc-1147">Anuluj operowanie przez wywołanie metody <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="968fc-1147">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> method.</span></span>  
  
 <span data-ttu-id="968fc-1148">Aby uzyskać więcej informacji na temat manipulacje zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1148">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="968fc-1149">Na przykład aplikację, która odpowiada na manipulacje zobacz [instruktażu: Tworzenie pierwszej aplikacji dotykowej](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1149">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1150">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1150">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1151">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1151">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartedEvent>|  
|<span data-ttu-id="968fc-1152">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1152">Routing strategy</span></span>|<span data-ttu-id="968fc-1153">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1153">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1154">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1154">Delegate</span></span>|<span data-ttu-id="968fc-1155"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1155"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationStartedEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1156">Identyfikuje <see cref="E:System.Windows.UIElement.ManipulationStarted" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1156">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarting As EventHandler(Of ManipulationStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartingEventArgs ^&gt; ^ ManipulationStarting;" />
      <MemberSignature Language="F#" Value="member this.ManipulationStarting : EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; " Usage="member this.ManipulationStarting : System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1157">Występuje, gdy tworzona jest najpierw procesora manipulacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1157">Occurs when the manipulation processor is first created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1158"><xref:System.Windows.UIElement.ManipulationStarting> Wystąpieniu zdarzenia na element, który ma <xref:System.Windows.UIElement.IsManipulationEnabled%2A> właściwością `true` po użytkownik umieszcza palcem na nim.</span><span class="sxs-lookup"><span data-stu-id="968fc-1158">The <xref:System.Windows.UIElement.ManipulationStarting> event occurs on an element that has the <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property set to `true` when the user puts a finger on it.</span></span> <span data-ttu-id="968fc-1159">Domyślnie zdarzenia manipulowania kolejnych raportu położenie operowanie atrybutami względem elementu, który ma <xref:System.Windows.UIElement.IsManipulationEnabled%2A> równa `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-1159">By default, subsequent manipulation events report the position of the manipulation relative to the element that has <xref:System.Windows.UIElement.IsManipulationEnabled%2A> set to `true`.</span></span>  <span data-ttu-id="968fc-1160">Można określić, czy pozycja powinna być określona względem innego elementu, ustawiając <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1160">You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span> <span data-ttu-id="968fc-1161">Na przykład można wprowadzić operowanie atrybutami względem nadrzędnego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1161">For example, you can make the manipulation relative to the parent of the element.</span></span>  
  
 <span data-ttu-id="968fc-1162">Możesz również wykonać następujące czynności w obsłudze zdarzeń dla <xref:System.Windows.UIElement.ManipulationStarting>:</span><span class="sxs-lookup"><span data-stu-id="968fc-1162">You can also do the following in an event handler for <xref:System.Windows.UIElement.ManipulationStarting>:</span></span>  
  
-   <span data-ttu-id="968fc-1163">Określ, czy użytkownik potrzebuje więcej niż jeden finger przeprowadzić manipulacje, ustawiając <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1163">Specify whether the user needs more than one finger to perform the manipulations by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="968fc-1164">Określ, jakie typy manipulowania są włączone, ustawiając <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> właściwość <xref:System.Windows.Input.ManipulationModes> wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1164">Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.</span></span>  
  
-   <span data-ttu-id="968fc-1165">Określ środek obrotu pojedynczego finger, ustawiając <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1165">Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="968fc-1166">Anuluj operowanie przez wywołanie metody <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> metody.</span><span class="sxs-lookup"><span data-stu-id="968fc-1166">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="968fc-1167">Aby uzyskać więcej informacji na temat manipulacje zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1167">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="968fc-1168">Na przykład aplikację, która odpowiada na manipulacje zobacz [instruktażu: Tworzenie pierwszej aplikacji dotykowej](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1168">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1169">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1169">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1170">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1170">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartingEvent>|  
|<span data-ttu-id="968fc-1171">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1171">Routing strategy</span></span>|<span data-ttu-id="968fc-1172">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1172">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1173">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1173">Delegate</span></span>|<span data-ttu-id="968fc-1174"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1174"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-1175">W poniższym przykładzie pokazano program obsługi zdarzeń dla <xref:System.Windows.UIElement.ManipulationStarting> zdarzenia i ustawia <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> do elementu nadrzędnego, który odbiera zdarzenia manipulowania, tak aby były współrzędne operowanie atrybutami względem elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1175">The following example shows the event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> to the parent element that receives the manipulation events so that the coordinates of the manipulation are relative to the parent element.</span></span>  <span data-ttu-id="968fc-1176">W tym przykładzie jest częścią większego przykładu w [instruktażu: Tworzenie pierwszej aplikacji dotykowej](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1176">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationstarting)]
 [!code-vb[BasicManipulation#ManipulationStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationstarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ManipulationStartingEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1177">Identyfikuje <see cref="E:System.Windows.UIElement.ManipulationStarting" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1177">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="C#" Value="public void Measure (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Measure(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Measure (availableSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Measure(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="member this.Measure : System.Windows.Size -&gt; unit" Usage="uIElement.Measure availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="968fc-1178">Dostępne miejsce przydzielić element podrzędny elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1178">The available space that a parent element can allocate a child element.</span></span> <span data-ttu-id="968fc-1179">Element podrzędny może żądać obszaru większego niż dostępna; Podany rozmiar może pomieścić, jeśli przewijanie jest możliwe w modelu zawartości dla bieżącego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1179">A child element can request a larger space than what is available; the provided size might be accommodated if scrolling is possible in the content model for the current element.</span></span></param>
        <summary><span data-ttu-id="968fc-1180">Aktualizacje <see cref="P:System.Windows.UIElement.DesiredSize" /> z <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-1180">Updates the <see cref="P:System.Windows.UIElement.DesiredSize" /> of a <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="968fc-1181">Elementy nadrzędne wywołać tej metody z własnych <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> implementacji w celu utworzenia układu cyklicznych aktualizacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1181">Parent elements call this method from their own <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> implementations to form a recursive layout update.</span></span> <span data-ttu-id="968fc-1182">Wywołanie tej metody stanowi pierwszym przebiegu aktualizacji układu (pass "Środki").</span><span class="sxs-lookup"><span data-stu-id="968fc-1182">Calling this method constitutes the first pass (the "Measure" pass) of a layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1183">Obliczenie układzie strony [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] składa się z <xref:System.Windows.UIElement.Measure%2A> wywołania i <xref:System.Windows.UIElement.Arrange%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="968fc-1183">Computation of layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] is comprised of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="968fc-1184">Podczas <xref:System.Windows.UIElement.Measure%2A> wywołań i element określa jej wymagań dotyczących rozmiaru przy użyciu `availableSize` danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1184">During the <xref:System.Windows.UIElement.Measure%2A> call, an element determines its size requirements by using an `availableSize` input.</span></span> <span data-ttu-id="968fc-1185">Podczas <xref:System.Windows.UIElement.Arrange%2A> wywołaniu, rozmiar elementu jest aktualnie finalizowana.</span><span class="sxs-lookup"><span data-stu-id="968fc-1185">During the <xref:System.Windows.UIElement.Arrange%2A> call, the element size is finalized.</span></span>  
  
 <span data-ttu-id="968fc-1186">`availableSize` może być dowolną liczbę od 0 do nieskończone.</span><span class="sxs-lookup"><span data-stu-id="968fc-1186">`availableSize` can be any number from zero to infinite.</span></span> <span data-ttu-id="968fc-1187">Elementów uczestniczących w układzie powinna zwrócić minimum <xref:System.Windows.Size> wymagają one dla danego `availableSize`.</span><span class="sxs-lookup"><span data-stu-id="968fc-1187">Elements participating in layout should return the minimum <xref:System.Windows.Size> they require for a given `availableSize`.</span></span>  
  
 <span data-ttu-id="968fc-1188">Gdy układ najpierw zostanie uruchomiony, zawsze otrzymuje <xref:System.Windows.UIElement.Measure%2A> wywołanie przed <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1188">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="968fc-1189">Jednak po pierwszym przebiegu układ go może zostać wyświetlony <xref:System.Windows.UIElement.Arrange%2A> wywołania bez <xref:System.Windows.UIElement.Measure%2A>; może się to zdarzyć, gdy właściwość, która ma wpływ tylko na <xref:System.Windows.UIElement.Arrange%2A> zmianie (na przykład wyrównanie), lub gdy odbierze element nadrzędny <xref:System.Windows.UIElement.Arrange%2A> bez <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1189">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="968fc-1190">A <xref:System.Windows.UIElement.Measure%2A> wywołanie automatycznie spowoduje unieważnienie <xref:System.Windows.UIElement.Arrange%2A> wywołania.</span><span class="sxs-lookup"><span data-stu-id="968fc-1190">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="968fc-1191">Aktualizacje układu nastąpić asynchronicznie, tak, aby główny wątek nie oczekuje na każdej zmiany układu możliwe.</span><span class="sxs-lookup"><span data-stu-id="968fc-1191">Layout updates happen asynchronously, such that the main thread is not waiting for every possible layout change.</span></span> <span data-ttu-id="968fc-1192">Podczas badania elementu za pomocą związanym z kodem sprawdzania wartości właściwości mogą nie odzwierciedla natychmiast zmiany właściwości, które współdziałają z właściwości ustalania rozmiaru ani układu ( <xref:System.Windows.FrameworkElement.Width%2A> właściwości, na przykład).</span><span class="sxs-lookup"><span data-stu-id="968fc-1192">Querying an element via code-behind checking of property values may not immediately reflect changes to properties that interact with the sizing or layout characteristics (the <xref:System.Windows.FrameworkElement.Width%2A> property, for example).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="968fc-1193">Aktualizacje układu aktualizację można wymusić przy użyciu <xref:System.Windows.UIElement.UpdateLayout%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="968fc-1193">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method.</span></span> <span data-ttu-id="968fc-1194">Jednak wywołanie tej metody jest zazwyczaj zbędna i mogą powodować spadek wydajności.</span><span class="sxs-lookup"><span data-stu-id="968fc-1194">However, calling this method is usually unnecessary and can cause poor performance.</span></span>  
  
 <span data-ttu-id="968fc-1195">System układu przechowuje dwie oddzielne kolejki nieprawidłowy układów, jeden dla <xref:System.Windows.UIElement.Measure%2A> i jeden dla <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1195">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="968fc-1196">Kolejka układu są sortowane na podstawie kolejności elementów w drzewie wizualnym elementu wykonywania układ; wyżej w drzewie elementów znajdują się na początku kolejki, aby uniknąć nadmiarowe układy spowodowany przez powtarzające zmiany elementów nadrzędnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1196">The layout queue is sorted based upon the order of elements in the visual tree of the element performing layout; elements higher in the tree are at the top of the queue, to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="968fc-1197">Zduplikowane wpisy są automatycznie usuwane z kolejki, a elementy zostaną automatycznie usunięte z kolejki, jeśli są one już zweryfikowane układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1197">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already layout-validated.</span></span>  
  
 <span data-ttu-id="968fc-1198">Podczas aktualizowania układu <xref:System.Windows.UIElement.Measure%2A> kolejki jest opróżniany najpierw następuje <xref:System.Windows.UIElement.Arrange%2A> kolejki.</span><span class="sxs-lookup"><span data-stu-id="968fc-1198">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="968fc-1199">Element <xref:System.Windows.UIElement.Arrange%2A> kolejki nigdy nie będą ułożone, jeśli element <xref:System.Windows.UIElement.Measure%2A> kolejki.</span><span class="sxs-lookup"><span data-stu-id="968fc-1199">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Size MeasureCore (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Size MeasureCore(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MeasureCore (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Size MeasureCore(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="abstract member MeasureCore : System.Windows.Size -&gt; System.Windows.Size&#xA;override this.MeasureCore : System.Windows.Size -&gt; System.Windows.Size" Usage="uIElement.MeasureCore availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="968fc-1200">Dostępny rozmiar elementu nadrzędnego może przydzielić do elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1200">The available size that the parent element can allocate for the child.</span></span></param>
        <summary><span data-ttu-id="968fc-1201">W przypadku przesłonięcia w klasie pochodnej, udostępnia logikę miary, dotyczące ustalania rozmiaru tego elementu prawidłowo, z uwzględnieniem rozmiaru zawartość elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1201">When overridden in a derived class, provides measurement logic for sizing this element properly, with consideration of the size of any child element content.</span></span></summary>
        <returns><span data-ttu-id="968fc-1202">Wymagany rozmiar tego elementu w układzie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1202">The desired size of this element in layout.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1203">Jest to bardziej powszechne, aby utworzyć pochodny element z <xref:System.Windows.FrameworkElement> zamiast <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1203">It is more common to derive an element from <xref:System.Windows.FrameworkElement> rather than <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="968fc-1204">Jeśli są pochodząca od <xref:System.Windows.FrameworkElement>, należy pamiętać, że nadpisanie <xref:System.Windows.UIElement.MeasureCore%2A> na <xref:System.Windows.FrameworkElement> zamknięcia <xref:System.Windows.UIElement.MeasureCore%2A> metody.</span><span class="sxs-lookup"><span data-stu-id="968fc-1204">If you are deriving from <xref:System.Windows.FrameworkElement>, note that an override of <xref:System.Windows.UIElement.MeasureCore%2A> on <xref:System.Windows.FrameworkElement> seals the <xref:System.Windows.UIElement.MeasureCore%2A> method.</span></span> <span data-ttu-id="968fc-1205">W związku z tym, tylko zastąpić <xref:System.Windows.UIElement.MeasureCore%2A> jako środek do zmiany layout charakterystyki miary w przypadku klasy wyprowadzonej z <xref:System.Windows.UIElement> poprzez dziedziczenie, który nie obejmuje <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1205">Therefore, you only override <xref:System.Windows.UIElement.MeasureCore%2A> as a means to alter layout measure characteristics if you derive from <xref:System.Windows.UIElement> through an inheritance that does not include <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="968fc-1206">Może to mieć miejsce, jeśli próbujesz Tworzenie własnej implementacji w [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] poziom core.</span><span class="sxs-lookup"><span data-stu-id="968fc-1206">This might be the case if you are attempting to build your own implementation on the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] core-level.</span></span> <span data-ttu-id="968fc-1207">W przeciwnym razie, jeśli są pochodząca od <xref:System.Windows.FrameworkElement>, Szablon wdrożenia miary zachowanie jest <xref:System.Windows.FrameworkElement> implementacji.<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1207">Otherwise, if you are deriving from <xref:System.Windows.FrameworkElement>, then the implementation template for Measure behavior is the <xref:System.Windows.FrameworkElement> implementation of .<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span></span>  
  
 <span data-ttu-id="968fc-1208">Należy wywołać element nadrzędny, z elementami podrzędnymi <xref:System.Windows.UIElement.Measure%2A> na poszczególne elementy podrzędne, w przeciwnym razie te elementy podrzędne nie są o rozmiarze lub uporządkowane i skutecznie znikną z układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1208">A parent element with child elements must call <xref:System.Windows.UIElement.Measure%2A> on each child, otherwise these child elements are not sized or arranged and will effectively disappear from layout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-1209">Typowe zastępowania metody <xref:System.Windows.UIElement.MeasureCore%2A> wzorcem przybliżony (nie ma wbudowanej kolekcji o nazwie `VisualChildren`; `VisualChildren` jest symbolem zastępczym reprezentującym niezależnie od kolekcji podrzędnej przechowuje nazwę elementu).</span><span class="sxs-lookup"><span data-stu-id="968fc-1209">A typical override of <xref:System.Windows.UIElement.MeasureCore%2A> follows this approximate pattern (there is not a built-in collection called `VisualChildren`; `VisualChildren` is a  placeholder that represents whatever child collection your element maintains).</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementmeasureoverride)]
 [!code-vb[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementmeasureoverride)]  
  
-   <span data-ttu-id="968fc-1210">Należy wywołać <xref:System.Windows.UIElement.Measure%2A> dla każdego elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1210">You must call <xref:System.Windows.UIElement.Measure%2A> on each child element.</span></span>  
  
-   <span data-ttu-id="968fc-1211">Ogólnie rzecz biorąc, implementacji należy pamięci podręcznej informacji dotyczących pomiarów między <xref:System.Windows.UIElement.MeasureCore%2A> i <xref:System.Windows.UIElement.ArrangeCore%2A> metoda wywołuje w tym samym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1211">Generally, your implementation should cache measurement information between the <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> method calls in the same element.</span></span>  
  
-   <span data-ttu-id="968fc-1212">Wywoływanie podstawowe implementacje <xref:System.Windows.UIElement.MeasureCore%2A> nie jest wymagana, ale może być odpowiednie, jeśli podstawowa implementacja udostępnia funkcję żądany układ.</span><span class="sxs-lookup"><span data-stu-id="968fc-1212">Calling base implementations of <xref:System.Windows.UIElement.MeasureCore%2A> is not required, but might be appropriate if the base implementation provides a desired layout capability.</span></span>  
  
-   <span data-ttu-id="968fc-1213">Wywołania <xref:System.Windows.UIElement.Measure%2A> w podrzędnych elementów należy przekazywać taki sam `availableSize` jako element nadrzędny lub podzbiór obszaru, w zależności od typu układu elementu nadrzędnego obsługuje.</span><span class="sxs-lookup"><span data-stu-id="968fc-1213">Calls to <xref:System.Windows.UIElement.Measure%2A> on child elements should pass either the same `availableSize` as the parent, or a subset of the area, depending on the type of layout the parent element supports.</span></span> <span data-ttu-id="968fc-1214">Na przykład będzie można usunąć obszar obramowania specyficzne dla elementu dopełnienie, pasek przewijania lub formant niestandardowy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1214">For example, it would be valid to remove the area for an element-specific border or padding, a scrollbar, or a custom control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="968fc-1215">Implementacje musi być w stanie przetworzyć wartość parametru <paramref name="availableSize" /> jest nieskończona.</span><span class="sxs-lookup"><span data-stu-id="968fc-1215">Implementations must be able to process a value provided for <paramref name="availableSize" /> that is infinite.</span></span> <span data-ttu-id="968fc-1216">Nieskończona wartość oznacza nie żądanych ograniczeń i skutecznie odracza wybranej miary do elementu nadrzędnego, za pośrednictwem cyklicznych wywoływanych w miarę.</span><span class="sxs-lookup"><span data-stu-id="968fc-1216">An infinite value indicates no requested constraints, and effectively defers measurement choice to the parent element, through recursive Measure calls.</span></span>  
  
<span data-ttu-id="968fc-1217">Implementacje można wziąć pod uwagę wartości podanej dla <paramref name="availableSize" /> jako ograniczenia typu nietrwałego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1217">Implementations can consider the value provided for <paramref name="availableSize" /> to be a soft constraint.</span></span> <span data-ttu-id="968fc-1218">Element podrzędny może określić większy rozmiar, nawet wtedy, gdy inne aspekty kodu aplikacji udało się ustalić, bieżący rozmiar rzeczywisty element nadrzędny.</span><span class="sxs-lookup"><span data-stu-id="968fc-1218">The child element might specify a larger size, even if other aspects of application code were able to determine the current actual size of the parent element.</span></span> <span data-ttu-id="968fc-1219">Żądanie duży rozmiar jest z Konwencją, która wskazuje, że element podrzędny sprawdza czy Twoje element nadrzędny może obsługiwać przewijanie zawartości w obrębie regionu wyświetlanie zawartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1219">The large size request is a convention that indicates that the child element is querying whether your parent element can support content scrolling within a content display region.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1220">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-1220">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1221">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.MouseDown> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-1221">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-1222">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.MouseDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1222">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-1223"><xref:System.Windows.UIElement.MouseDown> Zdarzenie jest zgłaszane w często razem z wartościami <xref:System.Windows.UIElement.MouseLeftButtonDown> lub <xref:System.Windows.UIElement.MouseRightButtonDown>, które odpowiadają naciśnij jednego z dwóch przycisków myszy standard.</span><span class="sxs-lookup"><span data-stu-id="968fc-1223">The <xref:System.Windows.UIElement.MouseDown> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="968fc-1224"><xref:System.Windows.UIElement.MouseLeftButtonDown> i <xref:System.Windows.UIElement.MouseRightButtonDown> są również zdarzenia trasowane, ale są bezpośrednie zdarzenia trasowane, a odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1224"><xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="968fc-1225">Zobacz uwagi, na <xref:System.Windows.UIElement.MouseLeftButtonDown> lub <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1225">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="968fc-1226">Niektóre formanty może być zarezerwowanymi obsługę klasy dla zdarzenia przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1226">Some controls might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="968fc-1227">Lewy przycisk myszy wciśnięty zdarzeń jest najbardziej prawdopodobne zdarzenie, aby mieć klasę, obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1227">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="968fc-1228">Klasy obsługi często oznacza bazowego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1228">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="968fc-1229">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1229">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="968fc-1230">Wszystkie inne klasy lub wystąpienia programów obsługi, które są dołączone do elementów w propagacji kierunku ku główny w drzewie interfejsu użytkownika również nie zazwyczaj są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1230">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="968fc-1231">Możesz rozwiązać ten problem, który jest opisany w poprzednim ważne i nadal otrzymywać <xref:System.Windows.UIElement.MouseDown> zdarzeń związanych z lewego przycisku myszy w dół do zdarzenia w klasie pochodnej, która ma klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="968fc-1231">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="968fc-1232">Dołącz programy obsługi dla <xref:System.Windows.UIElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="968fc-1232">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="968fc-1233">Zwróć uwagę, że ponieważ jest to zdarzenie (wersja zapoznawcza), trasy rozpoczyna się w katalogu głównym i tunele do formantu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1233">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="968fc-1234">Rejestrowanie programu obsługi w kontrolce proceduralnie przez wywołanie metody <xref:System.Windows.UIElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1234">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1235">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1235">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1236">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1236">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseDownEvent>|  
|<span data-ttu-id="968fc-1237">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1237">Routing strategy</span></span>|<span data-ttu-id="968fc-1238">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1238">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1239">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1239">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-1240">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1240">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="968fc-1241">Zastąp <xref:System.Windows.UIElement.OnMouseDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1241">Override <xref:System.Windows.UIElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1242">Identyfikuje <see cref="E:System.Windows.UIElement.MouseDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1242">Identifies the <see cref="E:System.Windows.UIElement.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1243">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1243">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1244">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1244">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1245">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1245">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1246">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1246">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1247">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1247">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1248">Występuje po umieszczeniu wskaźnika myszy granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1248">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1249"><xref:System.Windows.UIElement.MouseEnter> to, że bezpośredniej obsługi strategii routingu zdarzeń, który używa.</span><span class="sxs-lookup"><span data-stu-id="968fc-1249"><xref:System.Windows.UIElement.MouseEnter> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="968fc-1250">Zdarzenia trasowane bezpośrednie nie są zgłaszane wzdłuż trasy; Zamiast tego są są obsługiwane w tym samym elemencie gdzie są one inicjowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1250">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="968fc-1251">Jednakże umożliwiają one innych aspektów zachowania zdarzenie trasowane, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="968fc-1251">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="968fc-1252">Mimo że <xref:System.Windows.UIElement.MouseEnter> ścieżki po wejściu wskaźnika myszy w granice elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement.IsMouseOver%2A> wartość właściwości została zmieniona z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1252">Although <xref:System.Windows.UIElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="968fc-1253">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.MouseEnter> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-1253">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-1254">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.MouseEnter> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1254">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-1255">A <xref:System.Windows.Controls.Button> (lub dowolnego <xref:System.Windows.Controls.Primitives.ButtonBase> klasy pochodnej) ma obsługę natywnych <xref:System.Windows.UIElement.KeyDown> zdarzenie, gdy przycisk ma fokus, a naciśnięty klawisz spacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1255">A <xref:System.Windows.Controls.Button> (or any <xref:System.Windows.Controls.Primitives.ButtonBase> derived class) has native handling for a <xref:System.Windows.UIElement.KeyDown> event when the button has focus, and the pressed key is the space bar.</span></span> <span data-ttu-id="968fc-1256">Wywołuje natywnej obsługi <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń za pomocą przycisku jako źródło, a także przechwytuje mysz, nawet jeśli nie ma wskaźnik myszy do przenoszenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1256">The native handling raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event with the button as the source, and also captures the mouse, even though the mouse pointer does not appear to move.</span></span> <span data-ttu-id="968fc-1257">W wyniku przechwytywanie myszy <xref:System.Windows.UIElement.MouseEnter> zdarzenie jest również zgłaszane za pomocą przycisku jako źródło.</span><span class="sxs-lookup"><span data-stu-id="968fc-1257">As a result of the mouse capture, a <xref:System.Windows.UIElement.MouseEnter> event is also raised with the button as the source.</span></span> <span data-ttu-id="968fc-1258">Ogólnie rzecz biorąc, jeśli element przechwytuje mysz, następnie <xref:System.Windows.UIElement.MouseEnter> jest inicjowane, jak również <xref:System.Windows.UIElement.GotMouseCapture> i ewentualnie inne zdarzenia specyficzne dla kontrolki.</span><span class="sxs-lookup"><span data-stu-id="968fc-1258">In general, if an element captures the mouse, then <xref:System.Windows.UIElement.MouseEnter> is raised, as well as <xref:System.Windows.UIElement.GotMouseCapture> and possibly other control-specific events.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1259">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1259">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1260">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1260">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseEnterEvent>|  
|<span data-ttu-id="968fc-1261">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1261">Routing strategy</span></span>|<span data-ttu-id="968fc-1262">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-1262">Direct</span></span>|  
|<span data-ttu-id="968fc-1263">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1263">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="968fc-1264">Zastąp <xref:System.Windows.UIElement.OnMouseEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1264">Override <xref:System.Windows.UIElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1265">Identyfikuje <see cref="E:System.Windows.UIElement.MouseEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1265">Identifies the <see cref="E:System.Windows.UIElement.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1266">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1266">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1267">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1267">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1268">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1268">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1269">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1269">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1270">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1270">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1271">Występuje po opuszczeniu przez wskaźnik myszy granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1271">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1272"><xref:System.Windows.UIElement.MouseLeave> to, że bezpośredniej obsługi strategii routingu zdarzeń, który używa.</span><span class="sxs-lookup"><span data-stu-id="968fc-1272"><xref:System.Windows.UIElement.MouseLeave> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="968fc-1273">Zdarzenia trasowane bezpośrednie nie są zgłaszane wzdłuż trasy; Zamiast tego są są obsługiwane w tym samym elemencie gdzie są one inicjowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1273">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="968fc-1274">Jednakże umożliwiają one innych aspektów zachowania zdarzenie trasowane, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="968fc-1274">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="968fc-1275">Mimo że <xref:System.Windows.UIElement.MouseLeave> ścieżki, gdy wskaźnik myszy opuszcza elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement.IsMouseOver%2A> wartość właściwości została zmieniona z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1275">Although <xref:System.Windows.UIElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="968fc-1276">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.MouseLeave> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-1276">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-1277">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.MouseLeave> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1277">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1278">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1278">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1279">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1279">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeaveEvent>|  
|<span data-ttu-id="968fc-1280">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1280">Routing strategy</span></span>|<span data-ttu-id="968fc-1281">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-1281">Direct</span></span>|  
|<span data-ttu-id="968fc-1282">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1282">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="968fc-1283">Zastąp <xref:System.Windows.UIElement.OnMouseLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1283">Override <xref:System.Windows.UIElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1284">Identyfikuje <see cref="E:System.Windows.UIElement.MouseLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1284">Identifies the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1285">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1285">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1286">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1286">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1287">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1287">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1288">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1288">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1289">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1289">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1290">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-1290">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1291">Chociaż wydaje się to wykonaj propagacji trasy za pośrednictwem obrębu drzewa, faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdy <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1291">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="968fc-1292">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1292">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="968fc-1293">Dane zdarzenia tego zdarzenia udostępnia dane zdarzenia podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1293">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="968fc-1294">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.UIElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1294">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="968fc-1295">Po oznaczeniu <xref:System.Windows.UIElement.MouseLeftButtonDown> obsługi, możesz to zasadniczo oznaczanie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> obsługiwana za wszelkie dalsze detektorów trasy i we wszystkich powiązanych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1295">If you mark <xref:System.Windows.UIElement.MouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="968fc-1296">Prawdopodobnie obejmuje to zdarzenia generowane obsługi klasy takie jak <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1296">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="968fc-1297">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.UIElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="968fc-1297">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="968fc-1298">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1298">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="968fc-1299">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1299">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="968fc-1300">Niektóre klasy formantu może być zarezerwowanymi obsługę klasy dla zdarzenia przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1300">Some control classes might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="968fc-1301">Lewy przycisk myszy wciśnięty zdarzeń jest najbardziej prawdopodobne zdarzenie, aby mieć klasę, obsługa w formancie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1301">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="968fc-1302">Klasy obsługi często oznacza bazowego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1302">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="968fc-1303">Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle zgłaszane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1303">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="968fc-1304">Wszystkie inne klasy lub wystąpienia programów obsługi, które są dołączone do elementów w propagacji kierunku ku główny w drzewie interfejsu użytkownika również nie zazwyczaj są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1304">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="968fc-1305">Możesz rozwiązać ten problem, który jest opisany w poprzednim ważne i nadal otrzymywać <xref:System.Windows.UIElement.MouseLeftButtonDown> zdarzeń związanych z lewego przycisku myszy w dół do zdarzenia w klasie pochodnej, która ma klasę obsługi przy użyciu jednej z tych rozwiązań:</span><span class="sxs-lookup"><span data-stu-id="968fc-1305">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="968fc-1306">Dołącz programy obsługi dla <xref:System.Windows.UIElement.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty.</span><span class="sxs-lookup"><span data-stu-id="968fc-1306">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="968fc-1307">Zwróć uwagę, że ponieważ jest to zdarzenie (wersja zapoznawcza), trasy rozpoczyna się w katalogu głównym i tunele do formantu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1307">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="968fc-1308">Rejestrowanie programu obsługi w kontrolce proceduralnie przez wywołanie metody <xref:System.Windows.UIElement.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1308">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1309">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1309">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1310">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1310">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="968fc-1311">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1311">Routing strategy</span></span>|<span data-ttu-id="968fc-1312">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-1312">Direct</span></span>|  
|<span data-ttu-id="968fc-1313">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1313">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-1314">Zastąp <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1314">Override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1315">Identyfikuje <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1315">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1316">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1316">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1317">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1317">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1318">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1318">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1319">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1319">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1320">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1320">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1321">Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-1321">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1322">Chociaż wydaje się to wykonaj propagacji trasy za pośrednictwem obrębu drzewa, faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdy <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1322">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="968fc-1323">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1323">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="968fc-1324">Dane zdarzenia tego zdarzenia udostępnia dane zdarzenia podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1324">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="968fc-1325">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.UIElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1325">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="968fc-1326">Po oznaczeniu <xref:System.Windows.UIElement.MouseLeftButtonUp> obsługi, możesz to zasadniczo oznaczanie <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> obsługiwana za wszelkie dalsze detektorów trasy i we wszystkich powiązanych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1326">If you mark <xref:System.Windows.UIElement.MouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="968fc-1327">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.UIElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="968fc-1327">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="968fc-1328">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1328">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="968fc-1329">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1329">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1330">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1330">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1331">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1331">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="968fc-1332">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1332">Routing strategy</span></span>|<span data-ttu-id="968fc-1333">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-1333">Direct</span></span>|  
|<span data-ttu-id="968fc-1334">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1334">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-1335">Zastąp <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1335">Override <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1336">Identyfikuje <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1336">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1337">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1337">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1338">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1338">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1339">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1339">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1340">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1340">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1341">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1341">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1342">Występuje, gdy wskaźnik myszy porusza się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-1342">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1343">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.MouseMove> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-1343">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-1344">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.MouseMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1344">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1345">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1345">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1346">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1346">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseMoveEvent>|  
|<span data-ttu-id="968fc-1347">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1347">Routing strategy</span></span>|<span data-ttu-id="968fc-1348">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1348">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1349">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1349">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="968fc-1350">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1350">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="968fc-1351">Zastąp <xref:System.Windows.UIElement.OnMouseMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1351">Override <xref:System.Windows.UIElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1352">Identyfikuje <see cref="E:System.Windows.UIElement.MouseMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1352">Identifies the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1353">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1353">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1354">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1354">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1355">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1355">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1356">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1356">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1357">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1357">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1358">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-1358">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1359">Chociaż wydaje się to wykonaj propagacji trasy za pośrednictwem obrębu drzewa, faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdy <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1359">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="968fc-1360">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1360">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="968fc-1361">Dane zdarzenia tego zdarzenia udostępnia dane zdarzenia podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1361">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="968fc-1362">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.UIElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1362">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="968fc-1363">Po oznaczeniu <xref:System.Windows.UIElement.MouseRightButtonDown> obsługi, możesz to zasadniczo oznaczanie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> obsługiwana za wszelkie dalsze detektorów trasy i we wszystkich powiązanych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1363">If you mark <xref:System.Windows.UIElement.MouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="968fc-1364">Prawdopodobnie obejmuje to zdarzenia generowane obsługi klasy takie jak <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1364">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="968fc-1365">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.UIElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="968fc-1365">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="968fc-1366">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1366">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="968fc-1367">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1367">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="968fc-1368">Zdarzenia myszy w prawy przycisk często mają natywnej obsługi w scenariuszach aplikacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1368">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="968fc-1369">Na przykład prawym przyciskiem myszy w dół, może wyświetlić menu kontekstowe.</span><span class="sxs-lookup"><span data-stu-id="968fc-1369">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="968fc-1370">Zobacz [ContextMenu — Przegląd](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-1370">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1371">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1371">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1372">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1372">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="968fc-1373">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1373">Routing strategy</span></span>|<span data-ttu-id="968fc-1374">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-1374">Direct</span></span>|  
|<span data-ttu-id="968fc-1375">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1375">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-1376">Zastąp <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1376">Override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1377">Identyfikuje <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1377">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1378">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1378">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1379">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1379">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1380">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1380">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1381">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1381">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1382">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1382">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1383">Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-1383">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1384">Chociaż wydaje się to wykonaj propagacji trasy za pośrednictwem obrębu drzewa, faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdy <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1384">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="968fc-1385">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1385">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="968fc-1386">Dane zdarzenia tego zdarzenia udostępnia dane zdarzenia podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1386">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="968fc-1387">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.UIElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1387">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="968fc-1388">Po oznaczeniu <xref:System.Windows.UIElement.MouseRightButtonUp> obsługi, możesz to zasadniczo oznaczanie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> obsługiwana za wszelkie dalsze detektorów trasy i we wszystkich powiązanych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1388">If you mark <xref:System.Windows.UIElement.MouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="968fc-1389">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.UIElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="968fc-1389">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="968fc-1390">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1390">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="968fc-1391">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1391">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1392">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1392">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1393">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1393">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="968fc-1394">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1394">Routing strategy</span></span>|<span data-ttu-id="968fc-1395">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-1395">Direct</span></span>|  
|<span data-ttu-id="968fc-1396">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1396">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-1397">Zastąp <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1397">Override <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1398">Identyfikuje <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1398">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1399">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1399">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1400">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1400">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1401">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1401">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1402">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1402">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1403">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1403">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1404">Występuje po zwolnieniu dowolnego przycisku myszy nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-1404">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1405">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.MouseUp> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-1405">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-1406">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.MouseUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1406">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-1407"><xref:System.Windows.UIElement.MouseUp> Zdarzenie jest zgłaszane w często razem z wartościami <xref:System.Windows.UIElement.MouseLeftButtonUp> lub <xref:System.Windows.UIElement.MouseRightButtonUp>, które odpowiadają wersji jednej z dwóch przycisków myszy standard.</span><span class="sxs-lookup"><span data-stu-id="968fc-1407">The <xref:System.Windows.UIElement.MouseUp> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="968fc-1408"><xref:System.Windows.UIElement.MouseLeftButtonUp> i <xref:System.Windows.UIElement.MouseRightButtonUp> są również zdarzenia trasowane, ale są bezpośrednie zdarzenia trasowane, a odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1408"><xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="968fc-1409">Zobacz uwagi, na <xref:System.Windows.UIElement.MouseLeftButtonUp> lub <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1409">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1410">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1410">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1411">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1411">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseUpEvent>|  
|<span data-ttu-id="968fc-1412">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1412">Routing strategy</span></span>|<span data-ttu-id="968fc-1413">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1413">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1414">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1414">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-1415">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1415">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="968fc-1416">Zastąp <xref:System.Windows.UIElement.OnMouseUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1416">Override <xref:System.Windows.UIElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1417">Identyfikuje <see cref="E:System.Windows.UIElement.MouseUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1417">Identifies the <see cref="E:System.Windows.UIElement.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1418">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1418">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1419">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1419">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1420">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1420">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1421">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1421">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1422">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1422">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1423">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-1423">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1424">Zespół lub myszy przechwytywania pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli zostanie wyświetlony <xref:System.Windows.UIElement.MouseWheel> zdarzeń z elementu wąsko zdefiniowany lub przechwycone, wskaźnik myszy może mieć w rzeczywistości za pośrednictwem innego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1424">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.UIElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="968fc-1425">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.MouseWheel> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-1425">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseWheel> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-1426">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.MouseWheel> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1426">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-1427">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-1427">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-1428">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-1428">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseWheelEvent>|  
|<span data-ttu-id="968fc-1429">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-1429">Routing strategy</span></span>|<span data-ttu-id="968fc-1430">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-1430">Bubbling</span></span>|  
|<span data-ttu-id="968fc-1431">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-1431">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="968fc-1432">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1432">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="968fc-1433">Zastąp <xref:System.Windows.UIElement.OnMouseWheel%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1433">Override <xref:System.Windows.UIElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-1434">Identyfikuje <see cref="E:System.Windows.UIElement.MouseWheel" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1434">Identifies the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1435">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1435">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-1436">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1436">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-1437">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1437">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-1438">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1438">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-1439">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1439">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="uIElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="968fc-1440">Żądanie przechodzenia, który zawiera właściwość, która wskazuje trybie przechodzenia w istniejących kolejność tabulacji, lub kierunku, aby przenieść wizualnie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1440">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="968fc-1441">Próbuje przenieść fokus z tego elementu do innego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1441">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="968fc-1442">Kierunek, aby przenieść fokus jest określona przez kierunku orientacji, jest interpretowany w ramach organizacji visual element nadrzędny tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1442">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns><span data-ttu-id="968fc-1443"><see langword="true" /> Jeśli żądana przechodzenie została wykonana; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-1443"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1444">Upewnij się, że wartość zwracana przez tę metodę.</span><span class="sxs-lookup"><span data-stu-id="968fc-1444">Make sure you check the return value of this method.</span></span> <span data-ttu-id="968fc-1445">Zwracana wartość wynosząca `false` może zostać zwrócona, jeśli podczas przechodzenia działa w tabulatora, który jest definiowany przez kompozycji formantu, a żądania przechodzenia nie zażądał opakowywania.</span><span class="sxs-lookup"><span data-stu-id="968fc-1445">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit&#xA;override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="uIElement.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1446">Dane zdarzenia do zdarzenia klucza dostępu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1446">The event data to the access key event.</span></span> <span data-ttu-id="968fc-1447">Raporty danych zdarzeń, który klucz został wywołany i wskazują, czy <see cref="T:System.Windows.Input.AccessKeyManager" /> obiekt, który kontroluje, wysyłając te zdarzenia również wysyłane to wywołanie klucza dostępu do innych elementów.</span><span class="sxs-lookup"><span data-stu-id="968fc-1447">The event data reports which key was invoked, and indicate whether the <see cref="T:System.Windows.Input.AccessKeyManager" /> object that controls the sending of these events also sent this access key invocation to other elements.</span></span></param>
        <summary><span data-ttu-id="968fc-1448">Zapewnia obsługę klasy dla przypadku klucz dostępu, który ma znaczenie dla tego elementu jest wywoływana.</span><span class="sxs-lookup"><span data-stu-id="968fc-1448">Provides class handling for when an access key that is meaningful for this element is invoked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1449">Nie ma żadnego rzeczywiste zdarzenia AccessKey w <xref:System.Windows.UIElement> klasy lub w innym miejscu, które mogą zgłosić lub dołączyć programy obsługi dla.</span><span class="sxs-lookup"><span data-stu-id="968fc-1449">There is no actual AccessKey event in the <xref:System.Windows.UIElement> class, or elsewhere, which you can raise or attach handlers for.</span></span> <span data-ttu-id="968fc-1450">Zamiast tego zdarzenia jest pochodzi za pośrednictwem klasy dedykowanych Menedżera <xref:System.Windows.Input.AccessKeyManager>, który po przetwarza wszystkie dane wejściowe, aby wyszukać klucze dostępu, które mają zastosowanie do całego modelu danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1450">Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="968fc-1451">Domyślna implementacja tej metody w <see cref="T:System.Windows.UIElement" /> zestawy za pomocą klawiatury fokus do tego elementu (przez wywołanie metody <see cref="M:System.Windows.UIElement.Focus" />).</span><span class="sxs-lookup"><span data-stu-id="968fc-1451">The default implementation of this method in <see cref="T:System.Windows.UIElement" /> sets keyboard focus to this element (by calling <see cref="M:System.Windows.UIElement.Focus" />).</span></span> <span data-ttu-id="968fc-1452">Implementacje powinny widoczny przy obsłudze często to zachowanie, jeśli są one focusable, ponieważ jest to oczekiwane zachowanie dla scenariuszy ułatwień dostępu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1452">Implementations should perpetuate this behavior if they are focusable, because it is an expected behavior for accessibility scenarios.</span></span> <span data-ttu-id="968fc-1453">Pamiętaj, że podstawowa implementacja nie działają z danymi przekazane zdarzenia i zgłasza nie dalszych zdarzeń; po prostu ustawia fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-1453">Note that the base implementation does nothing with the passed event data and raises no further event; it just sets the focus.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit&#xA;override this.OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit" Usage="uIElement.OnChildDesiredSizeChanged child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="968fc-1454">Element podrzędny, który jest zmieniany.</span><span class="sxs-lookup"><span data-stu-id="968fc-1454">The child element that is being resized.</span></span></param>
        <summary><span data-ttu-id="968fc-1455">Obsługuje układ zachowanie, gdy zmieniany jest rozmiar elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1455">Supports layout behavior when a child element is resized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1456">Ta metoda nie jest zazwyczaj wywoływana przez kod aplikacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1456">This method is typically not called by your application code.</span></span> <span data-ttu-id="968fc-1457">Jest narażony, więc ten element pochodny klasy wprowadzić dodatkowe kontrole stanu układu prawdopodobnie nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1457">It is exposed so that derived element classes can make further checks on their own possibly invalid layout state.</span></span> <span data-ttu-id="968fc-1458">Klasy może również próbować optymalizacje, aby zminimalizować czas przetwarzania przekazanie układu, w oparciu o zmiany rozmiaru do elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1458">Classes could also attempt optimizations to minimize the processing time for a layout pass based on size changes to child elements.</span></span> <span data-ttu-id="968fc-1459">Przykład pochodne klasy elementu, który implementuje <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> jest <xref:System.Windows.Controls.Grid> kontroli.</span><span class="sxs-lookup"><span data-stu-id="968fc-1459">An example derived element class that implements <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> is the <xref:System.Windows.Controls.Grid> control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="968fc-1460"><see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> Metoda ma Domyślna implementacja wywołania metody <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> na siebie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1460">The <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> method has the default implementation of calling <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> on itself.</span></span> <span data-ttu-id="968fc-1461">Typowa implementacja będzie: wykonaj niezależnie od optymalizacji własnych element obsługuje, a następnie zwykle wywołują podstawowy <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> z co najmniej jednej z gałęzi kodu (jedna wskazany stan "zanieczyszczony" na własne miary, buforowanie logiki).</span><span class="sxs-lookup"><span data-stu-id="968fc-1461">A typical implementation would be: do whatever optimization your own element supports, and then typically call base <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> from at least one of the code branches (the one that indicated "dirty" state per your own measure caching logic).</span></span>  
  
<span data-ttu-id="968fc-1462">Ta metoda jest wywoływana tylko w podczas przetwarzania układ, jeśli jest podrzędny siebie, która pochodzi zmiany rozmiaru.</span><span class="sxs-lookup"><span data-stu-id="968fc-1462">This method is only called in the layout processing if it was the child itself that originated the size changes.</span></span> <span data-ttu-id="968fc-1463">W przeciwnym razie, jeśli element nadrzędny inicjuje <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> przekazać, zgodnie z regułami systemu układ obiektu nadrzędnego jest obliczanie układu już.</span><span class="sxs-lookup"><span data-stu-id="968fc-1463">Otherwise, if the parent element initiates the <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> pass, according to the layout system rules, the parent is recalculating layout already.</span></span> <span data-ttu-id="968fc-1464">System układu przetwarza układ zgodnie z kolejnością podrzędnej do nadrzędnej, dzięki czemu nie powróć do rozmiaru elementu nadrzędnego z wywołań układu elementu podrzędnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1464">The layout system processes layout in the order of child-to-parent, so no return to parent element sizing from the child element layout calls is necessary.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="uIElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-1465">Zwraca swoiste dla klas <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> niedotyczące [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastruktury.</span><span class="sxs-lookup"><span data-stu-id="968fc-1465">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="968fc-1466">Konkretny typ <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1466">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="968fc-1467">Implementacja tej metody jest zwykle wywołanie konstruktora określonego <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji i zwracanie go jako wartość zwracaną.</span><span class="sxs-lookup"><span data-stu-id="968fc-1467">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span></span>  
  
<span data-ttu-id="968fc-1468">Wszystkie <see cref="T:System.Windows.UIElement" /> klas pochodnych należy zaimplementować tę metodę w celu zapewnienia ich własnych określonych <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji w celu [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastruktury.</span><span class="sxs-lookup"><span data-stu-id="968fc-1468">All <see cref="T:System.Windows.UIElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span> <span data-ttu-id="968fc-1469">Szczegółowe informacje na temat implementowania tego wzorca, <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-1469">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1470"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1470">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1471">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1471">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1472">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1472">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1473">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1473">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1474">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1474">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1475">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1475">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1476">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1476">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1477">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1477">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1478">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1478">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1479">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1479">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1480">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1480">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1481">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1481">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1482"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1482">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1483">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragLeave" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1483">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1484">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1484">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1485">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1485">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1486">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1486">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1487">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1487">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1488">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1488">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1489">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1489">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1490">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1490">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1491">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1491">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1492">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1492">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1493">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1493">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1494"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1494">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1495">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragOver" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1495">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1496">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1496">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1497">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1497">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1498">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1498">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1499">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1499">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1500">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1500">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1501">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1501">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1502">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1502">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1503">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1503">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1504">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1504">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1505">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1505">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1506"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1506">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1507">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1507">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1508">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1508">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1509">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1509">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1510">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1510">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1511">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1511">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1512">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1512">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1513">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1513">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1514">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1514">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1515">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1515">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1516">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1516">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1517">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1517">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1518"><see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1518">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1519">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.GiveFeedback" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1519">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1520">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1520">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1521">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1521">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1522">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1522">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1523">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1523">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1524">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1524">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1525">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1525">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1526">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1526">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1527">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1527">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1528">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1528">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1529">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1529">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1530">Element <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1530">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="968fc-1531">Te dane zdarzeń musi zawierać identyfikator <see cref="E:System.Windows.UIElement.GotFocus" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1531">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="968fc-1532">Wywołuje <see cref="E:System.Windows.UIElement.GotFocus" /> zdarzenia trasowanego przy użyciu podanych danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1532">Raises the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1533">Tej metody, mimo że jest to wirtualne, mają domyślną implementację, która wywołuje zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1533">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="968fc-1534">To na \* implementacja metody jest przeznaczona do podniesienia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby wygenerować zdarzenie po <xref:System.Windows.UIElement.IsFocused%2A> zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1534">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="968fc-1535"><xref:System.Windows.UIElement.OnGotFocus%2A> Implementacji różni się od innych [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] na \* implementacji, które tylko zapewniają wygodny sposób, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1535">The <xref:System.Windows.UIElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="968fc-1536">Jeśli nie masz zamierzone i nietypowe potrzeby nie zgłaszać zdarzenia fokusu, upewnij się, że Twoja implementacja wywołuje implementację podstawową.</span><span class="sxs-lookup"><span data-stu-id="968fc-1536">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="968fc-1537">W przeciwnym razie <see cref="E:System.Windows.UIElement.GotFocus" /> zdarzenie nie jest wywoływane podczas operacji typowy użytkownik, które zwykle ustawić fokus na ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-1537">Otherwise, the <see cref="E:System.Windows.UIElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="968fc-1538">Jeśli nie zamierzasz swoje element ma być focusable, użytkownik może uniemożliwić elementu focusable, ustawiając <see cref="P:System.Windows.UIElement.Focusable" /> do <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-1538">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span></span></para></block>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1539"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1539">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1540">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1540">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1541">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1541">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1542">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1542">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1543">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1543">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1544">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1544">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1545">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1545">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1546">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1546">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1547">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1547">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1548">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1548">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1549">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1549">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1550">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1550">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1551"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1551">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1552">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1552">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1553">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1553">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1554">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1554">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1555">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1555">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1556">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1556">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1557">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1557">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1558">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1558">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1559">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1559">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1560">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1560">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1561">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1561">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1562">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1562">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1563"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1563">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1564">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1564">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1565">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1565">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1566">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1566">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1567">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1567">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1568">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1568">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1569">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1569">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1570">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1570">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1571">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1571">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1572">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1572">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1573">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1573">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1574">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1574">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1575">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1575">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1576">Zapewnia obsługę klasy dla <see cref="E:System.Windows.UIElement.GotTouchCapture" /> zdarzenia trasowane, które występuje, gdy touch są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1576">Provides class handling for the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1577"><xref:System.Windows.UIElement.OnGotTouchCapture%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1577">The <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-1578">Zastąp <xref:System.Windows.UIElement.OnGotTouchCapture%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.GotTouchCapture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1578">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.GotTouchCapture> event.</span></span> <span data-ttu-id="968fc-1579">Pamiętaj wywołać klasy bazowej <xref:System.Windows.UIElement.OnGotTouchCapture%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1579">Be sure to call the base class' <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1580"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1580">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1581">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1581">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="968fc-1582">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1582">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1583">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsKeyboardFocused%2A> zmiany właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-1583">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="968fc-1584">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="968fc-1584">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="968fc-1585">A następnie <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1585">Then the <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="968fc-1586">Należy zauważyć, że <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1586">Notice that the  <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="968fc-1587">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1587">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="968fc-1588">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1588">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1589">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1589">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="968fc-1590">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="968fc-1590">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1591">Element <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1591">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1592">Wywoływane tuż przed <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> zdarzenie jest wywoływane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-1592">Invoked just before the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="968fc-1593">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1593">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1594">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> zmiany właściwości zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-1594">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> dependency property changes .</span></span> <span data-ttu-id="968fc-1595">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="968fc-1595">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="968fc-1596">A następnie <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1596">Then the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="968fc-1597">Należy zauważyć, że <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1597">Notice that the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="968fc-1598">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1598">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="968fc-1599">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1599">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1600">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1600">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="968fc-1601">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="968fc-1601">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1602"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1602">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1603">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1603">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="968fc-1604">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1604">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1605">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsMouseCaptured%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1605">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="968fc-1606">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="968fc-1606">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="968fc-1607">A następnie <xref:System.Windows.UIElement.IsMouseCapturedChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1607">Then the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="968fc-1608">Należy zauważyć, że <xref:System.Windows.UIElement.IsMouseCapturedChanged> zdarzenie nie jest zdarzenie trasowane; W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1608">Notice that the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is not a routed event; Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="968fc-1609">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1609">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1610">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1610">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="968fc-1611">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="968fc-1611">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1612">Element <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1612">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1613">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1613">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="968fc-1614">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1614">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="968fc-1615">Tej metody wirtualnej jest wywoływane, gdy wartość <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1615">This virtual method is raised when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="968fc-1616">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="968fc-1616">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="968fc-1617">A następnie <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1617">Then the <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="968fc-1618">Należy zauważyć, że zdarzenie nie jest zdarzenie trasowane; W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1618">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
<span data-ttu-id="968fc-1619">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1619">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1620">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1620">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="968fc-1621">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="968fc-1621">You may call base either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1622"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1622">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1623">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1623">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="968fc-1624">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1624">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1625">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1625">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="968fc-1626">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="968fc-1626">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="968fc-1627">A następnie <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1627">Then the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="968fc-1628">Należy zauważyć, że <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1628">Notice that the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="968fc-1629">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1629">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="968fc-1630">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1630">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1631">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1631">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="968fc-1632">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="968fc-1632">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1633">Element <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1633">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1634">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1634">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="968fc-1635">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1635">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1636">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsStylusCaptured%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1636">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="968fc-1637">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="968fc-1637">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="968fc-1638">A następnie <xref:System.Windows.UIElement.IsStylusCapturedChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1638">Then the <xref:System.Windows.UIElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="968fc-1639">Należy zauważyć, że zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1639">Notice that the event is not a routed event.</span></span> <span data-ttu-id="968fc-1640">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1640">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="968fc-1641">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1641">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1642">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1642">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="968fc-1643">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="968fc-1643">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1644"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1644">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1645">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1645">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="968fc-1646">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1646">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1647">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1647">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="968fc-1648">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="968fc-1648">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="968fc-1649">A następnie <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1649">Then the <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="968fc-1650">Należy zauważyć, że zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1650">Notice that the event is not a routed event.</span></span> <span data-ttu-id="968fc-1651">W związku z tym, nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1651">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="968fc-1652">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1652">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1653">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1653">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="968fc-1654">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="968fc-1654">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1655"><see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1655">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1656">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1656">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="968fc-1657">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1657">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1658">Tej metody wirtualnej jest wywoływane, gdy wartość <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> właściwość zależności zmieniania jego wartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1658">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="968fc-1659">Metoda wirtualna jest uruchamiany w pierwszy i można manipulować danymi zdarzeń zgodnie z potrzebami.</span><span class="sxs-lookup"><span data-stu-id="968fc-1659">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="968fc-1660">A następnie <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> zdarzenie jest zgłaszane w tym samym wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1660">Then the <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="968fc-1661">Należy zauważyć, że zdarzenie nie jest zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1661">Notice that the event is not a routed event.</span></span> <span data-ttu-id="968fc-1662">W związku z tym nie można oznaczyć je jako obsłużony, klasy programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1662">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="968fc-1663">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1663">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1664">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1664">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="968fc-1665">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="968fc-1665">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1666"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1666">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1667">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1667">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1668">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1668">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1669">Naciśnięć klawiszy są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1669">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="968fc-1670">Inne funkcje programowania, które zależą od naciśnięć klawiszy, na przykład powiązania danych wejściowych i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest ona uwidoczniona jako ogólne naciśnięcia klawisza.</span><span class="sxs-lookup"><span data-stu-id="968fc-1670">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="968fc-1671">Te dane wejściowe funkcji systemu oznaczyć zdarzenia jako obsłużony, następnie <xref:System.Windows.UIElement.OnKeyDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="968fc-1671">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="968fc-1672">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1672">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1673">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1673">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1674">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1674">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1675">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1675">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1676">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1676">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1677">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1677">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1678">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1678">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1679">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1679">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1680">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1680">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1681"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1681">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1682">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1682">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1683">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1683">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1684">Naciśnięć klawiszy są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1684">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="968fc-1685">Inne funkcje programowania, które zależą od naciśnięć klawiszy, na przykład powiązania danych wejściowych i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest ona uwidoczniona jako ogólne naciśnięcia klawisza.</span><span class="sxs-lookup"><span data-stu-id="968fc-1685">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="968fc-1686">Te dane wejściowe funkcji systemu oznaczyć zdarzenia jako obsłużony, następnie <xref:System.Windows.UIElement.OnKeyUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="968fc-1686">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="968fc-1687">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1687">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1688">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1688">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1689">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1689">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1690">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1690">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1691">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1691">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1692">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1692">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1693">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1693">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1694">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1694">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1695">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1695">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1696">Element <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1696">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="968fc-1697">Te dane zdarzeń musi zawierać identyfikator <see cref="E:System.Windows.UIElement.LostFocus" /> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1697">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="968fc-1698">Wywołuje <see cref="E:System.Windows.UIElement.LostFocus" /> zdarzenia trasowanego przy użyciu dane zdarzenia, które są dostarczane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1698">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1699">Tej metody, mimo że jest to wirtualne, mają domyślną implementację, która wywołuje zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1699">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="968fc-1700">To na \* implementacja metody jest przeznaczona do podniesienia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby wygenerować zdarzenie po <xref:System.Windows.UIElement.IsFocused%2A> zmiany wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="968fc-1700">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="968fc-1701">Ta implementacja różni się od innych [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] na \* implementacji, które tylko zapewniają wygodny sposób, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1701">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="968fc-1702">Jeśli nie masz zamierzone i nietypowe potrzeby nie zgłaszać zdarzenia fokusu, upewnij się, że Twoja implementacja wywołuje implementację podstawową.</span><span class="sxs-lookup"><span data-stu-id="968fc-1702">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="968fc-1703">W przeciwnym razie <see cref="E:System.Windows.UIElement.LostFocus" /> zdarzenie nie jest wywoływane podczas operacji typowy użytkownik, które zwykle ustawić fokus na ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-1703">Otherwise, the <see cref="E:System.Windows.UIElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="968fc-1704">Jeśli nie zamierzasz swoje element ma być focusable, użytkownik może uniemożliwić elementu focusable, ustawiając <see cref="P:System.Windows.UIElement.Focusable" /> do <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-1704">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1705"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1705">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1706">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1706">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1707">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1707">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1708">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1708">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1709">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1709">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1710">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1710">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1711">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1711">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1712">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1712">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1713">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1713">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1714">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1714">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1715">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1715">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1716">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1716">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1717"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1717">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1718">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1718">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1719">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1719">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1720">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1720">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1721">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1721">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1722">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1722">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1723">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1723">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1724">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1724">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1725">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1725">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1726">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1726">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1727">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1727">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1728">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1728">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1729"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1729">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1730">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1730">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1731">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1731">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1732">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1732">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1733">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1733">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1734">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1734">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1735">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1735">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1736">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1736">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1737">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1737">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1738">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1738">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1739">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1739">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1740">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1740">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1741">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1741">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1742">Zapewnia obsługę klasy dla <see cref="E:System.Windows.UIElement.LostTouchCapture" /> zdarzenie trasowane, który występuje, gdy ten element utraci Przechwytywanie touch.</span><span class="sxs-lookup"><span data-stu-id="968fc-1742">Provides class handling for the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1743"><xref:System.Windows.UIElement.OnLostTouchCapture%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1743">The <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-1744">Zastąp <xref:System.Windows.UIElement.OnLostTouchCapture%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.LostTouchCapture> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1744">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.LostTouchCapture> event.</span></span> <span data-ttu-id="968fc-1745">Pamiętaj wywołać klasy bazowej <xref:System.Windows.UIElement.OnLostTouchCapture%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1745">Be sure to call the base class' <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit&#xA;override this.OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit" Usage="uIElement.OnManipulationBoundaryFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1746">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1746">The data for the event.</span></span></param>
        <summary><span data-ttu-id="968fc-1747">Wywoływane, gdy <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1747">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1748"><xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1748">The <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-1749">Zastąp <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1749">Override <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event.</span></span> <span data-ttu-id="968fc-1750">Pamiętaj wywołać <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> metody klasy bazowej, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1750">Be sure to call the <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationCompleted (System.Windows.Input.ManipulationCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationCompleted(class System.Windows.Input.ManipulationCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationCompleted (e As ManipulationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationCompleted(System::Windows::Input::ManipulationCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationCompleted : System.Windows.Input.ManipulationCompletedEventArgs -&gt; unit&#xA;override this.OnManipulationCompleted : System.Windows.Input.ManipulationCompletedEventArgs -&gt; unit" Usage="uIElement.OnManipulationCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1751">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1751">The data for the event.</span></span></param>
        <summary><span data-ttu-id="968fc-1752">Wywoływane, gdy <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1752">Called when the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1753"><xref:System.Windows.UIElement.OnManipulationCompleted%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1753">The <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-1754">Zastąp <xref:System.Windows.UIElement.OnManipulationCompleted%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.ManipulationCompleted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1754">Override <xref:System.Windows.UIElement.OnManipulationCompleted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationCompleted> event.</span></span> <span data-ttu-id="968fc-1755">Pamiętaj wywołać <xref:System.Windows.UIElement.OnManipulationCompleted%2A> metody klasy bazowej, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1755">Be sure to call the <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationDelta">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationDelta (System.Windows.Input.ManipulationDeltaEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationDelta(class System.Windows.Input.ManipulationDeltaEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationDelta (e As ManipulationDeltaEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationDelta(System::Windows::Input::ManipulationDeltaEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationDelta : System.Windows.Input.ManipulationDeltaEventArgs -&gt; unit&#xA;override this.OnManipulationDelta : System.Windows.Input.ManipulationDeltaEventArgs -&gt; unit" Usage="uIElement.OnManipulationDelta e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationDeltaEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1756">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1756">The data for the event.</span></span></param>
        <summary><span data-ttu-id="968fc-1757">Wywoływane, gdy <see cref="E:System.Windows.UIElement.ManipulationDelta" /> wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1757">Called when the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1758"><xref:System.Windows.UIElement.OnManipulationDelta%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1758">The <xref:System.Windows.UIElement.OnManipulationDelta%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-1759">Zastąp <xref:System.Windows.UIElement.OnManipulationDelta%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.ManipulationDelta> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1759">Override <xref:System.Windows.UIElement.OnManipulationDelta%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="968fc-1760">Pamiętaj wywołać <xref:System.Windows.UIElement.OnManipulationDelta%2A> metody klasy bazowej, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1760">Be sure to call the <xref:System.Windows.UIElement.OnManipulationDelta%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationInertiaStarting (System.Windows.Input.ManipulationInertiaStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationInertiaStarting(class System.Windows.Input.ManipulationInertiaStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationInertiaStarting (e As ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationInertiaStarting(System::Windows::Input::ManipulationInertiaStartingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationInertiaStarting : System.Windows.Input.ManipulationInertiaStartingEventArgs -&gt; unit&#xA;override this.OnManipulationInertiaStarting : System.Windows.Input.ManipulationInertiaStartingEventArgs -&gt; unit" Usage="uIElement.OnManipulationInertiaStarting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationInertiaStartingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1761">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1761">The data for the event.</span></span></param>
        <summary><span data-ttu-id="968fc-1762">Wywoływane, gdy <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1762">Called when the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1763"><xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1763">The <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-1764">Zastąp <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.ManipulationInertiaStarting> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1764">Override <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event.</span></span> <span data-ttu-id="968fc-1765">Pamiętaj wywołać <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> metody klasy bazowej, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1765">Be sure to call the <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted (System.Windows.Input.ManipulationStartedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted(class System.Windows.Input.ManipulationStartedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted (e As ManipulationStartedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted(System::Windows::Input::ManipulationStartedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarted : System.Windows.Input.ManipulationStartedEventArgs -&gt; unit&#xA;override this.OnManipulationStarted : System.Windows.Input.ManipulationStartedEventArgs -&gt; unit" Usage="uIElement.OnManipulationStarted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1766">Dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1766">The data for the event.</span></span></param>
        <summary><span data-ttu-id="968fc-1767">Wywoływane, gdy <see cref="E:System.Windows.UIElement.ManipulationStarted" /> wystąpi zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1767">Called when the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1768"><xref:System.Windows.UIElement.OnManipulationStarted%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1768">The <xref:System.Windows.UIElement.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-1769">Zastąp <xref:System.Windows.UIElement.OnManipulationStarted%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.ManipulationStarted> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1769">Override <xref:System.Windows.UIElement.OnManipulationStarted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarted> event.</span></span> <span data-ttu-id="968fc-1770">Pamiętaj wywołać <xref:System.Windows.UIElement.OnManipulationStarted%2A> metody klasy bazowej, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1770">Be sure to call the <xref:System.Windows.UIElement.OnManipulationStarted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarting (System.Windows.Input.ManipulationStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarting(class System.Windows.Input.ManipulationStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarting (e As ManipulationStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarting(System::Windows::Input::ManipulationStartingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarting : System.Windows.Input.ManipulationStartingEventArgs -&gt; unit&#xA;override this.OnManipulationStarting : System.Windows.Input.ManipulationStartingEventArgs -&gt; unit" Usage="uIElement.OnManipulationStarting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1771">Element <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1771">A <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1772">Zapewnia obsługę klasy dla <see cref="E:System.Windows.UIElement.ManipulationStarting" /> utworzone zdarzenie trasowane, gdy następuje procesora manipulacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1772">Provides class handling for the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event that occurs when the manipulation processor is first created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1773"><xref:System.Windows.UIElement.OnManipulationStarting%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1773">The <xref:System.Windows.UIElement.OnManipulationStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-1774">Zastąp <xref:System.Windows.UIElement.OnManipulationStarting%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.ManipulationStarting> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1774">Override <xref:System.Windows.UIElement.OnManipulationStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span> <span data-ttu-id="968fc-1775">Pamiętaj wywołać klasy bazowej <xref:System.Windows.UIElement.OnManipulationStarting%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1775">Be sure to call the base class' <xref:System.Windows.UIElement.OnManipulationStarting%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1776"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1776">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="968fc-1777">Te dane zdarzeń raporty szczegółowe informacje o przycisku myszy, który został naciśnięty i obsługiwanego stanu.</span><span class="sxs-lookup"><span data-stu-id="968fc-1777">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="968fc-1778">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1778">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1779">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1779">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1780">Akcje przycisków myszy również są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1780">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="968fc-1781">Inne funkcje programowania, które polegają na przycisku myszy, takich jak dane wejściowe i polecenia powiązania, może wywołać programy obsługi dla akcji, zanim jest ona uwidoczniona jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="968fc-1781">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="968fc-1782">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń jako obsłużony, <xref:System.Windows.UIElement.OnMouseDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="968fc-1782">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="968fc-1783">Jeśli używasz tej obsługi klasy do oznaczenia zdarzeń jako obsłużony, możesz mogłoby to wpłynąć na następujących zdarzeń: <xref:System.Windows.UIElement.MouseLeftButtonDown> i <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1783">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="968fc-1784">Jedną z tych zdarzeń mogą być wywoływane na elemencie odbieranie po <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> została odebrana.</span><span class="sxs-lookup"><span data-stu-id="968fc-1784">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="968fc-1785">Po oznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi subevents nadal są wywoływane; jednak przekazać obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1785">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="968fc-1786">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie użyć wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` Aby dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1786">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="968fc-1787">Funkcje obsługi klas również nie są wywoływane, chyba że te funkcje obsługi klas zostały zarejestrowane przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpis z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-1787">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="968fc-1788">Obsługa <xref:System.Windows.UIElement.OnMouseDown%2A>, są obszaru obsługi swojej klasy uwzględnione wszystkie możliwe myszy szczegółów akcji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1788">By handling <xref:System.Windows.UIElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="968fc-1789">To zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1789">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="968fc-1790">Wszystkich zdarzeń bezpośrednie specyficznych dla przycisku ma także wirtualnym na \* metody. należy rozważyć, czy te funkcje obsługi klas specyficznych dla przycisku zastępowanie może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1790">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="968fc-1791">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1791">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1792">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1792">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1793">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1793">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1794">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1794">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1795">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1795">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1796">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1796">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1797">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1797">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1798">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1798">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1799">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1799">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1800"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1800">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1801">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1801">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="968fc-1802">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1802">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1803">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1803">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1804">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1804">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="968fc-1805">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="968fc-1805">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="968fc-1806">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1806">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1807">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego, za pomocą strategii routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1807">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="968fc-1808">Oznaczanie zdarzenia jako obsłużony, nadal jest użyteczne w celu zapobiegania obsługi typowych wystąpienia (te, które nie należy określać `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1808">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1809"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1809">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1810">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1810">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="968fc-1811">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1811">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1812">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1812">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1813">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1813">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="968fc-1814">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="968fc-1814">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="968fc-1815">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1815">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1816">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego, za pomocą strategii routingu bezpośredniego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1816">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="968fc-1817">Oznaczanie zdarzenia jako obsłużony, nadal jest użyteczne w celu zapobiegania obsługi typowych wystąpienia (te, które nie należy określać `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1817">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1818"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1818">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="968fc-1819">Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1819">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="968fc-1820">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> trasowane zdarzenie jest zgłaszane w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1820">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="968fc-1821">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1821">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1822"><xref:System.Windows.UIElement.MouseLeftButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="968fc-1822">The <xref:System.Windows.UIElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="968fc-1823"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowany bąbelków, a każda <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1823"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="968fc-1824">Mimo że można oznaczyć <xref:System.Windows.UIElement.MouseLeftButtonDown> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1824">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="968fc-1825">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1825">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="968fc-1826">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="968fc-1826">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="968fc-1827">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="968fc-1827">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="968fc-1828">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1828">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="968fc-1829">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1829">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="968fc-1830">Alternatywnie mogą przesłaniać tę metodę w celu zmiany obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1830">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="968fc-1831">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="968fc-1831">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="968fc-1832">Nie można wywołać podstawowej wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klas nadrzędnych, które chcą również wywołać <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1832">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="968fc-1833">Na przykład może pochodzić z <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania implementację podstawową; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1833">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1834"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1834">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="968fc-1835">Dane zdarzenia raportów zwolnienie lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1835">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="968fc-1836">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1836">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1837">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1837">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1838"><xref:System.Windows.UIElement.MouseLeftButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="968fc-1838">The <xref:System.Windows.UIElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="968fc-1839"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowany bąbelków, a każda <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1839"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="968fc-1840">Mimo że można oznaczyć <xref:System.Windows.UIElement.MouseLeftButtonUp> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1840">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="968fc-1841">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1841">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="968fc-1842">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="968fc-1842">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="968fc-1843">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="968fc-1843">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="968fc-1844">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1844">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="968fc-1845">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1845">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1846"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1846">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1847">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1847">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1848">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1848">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1849">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1849">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1850">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1850">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1851">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1851">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1852">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1852">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1853">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1853">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1854">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1854">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1855">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1855">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1856">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1856">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1857">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1857">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1858"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1858">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="968fc-1859">Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1859">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="968fc-1860">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1860">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1861">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1861">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1862"><xref:System.Windows.UIElement.MouseRightButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="968fc-1862">The <xref:System.Windows.UIElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="968fc-1863"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowany bąbelków, a każda <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1863"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="968fc-1864">Mimo że można oznaczyć <xref:System.Windows.UIElement.MouseRightButtonDown> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1864">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="968fc-1865">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1865">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="968fc-1866">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="968fc-1866">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="968fc-1867">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="968fc-1867">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="968fc-1868">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1868">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="968fc-1869">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1869">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="968fc-1870">Alternatywnie mogą przesłaniać tę metodę w celu zmiany obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1870">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="968fc-1871">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="968fc-1871">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="968fc-1872">Nie można wywołać podstawowej wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klas nadrzędnych, które chcą również wywołać <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1872">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="968fc-1873">Na przykład może pochodzić z <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> w klasie pochodnej bez wywoływania bazy; jednak to zastąpienie powoduje wyłączenie kontekstu menu usługi na kontrolki, które są dostępne w ramach programu <xref:System.Windows.Controls.Control> zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="968fc-1873">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1874"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1874">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="968fc-1875">Dane zdarzenia raportów zwolnienie prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1875">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="968fc-1876">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1876">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1877">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1877">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1878"><xref:System.Windows.UIElement.MouseRightButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="968fc-1878">The <xref:System.Windows.UIElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="968fc-1879"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowany bąbelków, a każda <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1879"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="968fc-1880">Mimo że można oznaczyć <xref:System.Windows.UIElement.MouseRightButtonUp> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1880">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="968fc-1881">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1881">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="968fc-1882">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="968fc-1882">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="968fc-1883">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="968fc-1883">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="968fc-1884">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1884">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="968fc-1885">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1885">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1886"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1886">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="968fc-1887">Dane zdarzenia raportów, czy przycisk myszy został wydany.</span><span class="sxs-lookup"><span data-stu-id="968fc-1887">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="968fc-1888">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1888">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1889">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1889">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1890">Akcje przycisków myszy również są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-1890">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="968fc-1891">Inne funkcje programowania, które polegają na przycisku myszy, takich jak dane wejściowe i polecenia powiązania, może wywołać programy obsługi dla akcji, zanim jest ona uwidoczniona jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="968fc-1891">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="968fc-1892">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń jako obsłużony, <xref:System.Windows.UIElement.OnMouseUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="968fc-1892">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="968fc-1893">Jeśli używasz tej obsługi klasy do oznaczenia zdarzeń jako obsłużony, możesz mogłoby to wpłynąć na następujących zdarzeń: <xref:System.Windows.UIElement.MouseLeftButtonUp> i <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-1893">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="968fc-1894">Jedną z tych zdarzeń może zostać wywołane na odbieranie elementu po <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> została odebrana.</span><span class="sxs-lookup"><span data-stu-id="968fc-1894">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="968fc-1895">Po oznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi subevents nadal są wywoływane; jednak przekazać obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1895">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="968fc-1896">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie użyć wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` Aby dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1896">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="968fc-1897">Funkcje obsługi klas również nie są wywoływane, chyba że te funkcje obsługi klas zostały zarejestrowane przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpis z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-1897">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="968fc-1898">Obsługa <xref:System.Windows.UIElement.OnMouseUp%2A>, są obszaru obsługi swojej klasy uwzględnione wszystkie możliwe myszy się akcje.</span><span class="sxs-lookup"><span data-stu-id="968fc-1898">By handling <xref:System.Windows.UIElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="968fc-1899">To zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1899">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="968fc-1900">Wszystkich zdarzeń bezpośrednie specyficznych dla przycisku ma także wirtualnym na \* metody. należy rozważyć, czy te funkcje obsługi klas specyficznych dla przycisku zastępowanie może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="968fc-1900">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="968fc-1901">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1901">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1902">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1902">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1903">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1903">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1904">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1904">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1905">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1905">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1906">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1906">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1907">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1907">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1908">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1908">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1909">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1909">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1910"><see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1910">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1911">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1911">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1912">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1912">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1913">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1913">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1914">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1914">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1915">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1915">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1916">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1916">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1917">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1917">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1918">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1918">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1919">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1919">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1920">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1920">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1921">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1921">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1922"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1922">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1923">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1923">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1924">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1924">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1925">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1925">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1926">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1926">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1927">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1927">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1928">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1928">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1929">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1929">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1930">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1930">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1931">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1931">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1932">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1932">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1933">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1933">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-1934">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1934">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1935"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1935">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1936">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1936">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1937">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1937">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1938">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1938">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1939">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1939">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1940">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1940">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1941">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1941">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1942">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1942">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1943">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1943">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1944">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1944">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1945">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1945">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1946">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1946">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-1947">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1947">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1948"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1948">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1949">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1949">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1950">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1950">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1951">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1951">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1952">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1952">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1953">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1953">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1954">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1954">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1955">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1955">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1956">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1956">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1957">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1957">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1958">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1958">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1959">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1959">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-1960">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1960">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1961"><see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1961">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1962">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDrop" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1962">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1963">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1963">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1964">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1964">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1965">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1965">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1966">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1966">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1967">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1967">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1968">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1968">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1969">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1969">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1970">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1970">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1971">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1971">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1972">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1972">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-1973">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1973">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1974"><see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1974">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1975">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1975">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1976">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1976">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1977">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1977">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1978">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1978">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1979">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1979">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1980">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1980">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1981">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1981">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1982">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1982">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1983">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1983">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1984">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1984">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1985">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1985">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-1986">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1986">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-1987"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1987">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-1988">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-1988">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-1989">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1989">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-1990">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1990">This method has no default implementation.</span></span> <span data-ttu-id="968fc-1991">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-1991">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-1992">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1992">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-1993">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-1993">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-1994">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-1994">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-1995">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-1995">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-1996">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-1996">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-1997">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-1997">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-1998">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1998">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-1999">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-1999">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2000"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2000">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2001">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2001">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2002">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2002">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2003">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2003">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2004">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2004">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2005">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2005">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2006">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2006">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2007">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2007">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2008">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2008">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2009">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2009">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2010">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2010">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2011">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2011">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2012">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2012">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2013"><see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2013">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2014">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2014">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2015">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2015">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2016">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2016">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2017">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2017">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2018">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2018">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2019">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2019">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2020">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2020">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2021">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2021">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2022">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2022">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2023">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2023">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2024">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2024">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2025">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2025">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2026"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2026">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2027">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2027">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2028">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2028">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2029">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2029">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2030">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2030">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2031">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2031">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2032">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2032">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2033">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2033">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2034">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2034">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2035">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2035">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2036">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2036">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2037">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2037">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2038">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2038">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2039"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2039">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="968fc-2040">Dane zdarzenia zgłasza, że zostały naciśnięte przyciski myszy jeden lub więcej.</span><span class="sxs-lookup"><span data-stu-id="968fc-2040">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="968fc-2041">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone zdarzenie trasowane osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2041">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2042">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2042">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2043">Akcje przycisków myszy również są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2043">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="968fc-2044">Inne funkcje programowania, które polegają na przycisku myszy, takich jak dane wejściowe i polecenia powiązania, może wywołać programy obsługi dla akcji, zanim jest ona uwidoczniona jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="968fc-2044">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="968fc-2045">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń jako obsłużony, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="968fc-2045">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="968fc-2046">Jeśli używasz tej obsługi klasy do oznaczenia zdarzeń jako obsłużony, możesz mogłoby to wpłynąć na następujących zdarzeń: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2046">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="968fc-2047">Jedną z tych zdarzeń mogą być wywoływane na elemencie odbieranie po <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> została odebrana.</span><span class="sxs-lookup"><span data-stu-id="968fc-2047">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="968fc-2048">Po oznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi subevents nadal są wywoływane; jednak przekazać obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2048">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="968fc-2049">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie użyć wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` Aby dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2049">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="968fc-2050">Funkcje obsługi klas również nie są wywoływane, chyba że te funkcje obsługi klas zostały zarejestrowane przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpis z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-2050">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="968fc-2051">Obsługa <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, są obszaru obsługi swojej klasy uwzględnione wszystkie możliwe myszy szczegółów akcji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2051">By handling <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="968fc-2052">To zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2052">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="968fc-2053">Wszystkich zdarzeń bezpośrednie specyficznych dla przycisku ma także wirtualnym na \* metody. należy rozważyć, czy te funkcje obsługi klas specyficznych dla przycisku zastępowanie może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2053">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="968fc-2054">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2054">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2055">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2055">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2056">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2056">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2057">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2057">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2058">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2058">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2059">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2059">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2060">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2060">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2061">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2061">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2062">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2062">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2063">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2063">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2064"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2064">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="968fc-2065">Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2065">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="968fc-2066">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2066">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2067">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2067">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2068"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> Zdarzenie wydaje się tunelowania trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="968fc-2068">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="968fc-2069"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest bazowe zdarzenie, dla którego jest kierowany tunel i każdy <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2069"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="968fc-2070">Mimo że można oznaczyć <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2070">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="968fc-2071">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2071">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="968fc-2072">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="968fc-2072">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="968fc-2073">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="968fc-2073">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="968fc-2074">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2074">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="968fc-2075">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2075">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="968fc-2076">Alternatywnie mogą przesłaniać tę metodę w celu zmiany obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2076">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="968fc-2077">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="968fc-2077">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="968fc-2078">Nie można wywołać podstawowej wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klas nadrzędnych, które chcą również wywołać <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2078">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="968fc-2079">Na przykład może pochodzić z <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania implementację podstawową; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2079">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2080"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2080">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="968fc-2081">Dane zdarzenia raportów zwolnienie lewego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2081">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="968fc-2082">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2082">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2083">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2083">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2084"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> Zdarzenie wydaje się tunelowania trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="968fc-2084">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="968fc-2085"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest bazowe zdarzenie, dla którego jest kierowany tunel i każdy <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2085"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="968fc-2086">Mimo że można oznaczyć <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2086">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="968fc-2087">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2087">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="968fc-2088">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="968fc-2088">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="968fc-2089">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="968fc-2089">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="968fc-2090">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2090">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="968fc-2091">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2091">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2092"><see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2092">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2093">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2093">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2094">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2094">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2095">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2095">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2096">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2096">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2097">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2097">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2098">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2098">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2099">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2099">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2100">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2100">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2101">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2101">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2102">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2102">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2103">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2103">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2104">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2104">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2105"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2105">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="968fc-2106">Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2106">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="968fc-2107">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2107">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2108">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2108">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2109"><xref:System.Windows.UIElement.PreviewMouseRightButtonDown> Zdarzenie wydaje się tunelowania trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="968fc-2109">The <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="968fc-2110"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest bazowe zdarzenie, dla którego jest kierowany tunel i każdy <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2110"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="968fc-2111">Mimo że można oznaczyć <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2111">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="968fc-2112">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2112">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="968fc-2113">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="968fc-2113">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="968fc-2114">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="968fc-2114">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="968fc-2115">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2115">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="968fc-2116">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2116">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="968fc-2117">Alternatywnie mogą przesłaniać tę metodę w celu zmiany obsługi stanu myszy określonych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2117">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="968fc-2118">Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza.</span><span class="sxs-lookup"><span data-stu-id="968fc-2118">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="968fc-2119">Nie można wywołać podstawowej wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klas nadrzędnych, które chcą również wywołać <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2119">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="968fc-2120">Na przykład może pochodzić z <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> w klasie pochodnej bez wywoływania bazy; jednak to zastąpienie powoduje wyłączenie kontekstu menu usługi na kontrolki, które są dostępne w ramach programu <xref:System.Windows.Controls.Control> zachowanie domyślne.</span><span class="sxs-lookup"><span data-stu-id="968fc-2120">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2121"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2121">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="968fc-2122">Dane zdarzenia raportów zwolnienie prawego przycisku myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2122">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="968fc-2123">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> zdarzenia trasowanego osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2123">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2124">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2124">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2125"><xref:System.Windows.UIElement.PreviewMouseRightButtonUp> Zdarzenie wydaje się tunelowania trasa podróży, ale faktycznie przybliżone ilości tych danych w sposób pośredni.</span><span class="sxs-lookup"><span data-stu-id="968fc-2125">The <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="968fc-2126"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest bazowe zdarzenie, dla którego jest kierowany tunel i każdy <xref:System.Windows.UIElement> wzdłuż zdarzenia trasy używa obsługi identyczne do pozyskania bezpośredniego zdarzenie trasowane <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2126"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="968fc-2127">Mimo że można oznaczyć <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> zdarzenia jako obsługiwane na potrzeby tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często do innych elementów wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2127">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="968fc-2128">Jednakże, możesz chcieć oznaczyć zdarzenia jako obsłużony, aby zapobiec wystąpieniu ogólne programy obsługi (te, które nie określiła `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2128">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="968fc-2129">Domyślna implementacja dla zdarzenia myszy ogólne, obsługa w <xref:System.Windows.UIElement> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje je do odpowiedniego zdarzenia lokalne.</span><span class="sxs-lookup"><span data-stu-id="968fc-2129">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="968fc-2130">Jeśli chcesz zastąpić tę logikę, należy utworzyć klasę pochodną.</span><span class="sxs-lookup"><span data-stu-id="968fc-2130">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="968fc-2131">W konstruktorze statycznym klasy pochodnej, zarejestruj alternatywnych klasy Obsługa <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2131">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="968fc-2132">Nie można zmienić Obsługa zachowanie myszy <xref:System.Windows.UIElement> przez zastąpienie <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2132">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2133"><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2133">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="968fc-2134">Dane zdarzenia raportów, że jeden lub więcej przycisków myszy zostały wydane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2134">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="968fc-2135">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2135">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2136">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2136">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2137">Akcje przycisków myszy również są obsługiwane przez dedykowany Menedżera danych wejściowych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2137">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="968fc-2138">Inne funkcje programowania, które polegają na przycisku myszy, takich jak dane wejściowe i polecenia powiązania, może wywołać programy obsługi dla akcji, zanim jest ona uwidoczniona jako akcja przycisku myszy ogólne.</span><span class="sxs-lookup"><span data-stu-id="968fc-2138">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="968fc-2139">Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń jako obsłużony, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> nie jest wywoływany.</span><span class="sxs-lookup"><span data-stu-id="968fc-2139">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="968fc-2140">Jeśli używasz tej obsługi klasy do oznaczenia zdarzeń jako obsłużony, możesz mogłoby to wpłynąć na następujących zdarzeń: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2140">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="968fc-2141">Jedną z tych zdarzeń może zostać wywołane na odbieranie elementu po <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> została odebrana.</span><span class="sxs-lookup"><span data-stu-id="968fc-2141">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="968fc-2142">Po oznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi subevents nadal są wywoływane; jednak przekazać obsługiwanego stanu w danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2142">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="968fc-2143">Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie użyć wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` Aby dołączyć programów obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2143">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="968fc-2144">Funkcje obsługi klas również nie są wywoływane, chyba że te funkcje obsługi klas zostały zarejestrowane przy użyciu <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpis z `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-2144">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="968fc-2145">Obsługa <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, są obszaru obsługi swojej klasy uwzględnione wszystkie możliwe myszy się akcje.</span><span class="sxs-lookup"><span data-stu-id="968fc-2145">By handling <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="968fc-2146">To zachowanie może być niepożądane; Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2146">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="968fc-2147">Wszystkich zdarzeń bezpośrednie specyficznych dla przycisku ma także wirtualnym na \* metody. należy rozważyć, czy te funkcje obsługi klas specyficznych dla przycisku zastępowanie może być bardziej odpowiednie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2147">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="968fc-2148">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2148">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2149">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2149">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2150">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2150">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2151">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2151">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2152">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2152">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2153">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2153">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2154">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2154">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2155">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2155">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2156">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2156">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2157"><see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2157">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2158">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2158">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2159">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2159">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2160">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2160">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2161">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2161">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2162">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2162">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2163">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2163">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2164">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2164">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2165">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2165">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2166">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2166">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2167">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2167">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2168">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2168">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2169">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2169">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2170"><see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2170">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2171">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2171">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2172">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2172">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2173">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2173">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2174">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2174">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2175">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2175">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2176">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2176">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2177">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2177">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2178">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2178">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2179">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2179">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2180">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2180">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2181">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2181">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2182">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2182">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2183"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2183">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2184">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2184">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2185">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2185">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2186">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2186">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2187">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2187">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2188">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2188">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2189">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2189">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2190">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2190">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2191">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2191">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2192">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2192">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2193">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2193">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2194">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2194">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2195">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2195">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2196"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2196">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2197">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2197">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2198">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2198">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2199">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2199">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2200">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2200">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2201">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2201">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2202">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2202">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2203">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2203">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2204">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2204">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2205">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2205">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2206">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2206">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2207">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2207">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2208">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2208">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2209"><see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2209">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2210">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2210">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2211">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2211">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2212">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2212">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2213">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2213">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2214">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2214">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2215">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2215">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2216">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2216">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2217">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2217">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2218">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2218">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2219">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2219">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2220">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2220">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2221">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2221">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2222"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2222">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2223">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2223">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2224">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2224">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2225">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2225">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2226">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2226">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2227">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2227">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2228">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2228">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2229">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2229">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2230">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2230">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2231">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2231">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2232">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2232">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2233">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2233">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2234">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2234">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2235"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2235">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2236">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2236">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2237">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2237">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2238">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2238">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2239">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2239">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2240">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2240">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2241">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2241">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2242">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2242">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2243">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2243">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2244">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2244">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2245">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2245">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2246">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2246">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2247">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2247">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2248"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2248">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2249">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2249">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2250">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2250">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2251">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2251">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2252">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2252">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2253">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2253">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2254">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2254">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2255">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2255">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2256">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2256">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2257">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2257">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2258">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2258">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2259">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2259">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2260">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2260">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2261"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2261">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2262">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2262">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2263">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2263">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2264">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2264">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2265">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2265">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2266">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2266">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2267">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2267">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2268">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2268">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2269">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2269">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2270">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2270">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2271">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2271">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2272">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2272">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2273">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2273">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2274"><see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2274">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2275">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2275">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2276">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2276">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2277">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2277">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2278">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2278">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2279">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2279">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2280">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2280">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2281">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2281">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2282">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2282">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2283">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2283">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2284">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2284">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2285">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2285">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2286">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2286">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2287"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2287">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2288">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2288">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2289">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2289">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2290">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2290">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2291">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2291">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2292">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2292">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2293">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2293">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2294">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2294">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2295">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2295">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2296">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2296">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2297">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2297">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2298">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2298">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2299">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2299">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2300"><see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2300">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2301">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2301">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2302">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2302">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2303">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2303">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2304">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2304">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2305">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2305">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2306">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2306">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2307">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2307">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2308">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2308">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2309">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2309">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2310">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2310">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2311">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2311">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="968fc-2312">Inny scenariusz, który jest specjalnie dla zdarzenia (wersja zapoznawcza) jest do oznaczania ich obsługi, tak aby pasujących propagacji funkcje obsługi klas nie są wywoływane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2312">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.UIElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2313">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2313">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2314">Zapewnia obsługę klasy dla <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> zdarzenia trasowane, które występuje, gdy touch naciśnięcie tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2314">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2315"><xref:System.Windows.UIElement.OnPreviewTouchDown%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2315">The <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-2316">Zastąp <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.PreviewTouchDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2316">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="968fc-2317">Pamiętaj wywołać klasy bazowej <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2317">Be sure to call the base class' <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2318">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2318">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2319">Zapewnia obsługę klasy dla <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> zdarzenie trasowane, która występuje po przemieszczeniu touch, gdy są połączeni z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2319">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2320"><xref:System.Windows.UIElement.OnPreviewTouchMove%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2320">The <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-2321">Zastąp <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.PreviewTouchMove> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2321">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="968fc-2322">Pamiętaj wywołać klasy bazowej <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2322">Be sure to call the base class' <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2323">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2323">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2324">Zapewnia obsługę klasy dla <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> zdarzenie trasowane, która występuje po zwolnieniu touch wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2324">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2325"><xref:System.Windows.UIElement.OnPreviewTouchUp%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2325">The <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-2326">Zastąp <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.PreviewTouchUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2326">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="968fc-2327">Pamiętaj wywołać klasy bazowej <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2327">Be sure to call the base class' <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2328"><see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2328">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2329">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2329">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2330">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2330">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2331">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2331">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2332">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2332">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2333">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2333">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2334">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2334">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2335">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2335">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2336">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2336">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2337">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2337">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2338">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2338">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2339">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2339">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="uIElement.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2340"><see cref="T:System.Windows.Input.QueryCursorEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2340">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2341">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2341">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2342">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2342">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2343">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2343">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2344">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2344">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2345">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2345">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2346">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2346">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2347">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2347">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2348">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2348">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2349">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2349">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2350">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2350">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2351">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2351">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected virtual void OnRender (System.Windows.Media.DrawingContext drawingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRender(class System.Windows.Media.DrawingContext drawingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRender(System::Windows::Media::DrawingContext ^ drawingContext);" />
      <MemberSignature Language="F#" Value="abstract member OnRender : System.Windows.Media.DrawingContext -&gt; unit&#xA;override this.OnRender : System.Windows.Media.DrawingContext -&gt; unit" Usage="uIElement.OnRender drawingContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="drawingContext"><span data-ttu-id="968fc-2352">Instrukcje rysowania określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2352">The drawing instructions for a specific element.</span></span> <span data-ttu-id="968fc-2353">System układu zapewnia tego kontekstu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2353">This context is provided to the layout system.</span></span></param>
        <summary><span data-ttu-id="968fc-2354">W przypadku przesłonięcia w klasie pochodnej, uczestniczy w operacjach renderowania, które są kierowane przez system układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2354">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span></span> <span data-ttu-id="968fc-2355">Instrukcje renderowania dla tego elementu nie są używane bezpośrednio, gdy ta metoda jest wywoływana, a zamiast tego są zachowywane do użytku później asynchronicznego, układ i rysowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-2355">The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2356">Ta metoda nie ma domyślnej implementacji <xref:System.Windows.UIElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2356">This method has no default implementation in the <xref:System.Windows.UIElement> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-2357">Poniższy przykład kodu pokazuje potencjalne zastosowanie dla klasy pochodnej panelu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2357">The following code example shows a possible implementation for a panel derived class.</span></span>  
  
 [!code-csharp[LightWeightCustomPanel#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LightWeightCustomPanel/CSharp/OffsetPanel.cs#1)]
 [!code-vb[LightWeightCustomPanel#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/LightWeightCustomPanel/visualbasic/offsetpanel.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="968fc-2358"><see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> Metodę można przesłonić będzie dodawał kolejne elementy graficzne (wcześniej zdefiniowany w drzewo logiczne) renderowanego elementu, takiego jak efekty lub moduły definiowania układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2358">The <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> method can be overridden to add further graphical elements (not previously defined in a logical tree) to a rendered element, such as effects or adorners.</span></span> <span data-ttu-id="968fc-2359">A <see cref="T:System.Windows.Media.DrawingContext" /> obiekt jest przekazywany jako argument, który udostępnia metody do rysowania kształtów, tekstu, obrazów lub wideo.</span><span class="sxs-lookup"><span data-stu-id="968fc-2359">A <see cref="T:System.Windows.Media.DrawingContext" /> object is passed as an argument, which provides methods for drawing shapes, text, images or videos.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRenderSizeChanged (System.Windows.SizeChangedInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRenderSizeChanged (info As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ info);" />
      <MemberSignature Language="F#" Value="abstract member OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit&#xA;override this.OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit" Usage="uIElement.OnRenderSizeChanged info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="968fc-2360">Spakowane parametrów (<see cref="T:System.Windows.SizeChangedInfo" />), które zawierają stare i nowe rozmiary i który wymiar faktycznie zmiany.</span><span class="sxs-lookup"><span data-stu-id="968fc-2360">The packaged parameters (<see cref="T:System.Windows.SizeChangedInfo" />), which includes old and new sizes, and which dimension actually changes.</span></span></param>
        <summary><span data-ttu-id="968fc-2361">W przypadku przesłonięcia w klasie pochodnej, uczestniczy w operacjach renderowania, które są kierowane przez system układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2361">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span></span> <span data-ttu-id="968fc-2362">Ta metoda jest wywoływana po aktualizacji układu i przed renderowaniem, jeśli element <see cref="P:System.Windows.UIElement.RenderSize" /> został zmieniony w wyniku aktualizację układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2362">This method is invoked after layout update, and before rendering, if the element's <see cref="P:System.Windows.UIElement.RenderSize" /> has changed as a result of layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2363">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2363">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2364">Typowy element poziomie struktury WPF używa implementację zastąpienie z <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2364">A typical WPF framework-level element uses the override implementation from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="968fc-2365"><xref:System.Windows.FrameworkElement> Unieważnia implementacji <xref:System.Windows.FrameworkElement.Width%2A> i <xref:System.Windows.FrameworkElement.Height%2A> właściwości i obsługuje podstawy remaking układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2365">The <xref:System.Windows.FrameworkElement> implementation invalidates the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties and handles the basics of remaking the layout.</span></span> <span data-ttu-id="968fc-2366">Zastępowanie <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> na <xref:System.Windows.UIElement> poziomu oznacza, że implementacji elementu celowo nie korzysta z implementacji poziomie struktury WPF, a w związku z tym nazwę elementu musi obsługiwać logikę układu bardziej bezpośrednio, zwykle przez napisanie system układu zastępczy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2366">Overriding <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> at the <xref:System.Windows.UIElement> level implies that your element implementation is deliberately not using the WPF framework-level implementation, and therefore your element must handle layout logic more directly, typically by writing a replacement layout system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2367"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2367">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2368">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2368">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2369">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2369">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2370">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2370">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2371">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2371">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2372">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2372">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2373">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2373">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2374">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2374">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2375">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2375">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2376">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2376">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2377">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2377">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2378">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2378">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2379"><see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2379">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2380">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2380">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2381">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2381">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2382">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2382">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2383">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2383">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2384">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2384">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2385">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2385">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2386">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2386">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2387">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2387">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2388">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2388">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2389">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2389">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2390">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2390">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2391"><see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2391">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2392">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusDown" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2392">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2393">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2393">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2394">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2394">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2395">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2395">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2396">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2396">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2397">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2397">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2398">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2398">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2399">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2399">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2400">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2400">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2401">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2401">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2402">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2402">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2403"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2403">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2404">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> dołączone zdarzenie jest wywoływane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2404">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="968fc-2405">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2405">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2406">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2406">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2407">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2407">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="968fc-2408">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="968fc-2408">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="968fc-2409">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2409">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2410">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2410">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2411">Oznaczanie zdarzenia jako obsłużony, nadal jest użyteczne w celu zapobiegania obsługi typowych wystąpienia (te, które nie należy określać `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2411">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2412"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2412">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2413">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2413">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2414">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2414">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2415">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2415">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2416">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2416">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2417">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2417">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2418">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2418">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2419">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2419">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2420">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2420">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2421">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2421">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2422">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2422">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2423">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2423">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2424"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2424">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2425">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2425">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2426">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2426">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2427">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2427">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2428">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2428">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2429">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2429">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2430">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2430">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2431">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2431">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2432">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2432">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2433">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2433">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2434">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2434">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2435">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2435">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2436"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2436">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2437">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> dołączone zdarzenie jest wywoływane przez ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2437">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="968fc-2438">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2438">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2439">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2439">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2440">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2440">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="968fc-2441">Użytkownik może wywołać podstawowej ani przed ani po swojej specjalnej obsługi w zależności od wymagań.</span><span class="sxs-lookup"><span data-stu-id="968fc-2441">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="968fc-2442">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2442">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2443">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2443">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2444">Oznaczanie zdarzenia jako obsłużony, nadal jest użyteczne w celu zapobiegania obsługi typowych wystąpienia (te, które nie należy określać `handledEventsToo`) wywoływanie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2444">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2445"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2445">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2446">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusMove" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2446">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2447">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2447">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2448">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2448">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2449">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2449">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2450">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2450">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2451">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2451">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2452">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2452">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2453">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2453">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2454">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2454">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2455">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2455">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2456">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2456">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2457"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2457">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2458">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2458">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2459">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2459">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2460">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2460">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2461">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2461">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2462">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2462">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2463">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2463">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2464">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2464">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2465">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2465">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2466">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2466">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2467">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2467">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2468">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2468">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2469"><see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2469">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2470">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2470">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2471">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2471">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2472">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2472">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2473">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2473">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2474">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2474">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2475">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2475">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2476">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2476">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2477">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2477">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2478">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2478">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2479">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2479">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2480">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2480">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2481"><see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2481">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2482">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusUp" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2482">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2483">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2483">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2484">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2484">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2485">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2485">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2486">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2486">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2487">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2487">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2488">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2488">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2489">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2489">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2490">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2490">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2491">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2491">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2492">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2492">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2493"><see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2493">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2494">Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> dołączone zdarzenie osiągnie elementu w jego trasy, który jest tworzony na podstawie tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2494">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="968fc-2495">Zaimplementuj tę metodę, aby dodać obsługę klasy dla tego zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2495">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2496">Ta metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2496">This method has no default implementation.</span></span> <span data-ttu-id="968fc-2497">Ponieważ klasa pośrednicząca w dziedziczenia, mogą zaimplementować tę metodę, zaleca się wywoływać implementację podstawową w danej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2497">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="968fc-2498">Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na \* metody: Ta metoda zapewnia oznacza, że do obsługi zdarzeń zgodnych z klas pochodnych, ustanawiając obsługi klasy, zamiast do obsługi wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2498">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="968fc-2499">W tym przypadku pasującego zdarzenia to zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2499">In this case the matching event is a routed event.</span></span> <span data-ttu-id="968fc-2500">Wzorzec implementacji metody On \* są różne dla zdarzenia trasowane, ponieważ zdarzenia trasowanego może zostać wywołane przez element podrzędny, który nie musi być element, który będzie wywoływać procedury obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-2500">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="968fc-2501">W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2501">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="968fc-2502">Go nie należy próbować reraise — zdarzenia w większości przypadków.</span><span class="sxs-lookup"><span data-stu-id="968fc-2502">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="968fc-2503">Przez zastąpienie tej metody lub rejestrując klasy obsługi za pomocą <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodne klasy <xref:System.Windows.UIElement> można wywołać metody obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2503">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="968fc-2504">Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulowanie danymi zdarzeń i oznaczanie zdarzenia trasowanego jako obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2504">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2505">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2505">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2506">Zapewnia obsługę klasy dla <see cref="E:System.Windows.UIElement.TouchDown" /> zdarzenia trasowane, które występuje, gdy touch naciśnie wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2506">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2507"><xref:System.Windows.UIElement.OnTouchDown%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2507">The <xref:System.Windows.UIElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-2508">Zastąp <xref:System.Windows.UIElement.OnTouchDown%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.TouchDown> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2508">Override <xref:System.Windows.UIElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="968fc-2509">Pamiętaj wywołać klasy bazowej <xref:System.Windows.UIElement.OnTouchDown%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2509">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2510">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2510">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2511">Zapewnia obsługę klasy dla <see cref="E:System.Windows.UIElement.TouchEnter" /> zdarzenie trasowane, który występuje, gdy touch z zewnątrz do wewnątrz granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2511">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2512"><xref:System.Windows.UIElement.OnTouchEnter%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2512">The <xref:System.Windows.UIElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-2513">Zastąp <xref:System.Windows.UIElement.OnTouchEnter%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.TouchEnter> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2513">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchEnter> event.</span></span> <span data-ttu-id="968fc-2514">Pamiętaj wywołać klasy bazowej <xref:System.Windows.UIElement.OnTouchEnter%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2514">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2515">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2515">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2516">Zapewnia obsługę klasy dla <see cref="E:System.Windows.UIElement.TouchLeave" /> zdarzenie trasowane, który występuje, gdy touch z wnętrza poza granicami tego <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-2516">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2517"><xref:System.Windows.UIElement.OnTouchLeave%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2517">The <xref:System.Windows.UIElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-2518">Zastąp <xref:System.Windows.UIElement.OnTouchLeave%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.TouchLeave> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2518">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchLeave> event.</span></span> <span data-ttu-id="968fc-2519">Pamiętaj wywołać klasy bazowej <xref:System.Windows.UIElement.OnTouchLeave%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2519">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2520">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2520">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2521">Zapewnia obsługę klasy dla <see cref="E:System.Windows.UIElement.TouchMove" /> zdarzenie trasowane, która występuje po przemieszczeniu touch, gdy są połączeni z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2521">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2522"><xref:System.Windows.UIElement.OnTouchMove%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2522">The <xref:System.Windows.UIElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-2523">Zastąp <xref:System.Windows.UIElement.OnTouchMove%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.TouchMove> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2523">Override <xref:System.Windows.UIElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchMove> event.</span></span> <span data-ttu-id="968fc-2524">Pamiętaj wywołać klasy bazowej <xref:System.Windows.UIElement.OnTouchMove%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2524">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-2525">Element <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2525">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="968fc-2526">Zapewnia obsługę klasy dla <see cref="E:System.Windows.UIElement.TouchUp" /> zdarzenie trasowane, która występuje po zwolnieniu touch wewnątrz tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2526">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2527"><xref:System.Windows.UIElement.OnTouchUp%2A> Metoda nie ma domyślnej implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2527">The <xref:System.Windows.UIElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="968fc-2528">Zastąp <xref:System.Windows.UIElement.OnTouchUp%2A> w klasie pochodnej do obsługi <xref:System.Windows.UIElement.TouchUp> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2528">Override <xref:System.Windows.UIElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="968fc-2529">Pamiętaj wywołać klasy bazowej <xref:System.Windows.UIElement.OnTouchUp%2A> metodę, tak że klas bazowych otrzymają zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2529">Be sure to call the base class' <xref:System.Windows.UIElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="uIElement.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="968fc-2530">Poprzedniego elementu nadrzędnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2530">The previous parent.</span></span> <span data-ttu-id="968fc-2531">To może być dostępna jako <see langword="null" /> Jeśli <see cref="T:System.Windows.DependencyObject" /> nie miał element nadrzędny wcześniej.</span><span class="sxs-lookup"><span data-stu-id="968fc-2531">This may be provided as <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a parent element previously.</span></span></param>
        <summary><span data-ttu-id="968fc-2532">Wywoływane, gdy element nadrzędny <see cref="T:System.Windows.UIElement" /> raportów zmiany do elementu nadrzędnego visual bazowego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2532">Invoked when the parent element of this <see cref="T:System.Windows.UIElement" /> reports a change to its underlying visual parent.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="968fc-2533">Jeśli zastąpienie tej metody zawsze wywoływać implementację podstawową.</span><span class="sxs-lookup"><span data-stu-id="968fc-2533">If you override this method, always call the base implementation.</span></span> <span data-ttu-id="968fc-2534">Domyślną implementację podstawową wykonuje kilka wewnętrznych obsługi stanu właściwości dziedziczonych w odwrotnej kolejności.</span><span class="sxs-lookup"><span data-stu-id="968fc-2534">The default base implementation performs some internal maintenance of reverse-inherited property state.</span></span> <span data-ttu-id="968fc-2535">Nie można wywołać implementację podstawową spowoduje unieważnienie ten stan.</span><span class="sxs-lookup"><span data-stu-id="968fc-2535">Failing to call the base implementation will invalidate this state.</span></span>  
  
<span data-ttu-id="968fc-2536">Ta metoda zastępuje <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-2536">This method overrides <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span></span> <span data-ttu-id="968fc-2537"><see cref="T:System.Windows.FrameworkElement" /> i <see cref="T:System.Windows.Window" /> zarówno także Przesłoń <see cref="T:System.Windows.UIElement" /> implementacji <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, i <see cref="T:System.Windows.Window" /> zapieczętowuje go.</span><span class="sxs-lookup"><span data-stu-id="968fc-2537"><see cref="T:System.Windows.FrameworkElement" /> and <see cref="T:System.Windows.Window" /> both also override the <see cref="T:System.Windows.UIElement" /> implementation of <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, and <see cref="T:System.Windows.Window" /> seals it.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="System.Windows.UIElement.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2538">Pobiera lub ustawia współczynnik przezroczystości stosowane do całej <see cref="T:System.Windows.UIElement" /> gdy jest on renderowany w [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="968fc-2538">Gets or sets the opacity factor applied to the entire <see cref="T:System.Windows.UIElement" /> when it is rendered in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="968fc-2539">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-2539">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-2540">Współczynnik nieprzezroczystości.</span><span class="sxs-lookup"><span data-stu-id="968fc-2540">The opacity factor.</span></span> <span data-ttu-id="968fc-2541">Nieprzezroczystość domyślny to 1.0.</span><span class="sxs-lookup"><span data-stu-id="968fc-2541">Default opacity is 1.0.</span></span> <span data-ttu-id="968fc-2542">Oczekiwane wartości należą do zakresu od 0,0 do 1,0.</span><span class="sxs-lookup"><span data-stu-id="968fc-2542">Expected values are between 0.0 and 1.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2543">Wartość domyślna 1.0 to domyślne, dostarczone przez początkowe metadane ta właściwość zależności na <xref:System.Windows.UIElement> klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2543">The 1.0 default value is the default provided by the initial metadata of this dependency property on the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="968fc-2544">Inne klasy pochodne potencjalnie może zmienić wartość domyślną przez zastąpienie metadanych z w ramach ich konstruktora klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2544">Other derived classes may potentially change this default value by overriding the metadata from within their class constructor.</span></span>  
  
 <span data-ttu-id="968fc-2545">Wartość <xref:System.Windows.UIElement.Opacity%2A> nie zostanie zastosowany do rzeczywistego układu, chyba że element jest także widoczny (<xref:System.Windows.UIElement.IsVisible%2A> jest `true`).</span><span class="sxs-lookup"><span data-stu-id="968fc-2545">The value of <xref:System.Windows.UIElement.Opacity%2A> won't be applied to actual layout unless the element is also visible (<xref:System.Windows.UIElement.IsVisible%2A> is `true`).</span></span>  
  
 <span data-ttu-id="968fc-2546"><xref:System.Windows.UIElement.Opacity%2A> stosowanie z elementów nadrzędnych w dół drzewa elementów na elementy podrzędne, ale widoczne skutki nieprzezroczystość zagnieżdżonych, ustawienia nie są wskazane w wartości właściwości elementów podrzędnych poszczególnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2546"><xref:System.Windows.UIElement.Opacity%2A> is applied from parent elements on down the element tree to child elements, but the visible effects of the nested opacity settings aren't indicated in the property value of individual child elements.</span></span> <span data-ttu-id="968fc-2547">Na przykład jeśli lista ma nieprzezroczystość 50% (0,5) i jeden z jego elementów listy ma swój własny nieprzezroczystość równa 20% (0,2), net nieprzezroczystość widoczne dla tego elementu listy będą renderowane tak, jakby była 10% (0,1), ale wartość właściwości elementu listy <xref:System.Windows.UIElement.Opacity%2A> nadal będzie właściwości  0,2 po otrzymaniu kwerendy.</span><span class="sxs-lookup"><span data-stu-id="968fc-2547">For instance, if a list has a 50% (0.5) opacity and one of its list items has its own opacity set to 20% (0.2), the net visible opacity for that list item will be rendered as if it were 10% (0.1), but the property value of the list item <xref:System.Windows.UIElement.Opacity%2A> property would still be 0.2 when queried.</span></span>  
  
 <span data-ttu-id="968fc-2548">Nawet jeśli nieprzezroczystość zadeklarowane lub ocenianą wynosi 0, element nadal uczestniczy w danych wejściowych zdarzeń i poleceń i jest potencjalnie focusable.</span><span class="sxs-lookup"><span data-stu-id="968fc-2548">Even if the declared or evaluated opacity is 0, an element still participates in input events and commands, and is potentially focusable.</span></span> <span data-ttu-id="968fc-2549">Ten aspekt może być przydatne, na przykład można użyć obiektu nieprzezroczystości od zera (na przykład kształt) maskowania obiekty źródłowe z elementami przezroczysty.</span><span class="sxs-lookup"><span data-stu-id="968fc-2549">This aspect can be useful, for instance you can use an opacity-zero object (such as a shape) for masking underlying objects with transparent elements.</span></span> <span data-ttu-id="968fc-2550">Obiekt nieprzezroczystości od zera może następnie obsłużyć wszystkie dane wejściowe zdarzenia przetwarzania dla bazowego obszaru.</span><span class="sxs-lookup"><span data-stu-id="968fc-2550">The opacity-zero object can then handle all the input event processing for an underlying area.</span></span> <span data-ttu-id="968fc-2551">Jednak `Background` lub `Fill` obiektu lub kształtu powinna być równa wartości, nawet jeśli jest on <xref:System.Windows.Media.Brushes.Transparent%2A>, w przeciwnym razie testowania trafień nie jest włączona i zdarzenia nie są odbierane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2551">However, the `Background` or `Fill` of the object or shape should be set to a value, even if it is <xref:System.Windows.Media.Brushes.Transparent%2A>, otherwise hit testing is not enabled, and no events are received.</span></span>  
  
<a name="dependencyPropertyInfo_Opacity"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-2552">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-2552">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2553">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2553">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityProperty>|  
|<span data-ttu-id="968fc-2554">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-2554">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-2555">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-2555">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.OpacityMask" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMask">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush OpacityMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush OpacityMask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.OpacityMask" />
      <MemberSignature Language="VB.NET" Value="Public Property OpacityMask As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ OpacityMask { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OpacityMask : System.Windows.Media.Brush with get, set" Usage="System.Windows.UIElement.OpacityMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2556">Pobiera lub ustawia maski nieprzezroczystości jako <see cref="T:System.Windows.Media.Brush" /> implementację, która jest stosowana do dowolnego maskowania kanał alfa do renderowanej zawartości tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2556">Gets or sets an opacity mask, as a <see cref="T:System.Windows.Media.Brush" /> implementation that is applied to any alpha-channel masking for the rendered content of this element.</span></span>  <span data-ttu-id="968fc-2557">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-2557">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-2558">Pędzel na potrzeby nieprzezroczystość maskowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-2558">The brush to use for opacity masking.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2559">Ta właściwość używa tylko, niezależnie od wartości kanał alfa jest na podanie <xref:System.Windows.Media.Brush>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2559">This property only uses whatever the alpha channel value is for the supplied <xref:System.Windows.Media.Brush>.</span></span> <span data-ttu-id="968fc-2560">Inne kanały <xref:System.Windows.Media.Brush>użytkownika renderowana zawartość (czerwony, zielony lub niebieski), są ignorowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2560">The other channels of the <xref:System.Windows.Media.Brush>'s rendered content (Red, Green, or Blue) are ignored.</span></span>  
  
 <span data-ttu-id="968fc-2561">Najczęściej spotykaną <xref:System.Windows.Media.Brush> dla tego celu jest <xref:System.Windows.Media.ImageBrush>, który może służyć do różnych technik, takich jak winiet maskowania zdjęcia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2561">The most typical <xref:System.Windows.Media.Brush> for this purpose is an <xref:System.Windows.Media.ImageBrush>, which can be used for a variety of photo masking techniques such as a vignette.</span></span> <span data-ttu-id="968fc-2562">Ale dowolny zdefiniowany <xref:System.Windows.Media.Brush> (takie jak <xref:System.Windows.Media.LinearGradientBrush>) mogą być używane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2562">But any defined <xref:System.Windows.Media.Brush> (such as <xref:System.Windows.Media.LinearGradientBrush>) can be used.</span></span>  
  
 <span data-ttu-id="968fc-2563">W [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], wartość tej właściwości można użyć składnię w tekście, które są specyficzne dla każdego wykonania <xref:System.Windows.Media.Brush> klasy abstrakcyjnej.</span><span class="sxs-lookup"><span data-stu-id="968fc-2563">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property value can use an inline syntax that is specific to each implementation of the <xref:System.Windows.Media.Brush> abstract class.</span></span> <span data-ttu-id="968fc-2564">Aby uzyskać więcej informacji, zobacz [malowanie jednolitymi kolorami i gradientami — Przegląd](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-2564">For more information, see [Painting with Solid Colors and Gradients Overview](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_OpacityMask"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-2565">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-2565">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2566">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2566">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityMaskProperty>|  
|<span data-ttu-id="968fc-2567">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-2567">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-2568">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-2568">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-2569">W poniższym przykładzie przedstawiono znaczników <xref:System.Windows.Media.ImageBrush> maski krycia stosowane do innego <xref:System.Windows.Controls.Image>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2569">The following markup example shows an <xref:System.Windows.Media.ImageBrush> opacity mask applied to another <xref:System.Windows.Controls.Image>.</span></span>  
  
 [!code-xaml[OpacityMasksSnippet#UIElementOpacityMask](~/samples/snippets/csharp/VS_Snippets_Wpf/OpacityMasksSnippet/CS/ImageBrushExample.xaml#uielementopacitymask)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Opacity" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMaskProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityMaskProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityMaskProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityMaskProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityMaskProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityMaskProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityMaskProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.OpacityMaskProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2570">Identyfikuje <see cref="P:System.Windows.UIElement.OpacityMask" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-2570">Identifies the <see cref="P:System.Windows.UIElement.OpacityMask" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.OpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2571">Identyfikuje <see cref="P:System.Windows.UIElement.Opacity" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-2571">Identifies the <see cref="P:System.Windows.UIElement.Opacity" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistId">
      <MemberSignature Language="C#" Value="public int PersistId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PersistId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.PersistId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PersistId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PersistId : int" Usage="System.Windows.UIElement.PersistId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2572">Pobiera wartość, która unikatowo identyfikuje ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2572">Gets a value that uniquely identifies this element.</span></span></summary>
        <value><span data-ttu-id="968fc-2573">Unikatowy identyfikator dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2573">The unique identifier for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2574"><xref:System.Windows.UIElement.PersistId%2A> jednoznacznie identyfikuje każdy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2574"><xref:System.Windows.UIElement.PersistId%2A> uniquely identifies each element.</span></span> <span data-ttu-id="968fc-2575">Elementu zachowuje takie same <xref:System.Windows.UIElement.PersistId%2A> za każdym razem, gdy taka sama [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] jest ładowany (w tym reprezentacji binarnych).</span><span class="sxs-lookup"><span data-stu-id="968fc-2575">An element keeps the same <xref:System.Windows.UIElement.PersistId%2A> every time the same [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] is loaded (including binary representations).</span></span> <span data-ttu-id="968fc-2576">Ten identyfikator jest używany dla wewnętrznych wymagania dotyczące ładowania, analizowania i serializacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2576">This identifier is used for internal loading, parsing and serialization requirements.</span></span> <span data-ttu-id="968fc-2577">Nie ma być używane przez kod aplikacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2577">It is not intended to be used by your application code.</span></span>  
  
 <span data-ttu-id="968fc-2578">Ta właściwość nie ma relacji <xref:System.Object.GetHashCode%2A> wynik dla dowolnego danego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2578">This property has no relationship to the <xref:System.Object.GetHashCode%2A> result for any given instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="uIElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="968fc-2579">Kierunek przechodzenia przez żądany fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-2579">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="968fc-2580">Po przesłonięciu w klasie pochodnej zwraca element, który będzie fokus na kierunek przechodzenia przez określony fokus bez faktycznego przenosząc fokus do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2580">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="968fc-2581">Element, który otrzymałby fokus <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> faktycznie została wywołana.</span><span class="sxs-lookup"><span data-stu-id="968fc-2581">The element that would have received focus if <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2582">Domyślna implementacja tej metody tej klasy jest niekompletne i zawsze zwraca `null`.</span><span class="sxs-lookup"><span data-stu-id="968fc-2582">The default implementation of this method in this class is incomplete, and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2583">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania przy użyciu tego elementu jako element docelowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="968fc-2583">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2584">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewDragEnter> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2584">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2585">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewDragEnter> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2585">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2586">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2586">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2587">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2587">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="968fc-2588">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2588">Routing strategy</span></span>|<span data-ttu-id="968fc-2589">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2589">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2590">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2590">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="968fc-2591">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2591">The corresponding bubbling event is <xref:System.Windows.UIElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="968fc-2592">Zastąp <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2592">Override <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2593">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewDragEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2593">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2594">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2594">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2595">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2595">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2596">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2596">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2597">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2597">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2598">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2598">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2599">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania przy użyciu tego elementu jako element źródłowy przeciągania.</span><span class="sxs-lookup"><span data-stu-id="968fc-2599">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2600">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewDragLeave> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2600">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2601">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewDragLeave> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2601">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2602">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2602">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2603">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2603">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="968fc-2604">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2604">Routing strategy</span></span>|<span data-ttu-id="968fc-2605">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2605">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2606">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2606">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="968fc-2607">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2607">The corresponding bubbling event is <xref:System.Windows.UIElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="968fc-2608">Zastąp <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2608">Override <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2609">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewDragLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2609">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2610">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2610">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2611">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2611">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2612">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2612">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2613">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2613">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2614">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2614">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2615">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-2615">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2616">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewDragOver> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2616">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2617">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewDragOver> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2617">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2618">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2618">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2619">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2619">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragOverEvent>|  
|<span data-ttu-id="968fc-2620">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2620">Routing strategy</span></span>|<span data-ttu-id="968fc-2621">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2621">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2622">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2622">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="968fc-2623">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2623">The corresponding bubbling event is <xref:System.Windows.UIElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="968fc-2624">Zastąp <xref:System.Windows.UIElement.OnPreviewDragOver%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2624">Override <xref:System.Windows.UIElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2625">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewDragOver" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2625">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2626">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2626">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2627">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2627">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2628">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2628">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2629">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2629">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2630">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2630">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2631">Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania za pomocą tego elementu jako element docelowy upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-2631">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2632">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewDrop> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2632">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDrop> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2633">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewDrop> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2633">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2634">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2634">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2635">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2635">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDropEvent>|  
|<span data-ttu-id="968fc-2636">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2636">Routing strategy</span></span>|<span data-ttu-id="968fc-2637">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2637">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2638">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2638">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="968fc-2639">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2639">The corresponding bubbling event is <xref:System.Windows.UIElement.Drop>.</span></span>  
  
-   <span data-ttu-id="968fc-2640">Zastąp <xref:System.Windows.UIElement.OnPreviewDrop%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2640">Override <xref:System.Windows.UIElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2641">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewDrop" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2641">Identifies the <see cref="E:System.Windows.UIElement.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2642">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2642">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2643">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2643">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2644">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2644">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2645">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2645">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2646">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2646">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2647">Występuje po rozpoczęciu operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-2647">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2648"><xref:System.Windows.UIElement.PreviewGiveFeedback> Zdarzeń umożliwia źródło zdarzenia przeciągania, aby modyfikować wygląd wskaźnika myszy, aby dać wizualną opinię użytkownika podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-2648">The <xref:System.Windows.UIElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="968fc-2649">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewGiveFeedback> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2649">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2650">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewGiveFeedback> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2650">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2651">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2651">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2652">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2652">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="968fc-2653">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2653">Routing strategy</span></span>|<span data-ttu-id="968fc-2654">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2654">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2655">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2655">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="968fc-2656">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2656">The corresponding bubbling event is <xref:System.Windows.UIElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="968fc-2657">Zastąp <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2657">Override <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2658">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2658">Identifies the <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2659">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2659">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2660">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2660">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2661">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2661">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2662">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2662">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2663">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2663">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2664">Występuje, gdy klawiatura ma fokus w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2664">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2665">Ponieważ to zdarzenie używa tunelowania, routingu, element, który ma fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2665">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="968fc-2666">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który jest ustawiony fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-2666">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="968fc-2667">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2667">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2668">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2668">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2669">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2669">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2670">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2670">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="968fc-2671">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2671">Routing strategy</span></span>|<span data-ttu-id="968fc-2672">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2672">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2673">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2673">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="968fc-2674">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2674">The corresponding bubbling event is <xref:System.Windows.UIElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="968fc-2675">Zastąp <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2675">Override <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2676">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2676">Identifies the <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2677">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2677">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2678">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2678">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2679">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2679">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2680">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2680">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2681">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2681">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2682">Występuje po naciśnięciu klawisza, gdy fokus znajduje się w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2682">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2683">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak polecenia i tekst.</span><span class="sxs-lookup"><span data-stu-id="968fc-2683">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="968fc-2684"><xref:System.Windows.UIElement.KeyDown> Zdarzeń jest tekst niższego poziomu zdarzenie danych wejściowych, które mogą nie zachowywać się, zgodnie z oczekiwaniami na niektórych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="968fc-2684">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="968fc-2685">Jest to, ponieważ niektóre kontrolki zostały składania do sterowania lub obsługa klasy, zapewniająca wyższego poziomu wersję tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="968fc-2685">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="968fc-2686">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewKeyDown> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2686">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2687">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewKeyDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2687">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2688">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2688">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2689">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2689">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="968fc-2690">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2690">Routing strategy</span></span>|<span data-ttu-id="968fc-2691">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2691">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2692">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2692">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="968fc-2693">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2693">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="968fc-2694">Zastąp <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2694">Override <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2695">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewKeyDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2695">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2696">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2696">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2697">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2697">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2698">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2698">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2699">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2699">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2700">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2700">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2701">Występuje po zwolnieniu klawisza gdy fokus znajduje się w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2701">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2702">Obsługa klucza współdziała z innymi funkcjami platformy, takich jak polecenia i tekst.</span><span class="sxs-lookup"><span data-stu-id="968fc-2702">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="968fc-2703"><xref:System.Windows.UIElement.KeyUp> Zdarzeń jest tekst niższego poziomu zdarzenie danych wejściowych, które mogą nie zachowywać się, zgodnie z oczekiwaniami na niektórych kontrolek.</span><span class="sxs-lookup"><span data-stu-id="968fc-2703">The <xref:System.Windows.UIElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="968fc-2704">Jest to, ponieważ niektóre kontrolki zostały składania do sterowania lub obsługa klasy, zapewniająca wyższego poziomu wersję tekst wejściowy obsługi i zdarzenia związane z.</span><span class="sxs-lookup"><span data-stu-id="968fc-2704">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="968fc-2705">Aby uzyskać szczegółowe informacje Sprawdź w dokumentacji dotyczącej poszczególnych formantów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2705">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="968fc-2706">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewKeyUp> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2706">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2707">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewKeyUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2707">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2708">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2708">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2709">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2709">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="968fc-2710">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2710">Routing strategy</span></span>|<span data-ttu-id="968fc-2711">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2711">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2712">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2712">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="968fc-2713">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2713">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="968fc-2714">Zastąp <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2714">Override <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2715">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewKeyUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2715">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2716">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2716">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2717">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2717">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2718">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2718">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2719">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2719">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2720">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2720">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2721">Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-2721">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2722">Ponieważ to zdarzenie używa tunelowania, routingu, element, który utraty fokus może być nie zawiera elementu podrzędnego zamiast elementu gdzie faktycznie dołączony program obsługi zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2722">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="968fc-2723">Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w dane zdarzeń, aby określić rzeczywisty element, który utraty fokus.</span><span class="sxs-lookup"><span data-stu-id="968fc-2723">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="968fc-2724">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2724">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2725">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2725">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2726">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2726">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2727">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2727">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="968fc-2728">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2728">Routing strategy</span></span>|<span data-ttu-id="968fc-2729">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2729">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2730">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2730">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="968fc-2731">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2731">The corresponding bubbling event is <xref:System.Windows.UIElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="968fc-2732">Zastąp <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2732">Override <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2733">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2733">Identifies the <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2734">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2734">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2735">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2735">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2736">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2736">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2737">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2737">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2738">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2738">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2739">Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2739">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2740">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewMouseDown> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2740">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2741">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewMouseDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2741">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-2742"><xref:System.Windows.UIElement.PreviewMouseDown> Zdarzenie jest zgłaszane w często razem z wartościami <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, które odpowiadają naciśnij jednego z dwóch przycisków myszy standard.</span><span class="sxs-lookup"><span data-stu-id="968fc-2742">The <xref:System.Windows.UIElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="968fc-2743"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> i <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> są również zdarzenia trasowane, ale są bezpośrednie zdarzenia trasowane, a odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2743"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="968fc-2744">Zobacz uwagi, na <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> lub <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2744">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2745">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2745">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2746">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2746">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="968fc-2747">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2747">Routing strategy</span></span>|<span data-ttu-id="968fc-2748">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2748">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2749">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2749">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-2750">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2750">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="968fc-2751">Zastąp <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2751">Override <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2752">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2752">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2753">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2753">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2754">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2754">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2755">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2755">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2756">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2756">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2757">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2757">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2758">Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2758">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2759">Chociaż wydaje się to wykonaj trasy tunelowania za pośrednictwem obrębu drzewa, faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdy <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2759">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="968fc-2760">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2760">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="968fc-2761">Dane zdarzenia tego zdarzenia udostępnia dane zdarzenia podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2761">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="968fc-2762">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.UIElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2762">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="968fc-2763">Po oznaczeniu <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> obsługi, możesz to zasadniczo oznaczanie <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> obsługiwana za wszelkie dalsze detektorów trasy i we wszystkich powiązanych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2763">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="968fc-2764">Prawdopodobnie obejmuje to zdarzenia generowane obsługi klasy takie jak <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2764">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="968fc-2765">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.UIElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="968fc-2765">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="968fc-2766">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2766">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="968fc-2767">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2767">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2768">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2768">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2769">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2769">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="968fc-2770">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2770">Routing strategy</span></span>|<span data-ttu-id="968fc-2771">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-2771">Direct</span></span>|  
|<span data-ttu-id="968fc-2772">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2772">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-2773">Zastąp <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2773">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2774">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2774">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2775">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2775">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2776">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2776">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2777">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2777">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2778">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2778">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2779">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2779">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2780">Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2780">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2781">Chociaż wydaje się to wykonaj trasy tunelowania za pośrednictwem obrębu drzewa, faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdy <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2781">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="968fc-2782">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2782">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="968fc-2783">Dane zdarzenia tego zdarzenia udostępnia dane zdarzenia podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2783">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="968fc-2784">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.UIElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2784">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="968fc-2785">Po oznaczeniu <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> obsługi, możesz to zasadniczo oznaczanie <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> obsługiwana za wszelkie dalsze detektorów trasy i we wszystkich powiązanych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2785">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="968fc-2786">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.UIElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="968fc-2786">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="968fc-2787">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2787">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="968fc-2788">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2788">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2789">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2789">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2790">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2790">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="968fc-2791">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2791">Routing strategy</span></span>|<span data-ttu-id="968fc-2792">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-2792">Direct</span></span>|  
|<span data-ttu-id="968fc-2793">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2793">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-2794">Zastąp <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2794">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2795">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2795">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2796">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2796">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2797">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2797">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2798">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2798">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2799">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2799">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2800">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2800">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2801">Występuje po przemieszczeniu wskaźnika myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2801">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2802">To zdarzenie występuje zarówno, gdy wskaźnik myszy po raz pierwszy najedzie na granice elementu, a także gdy wskaźnik myszy porusza się pozostając nadal w granicach elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2802">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="968fc-2803">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewMouseMove> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2803">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2804">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewMouseMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2804">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2805">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2805">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2806">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2806">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="968fc-2807">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2807">Routing strategy</span></span>|<span data-ttu-id="968fc-2808">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2808">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2809">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2809">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="968fc-2810">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2810">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="968fc-2811">Zastąp <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2811">Override <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2812">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2812">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2813">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2813">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2814">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2814">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2815">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2815">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2816">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2816">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2817">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2817">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2818">Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2818">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2819">Chociaż wydaje się to wykonaj trasy tunelowania za pośrednictwem obrębu drzewa, faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdy <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2819">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="968fc-2820">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2820">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="968fc-2821">Dane zdarzenia tego zdarzenia udostępnia dane zdarzenia podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2821">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="968fc-2822">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.UIElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2822">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="968fc-2823">Po oznaczeniu <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> obsługi, możesz to zasadniczo oznaczanie <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> obsługiwana za wszelkie dalsze detektorów trasy i we wszystkich powiązanych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2823">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="968fc-2824">Prawdopodobnie obejmuje to zdarzenia generowane obsługi klasy takie jak <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2824">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="968fc-2825">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.UIElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="968fc-2825">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="968fc-2826">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2826">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="968fc-2827">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2827">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2828">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2828">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2829">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2829">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="968fc-2830">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2830">Routing strategy</span></span>|<span data-ttu-id="968fc-2831">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-2831">Direct</span></span>|  
|<span data-ttu-id="968fc-2832">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2832">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-2833">Zastąp <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2833">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2834">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2834">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2835">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2835">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2836">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2836">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2837">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2837">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2838">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2838">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2839">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2839">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2840">Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2840">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2841">Chociaż wydaje się to wykonaj trasy tunelowania za pośrednictwem obrębu drzewa, faktycznie jest bezpośrednie zdarzenia trasowanego podniesione i reraised wzdłuż drzewo elementów przez każdy <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2841">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="968fc-2842">To zdarzenie jest jednym z kilku powiązanych zdarzeń, które raportu specyfikę przyciskiem myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenia, które są przetwarzane przez każdy element wzdłuż trasę w protokole zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2842">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="968fc-2843">Dane zdarzenia tego zdarzenia udostępnia dane zdarzenia podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2843">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="968fc-2844">Jeśli to zdarzenie jest oznaczony jako obsłużony, wzdłuż trasy zdarzeń, określone zdarzenia przycisku myszy nadal są wywoływane; jednak należy dodać procedury obsługi zdarzeń określonego przycisku myszy przez jawne wywołanie <xref:System.Windows.UIElement.AddHandler%2A>, przy użyciu opcji do obsługi zdarzeń, które są już oznaczone jako obsłużony, aby detektory zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2844">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="968fc-2845">Po oznaczeniu <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> obsługi, możesz to zasadniczo oznaczanie <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> obsługiwana za wszelkie dalsze detektorów trasy i we wszystkich powiązanych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2845">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="968fc-2846">Model traktować to zdarzenie (oraz inne zdarzenia przycisku myszy w <xref:System.Windows.UIElement>) jako myszy "Usługa" (przy użyciu definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy).</span><span class="sxs-lookup"><span data-stu-id="968fc-2846">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="968fc-2847">Zdarzenie dodaje wygodę wyeliminowanie konieczności Sprawdź Stany przycisku myszy (lewo i w prawo, góra dół) w oryginalnej zdarzeń myszy w danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2847">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="968fc-2848">Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie dla stanów niestandardowych przyciski, użytkownik może być konieczne użycie [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2848">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2849">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2849">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2850">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2850">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="968fc-2851">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2851">Routing strategy</span></span>|<span data-ttu-id="968fc-2852">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-2852">Direct</span></span>|  
|<span data-ttu-id="968fc-2853">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2853">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-2854">Zastąp <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2854">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2855">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2855">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2856">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2856">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2857">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2857">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2858">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2858">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2859">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2859">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2860">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2860">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2861">Występuje po zwolnieniu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2861">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2862">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewMouseUp> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2862">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2863">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewMouseUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2863">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-2864"><xref:System.Windows.UIElement.PreviewMouseUp> Zdarzenie jest zgłaszane w często razem z wartościami <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, które odpowiadają naciśnij jednego z dwóch przycisków myszy standard.</span><span class="sxs-lookup"><span data-stu-id="968fc-2864">The <xref:System.Windows.UIElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="968fc-2865"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> i <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> są również zdarzenia trasowane, ale są bezpośrednie zdarzenia trasowane, a odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2865"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="968fc-2866">Zobacz uwagi, na <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> lub <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2866">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2867">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2867">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2868">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2868">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="968fc-2869">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2869">Routing strategy</span></span>|<span data-ttu-id="968fc-2870">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2870">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2871">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2871">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-2872">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2872">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="968fc-2873">Zastąp <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2873">Override <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2874">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2874">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2875">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2875">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2876">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2876">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2877">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2877">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2878">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2878">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2879">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2879">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2880">Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2880">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2881">Zespół lub myszy przechwytywania pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli zostanie wyświetlony to zdarzenie od elementu wąsko zdefiniowany lub przechwycone, wskaźnik myszy może mieć w rzeczywistości za pośrednictwem innego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-2881">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="968fc-2882">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewMouseMove> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2882">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2883">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewMouseMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2883">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2884">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2884">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2885">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2885">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="968fc-2886">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2886">Routing strategy</span></span>|<span data-ttu-id="968fc-2887">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2887">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2888">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2888">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="968fc-2889">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2889">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="968fc-2890">Zastąp <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2890">Override <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2891">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2891">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2892">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2892">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2893">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2893">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2894">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2894">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2895">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2895">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2896">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2896">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2897">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-2897">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2898"><xref:System.Windows.UIElement.PreviewQueryContinueDrag> Zdarzeń umożliwia źródłom przeciągania zadeklarować, czy operacja przeciągania i upuszczania powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="968fc-2898">The <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="968fc-2899">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewQueryContinueDrag> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2899">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2900">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewQueryContinueDrag> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2900">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2901">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2901">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2902">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2902">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="968fc-2903">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2903">Routing strategy</span></span>|<span data-ttu-id="968fc-2904">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2904">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2905">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2905">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="968fc-2906">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2906">The corresponding bubbling event is <xref:System.Windows.UIElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="968fc-2907">Zastąp <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2907">Override <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2908">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2908">Identifies the <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2909">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2909">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2910">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2910">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2911">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2911">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2912">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2912">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2913">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2913">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2914">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2914">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2915">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusButtonDown> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2915">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2916">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusButtonDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2916">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-2917">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2917">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-2918">Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) i [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-2918">For more information, see [Touch Input Support in Windows Vista](https://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2919">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2919">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2920">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2920">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="968fc-2921">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2921">Routing strategy</span></span>|<span data-ttu-id="968fc-2922">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2922">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2923">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2923">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-2924">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2924">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="968fc-2925">Zastąp <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2925">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2926">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2926">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2927">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2927">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2928">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2928">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2929">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2929">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2930">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2930">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2931">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2931">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2932">Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2932">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2933">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusButtonUp> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2933">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2934">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusButtonUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2934">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-2935">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2935">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-2936">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-2936">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2937">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2937">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2938">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2938">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="968fc-2939">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2939">Routing strategy</span></span>|<span data-ttu-id="968fc-2940">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2940">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2941">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2941">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-2942">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2942">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="968fc-2943">Zastąp <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2943">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2944">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2944">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2945">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2945">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2946">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2946">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2947">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2947">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2948">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2948">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2949">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2949">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2950">Występuje po dotknięciu dyskretyzatora jest przemieszczany nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2950">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2951">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusDown> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2951">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2952">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2952">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-2953">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2953">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-2954">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-2954">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2955">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2955">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2956">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2956">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="968fc-2957">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2957">Routing strategy</span></span>|<span data-ttu-id="968fc-2958">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2958">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2959">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2959">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="968fc-2960">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2960">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="968fc-2961">Zastąp <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2961">Override <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2962">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2962">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2963">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2963">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2964">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2964">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2965">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2965">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2966">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2966">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2967">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2967">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2968">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="968fc-2968">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2969">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusInAirMove> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2969">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2970">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusInAirMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2970">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-2971">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2971">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-2972">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-2972">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2973">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2973">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2974">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2974">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="968fc-2975">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2975">Routing strategy</span></span>|<span data-ttu-id="968fc-2976">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2976">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2977">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2977">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-2978">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2978">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="968fc-2979">Zastąp <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2979">Override <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2980">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2980">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2981">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2981">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-2982">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-2982">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-2983">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-2983">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-2984">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2984">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-2985">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2985">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2986">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby wykryć, znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-2986">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2987">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusInRange> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-2987">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-2988">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusInRange> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-2988">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-2989">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-2989">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-2990">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-2990">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-2991">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-2991">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-2992">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-2992">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="968fc-2993">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-2993">Routing strategy</span></span>|<span data-ttu-id="968fc-2994">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-2994">Tunneling</span></span>|  
|<span data-ttu-id="968fc-2995">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-2995">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-2996">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="968fc-2996">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="968fc-2997">Zastąp <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-2997">Override <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-2998">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusInRange" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-2998">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-2999">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-2999">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3000">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3000">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3001">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3001">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3002">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3002">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3003">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3003">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3004">Występuje, gdy pióro jest przemieszczane nad elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3004">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="968fc-3005">Pióro musi być przemieszczane podczas wykrywania przez Dyskretyzator Aby zgłosić to zdarzenie, w przeciwnym razie <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> jest zgłaszane w zamian.</span><span class="sxs-lookup"><span data-stu-id="968fc-3005">The stylus must move while being detected by the digitizer to raise this event, otherwise, <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3006">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusMove> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3006">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3007">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3007">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3008">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3008">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3009">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3009">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3010">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3010">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3011">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3011">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="968fc-3012">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3012">Routing strategy</span></span>|<span data-ttu-id="968fc-3013">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-3013">Tunneling</span></span>|  
|<span data-ttu-id="968fc-3014">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3014">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-3015">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3015">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="968fc-3016">Zastąp <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3016">Override <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3017">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3017">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3018">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3018">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3019">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3019">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3020">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3020">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3021">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3021">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3022">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3022">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3023">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte.</span><span class="sxs-lookup"><span data-stu-id="968fc-3023">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3024">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusOutOfRange> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3024">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3025">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusOutOfRange> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3025">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3026">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3026">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3027">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3027">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3028">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3028">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3029">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3029">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="968fc-3030">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3030">Routing strategy</span></span>|<span data-ttu-id="968fc-3031">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-3031">Tunneling</span></span>|  
|<span data-ttu-id="968fc-3032">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3032">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-3033">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3033">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="968fc-3034">Zastąp <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3034">Override <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3035">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3035">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3036">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3036">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3037">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3037">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3038">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3038">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3039">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3039">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3040">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3040">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3041">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span><span class="sxs-lookup"><span data-stu-id="968fc-3041">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3042">Aby uzyskać informacji na temat gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3042">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="968fc-3043">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusSystemGesture> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3043">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3044">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusSystemGesture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3044">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3045">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3045">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3046">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3046">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3047">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3047">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3048">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3048">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="968fc-3049">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3049">Routing strategy</span></span>|<span data-ttu-id="968fc-3050">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-3050">Tunneling</span></span>|  
|<span data-ttu-id="968fc-3051">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3051">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="968fc-3052">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3052">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="968fc-3053">Zastąp <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3053">Override <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3054">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3054">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3055">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3055">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3056">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3056">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3057">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3057">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3058">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3058">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3059">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3059">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3060">Występuje, gdy użytkownik zgłasza pióra od dyskretyzatora, gdy pióro znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3060">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3061">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewStylusDown> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3061">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3062">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewStylusDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3062">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3063">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3063">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3064">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3064">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3065">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3065">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3066">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3066">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="968fc-3067">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3067">Routing strategy</span></span>|<span data-ttu-id="968fc-3068">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-3068">Tunneling</span></span>|  
|<span data-ttu-id="968fc-3069">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3069">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-3070">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3070">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="968fc-3071">Zastąp <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3071">Override <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3072">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewStylusUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3072">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3073">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3073">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3074">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3074">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3075">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3075">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3076">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3076">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3077">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3077">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3078">Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3078">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3079"><xref:System.Windows.UIElement.PreviewTextInput> Zdarzeń umożliwia składnik lub aplikację do nasłuchiwania pod kątem wprowadzanie tekstu w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3079">The <xref:System.Windows.UIElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="968fc-3080">Klawiatura jest podstawowym sposobem <xref:System.Windows.UIElement.PreviewTextInput>; ale można również wygenerować mowy, pisma ręcznego i inne urządzenia wejściowego <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3080">The keyboard is the primary means of <xref:System.Windows.UIElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="968fc-3081">Ze względu na kombinacje klawiszy - klawiatury domyślne albo za pośrednictwem edytory input method - wiele kluczowych zdarzeń mogą zgłaszać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3081">Because of key combinations - either in default keyboards or through input method editors - multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="968fc-3082">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.PreviewTextInput> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3082">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3083">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.PreviewTextInput> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3083">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3084">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3084">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3085">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3085">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTextInputEvent>|  
|<span data-ttu-id="968fc-3086">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3086">Routing strategy</span></span>|<span data-ttu-id="968fc-3087">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-3087">Tunneling</span></span>|  
|<span data-ttu-id="968fc-3088">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3088">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="968fc-3089">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3089">The corresponding bubbling event is <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="968fc-3090">Zastąp <xref:System.Windows.UIElement.OnPreviewTextInput%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3090">Override <xref:System.Windows.UIElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3091">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewTextInput" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3091">Identifies the <see cref="E:System.Windows.UIElement.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3092">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3092">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3093">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3093">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3094">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3094">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3095">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3095">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3096">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3096">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3097">Występuje, gdy palcem dotyka ekranu, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3097">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3098">Domyślnie <xref:System.Windows.UIElement.PreviewTouchDown> i <xref:System.Windows.UIElement.TouchDown> zdarzenia nie występują aż palcem dotyka ekranu i przenosi.</span><span class="sxs-lookup"><span data-stu-id="968fc-3098">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="968fc-3099">Naciśnięcie klawisza palcem na ekranie i przytrzymanie bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3099">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="968fc-3100">Naciśnij i przytrzymaj klawisz zachowanie jest odpowiednikiem myszy kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-3100">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="968fc-3101">Aby spowodować <xref:System.Windows.UIElement.PreviewTouchDown> i <xref:System.Windows.UIElement.TouchDown> zdarzenia tak szybko, jak palcem dotyka ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączonych właściwości `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3101">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3102">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3102">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3103">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3103">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="968fc-3104">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3104">Routing strategy</span></span>|<span data-ttu-id="968fc-3105">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-3105">Tunneling</span></span>|  
|<span data-ttu-id="968fc-3106">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3106">Delegate</span></span>|<span data-ttu-id="968fc-3107"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3107"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="968fc-3108">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3108">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="968fc-3109">Zastąp <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3109">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3110">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3110">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3111">Występuje po przemieszczeniu palcem na ekranie, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3111">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3112">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3112">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3113">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3113">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="968fc-3114">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3114">Routing strategy</span></span>|<span data-ttu-id="968fc-3115">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-3115">Tunneling</span></span>|  
|<span data-ttu-id="968fc-3116">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3116">Delegate</span></span>|<span data-ttu-id="968fc-3117"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3117"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="968fc-3118">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3118">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="968fc-3119">Zastąp <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3119">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3120">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3120">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3121">Występuje, gdy zostanie wywołane palcem zniżki w stosunku do ekranu, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3121">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3122">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3122">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3123">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3123">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="968fc-3124">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3124">Routing strategy</span></span>|<span data-ttu-id="968fc-3125">Tunelowanie</span><span class="sxs-lookup"><span data-stu-id="968fc-3125">Tunneling</span></span>|  
|<span data-ttu-id="968fc-3126">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3126">Delegate</span></span>|<span data-ttu-id="968fc-3127"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3127"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="968fc-3128">To odpowiednie zdarzenie propagacji <xref:System.Windows.UIElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3128">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="968fc-3129">Zastąp <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3129">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3130">Identyfikuje <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3130">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3131">Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</span><span class="sxs-lookup"><span data-stu-id="968fc-3131">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3132"><xref:System.Windows.UIElement.QueryContinueDrag> Zdarzeń umożliwia źródłom przeciągania określenie, czy operacja przeciągania i upuszczania powinna zostać anulowana.</span><span class="sxs-lookup"><span data-stu-id="968fc-3132">The <xref:System.Windows.UIElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="968fc-3133">To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.QueryContinueDrag> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3133">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3134">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.QueryContinueDrag> zdarzeń dołączonych do podstawowych <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3134">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3135">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3135">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3136">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3136">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryContinueDragEvent>|  
|<span data-ttu-id="968fc-3137">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3137">Routing strategy</span></span>|<span data-ttu-id="968fc-3138">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3138">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3139">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3139">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="968fc-3140">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3140">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="968fc-3141">Zastąp <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3141">Override <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3142">Identyfikuje <see cref="E:System.Windows.UIElement.QueryContinueDrag" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3142">Identifies the <see cref="E:System.Windows.UIElement.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3143">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3143">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3144">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3144">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3145">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3145">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3146">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3146">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3147">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3147">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3148">Występuje, gdy Zażądano wyświetlenia kursora.</span><span class="sxs-lookup"><span data-stu-id="968fc-3148">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="968fc-3149">To zdarzenie jest zgłaszane w elemencie za każdym razem, wskaźnik myszy przesuwa się do nowej lokalizacji, która oznacza, że obiekt kursora może wymagać zmiany na podstawie jego nowego położenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3149">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3150">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.QueryCursor> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3150">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryCursor> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3151">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.QueryCursor> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3151">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3152">Kursor jest określone przy użyciu tej nazwy zdarzeń nie jest kursor tekstu (czasami znana jako funkcja punktu wstawiania).</span><span class="sxs-lookup"><span data-stu-id="968fc-3152">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="968fc-3153">Zamiast tego kursor znajduje się w tym kontekście jest obiekt, który deklaruje na ekranie graficzną związane z kilku możliwych urządzeń powiązane dane wejściowe lub pojęcia związane z programowaniem Windows.</span><span class="sxs-lookup"><span data-stu-id="968fc-3153">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="968fc-3154">Ten obiekt jest reprezentowany przez <xref:System.Windows.Input.Cursor> klasy na platformie WPF.</span><span class="sxs-lookup"><span data-stu-id="968fc-3154">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="968fc-3155">System wejściowy WPF umożliwia zmianę tego kursora, gdy reprezentuje on na ekranie pozycji wskaźnika myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-3155">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="968fc-3156">Możesz użyć wstępnie zdefiniowanych wartości z <xref:System.Windows.Input.Cursors> wyliczenia lub możesz zadeklarować niestandardowe kursora w formie pliku obrazu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3156">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="968fc-3157">Nasłuchiwanie <xref:System.Windows.UIElement.QueryCursor> zdarzenie nie jest technikę efektywne zarządzanie kursora.</span><span class="sxs-lookup"><span data-stu-id="968fc-3157">Listening for the <xref:System.Windows.UIElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="968fc-3158">Zamiast tego każdy element należy zdefiniować własne zachowanie kursora z <xref:System.Windows.FrameworkContentElement.Cursor%2A> i <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3158">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="968fc-3159">Należy polegać wyłącznie na <xref:System.Windows.UIElement.QueryCursor> nie używasz WPF poziomie struktury podstawowych elementów, czy w dodatkowej okoliczności gdzie definiująca zachowanie kursor na zasadzie na element nie spełnia Twoich potrzeb.</span><span class="sxs-lookup"><span data-stu-id="968fc-3159">You should only rely on <xref:System.Windows.UIElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="968fc-3160">Więcej informacji na temat implementowania zachowanie kursora w odpowiedzi na <xref:System.Windows.UIElement.QueryCursor>, zobacz <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3160">For more information on implementing cursor behavior in response to <xref:System.Windows.UIElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3161">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3161">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3162">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3162">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryCursorEvent>|  
|<span data-ttu-id="968fc-3163">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3163">Routing strategy</span></span>|<span data-ttu-id="968fc-3164">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3164">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3165">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3165">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="968fc-3166">Nie ma żadnego zdefiniowanych odpowiednie zdarzenia tunelowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-3166">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="968fc-3167">Zastąp <xref:System.Windows.UIElement.OnQueryCursor%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3167">Override <xref:System.Windows.UIElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3168">Identyfikuje <see cref="E:System.Windows.UIElement.QueryCursor" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3168">Identifies the <see cref="E:System.Windows.UIElement.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3169">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3169">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3170">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3170">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3171">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3171">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3172">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3172">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3173">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3173">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="968fc-3174">A <see cref="T:System.Windows.RoutedEventArgs" /> , zawierający dane zdarzenia, a także identyfikuje zdarzenia w celu podniesienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3174">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="968fc-3175">Wywołuje określone zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3175">Raises a specific routed event.</span></span> <span data-ttu-id="968fc-3176"><see cref="T:System.Windows.RoutedEvent" /> Zgłoszenie jest identyfikowana w ramach <see cref="T:System.Windows.RoutedEventArgs" /> wystąpienia, który znajduje się (jako <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości danych zdarzenia).</span><span class="sxs-lookup"><span data-stu-id="968fc-3176">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3177">`e` Wpisaniu parametru jako typu podstawowego wspólne dla wszystkich danych zdarzenia trasowanego; jednak dane zdarzeń należy nadać jako typ danych bardziej konkretny od pozostałych zdarzeń, który jest dostępny dla wywoływanego, zdarzenia, ponieważ <xref:System.Windows.RoutedEventArgs> zawierają klasy pochodne właściwości rzeczywiste określone dane, które są przeznaczone dla określonych zdarzeń, gdy pojawia się ono.</span><span class="sxs-lookup"><span data-stu-id="968fc-3177">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="968fc-3178"><xref:System.Windows.RoutedEventArgs> nie jest po prostu właściwości stanu zdarzeń; identyfikuje zdarzenia trasowane do pozyskania.</span><span class="sxs-lookup"><span data-stu-id="968fc-3178"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="968fc-3179">Ten wzorzec wywoływanie zdarzeń i danych zdarzenia trasowanego zarówno różnią się od [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] klasy zdarzenia i dane, które zwykle tylko zawierają właściwości, które są związane ze zdarzeniem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3179">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-3180">Poniższy przykład tworzy dane zdarzenia, dołącza identyfikator zdarzenia do danych, a następnie używa wystąpienie danych zdarzeń, aby wywołać niestandardowe zdarzenie trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3180">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[RoutedEventCustom#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#raiseevent)]
 [!code-vb[RoutedEventCustom#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="uIElement.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-3181">Zwalnia wszystkie urządzeń dotykowych przechwycone z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3181">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="uIElement.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-3182">Jeśli ten element przechowywane przechwytywania, zwalnia przechwytywanie myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-3182">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3183">Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3183">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="968fc-3184">Należy wziąć pod uwagę wartości <xref:System.Windows.UIElement.IsMouseCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="968fc-3184">Consider checking the value of <xref:System.Windows.UIElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-3185">Poniższy przykład jest równoległe, na przykład, biorąc pod uwagę dla <xref:System.Windows.UIElement.CaptureMouse%2A>: obsługuje przycisku myszy do przechwytywania myszy release i ponownie włączyć przesuwanie wskaźnika myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-3185">The following example is the parallel to the example given for <xref:System.Windows.UIElement.CaptureMouse%2A>: it handles mouse button up to release mouse capture and re-enable moving the mouse.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="uIElement.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-3186">Zwalnia Przechwytywanie urządzenia pióra, jeśli ten element przechowywane przechwytywania.</span><span class="sxs-lookup"><span data-stu-id="968fc-3186">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3187">Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3187">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="968fc-3188">Należy wziąć pod uwagę wartości <xref:System.Windows.UIElement.IsStylusCaptured%2A> przed wywołaniem tej metody.</span><span class="sxs-lookup"><span data-stu-id="968fc-3188">Consider checking the value of <xref:System.Windows.UIElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="968fc-3189">Urządzenie do wydania.</span><span class="sxs-lookup"><span data-stu-id="968fc-3189">The device to release.</span></span></param>
        <summary><span data-ttu-id="968fc-3190">Próbuje zwolnić urządzeń dotykowych określony z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3190">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns><span data-ttu-id="968fc-3191"><see langword="true" /> w przypadku urządzeń dotykowych zwolnieniu; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-3191"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="968fc-3192"><paramref name="touchDevice" /> jest <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-3192"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="968fc-3193">Identyfikator zdarzenia trasowanego, dla którego dołączono program obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-3193">The identifier of the routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="968fc-3194">Implementacja określoną funkcję obsługi do usunięcia z kolekcji programu obsługi zdarzeń w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-3194">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="968fc-3195">Usuwa obsługi określonego zdarzenia trasowane z tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3195">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3196">Najbardziej typowym scenariuszem dla za pomocą tego [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] jest podczas implementowania [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzeń "opakowanie", który jest skojarzony z niestandardowe zdarzenie trasowane, szczególnie w przypadku, gdy implementują logikę "Usuń" programów obsługi na [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] poziom.</span><span class="sxs-lookup"><span data-stu-id="968fc-3196">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="968fc-3197">Przykład znajdujący się to uwagi sekcji ilustruje ten scenariusz.</span><span class="sxs-lookup"><span data-stu-id="968fc-3197">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="968fc-3198">Wywołanie tej metody nie ma wpływu, jeśli nie było żadnych procedury obsługi zarejestrowane przy użyciu kryteriów, które pasuje do parametrów wejściowych dla wywołania metody.</span><span class="sxs-lookup"><span data-stu-id="968fc-3198">Calling this method has no effect if there were no handlers registered with criteria that matches the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="968fc-3199">Jeśli więcej niż jeden program obsługi jest dołączony, które pasują do kryteriów, tylko pierwszego programu obsługi, w przypadku magazynu program obsługi jest usuwany.</span><span class="sxs-lookup"><span data-stu-id="968fc-3199">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="968fc-3200">To zachowanie jest zgodne z [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zachowanie `-=` operatora.</span><span class="sxs-lookup"><span data-stu-id="968fc-3200">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="968fc-3201">Ani `routedEvent` ani `handler` może być `null`.</span><span class="sxs-lookup"><span data-stu-id="968fc-3201">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="968fc-3202">Próbują dostarczyć albo wartość jako `null` zgłosi wyjątek.</span><span class="sxs-lookup"><span data-stu-id="968fc-3202">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="968fc-3203">Ta metoda ignoruje `handledEventsToo` informacje o parametrach, która jest dostępna, jeśli program obsługi po raz pierwszy zostały dodane za pomocą <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu, który umożliwia obsługę zdarzeń już obsługiwane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3203">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="968fc-3204">Dowolnego typu obsługi jest usuwany.</span><span class="sxs-lookup"><span data-stu-id="968fc-3204">Either type of handler is removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-3205">W poniższym przykładzie użyto <xref:System.Windows.UIElement.RemoveHandler%2A> jako część definicji otoki zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3205">The following example uses <xref:System.Windows.UIElement.RemoveHandler%2A> as part of an event wrapper definition.</span></span>  
  
 [!code-csharp[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#addremovehandler)]
 [!code-vb[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#addremovehandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="RenderSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size RenderSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size RenderSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderSize" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size RenderSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.RenderSize : System.Windows.Size with get, set" Usage="System.Windows.UIElement.RenderSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3206">Pobiera lub ustawia rozmiar renderowania końcowego tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3206">Gets (or sets) the final render size of this element.</span></span></summary>
        <value><span data-ttu-id="968fc-3207">Rozmiar renderowanych dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3207">The rendered size for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="968fc-3208">Nie należy ustawić tę właściwość, albo w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] lub w kodzie, jeśli system poziomie struktury układu WPF.</span><span class="sxs-lookup"><span data-stu-id="968fc-3208">Do not attempt to set this property, either in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or in code, if using the WPF framework-level layout system.</span></span> <span data-ttu-id="968fc-3209">Niemal we wszystkich scenariuszach Typowa aplikacja użyje tego systemu układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3209">Nearly all typical application scenarios will use this layout system.</span></span> <span data-ttu-id="968fc-3210">System układu nie będzie uwzględniać wielkości w <xref:System.Windows.UIElement.RenderSize%2A> właściwości bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="968fc-3210">The layout system will not respect sizes set in the <xref:System.Windows.UIElement.RenderSize%2A> property directly.</span></span> <span data-ttu-id="968fc-3211"><xref:System.Windows.UIElement.RenderSize%2A> Właściwość zadeklarowana zapisu umożliwiające niektórych WPF mostkowanie przypadki, które celowo obejście typowy układ protokoły, takie jak obsługa na poziomie core <xref:System.Windows.Documents.Adorner> klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-3211">The <xref:System.Windows.UIElement.RenderSize%2A> property is declared writable only to enable certain WPF core-level bridging cases that deliberately circumvent the typical layout protocols, such as support for the <xref:System.Windows.Documents.Adorner> class.</span></span>  
  
 <span data-ttu-id="968fc-3212">Ta właściwość może służyć do kontrolowania rozmiaru dotyczy renderowania w systemie układ zastępuje takich jak <xref:System.Windows.UIElement.OnRender%2A> lub <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3212">This property can be used for checking the applicable render size within layout system overrides such as <xref:System.Windows.UIElement.OnRender%2A> or <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span></span>  
  
 <span data-ttu-id="968fc-3213">Bardziej typowy scenariusz jest obsługa <xref:System.Windows.FrameworkElement.SizeChanged> zastąpienie zdarzeń z programem obsługi klasy lub <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3213">A more common scenario is handling the <xref:System.Windows.FrameworkElement.SizeChanged> event with the class handler override or the <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> event.</span></span>  
  
## Examples  
 <span data-ttu-id="968fc-3214">W poniższym przykładzie pokazano, jak korzysta z niestandardowego modułu definiowania układu kodu <xref:System.Windows.UIElement.RenderSize%2A> wartość w celu utworzenia i rozmiar grafiki prostokąt, który definiuje moduł definiowania układu, w ramach jego <xref:System.Windows.UIElement.OnRender%2A> implementacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3214">The following example shows how a custom adorner uses the <xref:System.Windows.UIElement.RenderSize%2A> value in order to create and size the rectangle graphic that defines the adorner, as part of its <xref:System.Windows.UIElement.OnRender%2A> implementation.</span></span>  
  
 [!code-csharp[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/csharp/VS_Snippets_Wpf/AdornersMiscCode/CSharp/Window1.xaml.cs#uielementdesiredsize)]
 [!code-vb[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AdornersMiscCode/visualbasic/window1.xaml.vb#uielementdesiredsize)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform RenderTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform RenderTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Transform ^ RenderTransform { System::Windows::Media::Transform ^ get(); void set(System::Windows::Media::Transform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenderTransform : System.Windows.Media.Transform with get, set" Usage="System.Windows.UIElement.RenderTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3215">Pobiera lub ustawia informacje o transformacji wpływającej na miejsce renderowania tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3215">Gets or sets transform information that affects the rendering position of this element.</span></span>  <span data-ttu-id="968fc-3216">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-3216">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-3217">W tym artykule opisano szczegóły transformacji renderowania żądaną.</span><span class="sxs-lookup"><span data-stu-id="968fc-3217">Describes the specifics of the desired render transform.</span></span> <span data-ttu-id="968fc-3218">Wartość domyślna to <see cref="P:System.Windows.Media.Transform.Identity" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-3218">The default is <see cref="P:System.Windows.Media.Transform.Identity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3219">Transformacji renderowania wygenerować rozmiar układu lub nie renderować informacje o rozmiarze.</span><span class="sxs-lookup"><span data-stu-id="968fc-3219">A render transform does not regenerate layout size or render size information.</span></span> <span data-ttu-id="968fc-3220">Renderowanie przekształcenia zwykle są przeznaczone dla animacji lub zastosowaniu efektu do elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3220">Render transforms are typically intended for animating or applying a temporary effect to an element.</span></span> <span data-ttu-id="968fc-3221">Na przykład, element może być powiększenie skupia się lub moused za pośrednictwem lub może być zakłóceń po załadowaniu do rysowania oka do tej części [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="968fc-3221">For example, the element might zoom when focused or moused over, or might jitter on load to draw the eye to that part of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransform"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-3222">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-3222">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3223">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3223">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformProperty>|  
|<span data-ttu-id="968fc-3224">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-3224">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-3225">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-3225">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point RenderTransformOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point RenderTransformOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransformOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransformOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point RenderTransformOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.RenderTransformOrigin : System.Windows.Point with get, set" Usage="System.Windows.UIElement.RenderTransformOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3226">Pobiera lub ustawia centralny punkt każdej możliwej transformacji renderowania zadeklarowanej przez <see cref="P:System.Windows.UIElement.RenderTransform" />, względem granic elementu przez.</span><span class="sxs-lookup"><span data-stu-id="968fc-3226">Gets or sets the center point of any possible render transform declared by <see cref="P:System.Windows.UIElement.RenderTransform" />, relative to the bounds of the element.</span></span>  <span data-ttu-id="968fc-3227">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-3227">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-3228">Wartość, która deklaruje transformacji renderowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-3228">The value that declares the render transform.</span></span> <span data-ttu-id="968fc-3229">Wartość domyślna to <see cref="T:System.Windows.Point" /> współrzędnych (0,0).</span><span class="sxs-lookup"><span data-stu-id="968fc-3229">The default value is a <see cref="T:System.Windows.Point" /> with coordinates (0,0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3230"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> ma nieco niestandardowe użycie <xref:System.Windows.Point> struktury wartości, w tym <xref:System.Windows.Point> nie reprezentuje bezwzględna lokalizacji, w układzie współrzędnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3230"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> has a somewhat nonstandard use of the <xref:System.Windows.Point> structure value, in that the <xref:System.Windows.Point> does not represent an absolute location in a coordinate system.</span></span> <span data-ttu-id="968fc-3231">Zamiast tego wartości z zakresu od 0 i 1 są interpretowane jako składnik w zakresie bieżącego elementu w każdej x, oś y.</span><span class="sxs-lookup"><span data-stu-id="968fc-3231">Instead, values between 0 and 1 are interpreted as a factor for the range of the current element in each x,y axis.</span></span> <span data-ttu-id="968fc-3232">Na przykład (0.5,0.5) spowoduje, że transformacji renderowania do wyśrodkowany w elemencie lub (1,1) należy umieścić transformacji renderowania u dołu rogu elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3232">For example, (0.5,0.5) will cause the render transform to be centered on the element, or (1,1) would place the render transform at the bottom right corner of the element.</span></span> <span data-ttu-id="968fc-3233"><xref:System.Double.NaN> nie jest akceptowane wartości.</span><span class="sxs-lookup"><span data-stu-id="968fc-3233"><xref:System.Double.NaN> is not an accepted value.</span></span>  
  
 <span data-ttu-id="968fc-3234">Wartości poza 0 i 1 również są akceptowane i spowodują więcej efektów niekonwencjonalne transformacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3234">Values beyond 0 and 1 are also accepted, and will result in more unconventional transform effects.</span></span> <span data-ttu-id="968fc-3235">Na przykład jeśli ustawisz <xref:System.Windows.UIElement.RenderTransformOrigin%2A> się (5,5), a następnie zastosować <xref:System.Windows.Media.RotateTransform>, punktem obrotu będzie również poza granicami samego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3235">For instance, if you set <xref:System.Windows.UIElement.RenderTransformOrigin%2A> to be (5,5), and then apply a <xref:System.Windows.Media.RotateTransform>, the rotation point will be well outside the bounds of the element itself.</span></span> <span data-ttu-id="968fc-3236">Przekształcenia będzie uruchamiaj swoje element wokół big circle, który pochodzi poza na dole z prawej.</span><span class="sxs-lookup"><span data-stu-id="968fc-3236">The transform will spin your element around in a big circle that originates beyond bottom right.</span></span> <span data-ttu-id="968fc-3237">Źródło może być zawarty wewnątrz jego elementu nadrzędnego, prawdopodobnie można prawdopodobnie poza ramki lub widoku.</span><span class="sxs-lookup"><span data-stu-id="968fc-3237">The origin might be somewhere inside its parent element and could possibly be possibly out of frame or view.</span></span> <span data-ttu-id="968fc-3238">Wartości ujemne są podobne, zostaną one wykracza poza granice lewym górnym rogu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3238">Negative point values are similar, these will go beyond the top left bounds.</span></span>  
  
 <span data-ttu-id="968fc-3239">Renderowanie przekształcenia nie wpływają na układ i są zazwyczaj używane do animować lub tymczasowego efekt zastosowany do elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3239">Render transforms do not affect layout, and are typically used to animate or apply a temporary effect to an element.</span></span>  
  
<a name="xamlAttributeUsage_RenderTransformOrigin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="968fc-3240">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="968fc-3240">XAML Attribute Usage</span></span>  
  
```  
<object RenderTransformOrigin="xOrigin, yOrigin"/>  
```  
  
<a name="xamlPropertyElementUsage_RenderTransformOrigin"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="968fc-3241">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="968fc-3241">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.RenderTransformOrigin>  
    <Point X=" xOrigin " Y=" yOrigin "/>  
  </object.RenderTransformOrigin>  
</object>  
```  
  
<a name="xamlValues_RenderTransformOrigin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="968fc-3242">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="968fc-3242">XAML Values</span></span>  
 <span data-ttu-id="968fc-3243">*xOrigin*</span><span class="sxs-lookup"><span data-stu-id="968fc-3243">*xOrigin*</span></span>  
 <span data-ttu-id="968fc-3244">Współczynnik początek w poziomie.</span><span class="sxs-lookup"><span data-stu-id="968fc-3244">The horizontal origin factor.</span></span> <span data-ttu-id="968fc-3245">Jest to zazwyczaj podawana jako wartość z zakresu od 0 do 1.</span><span class="sxs-lookup"><span data-stu-id="968fc-3245">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="968fc-3246">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="968fc-3246">See Remarks.</span></span>  
  
 <span data-ttu-id="968fc-3247">*yOrigin*</span><span class="sxs-lookup"><span data-stu-id="968fc-3247">*yOrigin*</span></span>  
 <span data-ttu-id="968fc-3248">Współczynnik początek w pionie.</span><span class="sxs-lookup"><span data-stu-id="968fc-3248">The vertical origin factor.</span></span> <span data-ttu-id="968fc-3249">Jest to zazwyczaj podawana jako wartość z zakresu od 0 do 1.</span><span class="sxs-lookup"><span data-stu-id="968fc-3249">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="968fc-3250">Zobacz uwagi.</span><span class="sxs-lookup"><span data-stu-id="968fc-3250">See Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransformOrigin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-3251">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-3251">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3252">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3252">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformOriginProperty>|  
|<span data-ttu-id="968fc-3253">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-3253">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-3254">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-3254">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-3255">Poniższy przykład tworzy się elementy w kodzie, stosuje się <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, a następnie stosuje <xref:System.Windows.UIElement.RenderTransform%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3255">The following example builds up elements in code, applies a <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, and then applies a  <xref:System.Windows.UIElement.RenderTransform%2A>.</span></span>  
  
 [!code-csharp[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/csharp/VS_Snippets_Wpf/transformanimations_snip/CSharp/RotateAboutCenterExample.cs#uielementrendertransformorigin)]
 [!code-vb[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/visualbasic/VS_Snippets_Wpf/transformanimations_snip/visualbasic/rotateaboutcenterexample.vb#uielementrendertransformorigin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.RenderTransform" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOriginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformOriginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformOriginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformOriginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformOriginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderTransformOriginProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3256">Identyfikuje <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-3256">Identifies the <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RenderTransformProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.RenderTransformProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3257">Identyfikuje <see cref="P:System.Windows.UIElement.RenderTransform" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-3257">Identifies the <see cref="P:System.Windows.UIElement.RenderTransform" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="uIElement.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-3258">Zwraca, czy procesy serializacji należy serializować zawartość <see cref="P:System.Windows.UIElement.CommandBindings" /> właściwości wystąpienia tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-3258">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="968fc-3259"><see langword="true" /> Jeśli <see cref="P:System.Windows.UIElement.CommandBindings" /> wartość właściwości powinna być Zserializowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-3259"><see langword="true" /> if the <see cref="P:System.Windows.UIElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3260">Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.UIElement.CommandBindings%2A> lokalnie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="968fc-3260">This will return `true` if <xref:System.Windows.UIElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="968fc-3261">To `ShouldSerialize` podana metoda, ponieważ <xref:System.Windows.UIElement.CommandBindings%2A> właściwość nie ma wartości domyślnej proste.</span><span class="sxs-lookup"><span data-stu-id="968fc-3261">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="968fc-3262">Ta metoda wskazuje, czy właściwość zmieniła się z jego wartość domyślną.</span><span class="sxs-lookup"><span data-stu-id="968fc-3262">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="968fc-3263">Zazwyczaj wywołuje tę metodę albo tworzenie projektanta lub tworzenia własnych dołączanie kontrolki <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3263">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="968fc-3264">Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych za pomocą resetowania metod ShouldSerialize i](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3264">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="uIElement.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-3265">Zwraca, czy procesy serializacji należy serializować zawartość <see cref="P:System.Windows.UIElement.InputBindings" /> właściwości wystąpienia tej klasy.</span><span class="sxs-lookup"><span data-stu-id="968fc-3265">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="968fc-3266"><see langword="true" /> Jeśli <see cref="P:System.Windows.UIElement.InputBindings" /> wartość właściwości powinna być Zserializowany; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-3266"><see langword="true" /> if the <see cref="P:System.Windows.UIElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3267">Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.UIElement.InputBindings%2A> lokalnie jest ustawiona.</span><span class="sxs-lookup"><span data-stu-id="968fc-3267">This will return `true` if <xref:System.Windows.UIElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="968fc-3268">To `ShouldSerialize` podana metoda, ponieważ <xref:System.Windows.UIElement.InputBindings%2A> właściwość nie ma wartości domyślnej proste.</span><span class="sxs-lookup"><span data-stu-id="968fc-3268">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="968fc-3269">Ta metoda wskazuje, czy właściwość zmieniła się z jego wartość domyślną.</span><span class="sxs-lookup"><span data-stu-id="968fc-3269">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="968fc-3270">Zazwyczaj wywołuje tę metodę albo tworzenie projektanta lub tworzenia własnych dołączanie kontrolki <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3270">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="968fc-3271">Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych za pomocą resetowania metod ShouldSerialize i](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3271">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixels">
      <MemberSignature Language="C#" Value="public bool SnapsToDevicePixels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SnapsToDevicePixels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberSignature Language="VB.NET" Value="Public Property SnapsToDevicePixels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SnapsToDevicePixels { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SnapsToDevicePixels : bool with get, set" Usage="System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3272">Pobiera lub ustawia wartość określającą, czy renderowanie dla tego elementu powinno używać urządzeń określonych ustawień piksela podczas renderowania.</span><span class="sxs-lookup"><span data-stu-id="968fc-3272">Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.</span></span>  <span data-ttu-id="968fc-3273">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-3273">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-3274"><see langword="true" /> Jeśli element ma być renderowany zgodnie z pikseli urządzenia; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-3274"><see langword="true" /> if the element should render in accordance to device pixels; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="968fc-3275">Domyślne, ponieważ nie zadeklarowano na <see cref="T:System.Windows.UIElement" /> jest <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-3275">The default as declared on <see cref="T:System.Windows.UIElement" /> is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3276">Można ustawić tę właściwość na `true` w elemencie głównym, aby włączyć pikseli przyciąganie renderowanie typu Pixel interfejsu użytkownika.</span><span class="sxs-lookup"><span data-stu-id="968fc-3276">You can set this property to `true` on your root element to enable pixel snap rendering throughout the UI.</span></span> <span data-ttu-id="968fc-3277">Dla urządzeń działających z rozdzielczością większą niż 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], piksel przyciąganie renderowania można zminimalizować wygładzanie ilość artefaktów spowodowanych antyaliasingiem w pobliżu linii o pojedynczej jednostki.</span><span class="sxs-lookup"><span data-stu-id="968fc-3277">For devices operating at greater than 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], pixel snap rendering can minimize anti-aliasing visual artifacts in the vicinity of single-unit solid lines.</span></span>  
  
 <span data-ttu-id="968fc-3278">W przypadku dziedziczonych przez <xref:System.Windows.FrameworkElement> lub klasy, pochodne wszelkie <xref:System.Windows.FrameworkElement> zastępuje metadanych dla tej właściwości zależności ustawić <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> właściwości metadanych `true`.</span><span class="sxs-lookup"><span data-stu-id="968fc-3278">When inherited by <xref:System.Windows.FrameworkElement> or any possible derived classes, <xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property to set the <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> metadata property to `true`.</span></span> <span data-ttu-id="968fc-3279">To osiąga to tylko najbardziej zewnętrznego element poddrzewo wymaga określenia <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> jako `true`, i następnie zgłasza wszystkie elementy podrzędne tego poddrzewa <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> jako `true` i będzie miał <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> efekt wizualny.</span><span class="sxs-lookup"><span data-stu-id="968fc-3279">What this achieves is that only the outermost element in a subtree needs to specify <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true`, and all child elements of that subtree will then report <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true` and will have the <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> visual effect.</span></span>  
  
<a name="dependencyPropertyInfo_SnapsToDevicePixels"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-3280">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-3280">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3281">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3281">Identifier field</span></span>|<xref:System.Windows.UIElement.SnapsToDevicePixelsProperty>|  
|<span data-ttu-id="968fc-3282">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-3282">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-3283">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-3283">None</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/aa970908(v=vs.90)"><span data-ttu-id="968fc-3284">Funkcja przyciągania w aplikacjach WPF</span><span class="sxs-lookup"><span data-stu-id="968fc-3284">Pixel Snapping in WPF Applications</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixelsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SnapsToDevicePixelsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SnapsToDevicePixelsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SnapsToDevicePixelsProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3285">Identyfikuje <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-3285">Identifies the <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3286">Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3286">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3287">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.StylusButtonDown> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3287">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3288">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusButtonDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3288">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3289">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3289">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3290">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3290">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3291">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3291">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3292">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3292">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonDownEvent>|  
|<span data-ttu-id="968fc-3293">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3293">Routing strategy</span></span>|<span data-ttu-id="968fc-3294">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3294">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3295">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3295">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-3296">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3296">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="968fc-3297">Zastąp <xref:System.Windows.UIElement.OnStylusButtonDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3297">Override <xref:System.Windows.UIElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3298">Identyfikuje <see cref="E:System.Windows.UIElement.StylusButtonDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3298">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3299">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3299">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3300">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3300">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3301">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3301">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3302">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3302">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3303">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3303">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3304">Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3304">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3305">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.StylusButtonUp> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3305">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3306">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusButtonUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3306">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3307">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3307">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3308">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3308">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3309">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3309">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3310">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3310">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonUpEvent>|  
|<span data-ttu-id="968fc-3311">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3311">Routing strategy</span></span>|<span data-ttu-id="968fc-3312">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3312">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3313">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3313">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="968fc-3314">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3314">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="968fc-3315">Zastąp <xref:System.Windows.UIElement.OnStylusButtonUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3315">Override <xref:System.Windows.UIElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3316">Identyfikuje <see cref="E:System.Windows.UIElement.StylusButtonUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3316">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3317">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3317">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3318">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3318">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3319">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3319">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3320">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3320">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3321">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3321">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3322">Występuje po dotknięciu dyskretyzatora, gdy pióro znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3322">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3323">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.StylusDown> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3323">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3324">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusDown> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3324">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3325">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3325">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3326">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3326">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3327">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3327">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3328">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3328">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusDownEvent>|  
|<span data-ttu-id="968fc-3329">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3329">Routing strategy</span></span>|<span data-ttu-id="968fc-3330">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3330">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3331">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3331">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="968fc-3332">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3332">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="968fc-3333">Zastąp <xref:System.Windows.UIElement.OnStylusDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3333">Override <xref:System.Windows.UIElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3334">Identyfikuje <see cref="E:System.Windows.UIElement.StylusDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3334">Identifies the <see cref="E:System.Windows.UIElement.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3335">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3335">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3336">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3336">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3337">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3337">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3338">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3338">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3339">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3339">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3340">Występuje po pokonaniu przez pióro granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3340">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3341"><xref:System.Windows.UIElement.StylusEnter> to, że bezpośredniej obsługi strategii routingu zdarzeń, który używa.</span><span class="sxs-lookup"><span data-stu-id="968fc-3341"><xref:System.Windows.UIElement.StylusEnter> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="968fc-3342">Zdarzenia trasowane bezpośrednie nie są zgłaszane wzdłuż trasy; Zamiast tego są są obsługiwane w tym samym elemencie gdzie są one inicjowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3342">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="968fc-3343">Jednakże umożliwiają one innych aspektów zachowania zdarzenie trasowane, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="968fc-3343">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="968fc-3344">Mimo że <xref:System.Windows.UIElement.StylusEnter> ścieżki po pokonaniu przez granice elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement.IsStylusOver%2A> wartość właściwości została zmieniona z `false` do `true` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-3344">Although <xref:System.Windows.UIElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="968fc-3345">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.StylusEnter> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3345">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3346">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusEnter> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3346">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3347">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3347">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3348">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3348">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3349">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3349">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3350">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3350">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusEnterEvent>|  
|<span data-ttu-id="968fc-3351">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3351">Routing strategy</span></span>|<span data-ttu-id="968fc-3352">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-3352">Direct</span></span>|  
|<span data-ttu-id="968fc-3353">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3353">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-3354">Zastąp <xref:System.Windows.UIElement.OnStylusEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3354">Override <xref:System.Windows.UIElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3355">Identyfikuje <see cref="E:System.Windows.UIElement.StylusEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3355">Identifies the <see cref="E:System.Windows.UIElement.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3356">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3356">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3357">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3357">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3358">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3358">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3359">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3359">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3360">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3360">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3361">Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</span><span class="sxs-lookup"><span data-stu-id="968fc-3361">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3362">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.StylusInAirMove> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3362">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3363">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusInAirMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3363">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3364">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3364">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3365">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3365">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3366">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3366">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3367">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3367">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="968fc-3368">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3368">Routing strategy</span></span>|<span data-ttu-id="968fc-3369">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3369">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3370">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3370">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-3371">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3371">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="968fc-3372">Zastąp <xref:System.Windows.UIElement.OnStylusInAirMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3372">Override <xref:System.Windows.UIElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3373">Identyfikuje <see cref="E:System.Windows.UIElement.StylusInAirMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3373">Identifies the <see cref="E:System.Windows.UIElement.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3374">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3374">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3375">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3375">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3376">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3376">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3377">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3377">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3378">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3378">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3379">Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby wykryć, znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3379">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3380">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.StylusInRange> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3380">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3381">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusInRange> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3381">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3382">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3382">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3383">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3383">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3384">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3384">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3385">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3385">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInRangeEvent>|  
|<span data-ttu-id="968fc-3386">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3386">Routing strategy</span></span>|<span data-ttu-id="968fc-3387">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3387">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3388">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3388">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-3389">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3389">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="968fc-3390">Zastąp <xref:System.Windows.UIElement.OnStylusInRange%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3390">Override <xref:System.Windows.UIElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3391">Identyfikuje <see cref="E:System.Windows.UIElement.StylusInRange" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3391">Identifies the <see cref="E:System.Windows.UIElement.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3392">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3392">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3393">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3393">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3394">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3394">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3395">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3395">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3396">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3396">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3397">Występuje po opuszczeniu przez pióro granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3397">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3398"><xref:System.Windows.UIElement.StylusLeave> to, że bezpośredniej obsługi strategii routingu zdarzeń, który używa.</span><span class="sxs-lookup"><span data-stu-id="968fc-3398"><xref:System.Windows.UIElement.StylusLeave> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="968fc-3399">Zdarzenia trasowane bezpośrednie nie są zgłaszane wzdłuż trasy; Zamiast tego są są obsługiwane w tym samym elemencie gdzie są one inicjowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3399">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="968fc-3400">Jednakże umożliwiają one innych aspektów zachowania zdarzenie trasowane, takich jak wyzwalacze zdarzeń w stylach.</span><span class="sxs-lookup"><span data-stu-id="968fc-3400">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="968fc-3401">Mimo że <xref:System.Windows.UIElement.StylusLeave> ścieżki po opuszczeniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement.IsStylusOver%2A> wartość właściwości została zmieniona z `true` do `false` w tym elemencie.</span><span class="sxs-lookup"><span data-stu-id="968fc-3401">Although <xref:System.Windows.UIElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="968fc-3402">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.StylusLeave> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3402">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3403">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusLeave> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3403">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3404">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3404">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3405">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3405">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3406">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3406">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3407">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3407">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusLeaveEvent>|  
|<span data-ttu-id="968fc-3408">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3408">Routing strategy</span></span>|<span data-ttu-id="968fc-3409">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-3409">Direct</span></span>|  
|<span data-ttu-id="968fc-3410">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3410">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-3411">Zastąp <xref:System.Windows.UIElement.OnStylusLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3411">Override <xref:System.Windows.UIElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3412">Identyfikuje <see cref="E:System.Windows.UIElement.StylusLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3412">Identifies the <see cref="E:System.Windows.UIElement.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3413">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3413">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3414">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3414">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3415">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3415">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3416">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3416">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3417">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3417">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3418">Występuje, gdy pióro jest przemieszczane nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3418">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="968fc-3419">Pióro musi dotykać dyskretyzatora, aby zgłosić to zdarzenie.</span><span class="sxs-lookup"><span data-stu-id="968fc-3419">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="968fc-3420">W przeciwnym razie <see cref="E:System.Windows.UIElement.StylusInAirMove" /> jest zgłaszane w zamian.</span><span class="sxs-lookup"><span data-stu-id="968fc-3420">Otherwise, <see cref="E:System.Windows.UIElement.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3421">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.StylusMove> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3421">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3422">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusMove> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3422">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3423">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3423">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3424">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3424">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3425">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3425">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3426">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3426">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusMoveEvent>|  
|<span data-ttu-id="968fc-3427">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3427">Routing strategy</span></span>|<span data-ttu-id="968fc-3428">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3428">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3429">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3429">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-3430">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3430">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="968fc-3431">Zastąp <xref:System.Windows.UIElement.OnStylusMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3431">Override <xref:System.Windows.UIElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3432">Identyfikuje <see cref="E:System.Windows.UIElement.StylusMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3432">Identifies the <see cref="E:System.Windows.UIElement.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3433">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3433">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3434">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3434">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3435">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3435">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3436">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3436">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3437">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3437">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3438">Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3438">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3439">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.StylusOutOfRange> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3439">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3440">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusOutOfRange> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3440">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3441">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3441">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3442">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3442">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3443">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3443">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3444">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3444">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="968fc-3445">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3445">Routing strategy</span></span>|<span data-ttu-id="968fc-3446">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3446">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3447">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3447">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-3448">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3448">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="968fc-3449">Zastąp <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3449">Override <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3450">Identyfikuje <see cref="E:System.Windows.UIElement.StylusOutOfRange" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3450">Identifies the <see cref="E:System.Windows.UIElement.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3451">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3451">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3452">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3452">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3453">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3453">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3454">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3454">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3455">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3455">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusPlugIns">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.StylusPlugIns" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StylusPlugIns As StylusPlugInCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ StylusPlugIns { System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StylusPlugIns : System.Windows.Input.StylusPlugIns.StylusPlugInCollection" Usage="System.Windows.UIElement.StylusPlugIns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.StylusPlugInCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3456">Pobiera kolekcję obiektów wszystkich pióro wtyczki (Dostosowywanie) skojarzone z tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3456">Gets a collection of all stylus plug-in (customization) objects associated with this element.</span></span></summary>
        <value><span data-ttu-id="968fc-3457">Kolekcja dodatków plug-in pióra jako wyspecjalizowane kolekcji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3457">The collection of stylus plug-ins, as a specialized collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3458">Na przykład kontrolkę, która wypełnia tej kolekcji <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3458">An example of a control that populates this collection is <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="968fc-3459"><xref:System.Windows.Controls.InkCanvas> dodaje <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> jako elementu kolekcji, co pozwala <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> do interakcji z wejście pióra i wygenerować unikatowy renderowania w odpowiedzi na pióro oparte na zdarzeniach.</span><span class="sxs-lookup"><span data-stu-id="968fc-3459"><xref:System.Windows.Controls.InkCanvas> adds the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> as a collection item, which enables the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to interact with stylus input and produce the unique rendering in response to stylus driven events.</span></span>  
  
 <span data-ttu-id="968fc-3460">Aby uzyskać informacje na temat tworzenia niestandardowych wtyczek, która może odbierać i interpretować wejście pióra, zobacz [przechwytuje wejściowych z pisaka](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3460">For information on creating custom plug-ins that can receive and interpret stylus input, see [Intercepting Input from the Stylus](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="968fc-3461">Poniższy przykład tworzy <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> wystąpieniu oraz dodaje go do <xref:System.Windows.UIElement.StylusPlugIns%2A> kolekcji niestandardowej pisma odręcznego, Obsługa kontroli.</span><span class="sxs-lookup"><span data-stu-id="968fc-3461">The following example creates a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> instance and adds it to the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection for a custom ink handling control.</span></span>  
  
 [!code-csharp[StylusPluginSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusPluginSamples/CSharp/StylusControl.cs#3)]
 [!code-vb[StylusPluginSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusPluginSamples/VisualBasic/StylusControl.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />
        <altmember cref="T:System.Windows.Controls.InkCanvas" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3462">Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</span><span class="sxs-lookup"><span data-stu-id="968fc-3462">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3463">Aby uzyskać więcej informacji na temat gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3463">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="968fc-3464">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.StylusSystemGesture> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3464">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3465">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusSystemGesture> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3465">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3466">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3466">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3467">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3467">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3468">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3468">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3469">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3469">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="968fc-3470">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3470">Routing strategy</span></span>|<span data-ttu-id="968fc-3471">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3471">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3472">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3472">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="968fc-3473">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3473">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="968fc-3474">Zastąp <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3474">Override <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3475">Identyfikuje <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3475">Identifies the <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3476">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3476">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3477">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3477">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3478">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3478">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3479">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3479">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3480">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3480">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3481">Występuje, gdy użytkownik zgłasza pióra od dyskretyzatora, gdy znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3481">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3482">To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.StylusUp> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3482">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3483">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.StylusUp> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3483">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="968fc-3484">Dotyk, mysz i wejście pióra istnieje w określonej relacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3484">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="968fc-3485">Aby uzyskać więcej informacji, zobacz [przegląd danych wejściowych](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="968fc-3485">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3486">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3486">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3487">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3487">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusUpEvent>|  
|<span data-ttu-id="968fc-3488">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3488">Routing strategy</span></span>|<span data-ttu-id="968fc-3489">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3489">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3490">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3490">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="968fc-3491">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3491">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="968fc-3492">Zastąp <xref:System.Windows.UIElement.OnStylusUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3492">Override <xref:System.Windows.UIElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3493">Identyfikuje <see cref="E:System.Windows.UIElement.StylusUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3493">Identifies the <see cref="E:System.Windows.UIElement.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3494">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3494">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3495">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3495">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3496">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3496">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3497">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3497">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3498">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3498">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3499">Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3499">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="968fc-3500">To zdarzenie jest już może być oznaczony jako obsługiwane przez wewnętrzne implementacje formanty złożone.</span><span class="sxs-lookup"><span data-stu-id="968fc-3500">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="968fc-3501">Zobacz uwagi poniżej.</span><span class="sxs-lookup"><span data-stu-id="968fc-3501">See Remark below.</span></span>  
  
 <span data-ttu-id="968fc-3502"><xref:System.Windows.UIElement.TextInput> Zdarzeń może już być oznaczony jako obsługiwane przez wewnętrzne implementacje formanty złożone.</span><span class="sxs-lookup"><span data-stu-id="968fc-3502">The <xref:System.Windows.UIElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="968fc-3503">Na przykład <xref:System.Windows.Controls.TextBox> jest formantem złożone gdzie <xref:System.Windows.UIElement.TextInput> zdarzeń już jest oznaczony jako obsługiwany; w jego składania.</span><span class="sxs-lookup"><span data-stu-id="968fc-3503">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.UIElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="968fc-3504">Formanty to zrobić, ponieważ kontrolka wymaga do interpretacji niektóre typy danych wejściowych, np. klawiszy strzałek, jako mające specjalne znaczenie dla tej kontrolki.</span><span class="sxs-lookup"><span data-stu-id="968fc-3504">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="968fc-3505">Jeśli używasz <xref:System.Windows.UIElement.PreviewTextInput> jako zdarzenie, gdzie możesz dołączyć obsługi wprowadzania tekstu, może zostać wyświetlony w poszukiwaniu lepszych wyników.</span><span class="sxs-lookup"><span data-stu-id="968fc-3505">If you use <xref:System.Windows.UIElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="968fc-3506">Ta technika zmierzone w większości przypadków gdzie kompozycji formantu ma już oznaczone na to zdarzenie, jako obsłużony i uniemożliwia odbieranie zdarzeń wzdłuż trasy zdarzenia programu obsługi.</span><span class="sxs-lookup"><span data-stu-id="968fc-3506">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="968fc-3507"><xref:System.Windows.UIElement.TextInput> Zdarzeń umożliwia składnik lub aplikację do nasłuchiwania pod kątem wprowadzanie tekstu w sposób niezależny od urządzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3507">The <xref:System.Windows.UIElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="968fc-3508">Klawiatura jest podstawowym sposobem <xref:System.Windows.UIElement.TextInput>, ale mowy, pisma ręcznego i inne urządzenia wejściowego może też wiązać <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3508">The keyboard is the primary means of <xref:System.Windows.UIElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
 <span data-ttu-id="968fc-3509">Ze względu na kombinacje klawiszy - klawiatury domyślne albo za pośrednictwem edytory input method - wiele kluczowych zdarzeń mogą zgłaszać tylko jedno zdarzenie wprowadzania tekstu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3509">Because of key combinations - either in default keyboards or through input method editors - multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="968fc-3510">To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączone zdarzenia dla tej klasy, aby <xref:System.Windows.UIElement.TextInput> jest częścią klasy członków listy podczas <xref:System.Windows.UIElement> jest dziedziczone jako podstawowy element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3510">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.TextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="968fc-3511">Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement.TextInput> zdarzeń dołączonych do podstawowych <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączone zdarzenie i odbierać to samo wystąpienie danych zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3511">Event handlers that are attached to the <xref:System.Windows.UIElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3512">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3512">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3513">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3513">Identifier field</span></span>|<xref:System.Windows.UIElement.TextInputEvent>|  
|<span data-ttu-id="968fc-3514">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3514">Routing strategy</span></span>|<span data-ttu-id="968fc-3515">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3515">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3516">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3516">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="968fc-3517">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3517">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="968fc-3518">Zastąp <xref:System.Windows.UIElement.OnTextInput%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3518">Override <xref:System.Windows.UIElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3519">Identyfikuje <see cref="E:System.Windows.UIElement.TextInput" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3519">Identifies the <see cref="E:System.Windows.UIElement.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3520">Zdarzenia trasowanego identyfikatory są tworzone, jeśli są rejestrowane zdarzenia trasowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3520">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="968fc-3521">Identyfikatory te zawierają nazwę identyfikującą, typ właściciela, typ procedury obsługi, strategii routingu i narzędzie metody dodawania właścicieli dla zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3521">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="968fc-3522">Aby dodać funkcje obsługi klas, można użyć tych identyfikatorów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3522">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="968fc-3523">Aby uzyskać więcej informacji na temat rejestrowania zdarzenia trasowane, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3523">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="968fc-3524">Aby uzyskać więcej informacji na temat przy użyciu identyfikatorów zdarzenia trasowanego, aby dodać funkcje obsługi klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3524">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3525">Występuje, gdy palcem dotyka ekranu, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3525">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3526">Domyślnie <xref:System.Windows.UIElement.PreviewTouchDown> i <xref:System.Windows.UIElement.TouchDown> zdarzenia nie występują aż palcem dotyka ekranu i przenosi.</span><span class="sxs-lookup"><span data-stu-id="968fc-3526">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="968fc-3527">Naciśnięcie klawisza palcem na ekranie i przytrzymanie bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3527">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="968fc-3528">Naciśnij i przytrzymaj klawisz zachowanie jest odpowiednikiem myszy kliknij prawym przyciskiem myszy.</span><span class="sxs-lookup"><span data-stu-id="968fc-3528">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="968fc-3529">Aby spowodować <xref:System.Windows.UIElement.PreviewTouchDown> i <xref:System.Windows.UIElement.TouchDown> zdarzenia tak szybko, jak palcem dotyka ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączonych właściwości `false` dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3529">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3530">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3530">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3531">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3531">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchDownEvent>|  
|<span data-ttu-id="968fc-3532">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3532">Routing strategy</span></span>|<span data-ttu-id="968fc-3533">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3533">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3534">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3534">Delegate</span></span>|<span data-ttu-id="968fc-3535"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3535"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="968fc-3536">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3536">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="968fc-3537">Zastąp <xref:System.Windows.UIElement.OnTouchDown%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3537">Override <xref:System.Windows.UIElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3538">Identyfikuje <see cref="E:System.Windows.UIElement.TouchDown" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3538">Identifies the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3539">Występuje, gdy touch z zewnątrz do wewnątrz granic tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3539">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3540">To zdarzenie jest zawsze inicjowane, czy urządzenia dotykowe są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3540">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3541">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3541">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3542">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3542">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchEnterEvent>|  
|<span data-ttu-id="968fc-3543">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3543">Routing strategy</span></span>|<span data-ttu-id="968fc-3544">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-3544">Direct</span></span>|  
|<span data-ttu-id="968fc-3545">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3545">Delegate</span></span>|<span data-ttu-id="968fc-3546"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3546"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="968fc-3547">Zastąp <xref:System.Windows.UIElement.OnTouchEnter%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3547">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3548">Identyfikuje <see cref="E:System.Windows.UIElement.TouchEnter" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3548">Identifies the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3549">Pobiera wszystkie urządzenia dotykowe, które są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3549">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="968fc-3550">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3550">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3551">Pobiera wszystkie urządzenia dotykowe, które są przechwytywane do tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3551">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="968fc-3552">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3552">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3553">Pobiera wszystkie urządzenia dotykowe, znajdujących się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3553">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="968fc-3554">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiekty znajdujące się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3554">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3555">Pobiera wszystkie urządzenia dotykowe, znajdujących się nad tym elementem lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3555">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="968fc-3556">Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przez ten element lub wszystkie elementy podrzędne w jego drzewa wizualnego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3556">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3557">Występuje, gdy touch z wnętrza poza granicami tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3557">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3558">To zdarzenie jest zawsze inicjowane, czy urządzenia dotykowe są przechwytywane do tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3558">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3559">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3559">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3560">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3560">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchLeaveEvent>|  
|<span data-ttu-id="968fc-3561">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3561">Routing strategy</span></span>|<span data-ttu-id="968fc-3562">Bezpośrednie</span><span class="sxs-lookup"><span data-stu-id="968fc-3562">Direct</span></span>|  
|<span data-ttu-id="968fc-3563">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3563">Delegate</span></span>|<span data-ttu-id="968fc-3564"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3564"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="968fc-3565">Zastąp <xref:System.Windows.UIElement.OnTouchLeave%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3565">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3566">Identyfikuje <see cref="E:System.Windows.UIElement.TouchLeave" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3566">Identifies the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3567">Występuje po przemieszczeniu palcem na ekranie, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3567">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3568">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3568">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3569">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3569">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchMoveEvent>|  
|<span data-ttu-id="968fc-3570">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3570">Routing strategy</span></span>|<span data-ttu-id="968fc-3571">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3571">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3572">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3572">Delegate</span></span>|<span data-ttu-id="968fc-3573"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3573"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="968fc-3574">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3574">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="968fc-3575">Zastąp <xref:System.Windows.UIElement.OnTouchMove%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3575">Override <xref:System.Windows.UIElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3576">Identyfikuje <see cref="E:System.Windows.UIElement.TouchMove" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3576">Identifies the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3577">Występuje, gdy zostanie wywołane palcem zniżki w stosunku do ekranu, gdy finger znajduje się nad tym elementem.</span><span class="sxs-lookup"><span data-stu-id="968fc-3577">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="968fc-3578">Informacje dotyczące kierowanego zdarzenia</span><span class="sxs-lookup"><span data-stu-id="968fc-3578">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3579">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3579">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchUpEvent>|  
|<span data-ttu-id="968fc-3580">Strategii routingu</span><span class="sxs-lookup"><span data-stu-id="968fc-3580">Routing strategy</span></span>|<span data-ttu-id="968fc-3581">Propagacja</span><span class="sxs-lookup"><span data-stu-id="968fc-3581">Bubbling</span></span>|  
|<span data-ttu-id="968fc-3582">Delegate</span><span class="sxs-lookup"><span data-stu-id="968fc-3582">Delegate</span></span>|<span data-ttu-id="968fc-3583"><xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3583"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="968fc-3584">Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3584">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="968fc-3585">Zastąp <xref:System.Windows.UIElement.OnTouchUp%2A> zaimplementować obsługę klasy dla tego zdarzenia w klasach pochodnych.</span><span class="sxs-lookup"><span data-stu-id="968fc-3585">Override <xref:System.Windows.UIElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3586">Identyfikuje <see cref="E:System.Windows.UIElement.TouchUp" /> zdarzenia trasowanego.</span><span class="sxs-lookup"><span data-stu-id="968fc-3586">Identifies the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslatePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point TranslatePoint (System.Windows.Point point, System.Windows.UIElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point TranslatePoint(valuetype System.Windows.Point point, class System.Windows.UIElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point TranslatePoint(System::Windows::Point point, System::Windows::UIElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.TranslatePoint : System.Windows.Point * System.Windows.UIElement -&gt; System.Windows.Point" Usage="uIElement.TranslatePoint (point, relativeTo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="relativeTo" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="968fc-3587">Punkt wartość względem tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3587">The point value, as relative to this element.</span></span></param>
        <param name="relativeTo"><span data-ttu-id="968fc-3588">Element do danego punktu do translacji.</span><span class="sxs-lookup"><span data-stu-id="968fc-3588">The element to translate the given point into.</span></span></param>
        <summary><span data-ttu-id="968fc-3589">Wykonuje translację punktu względem tego elementu na współrzędne, które są względne wobec określonego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3589">Translates a point relative to this element to coordinates that are relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="968fc-3590">Wartość punktu teraz względem elementu docelowego, a nie na ten element źródła.</span><span class="sxs-lookup"><span data-stu-id="968fc-3590">A point value, now relative to the target element rather than this source element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3591">Przekazywanie `null` dla `relativeTo` jest dozwolone i oznacza, że współrzędne powinna być określona względem element główny w drzewie logicznym, do której należy ten element.</span><span class="sxs-lookup"><span data-stu-id="968fc-3591">Passing `null` for `relativeTo` is permitted, and indicates that coordinates should be relative to the root element in the logical tree that this element belongs to.</span></span>  
  
 <span data-ttu-id="968fc-3592">Ta metoda jest używana do translacji wartości punktów testu trafienia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3592">This method is used for translating hit test point values.</span></span> <span data-ttu-id="968fc-3593">Wywołanie tej metody jest szczególnie istotne w przypadku tworzenia kontrolki potrzebne do przetwarzania danych wejściowych na niższym poziomie.</span><span class="sxs-lookup"><span data-stu-id="968fc-3593">Calling this method is mainly relevant if you are authoring a control and need to process input at a lower level.</span></span> <span data-ttu-id="968fc-3594">Korzystając z istniejących kontrolek, możesz ogólnie założono, że formanty ukończone zgłosi wyników testu trafienia przetłumaczone poprawnie.</span><span class="sxs-lookup"><span data-stu-id="968fc-3594">If you are using existing controls, you can generally assume that completed controls will report correctly translated hit test results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uid">
      <MemberSignature Language="C#" Value="public string Uid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Uid" />
      <MemberSignature Language="VB.NET" Value="Public Property Uid As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uid { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uid : string with get, set" Usage="System.Windows.UIElement.Uid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3595">Pobiera lub ustawia Unikatowy identyfikator (lokalizacja) dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3595">Gets or sets the unique identifier (for localization) for this element.</span></span> <span data-ttu-id="968fc-3596">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-3596">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-3597">Ciąg, który jest unikatowy identyfikator dla tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3597">A string that is the unique identifier for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3598">Używane przez projektantów, aby uzyskać `x:Uid` wartości (zobacz [Przegląd lokalizacja i globalizacja WPF](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) Aby uzyskać więcej informacji).</span><span class="sxs-lookup"><span data-stu-id="968fc-3598">Used by designers to get the `x:Uid` value (see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) for more information).</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-3599">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-3599">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3600">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3600">Identifier field</span></span>|<xref:System.Windows.UIElement.UidProperty>|  
|<span data-ttu-id="968fc-3601">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-3601">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-3602">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-3602">None</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/81defade-483b-4a89-b76d-9b25bba34010"><span data-ttu-id="968fc-3603">x: Uid — atrybut</span><span class="sxs-lookup"><span data-stu-id="968fc-3603">x:Uid Attribute</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UidProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UidProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UidProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.UidProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UidProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UidProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UidProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.UidProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3604">Identyfikuje <see cref="P:System.Windows.UIElement.Uid" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-3604">Identifies the <see cref="P:System.Windows.UIElement.Uid" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLayout">
      <MemberSignature Language="C#" Value="public void UpdateLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.UpdateLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLayout();" />
      <MemberSignature Language="F#" Value="member this.UpdateLayout : unit -&gt; unit" Usage="uIElement.UpdateLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="968fc-3605">Zapewnia, że wszystkie elementy podrzędne visual tego elementu prawidłowo są aktualizowane dla układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3605">Ensures that all visual child elements of this element are properly updated for layout.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3606">Wywołanie tej metody, elementy z <xref:System.Windows.UIElement.IsMeasureValid%2A> `false` lub <xref:System.Windows.UIElement.IsArrangeValid%2A> `false` wywoła specyficzne dla elementu <xref:System.Windows.UIElement.MeasureCore%2A> i <xref:System.Windows.UIElement.ArrangeCore%2A> aktualizować metody, które wymusza układ i wszystkich rozmiarów obliczanej zostaną zweryfikowane.</span><span class="sxs-lookup"><span data-stu-id="968fc-3606">When you call this method, elements with <xref:System.Windows.UIElement.IsMeasureValid%2A>`false` or <xref:System.Windows.UIElement.IsArrangeValid%2A>`false` will call element-specific <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> methods, which forces layout update, and all computed sizes will be validated.</span></span>  
  
 <span data-ttu-id="968fc-3607">Wywołanie tej metody nie ma wpływu Jeśli układ jest bez zmian lub rozmieszczeniu ani pomiaru stan układu jest nieprawidłowy.</span><span class="sxs-lookup"><span data-stu-id="968fc-3607">Calling this method has no effect if layout is unchanged, or if neither arrangement nor measurement state of a layout is invalid.</span></span> <span data-ttu-id="968fc-3608">Jednakże, jeśli układ jest nieprawidłowy w związku z obu <xref:System.Windows.UIElement.UpdateLayout%2A> wywołanie zostanie ponownie całego układu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3608">However, if layout is invalid in either respect, the <xref:System.Windows.UIElement.UpdateLayout%2A> call will redo the entire layout.</span></span> <span data-ttu-id="968fc-3609">W związku z tym, należy unikać wywoływania <xref:System.Windows.UIElement.UpdateLayout%2A> po każdej zmianie przyrostowych i pomocnicze w drzewie elementów.</span><span class="sxs-lookup"><span data-stu-id="968fc-3609">Therefore, you should avoid calling <xref:System.Windows.UIElement.UpdateLayout%2A> after each incremental and minor change in the element tree.</span></span> <span data-ttu-id="968fc-3610">System układu wykona układ elementów, zgodnie z opóźnieniem, korzystając z algorytmu, który wydajności i waluty, a za pomocą strategii wagi, które mają być odroczone zmiany do katalogów głównych, dopóki wszystkie elementy podrzędne są prawidłowe.</span><span class="sxs-lookup"><span data-stu-id="968fc-3610">The layout system will perform element layout in a deferred manner, using an algorithm that balances performance and currency, and with a weighting strategy to defer changes to roots until all child elements are valid.</span></span> <span data-ttu-id="968fc-3611">Powinny wywoływać tylko <xref:System.Windows.UIElement.UpdateLayout%2A> Jeśli bezwzględnie konieczne zaktualizowane rozmiary i położenie i tylko wtedy, gdy masz pewność, że zostały wykonane wszystkie zmiany właściwości, kontroli i który może mieć wpływ na układ.</span><span class="sxs-lookup"><span data-stu-id="968fc-3611">You should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if you absolutely need updated sizes and positions, and only after you are certain that all changes to properties that you control and that may affect layout are completed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberSignature Language="F#" Value="member this.Visibility : System.Windows.Visibility with get, set" Usage="System.Windows.UIElement.Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3612">Pobiera lub ustawia [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] widoczność tego elementu.</span><span class="sxs-lookup"><span data-stu-id="968fc-3612">Gets or sets the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] visibility of this element.</span></span>  <span data-ttu-id="968fc-3613">Jest to właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-3613">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="968fc-3614">Wartość wyliczenia.</span><span class="sxs-lookup"><span data-stu-id="968fc-3614">A value of the enumeration.</span></span> <span data-ttu-id="968fc-3615">Wartość domyślna to <see cref="F:System.Windows.Visibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="968fc-3615">The default value is <see cref="F:System.Windows.Visibility.Visible" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="968fc-3616">Ustawienie tej właściwości ma wpływ na wartość <xref:System.Windows.UIElement.IsVisible%2A>, który z kolei mogą zgłaszać <xref:System.Windows.UIElement.IsVisibleChanged> zdarzeń.</span><span class="sxs-lookup"><span data-stu-id="968fc-3616">Setting this property affects the value of <xref:System.Windows.UIElement.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement.IsVisibleChanged> event.</span></span> <span data-ttu-id="968fc-3617">Jednak <xref:System.Windows.UIElement.IsVisible%2A> ma innych czynników, które wpływają, na przykład ustawienia widoczność elementów nadrzędnych, które go zawierają.</span><span class="sxs-lookup"><span data-stu-id="968fc-3617">However, <xref:System.Windows.UIElement.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it.</span></span>  
  
 <span data-ttu-id="968fc-3618">Elementy gdzie <xref:System.Windows.UIElement.Visibility%2A> nie <xref:System.Windows.Visibility.Visible> nie uczestniczą w danych wejściowych zdarzeń (lub poleceń), nie wpływają na przebiegów środka lub rozmieszczanie układu, nie są w kolejności karty i nie będą raportowane podczas testowania trafień.</span><span class="sxs-lookup"><span data-stu-id="968fc-3618">Elements where <xref:System.Windows.UIElement.Visibility%2A> is not <xref:System.Windows.Visibility.Visible> do not participate in input events (or commands), do not influence either the Measure or Arrange passes of layout, are not in a tab sequence, and will not be reported in hit testing.</span></span>  
  
 <span data-ttu-id="968fc-3619">W przypadku dziedziczonych przez <xref:System.Windows.Window> lub jej klasy pochodne <xref:System.Windows.Window> redefiniuje wartość domyślna tej właściwości to <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3619">When inherited by <xref:System.Windows.Window> or its derived classes, <xref:System.Windows.Window> redefines the default value of this property to be <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="968fc-3620">Ma to wpływ nie jest uruchomiona przebiegu miary układu w początkowo utworzony <xref:System.Windows.Window>, i <xref:System.Windows.UIElement.RenderSize%2A> zwraca (0,0).</span><span class="sxs-lookup"><span data-stu-id="968fc-3620">This has the effect of not running the Measure pass of layout on an initially created <xref:System.Windows.Window>, and <xref:System.Windows.UIElement.RenderSize%2A> returns (0,0).</span></span> <span data-ttu-id="968fc-3621">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3621">For details, see <xref:System.Windows.Window>.</span></span> <span data-ttu-id="968fc-3622"><xref:System.Windows.Controls.Primitives.Popup> również ponownie wartość domyślna ma być <xref:System.Windows.Visibility.Collapsed>, za pomocą podobne zachowanie wynikową <xref:System.Windows.Controls.Primitives.Popup> i jej klasy pochodne.</span><span class="sxs-lookup"><span data-stu-id="968fc-3622"><xref:System.Windows.Controls.Primitives.Popup> also redefines the default value to be <xref:System.Windows.Visibility.Collapsed>, with similar resulting behavior for <xref:System.Windows.Controls.Primitives.Popup> and its derived classes.</span></span>  
  
<a name="dependencyPropertyInfo_Visibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="968fc-3623">Informacje dotyczące właściwości zależności</span><span class="sxs-lookup"><span data-stu-id="968fc-3623">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="968fc-3624">Pole identyfikatora</span><span class="sxs-lookup"><span data-stu-id="968fc-3624">Identifier field</span></span>|<xref:System.Windows.UIElement.VisibilityProperty>|  
|<span data-ttu-id="968fc-3625">Ustaw właściwości metadanych `true`</span><span class="sxs-lookup"><span data-stu-id="968fc-3625">Metadata properties set to `true`</span></span>|<span data-ttu-id="968fc-3626">Brak</span><span class="sxs-lookup"><span data-stu-id="968fc-3626">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="968fc-3627">Poniższy przykład wykonuje program obsługi, który odwołuje się do różnych nazwane przyciskami, które mają być wzajemnie wykluczających się para w interfejsie użytkownika.</span><span class="sxs-lookup"><span data-stu-id="968fc-3627">The following example implements a handler that references two different named buttons that are intended to be a mutually exclusive pair in the user interface.</span></span> <span data-ttu-id="968fc-3628">Przed uruchomieniem logiki rzeczywisty program skojarzony z przyciskiem, równa się sam przycisk <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, a inny przycisk w parze jest ustawiona na <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="968fc-3628">Prior to running the actual program logic associated with the button, the button itself is set to be <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, and the other button in the pair is set to <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[MediaElement_snip#UIElementVisibility](~/samples/snippets/csharp/VS_Snippets_Wpf/MediaElement_snip/CSharp/PlaybackExample.cs#uielementvisibility)]
 [!code-vb[MediaElement_snip#UIElementVisibility](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MediaElement_snip/VB/PlaybackExample.vb#uielementvisibility)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsVisible" />
        <altmember cref="T:System.Windows.Visibility" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement.VisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="968fc-3629">Identyfikuje <see cref="P:System.Windows.UIElement.Visibility" /> właściwość zależności.</span><span class="sxs-lookup"><span data-stu-id="968fc-3629">Identifies the <see cref="P:System.Windows.UIElement.Visibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>