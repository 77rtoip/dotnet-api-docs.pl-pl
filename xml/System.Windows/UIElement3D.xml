<Type Name="UIElement3D" FullName="System.Windows.UIElement3D">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f1b4fe164e5086607128f1b7486da3fa6192ba9e" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32039971" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class UIElement3D : System.Windows.Media.Media3D.Visual3D, System.Windows.IInputElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract UIElement3D extends System.Windows.Media.Media3D.Visual3D implements class System.Windows.IInputElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIElement3D" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UIElement3D&#xA;Inherits Visual3D&#xA;Implements IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElement3D abstract : System::Windows::Media::Media3D::Visual3D, System::Windows::IInputElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Media3D.Visual3D</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Windows.UIElement3D" /> jest klasę podstawową dla implementacji poziomu core WPF opierając się na elementy Windows Presentation Foundation (WPF) i właściwości podstawowych prezentacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D> jest to abstrakcyjna klasa podstawowa, z którego mogą dziedziczyć klasy do reprezentowania określonych elementów 3D.  
  
 Ogólnie jest znacznie zachowanie danych wejściowych, koncentrujących się i obsługi zdarzeń dla 3D elementy zdefiniowane w <xref:System.Windows.UIElement3D> klasy. W tym zdarzenia klawiatura, mysz i wprowadzania danych piórem i właściwości powiązanych stanu. Wiele z tych zdarzeń jest kierowane zdarzenia i wiele zdarzeń związanych z danych wejściowych ma zarówno propagacji routingu wersji, a także tunelowania wersji zdarzenia. Zdarzenia te pary zazwyczaj są to zdarzenia największe znaczenie dla autorów formantu.  
  
 <xref:System.Windows.UIElement3D> zawiera również [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] dotyczących [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] modelu zdarzeń, łącznie z metod, które może wiązać się z określonych kierowane zdarzenia, które pochodzą z wystąpienia elementu.  
  
 A <xref:System.Windows.UIElement3D> ma następujące możliwości, w szczególności zdefiniowane przez <xref:System.Windows.UIElement3D> klasy:  
  
-   Mogą odpowiadać na dane wejściowe użytkownika (włącznie z kontrolą wysyłania danych wejściowych za pośrednictwem obsługi zdarzeń routingu lub routingu poleceń).  
  
-   Podnieść kierowane zdarzenia, używane podczas podróży trasę przy użyciu drzewa logicznego elementu.  
  
> [!IMPORTANT]
>  <xref:System.Windows.UIElement3D.Visibility%2A> stan ma wpływ na wszystkie dane wejściowe obsługi przez ten element. Elementy, które nie są widoczne nie uczestniczą w testowania trafień i nie otrzymują zdarzenia wejściowe, nawet jeśli wskaźnik myszy znajduje się nad granicami gdy jest element jeśli były widoczne.  
  
 W odróżnieniu od <xref:System.Windows.UIElement> klasy <xref:System.Windows.UIElement3D> klasa nie ma układ. W związku z tym <xref:System.Windows.UIElement3D> nie ma klasy **miary** lub **Rozmieść** metody.  
  
 Klasa, która pochodzi z <xref:System.Windows.UIElement3D> i zachowuje własną kolekcją <xref:System.Windows.Media.Media3D.Visual3D> obiektów przez zastąpienie <xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A> i <xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A> nadal należy przekazać nowy <xref:System.Windows.Media.Media3D.Visual3D> obiekty do <xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A>.  
  
 <xref:System.Windows.UIElement3D> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób pochodzi od <xref:System.Windows.UIElement3D> klasy w celu utworzenia `Sphere` klasy:  
  
 [!code-csharp[Shapes#Sphere](~/samples/snippets/csharp/VS_Snippets_Wpf/Shapes/CSharp/Sphere.cs#sphere)]
 [!code-vb[Shapes#Sphere](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Shapes/visualbasic/sphere.vb#sphere)]  
  
 Pełny przykład, zobacz [UIElement3D kuli próbki](http://go.microsoft.com/fwlink/?LinkID=160044).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UIElement3D ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UIElement3D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.UIElement3D" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.%23ctor%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">Identyfikator kierowanego zdarzenia mają być obsługiwane.</param>
        <param name="handler">Odwołanie do implementacji programu obsługi.</param>
        <summary>Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej procedury obsługi dla tego samego zdarzenia można dodać wiele razy bez podnoszenia Wystąpił wyjątek. Jednak program obsługi jest rzeczywiście wielokrotnie wywoływać gdy zdarzenie jest obsługiwane. W związku z tym należy rozważyć, jak to zachowanie może mieć efekty uboczne, które należy uwzględnić w implementację programu obsługi.  
  
 Ta metoda używane zwykle do implementacji metody dostępu "add", dla [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorca dostępu zdarzeń niestandardowych kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.AddHandler%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent">Identyfikator kierowanego zdarzenia mają być obsługiwane.</param>
        <param name="handler">Odwołanie do implementacji programu obsługi.</param>
        <param name="handledEventsToo">
          <see langword="true" /> zarejestrować program obsługi w taki sposób, że jest wywoływana, nawet w przypadku, gdy zaznaczono kierowanego zdarzenia przetwarzanych w jego dane zdarzeń; <see langword="false" /> rejestrowania programu obsługi z domyślnego warunku, że nie zostanie wywołany, jeśli kierowanego zdarzenia jest już oznaczona obsłużone.  
  
 Wartość domyślna to <see langword="false" />.  
  
 Nie rutynowo Pytaj do rehandle kierowanego zdarzenia.</param>
        <summary>Dodaje obsługi kierowanego zdarzenia określonego zdarzenia routingiem, dodawanie obsługi do kolekcji programu obsługi dla bieżącego elementu. Określ <paramref name="handledEventsToo" /> jako <see langword="true" /> mają podanego programu obsługi, można wywołać dla kierowanego zdarzenia, który już został oznaczony jako obsługiwany przez inny element wzdłuż trasy zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przetwarzanie zdarzenia wejściowe niskiego poziomu w praktycznym sposobem jest złożonym zadaniem. Wiele formantów implementuje zachowanie, gdzie określone zdarzenie zostanie oznaczony jako obsługiwany i zastępuje inne zdarzenie bardziej intuicyjne. Ogólnie rzecz biorąc formantu tylko oznaczy zdarzenia wejściowe platformy jako obsługiwane w przypadku niektórych zamiar projektu dla w ten sposób. W niektórych scenariuszach te cele projektu może być wymaga z konkretnym obsługi zdarzenia wejściowego. Jest w tych scenariuszach tego rejestrowanie programów obsługi z `handledEventsToo` jako `true` jest odpowiedni. Jednak użytkownik nie należy tego robić regularnie. Wywoływanie programy obsługi zdarzeń w odpowiedzi na wszystkie zdarzenia, nawet jeśli obsługiwane będzie skomplikować własne przetwarzania logiki zdarzeń aplikacji. Jeśli logika obsługi jest znaczny spadek wydajności może zostać wyświetlony. Należy zarezerwować stosowania Dołączanie programów obsługi zdarzeń już obsługiwane w sytuacji, gdy użytkownik ma już odnaleziony podczas procesu projektowania, że niektóre kontrolki są obsługi zdarzeń, które nadal mają być obsługiwane z logiką aplikacji.  
  
 Inny technika unikanie klasy zachowania niektórych kombinacji zdarzenie kontroli obsługi polega na użyciu zamiast podglądu tego zdarzenia. Na przykład jeśli <xref:System.Windows.UIElement3D.MouseLeftButtonDown> jest oznaczony jako obsługiwany przez Obsługa klasy może być możliwe dodanie obsługi <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> zamiast tego.  
  
 Tej procedury obsługi dla tego samego zdarzenia można dodać wiele razy bez podnoszenia Wystąpił wyjątek. Jednak program obsługi jest rzeczywiście wielokrotnie wywoływać gdy zdarzenie jest obsługiwane. W związku z tym należy rozważyć, jak to zachowanie może mieć efekty uboczne, które należy uwzględnić w implementację programu obsługi.  
  
 Ta metoda używane zwykle do implementacji metody dostępu "add", dla [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] wzorca dostępu zdarzeń niestandardowych kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.AddHandler%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route">Programy obsługi są dodawane do trasy zdarzenia.</param>
        <param name="e">Dane zdarzenia, które służy do dodawania obsługi. Ta metoda używa <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości danych zdarzeń na potrzeby obsługi.</param>
        <summary>Dodaje obsługi do określonego <see cref="T:System.Windows.EventRoute" /> dla bieżącego <see cref="T:System.Windows.UIElement3D" /> kolekcję procedur obsługi zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody mogą być używane przez elementy zawartości hosta (albo tymi, które implementują <xref:System.Windows.IContentHost> lub nie) można dodać obsługi elementów podrzędnych <xref:System.Windows.EventRoute>.  
  
 <xref:System.Windows.UIElement3D.AddToEventRoute%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ten element może być użyty jako element docelowy operacji przeciągania i upuszczania.</summary>
        <value>
          <see langword="true" /> Jeśli ten element może być używany jako obiekt docelowy operacji przeciągania i upuszczania. w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Operacje przeciągania i upuszczania nie są domyślnie włączone i musi być włączona celowo <xref:System.Windows.UIElement3D.AllowDrop%2A> do `true`. Poza tego ustawienia podstawowe zachowanie przeciągania i upuszczania całkowicie zależy od implementacji i nie jest zdefiniowany przez <xref:System.Windows.UIElement3D> lub dowolnej klasy podstawowej elementu. Niektóre formanty, na przykład <xref:System.Windows.Controls.RichTextBox>, ma domyślne zachowanie. Aby uzyskać więcej informacji dotyczących operacji przeciągania i upuszczania, zobacz [przeciągania i upuszczania omówienie](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).  
  
 <xref:System.Windows.UIElement3D.AllowDrop%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.AllowDropProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.AllowDrop" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.AllowDropProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy co najmniej jeden touch są przechwytywane do tego elementu.</summary>
        <value>
          <see langword="true" /> Jeśli co najmniej jeden touch są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.AreAnyTouchesCaptured" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy co najmniej jeden touch są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</summary>
        <value>
          <see langword="true" /> Jeśli co najmniej jeden touch są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy naciśnięciu dotykowego co najmniej jeden nad tym elementem.</summary>
        <value>
          <see langword="true" /> Jeśli naciśnięciu dotykowego co najmniej jeden nad tym elementem; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy co najmniej jeden touch naciśnięciu za pośrednictwem tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</summary>
        <value>
          <see langword="true" /> Jeśli co najmniej jeden touch jest wciśnięty za pośrednictwem tego elementu lub elementów podrzędnych w jego drzewie wizualnym; w przeciwnym razie <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.AreAnyTouchesOver" /> właściwości zależności.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Próbuje wymusić przechwytywanie myszy do tego elementu.</summary>
        <returns>
          <see langword="true" /> Jeśli pomyślnie przechwyceniu myszy; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Można przechwycić elementu musi być włączony. Sprawdź, czy <xref:System.Windows.UIElement3D.IsEnabled%2A> jest `true` przed wywołaniem <xref:System.Windows.UIElement3D.CaptureMouse%2A>.  
  
 Jeśli wywołanie <xref:System.Windows.UIElement3D.CaptureMouse%2A> zwraca `true`, następnie <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> jest również `true`.  
  
 Jeśli wywołanie <xref:System.Windows.UIElement3D.CaptureMouse%2A> zwraca `true`, a następnie <xref:System.Windows.UIElement3D.GotMouseCapture> i <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> zdarzenia są generowane, z <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> zdarzeń dane raportowane jako element gdzie <xref:System.Windows.UIElement3D.CaptureMouse%2A> metoda jest wywoływana. Jeśli wymusisz przechwytywania może zakłócać Przechwytywanie istniejących — szczególnie w przypadku przechwytywania, które dotyczą przeciągania i upuszczania za pomocą myszy.  
  
 Aby wyczyścić przechwytywanie myszy wszystkich elementów, należy wywołać <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> z `element` podać jako parametr `null`.  
  
 <xref:System.Windows.UIElement3D.CaptureMouse%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Próbuje wymusić Przechwytywanie pióra do tego elementu.</summary>
        <returns>
          <see langword="true" /> Jeśli pomyślnie przechwycenia pióra; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja oparte na podstawowym domyślnego urządzenia pióro zawsze zwraca `true`. Jednak jeśli rozszerzania wejściowych urządzeń, które implementacji urządzenia system wejściowy jest można tworzyć system pióro alternatywną implementację urządzenia, która może zwracać różne wyniki.  
  
 Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, gdy pióro znajduje się poza zakresem jej. Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania.  
  
 Wywołanie tej metody wymaga podstawowej statycznych <xref:System.Windows.Input.Stylus> metody <xref:System.Windows.Input.Stylus.Capture%2A>. Zachowanie rzeczywistych przechwytywania jest implementowany przez pióro active implementacji urządzenia.  
  
 Można przechwycić elementu musi być włączony. Sprawdź, czy <xref:System.Windows.UIElement3D.IsEnabled%2A> jest `true` zwrócić przed wywołaniem <xref:System.Windows.UIElement3D.CaptureStylus%2A>.  
  
 Jeśli wywołanie <xref:System.Windows.UIElement3D.CaptureStylus%2A> zwraca `true`, <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> jest również `true`.  
  
 <xref:System.Windows.UIElement3D.CaptureStylus%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">Urządzenie do przechwytywania.</param>
        <summary>Próbuje wymusić przechwytywania touch do tego elementu.</summary>
        <returns>
          <see langword="true" /> Jeśli określona touch są przechwytywane do tego elementu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.CaptureTouch%2A> Zwraca `false` Jeśli <xref:System.Windows.Input.TouchDevice> aktualnie przechwycony do innego elementu.  
  
 Jeśli <xref:System.Windows.UIElement3D.CaptureTouch%2A> zwraca `true`, a następnie <xref:System.Windows.UIElement3D.GotTouchCapture> zdarzenia.  
  
 Aby zwolnić przechwytywania jednym naciśnięciem przycisku z tego elementu, użyj <xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A> — metoda i określ urządzeń dotykowych do zwolnienia. Aby zwolnić wszystkie poprawki z tego elementu, użyj <xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A> metody.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="touchDevice" /> jest <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.Input.CommandBinding" /> obiekty skojarzone z tym elementem.</summary>
        <value>Kolekcja wszystkich <see cref="T:System.Windows.Input.CommandBinding" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:System.Windows.Input.CommandBinding> włącza obsługę określonego polecenia dla tego elementu oraz deklaruje powiązanie między poleceniem, jego zdarzeń i procedurami obsługi dołączonymi przez ten element.  
  
 Inny typowy sposób wypełnienia <xref:System.Windows.UIElement3D.CommandBindings%2A> kolekcji jest użycie <xref:System.Windows.Input.CommandManager> metody programowo.  
  
 <xref:System.Windows.UIElement3D.CommandBindings%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *oneOrMoreCommandBindings*  
 Co najmniej jeden <xref:System.Windows.Input.CommandBinding> elementów. Każdy z nich powinien mieć <xref:System.Windows.Input.CommandBinding.Command%2A> atrybut ustawioną znanych poleceń i ustawić atrybuty dla <xref:System.Windows.Input.CommandBinding.CanExecute> i <xref:System.Windows.Input.CommandBinding.Executed> implementacji programu obsługi. Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Input.CommandBinding>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z tego elementu jako element docelowy przeciągania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.DragEnter?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.DragEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.DragEnter> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.DragEnterEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewDragEnter>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnDragEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.DragEnter" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.DragEnterEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to element źródłowy przeciągania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.DragLeave?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.DragLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.DragLeave> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.DragLeaveEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewDragLeave>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnDragLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragEnter" />
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
        <altmember cref="E:System.Windows.UIElement3D.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.DragLeave" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.DragLeaveEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie występuje nawet w przypadku przeciągania pochodzi z granicami elementu. Jeśli przeciąganie rozpoczyna się poza granicami i przenosi wewnątrz, to zdarzenie jest wywoływane również, jak również <xref:System.Windows.UIElement3D.DragEnter> i powiązanych zdarzeń w wersji zapoznawczej.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.DragOver?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.DragOver> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.DragOver> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.DragOverEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewDragOver>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnDragOver%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragEnter" />
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
        <altmember cref="E:System.Windows.UIElement3D.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.DragOver" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.DragOverEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania z tego elementu jako element docelowy upuszczania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.Drop?displayProperty=nameWithType> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.Drop> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.Drop> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.DropEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewDrop>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnDrop%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
        <altmember cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.Drop" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.DropEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Próbuje ustawić logiczny fokus w tym elemencie.</summary>
        <returns>
          <see langword="true" /> Jeśli zarówno logicznych i ustawiono fokus klawiatury do tego elementu; <see langword="false" /> jeśli tylko logiczny fokus został ustawiony.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Być focusable, <xref:System.Windows.UIElement3D.Focusable%2A> i <xref:System.Windows.UIElement3D.IsEnabled%2A> muszą być `true`.  
  
 Nawet jeśli element jest obsługa zdarzeń focusable i włączone, w obrębie określonego drzewa, (takie jak w przypadku złożonych kontrolek) może odpowiadać, nie zezwalając fokus, Podgląd zdarzeń fokusu w związku z tym ta metoda zwróci `false`.  
  
 Jeśli wywołanie <xref:System.Windows.UIElement3D.Focus%2A> zwraca `true`, <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> i <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> są również `true`.  
  
 Jeśli powiązane właściwości nie są jeszcze `true`, podczas wywoływania <xref:System.Windows.UIElement3D.Focus%2A>, co najmniej jeden z następujących zdarzeń pojawienia się w następującej kolejności: <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> (źródłowego jest nazwa nowego docelowego fokus), <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement3D.LostKeyboardFocus>, <xref:System.Windows.UIElement3D.GotKeyboardFocus> (źródłowego jest nazwa nowego docelowego fokus).  
  
 Aby dla tego wywołania do pomyślnego niektórych innego elementu w aplikacji niezbędnych do wcześniej fokus.  
  
 Fokus na ogół podlega dwa oddzielne pojęcia: Klawiatura fokus i logiczny fokus, które nie zawsze są identyczne. Ta metoda ustawia logiczny fokus, a także próbuje ustawić fokus klawiatury. Nie ma programowy sposób ustawić fokus klawiatury w szczególności dzieje się z powodu danych wejściowych użytkownika. Aby uzyskać więcej informacji, zobacz [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.Focus%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy element może odebrać fokus.</summary>
        <value>
          <see langword="true" /> Jeśli element jest focusable; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tylko element ukierunkowanych odbiera klawiatury.  
  
 <xref:System.Windows.UIElement3D.Focusable%2A> jest [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] metody dostępu właściwości dla co to jest w rzeczywistości właściwości zależności. Ta właściwość zależności określonego dość często ma wartość jawnego "domyślną" ustawione inaczej w klasach element pochodny. Częstą przyczyną w jeden z dwóch sposobów:  
  
-   Właściwość zależności jest dziedziczona przez określonej klasy pochodnej, ale pochodnych przesłonięć klasy metadanych właściwości zależności i zmienia wartość domyślna właściwości.  
  
 <xref:System.Windows.UIElement3D.Focusable%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.FocusableProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.UIElement3D.Focusable" /> zmiany właściwości.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.FocusableChanged> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.Focusable" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.FocusableProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Po przesłonięciu w klasie pochodnej zwraca zamiast [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] nadrzędnego dla tego elementu, jeśli wizualny obiekt nadrzędny nie istnieje.</summary>
        <returns>Obiekt, jeśli połączenie alternatywny nadrzędny do raportu jest implementacja klasy pochodnej.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja wirtualnego ta metoda zwraca `null`. <xref:System.Windows.FrameworkElement> udostępnia implementację praktyczne.  
  
 Alternatywne nadrzędnych są używane w przypadku zdarzeń routingu w przypadkach, gdy element tworzy alternatywnych nadrzędna struktura tak, aby jego zdarzeń są kierowane w taki sposób, aby diverges od standardowego wzorca routingu w górę drzewa wizualnego do standardowego elementu nadrzędnego, lub w dół Wyświetl podgląd strategii routingu.  
  
 <xref:System.Windows.UIElement3D.GetUIParentCore%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania i upuszczania, które obejmuje ten element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.GiveFeedback> Zdarzeń umożliwia źródło zdarzeń przeciągnij, aby zmodyfikować wygląd wskaźnika myszy, aby przekazać opinię visual użytkownika podczas operacji przeciągania i upuszczania. Wizualny wzmacnia, że operacja przeciągania i upuszczania jest w toku.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.GiveFeedback> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.GiveFeedback> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.GiveFeedback> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.GiveFeedbackEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewGiveFeedback>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnGiveFeedback%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.GiveFeedback" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.GiveFeedbackEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ten element pobiera fokus logiczny.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Logiczny fokus różni się od fokus klawiatury, jeśli celowo wymusza fokus przy użyciu wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie. W tym scenariuszu fokus klawiatury pozostaje, gdzie jest i element gdzie <xref:System.Windows.UIElement3D.Focus%2A> metoda jest wywoływana nadal pobiera fokus logiczny.  
  
 Bardziej dokładne interpretacja to zdarzenie jest jego jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsFocused%2A> właściwości elementu w trasie została zmieniona z `false` do `true`.  
  
 Ponieważ to zdarzenie używa propagacji routingu, element, który otrzymuje fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywisty element uzyskanych fokus.  
  
 <xref:System.Windows.UIElement3D.GotFocus> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.GotFocusEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.RoutedEventHandler>|  
  
-   Nie ma żadnego odpowiednie zdarzenia tunelowania.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnGotFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.GotFocus" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.GotFocusEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy klawiatura ma fokus w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> jest podobne zdarzenia, który śledzi zmiany stanu we właściwości, która przechowuje stan aktywny elementu; <xref:System.Windows.UIElement3D.GotKeyboardFocus> zdarzenie jest zgłaszane w tych samych okolicznościach.  
  
 Ponieważ to zdarzenie używa propagacji routingu, element, który ma fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywistego elementu, który ma fokus.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.GotKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.GotKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.GotKeyboardFocus> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.GotKeyboardFocusEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.GotKeyboardFocus" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.GotKeyboardFocusEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ten element przechwytuje mysz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy element przechwytuje mysz, otrzymuje myszą nawet wtedy, gdy wskaźnik myszy znajduje się poza zakresem jej. Mysz zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania oraz pozostaje przechwycone, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.  
  
 Ponieważ to zdarzenie używa propagacji routingu, element, który ma przechwytywania może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> zdarzeń przechwytywania danych, aby określić rzeczywistego elementu, który ma myszy.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.GotMouseCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.GotMouseCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.GotMouseCapture> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.GotMouseCaptureEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.GotMouseCapture" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.GotMouseCaptureEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ten element przechwytuje pióro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, jeśli wskaźnik jest poza zakresem jej. Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania oraz zachowuje przechwytywania, dopóki nie wystąpi akcja upuszczania operacji przeciągania i upuszczania.  
  
 Ponieważ to zdarzenie używa propagacji routingu, element, który ma przechwytywania może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywistego elementu, który ma przechwytywania.  
  
 To zdarzenie tworzy alias dla dołączone zdarzenie dla tej klasy, aby <xref:System.Windows.UIElement3D.GotStylusCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.GotStylusCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.GotStylusCapture> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.GotStylusCaptureEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.GotStylusCapture" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.GotStylusCaptureEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy touch są przechwytywane do tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.GotTouchCaptureEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.GotTouchCapture" /> kierowanego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję powiązań wejściowych skojarzonych z tym elementem.</summary>
        <value>Kolekcję powiązań wejściowych.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Powiązania wejściowe obsługuje powiązanie polecenia, aby urządzenia wejściowe. Na przykład <xref:System.Windows.Input.MouseBinding> implementuje wejściowych powiązania, które obejmują właściwości dotyczące urządzeń myszy.  
  
 Zawiera kolekcję powiązań wejściowych zarówno powiązania wejściowe, które odnoszą się do typu, jak i powiązania wejściowe, które są zadeklarowane w wystąpieniu.  
  
 Powiązaną właściwość <xref:System.Windows.UIElement3D.CommandBindings%2A>, utrzymuje kolekcję powiązań polecenia. Te różnią się od powiązania wejściowe reprezentują następny poziom w dół przetwarzania polecenia - akcje, które są powiązane z znanych poleceń.  
  
 <xref:System.Windows.UIElement3D.InputBindings%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a>Użycie elementu właściwości języka XAML  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *oneOrMoreInputBindings*  
 Co najmniej jeden <xref:System.Windows.Input.InputBinding> elementów (zazwyczaj <xref:System.Windows.Input.KeyBinding> lub <xref:System.Windows.Input.MouseBinding> klas pochodnych). Każdy z tych powinien mieć <xref:System.Windows.Input.InputBinding.Command%2A> i <xref:System.Windows.Input.InputBinding.Gesture%2A> atrybutu.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateModel">
      <MemberSignature Language="C#" Value="public void InvalidateModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateModel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.InvalidateModel" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateModel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateModel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unieważnia modelu, który reprezentuje element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy klasa wyprowadzona z z <xref:System.Windows.UIElement3D> klasy, można użyć tej metody razem z <xref:System.Windows.UIElement3D.OnUpdateModel%2A> metodę, aby odświeżyć modelu elementu.  
  
 Należy wywołać tę metodę w zaawansowanych scenariuszach. Taki scenariusz zaawansowane jest Jeśli klasa pochodna ma wiele właściwości, które mają wpływ na wygląd i chcesz zaktualizować odpowiedni model tylko raz.  
  
 <xref:System.Windows.UIElement3D.InvalidateModel%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób pochodzi od <xref:System.Windows.UIElement3D> klasy w celu utworzenia `Sphere` klasy:  
  
 [!code-csharp[Shapes#Sphere](~/samples/snippets/csharp/VS_Snippets_Wpf/Shapes/CSharp/Sphere.cs#sphere)]
 [!code-vb[Shapes#Sphere](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Shapes/visualbasic/sphere.vb#sphere)]  
  
 Pełny przykład, zobacz [UIElement3D kuli próbki](http://go.microsoft.com/fwlink/?LinkID=160044).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość wskazującą, czy ten element jest włączony w [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</summary>
        <value>
          <see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy pamiętać, że ta właściwość ma wpływ implementacje specyficzne <xref:System.Windows.UIElement3D.IsEnabledCore%2A> na poszczególne elementy, często w czasie wykonywania. W związku z tym wymienione w tym miejscu wartość domyślna czasami nie jest skuteczne. Próby Ustaw tę wartość, również zostanie przesłonięta przez wartość zwrócona przez <xref:System.Windows.UIElement3D.IsEnabledCore%2A>.  
  
 Elementy, które nie są włączone nie uczestniczą w testowania trafień lub fokus i dlatego nie będzie źródła zdarzenia wejściowe.  
  
 <xref:System.Windows.UIElement3D.IsEnabled%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsEnabledProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsEnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.UIElement3D.IsEnabled" /> właściwość zmiany tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.IsEnabledChanged> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która jest zwracana wartość <see cref="P:System.Windows.UIElement3D.IsEnabled" /> w klasach pochodnych.</summary>
        <value>
          <see langword="true" /> Jeśli element jest włączony; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsEnabledCore%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Domyślna implementacja ta właściwość przechowuje wartości i oblicza również, czy element nadrzędny tego elementu jest włączone. (Jeśli element nadrzędny nie jest włączone, element podrzędny nie może efektywnie włączone w praktycznych [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Jeśli chcesz przesłonić tę implementację, upewnij się, że możesz wywoływać implementację podstawową w celu zachowania tego zachowania.</para>
        </block>
        <altmember cref="E:System.Windows.UIElement3D.IsEnabledChanged" />
        <altmember cref="P:System.Windows.UIElement3D.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsEnabled" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsEnabledProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość, która określa, czy ten element ma logiczny fokus.</summary>
        <value>
          <see langword="true" /> Jeśli ten element ma logiczny fokus; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Logiczny fokus może się różnić od fokus klawiatury, jeśli aplikacja ma wiele podziałów fokus, takich jak między zawartość menu i pozostałej części aplikacji. W tym scenariuszu fokus klawiatury może zawierać tylko jeden element interfejsu użytkownika aplikacji, jednak niektóre elementy w innych działów fokus nadal mogą zachować logiczny fokus. Aby uzyskać więcej informacji dotyczących logiczny fokus, zobacz [omówienie fokus](~/docs/framework/wpf/advanced/focus-overview.md).  
  
 Nie ustawiaj fokus przez ustawienie dla tej właściwości (jest tylko do odczytu). Typowym zastosowaniem dla tej właściwości jest używana jako właściwość zależności dla <xref:System.Windows.Setter> lub <xref:System.Windows.EventTrigger>. Aby ustawić fokus programowo, wywołaj <xref:System.Windows.UIElement3D.Focus%2A>. Można również można uaktywnić przez akcję użytkownika lub przez implementacje kontroli, które obejmować zachowania przechwytywanie myszy.  
  
 <xref:System.Windows.UIElement3D.IsFocused%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsFocusedProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.Focusable" />
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsFocused" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsFocusedProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisible">
      <MemberSignature Language="C#" Value="public bool IsHitTestVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsHitTestVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHitTestVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość deklarującą, czy ten element może być zwrócony jako wynik testu trafienia z niektórych części zrenderowanej zawartości.</summary>
        <value>
          <see langword="true" /> Jeśli ten element może zostać zwrócony jako wynik testu trafienia z co najmniej jeden punkt; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Efektywna wartość tej właściwości jest wpływ względne położenie trafień testować elementy w drzewie logicznym. Na przykład, jeśli element jest elementem podrzędnym element nie osiągnęła testu widoczne, pozostanie wprowadzenia wartości właściwości w elemencie podrzędnym `false`nawet w przypadku próby lokalnie Ustaw tę wartość. Z tego powodu ważne jest, że nie zostały ustawione <xref:System.Windows.UIElement3D.IsHitTestVisible%2A> do `false` w formancie połączone chyba, że nie ma żadnych danych lub trafień testowania w tym formancie. Aby uzyskać więcej informacji na temat testowania trafień, zobacz [trafień testowania w warstwie Visual](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).  
  
 <xref:System.Windows.UIElement3D.IsHitTestVisible%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsHitTestVisible"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsHitTestVisibleProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsHitTestVisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsHitTestVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsHitTestVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsHitTestVisibleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.UIElement3D.IsHitTestVisible" /> zmiany właściwości zależności w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.IsHitTestVisibleChanged> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHitTestVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsHitTestVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHitTestVisibleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsHitTestVisible" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsHitTestVisibleProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy system IME, takich jak [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], jest włączony dla przetwarzania danych wejściowych do tego elementu.</summary>
        <value>
          <see langword="true" /> Jeśli Metoda wejściowa jest aktywna; w przeciwnym razie <see langword="false" />. Wartość domyślna właściwości dołączonych jest <see langword="true;" /> , to będzie zależeć od rzeczywisty stan metody wprowadzania tekstu w czasie wykonywania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość zwraca wartość zwracaną przez dołączona właściwość <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> dla aktualnie włączonego metody wejściowe (klawiatura, mowy, inne urządzenia wejściowe).  
  
 <xref:System.Windows.UIElement3D.IsInputMethodEnabled%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy ten element ma fokus klawiatury.</summary>
        <value>
          <see langword="true" /> Jeśli ten element ma fokus klawiatury; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiany na podstawie wartości tej właściwości może towarzyszyć zdarzeń związanych z fokusem.  
  
 <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> i <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> są często używane klasy obsługi zdarzeń dla innych zdarzeń związanych z danych wejściowych, na przykład w celu sprawdzenia, czy element ma już fokus klawiatury, aby oznaczeń, gdy mysz zdarzenia i klawiatury występują w połączeniu.  
  
 <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotFocus" />
        <altmember cref="E:System.Windows.UIElement3D.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.UIElement3D.IsKeyboardFocused" /> zmiany właściwości w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsKeyboardFocused" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy fokus klawiatury jest dowolne miejsce w obrębie elementu lub jego elementy podrzędne drzewa wizualnego.</summary>
        <value>
          <see langword="true" /> Jeśli fokus klawiatury znajduje się na element lub jego elementów podrzędnych; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zmiana wartości tej właściwości zwykle podnieść <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> zdarzeń, chyba że klasa pochodna przesłoniła <xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> do pomijania zdarzenia.  
  
 Ta właściwość nie należy ustawiać bezpośrednio, ale można ustawić fokus do elementu, wywołując <xref:System.Windows.UIElement3D.Focus%2A>, lub tworząc <xref:System.Windows.UIElement3D.MoveFocus%2A> żądania. Jedną z tych wywołań metody mogą ulec zmianie wartość tej właściwości.  
  
 <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> i <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> są zazwyczaj używane w ramach procedury obsługi zdarzeń klasy dla innych zdarzeń związanych z danych wejściowych, na przykład w celu sprawdzenia, czy element ma już fokus klawiatury, aby oznaczeń, gdy mysz zdarzenia i klawiatury występują w połączeniu.  
  
 <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" /> zmiany właściwości w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy wskaźnik myszy jest przechwytywany do tego elementu.</summary>
        <value>
          <see langword="true" /> Jeśli element ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stan przechwytywanie myszy powiązany jest w trakcie operacji przeciągania i upuszczania.  
  
 <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsMouseCapturedProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureMouse" />
        <altmember cref="E:System.Windows.UIElement3D.GotMouseCapture" />
        <altmember cref="E:System.Windows.UIElement3D.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.UIElement3D.IsMouseCaptured" /> zmiany właściwości w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsMouseCaptured" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsMouseCapturedProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość określającą, czy przechwytywanie myszy jest przechowywane przez ten element lub elementy podrzędne w jego drzewie wizualnym.</summary>
        <value>
          <see langword="true" /> Jeśli ten element lub zawartych w niej element ma przechwytywanie myszy; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsMouseCaptureWithin%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseCaptured" />
        <altmember cref="M:System.Windows.UIElement3D.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" /> zmiany właściwości w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.IsMouseCaptureWithinChanged> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy pozycja wskaźnika myszy odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</summary>
        <value>
          <see langword="true" /> Gdy wskaźnik myszy znajduje się nad takiego samego wyniku elementu, jako testu trafienia; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W odróżnieniu od <xref:System.Windows.UIElement3D.IsMouseOver%2A>, ta właściwość jest tylko `true` , gdy wskaźnik myszy znajduje się nad elementem literału — podobnie jak w przypadku testu trafienia. Gdy wskaźnik myszy jest nad elementu podrzędnego, ta właściwość będzie `false`. W przypadku większości scenariuszy, w którym nie tworzenia formantów, użyć <xref:System.Windows.UIElement3D.IsMouseOver%2A> zamiast tego.  
  
 Jeśli przycisk myszy jest przechwytywany przez ten element, a ta właściwość jest `true` w czasie przechwytywania, ta właściwość będzie zwracać `true` dopóki przechwytywanie myszy zostanie utracone i kursor nie znajduje się za pośrednictwem jego granic.  
  
 <xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement3D.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" /> zmiany właściwości w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy wskaźnik myszy znajduje się nad tym elementem (w tym elementy podrzędne w drzewie wizualnym).</summary>
        <value>
          <see langword="true" /> Gdy wskaźnik myszy znajduje się nad elementu lub jego elementów podrzędnych; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Formanty są zazwyczaj połączone tak, aby wszystkie różnych elementów wewnątrz formantu (drzewa wizualnego) będzie zgłaszać stanu myszy zawierającego formantu. Na przykład <xref:System.Windows.Controls.ListBox> styl formantu będzie zgłaszać <xref:System.Windows.UIElement3D.IsMouseOver%2A> jako `true` w przypadku myszy dowolnego miejsca za pośrednictwem jego geometry, wraz ze wszystkimi <xref:System.Windows.Controls.ListBoxItem>.  
  
 Mimo że podobne zdarzenia "IsMouseOverChanged" nie istnieje, czy kilka podobnych zdarzeń. Na przykład można obsługiwać <xref:System.Windows.UIElement3D.MouseEnter>, <xref:System.Windows.UIElement3D.MouseMove>, i <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>.  
  
 Jeśli ten element przechwytuje mysz, ta właściwość pozostaje `true` dopóki przechwytywanie myszy zostanie utracone i wskaźnik myszy opuszczeniu granic elementu.  
  
 Niektóre formanty celowo przechwytywanie myszy na pewne akcje, które nie są bezpośrednio dotyczyć myszy. Może to prowadzić do <xref:System.Windows.UIElement3D.IsMouseOver%2A> trwa `true` mimo że nie przeniósł najwyraźniej myszy.  
  
 <xref:System.Windows.UIElement3D.IsMouseOver%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsMouseOverProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsMouseOver" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsMouseOverProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy pióro są przechwytywane przez ten element.</summary>
        <value>
          <see langword="true" /> Jeśli element ma Przechwytywanie pióra; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsStylusCapturedProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureStylus" />
        <altmember cref="E:System.Windows.UIElement3D.GotStylusCapture" />
        <altmember cref="E:System.Windows.UIElement3D.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.UIElement3D.IsStylusCaptured" /> zmiany właściwości w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.IsStylusCapturedChanged> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsStylusCaptured" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsStylusCapturedProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość określającą, czy przechwytywanie pióra jest przechowywany przez ten element lub element granice elementu i jego drzewie wizualnym.</summary>
        <value>
          <see langword="true" /> Jeśli ten element lub zawartych w niej element ma Przechwytywanie pióra; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureStylus" />
        <altmember cref="P:System.Windows.UIElement3D.IsStylusCaptured" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.UIElement3D.IsStylusCaptureWithin" /> zmiany właściwości w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest to [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsStylusCaptureWithin" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy pozycja Pióro odpowiada trafień wyniki testu, przyjmujących składania elementu pod uwagę.</summary>
        <value>
          <see langword="true" /> Jeśli wskaźnik Pióro znajduje się nad takiego samego wyniku elementu, jako testu trafienia; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 W odróżnieniu od <xref:System.Windows.UIElement3D.IsStylusOver%2A>, ta właściwość jest tylko `true` , gdy pióro znajduje się nad elementem. Jeśli pióro jest na element podrzędny lub elementy, które są częścią elementu głębiej składania (drzewa wizualnego), ta właściwość będzie `false`.  
  
 Jeśli nie wiadomo, jak kontrolka zostanie połączone (na przykład użyć tej właściwości w szablonie formantu niestandardowego formantu, który należy zdefiniować), ta właściwość może zwrócić nieoczekiwane wyniki. W przypadku większości scenariuszy, w którym nie tworzenia formantów, użyć <xref:System.Windows.UIElement3D.IsStylusOver%2A> zamiast tego.  
  
 Jeśli ten element ma Przechwytywanie pióra, ta właściwość jest `true` w czasie przechwytywania, ta właściwość pozostaje `true` aż do przechwycenia pióra zostaną utracone i pióro nie jest za pośrednictwem jego granic.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.UIElement3D.IsStylusDirectlyOver" /> zmiany właściwości w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsStylusDirectlyOver" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy kursor pióra znajduje się nad tym elementem (w tym elementy podrzędne visual).</summary>
        <value>
          <see langword="true" /> w przypadku kursor pióra przez element lub jego elementów podrzędnych; w przeciwnym razie <see langword="false" />. Wartość domyślna to <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ten element ma Przechwytywanie pióra, ta właściwość będzie w dalszym ciągu zwracać `true` dopóki nie zostanie utracone Przechwytywanie pióra i kursor znajduje się poza jej zakres.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.IsStylusOver%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsStylusOverProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsStylusOver" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsStylusOverProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wartość wskazującą, czy ten element jest widoczny w [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</summary>
        <value>
          <see langword="true" /> Jeśli element jest widoczny; w przeciwnym razie <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Oznaczanie <xref:System.Windows.UIElement3D.IsVisible%2A> wartość uwzględnia wiele czynników. Z kolei <xref:System.Windows.UIElement3D.Visibility%2A>, właściwość można ustawić, tylko wskazuje zamiarze programowo element widoczny lub niewidoczny.  
  
 Zmiana wartości tej właściwości zwykle zostanie podniesiony <xref:System.Windows.UIElement3D.IsVisibleChanged> zdarzeń. Brak pasującego [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] "na *" klasy obsługi zastąpienie metody, która umożliwiałaby niektóre pochodnej klasy do zastąpienia tego zachowania i Obsługa zdarzenia, ale obsługi klasy nadal może zostać dołączony bezpośrednio z <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 Elementy gdzie <xref:System.Windows.UIElement3D.IsVisible%2A> jest `false` nie uczestniczą w zdarzeniach wejściowych (lub polecenia), czy nie wpływają albo miary lub Rozmieść przekazuje układu, nie są focusable nie znajdują się w sekwencji kartę i nie będą raportowane podczas testowania trafień. Z drugiej strony, elementy gdzie <xref:System.Windows.UIElement3D.IsEnabled%2A> jest `false` nadal będą uczestniczyć w zdarzeniach i poleceń i testowania trafień, ale nie są również focusable.  
  
 <xref:System.Windows.UIElement3D.IsVisible%2A> nie jest przeznaczony do użycia jako wyzwalacz stylu. Przy użyciu <xref:System.Windows.UIElement3D.IsVisible%2A> jako styl wyzwalacz może mieć nieprzewidywalne skutki. <xref:System.Windows.UIElement3D.IsVisible%2A> jest przeznaczony dla stanu sprawdzanie przez niższym poziomie implementacje wejściowego.  
  
 <xref:System.Windows.UIElement3D.IsVisible%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsVisible"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.IsVisibleProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsVisibleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wartość <see cref="P:System.Windows.UIElement3D.IsVisible" /> zmiany właściwości w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten element członkowski jest [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zdarzenie, kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.IsVisibleChanged> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVisibleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.IsVisible" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsVisibleProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po naciśnięciu klawisza, gdy klawiatura ma fokus w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.KeyDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.KeyDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.KeyDown> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.KeyDownEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewKeyDown>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnKeyDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.KeyDown" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.KeyDownEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zwolnieniu klawisza, gdy klawiatura ma fokus w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.KeyUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.KeyUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.KeyUp> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.KeyUpEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewKeyUp>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnKeyUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.KeyUp" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.KeyUpEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po utracie fokusu logicznego przez ten element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Logiczny fokus różni się od fokus klawiatury, gdy fokus celowo wymusza optymalizacji przy użyciu wywołania metody, ale poprzednie fokus klawiatury nie istnieje w innym zakresie. W tym scenariuszu, pozostaje fokus klawiatury, gdzie jest i element gdzie <xref:System.Windows.UIElement3D.Focus%2A> metoda jest wywoływana nadal pobiera fokus logiczny.  
  
 Bardziej dokładne interpretacja to zdarzenie jest jego jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsFocused%2A> zmiany właściwości elementu w trasie z `true` do `false`.  
  
 Ponieważ to zdarzenie używa propagacji routingu, element traci fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywisty element uzyskanych fokus.  
  
 <xref:System.Windows.UIElement3D.LostFocus> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.LostFocusEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.RoutedEventHandler>|  
  
-   Nie ma żadnego odpowiednie zdarzenia tunelowania.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnLostFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.LostFocus" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.LostFocusEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ to zdarzenie używa propagacji routingu, element utracie fokusu może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w ustalić utracie fokusu rzeczywisty element danych zdarzenia.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.LostKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.LostKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.LostKeyboardFocus> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.LostKeyboardFocusEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.LostKeyboardFocus" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.LostKeyboardFocusEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ten element utraci przechwytywanie myszy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy element przechwytuje mysz, otrzymuje myszą nawet, jeśli wskaźnik jest poza zakresem jej. Mysz jest zwykle przechwytywane tylko podczas operacji przeciągania i upuszczania.  
  
 Ponieważ to zdarzenie używa propagacji routingu, element utraci Przechwytywanie może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywisty element, który utracił przechwytywania.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.LostMouseCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.LostMouseCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.LostMouseCapture> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.LostMouseCaptureEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.LostMouseCapture" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.LostMouseCaptureEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ten element utraci Przechwytywanie pióra.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy element przechwytuje Pióro, otrzymuje wprowadzania danych piórem nawet, jeśli wskaźnik jest poza zakresem jej. Pióro zwykle są przechwytywane tylko podczas operacji przeciągania i upuszczania.  
  
 Ponieważ to zdarzenie używa propagacji routingu, element traci fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w ustalić utracie fokusu rzeczywisty element danych zdarzenia.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.LostStylusCapture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.LostStylusCapture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.LostStylusCapture> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.LostStylusCaptureEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.LostStylusCapture" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.LostStylusCaptureEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ten element utraci Przechwytywanie touch.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.LostTouchCaptureEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.LostTouchCapture" /> kierowanego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.MouseDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.MouseDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.MouseDown> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.UIElement3D.MouseLeftButtonDown> lub <xref:System.Windows.UIElement3D.MouseRightButtonDown>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki. <xref:System.Windows.UIElement3D.MouseLeftButtonDown> i <xref:System.Windows.UIElement3D.MouseRightButtonDown> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia. Zobacz uwagi dla <xref:System.Windows.UIElement3D.MouseLeftButtonDown> lub <xref:System.Windows.UIElement3D.MouseRightButtonDown>.  
  
> [!IMPORTANT]
>  Niektóre formanty może być związanego z używaniem klasy obsługi zdarzenia przycisk myszy. Lewy przycisk myszy w dół zdarzeń jest najbardziej prawdopodobne zdarzenia klasa Obsługa w formancie. Klasy obsługi często oznacza odpowiadającego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsłużone. Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle wywoływane. Wszystkie inne klasy lub wystąpienia obsługi, które są dołączone do elementów w kierunku propagacji do katalogu głównego w drzewie interfejsu użytkownika również nie zwykle są zgłaszane.  
  
 Można rozwiązać problem, który jest opisane w poprzednim ważne i nadal odbierać <xref:System.Windows.UIElement3D.MouseDown> zdarzeń związanych z lewego przycisku myszy w dół zdarzenia w klasie pochodnej, który zawiera klasę obsługi przy użyciu jednej z tych rozwiązań:  
  
-   Dołącz obsługi <xref:System.Windows.UIElement3D.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty. Zauważyć, że jest zdarzeń w wersji zapoznawczej, dlatego trasy rozpoczyna się w katalogu głównym a tuneli do formantu.  
  
-   Zarejestruj Obsługa w formancie proceduralnie przez wywołanie metody <xref:System.Windows.UIElement3D.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.MouseDown> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.MouseDownEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewMouseDown>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnMouseDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.MouseDown" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseDownEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wskaźnik myszy zostanie umieszczony granic tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.MouseEnter> jest [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) używającą bezpośredniej obsługi strategii routingu zdarzeń. Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.  
  
 Mimo że <xref:System.Windows.UIElement3D.MouseEnter> ścieżki, gdy wskaźnik myszy zostanie umieszczony granice elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement3D.IsMouseOver%2A> zmieniono wartość właściwości z `false` do `true` w tym elemencie.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.MouseEnter> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.MouseEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.MouseEnter> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.MouseEnterEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnMouseEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.MouseEnter" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseEnterEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po opuszczeniu przez wskaźnik myszy granic tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.MouseLeave> jest [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) używającą bezpośredniej obsługi strategii routingu zdarzeń. Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane.  
  
 Mimo że <xref:System.Windows.UIElement3D.MouseLeave> ścieżki, gdy mysz opuści elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement3D.IsMouseOver%2A> zmieniono wartość właściwości z `true` do `false` w tym elemencie.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.MouseLeave> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.MouseLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.MouseLeave> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.MouseLeaveEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnMouseLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.MouseLeave" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseLeaveEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement3D>.  
  
 To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.  
  
 Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń. Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu. Po zaznaczeniu <xref:System.Windows.UIElement3D.MouseLeftButtonDown> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych. To prawdopodobnie zawiera wygenerowane klasy obsługi zdarzenia takich jak <xref:System.Windows.Controls.Control.MouseDoubleClick>.  
  
 Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy). Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement3D>.  
  
> [!IMPORTANT]
>  Klasy obsługi często oznacza odpowiadającego <xref:System.Windows.Input.Mouse> zdarzenia klasy jako obsłużone. Gdy zdarzenie jest oznaczony jako obsługiwany, innych programów obsługi wystąpienia, które są dołączone do tego elementu nie są zwykle wywoływane. Wszystkie inne klasy lub wystąpienia obsługi, które są dołączone do elementów w kierunku propagacji do katalogu głównego w drzewie interfejsu użytkownika również nie zwykle są zgłaszane.  
  
 Można rozwiązać problem, który jest opisane w poprzednim ważne i nadal odbierać <xref:System.Windows.UIElement3D.MouseLeftButtonDown> zdarzeń związanych z lewego przycisku myszy w dół zdarzenia w klasie pochodnej, który zawiera klasę obsługi przy użyciu jednej z tych rozwiązań:  
  
-   Dołącz obsługi <xref:System.Windows.UIElement3D.PreviewMouseDown> zdarzenie, które nie jest oznaczony jako obsługiwane przez formanty. Zauważyć, że jest zdarzeń w wersji zapoznawczej, dlatego trasy rozpoczyna się w katalogu głównym a tuneli do formantu.  
  
-   Zarejestruj Obsługa w formancie proceduralnie przez wywołanie metody <xref:System.Windows.UIElement3D.AddHandler%2A> i wybranie opcji podpisu, która umożliwia obsługi do nasłuchiwania zdarzeń nawet wtedy, gdy są one już oznaczone jako obsługiwane w danych kierowanego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.MouseLeftButtonDown> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement3D>.  
  
 To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.  
  
 Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń. Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu. Po zaznaczeniu <xref:System.Windows.UIElement3D.MouseLeftButtonUp> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.  
  
 Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy). Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement3D>.  
  
 <xref:System.Windows.UIElement3D.MouseLeftButtonUp> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy wskaźnik myszy porusza się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.MouseMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.MouseMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.MouseMove> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.MouseMoveEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewMouseMove>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnMouseMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement3D.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.MouseMove" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseMoveEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement3D>.  
  
 To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.  
  
 Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń. Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu. Po zaznaczeniu <xref:System.Windows.UIElement3D.MouseRightButtonDown> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych. To prawdopodobnie zawiera wygenerowane klasy obsługi zdarzenia takich jak <xref:System.Windows.Controls.Control.MouseDoubleClick>.  
  
 Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy). Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement3D>.  
  
 Prawy przycisk myszy zdarzeń często ma natywnej obsługi w scenariuszach aplikacji. Na przykład prawym przyciskiem myszy w dół może wyświetlić menu kontekstowe. Zobacz [omówienie ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).  
  
 <xref:System.Windows.UIElement3D.MouseRightButtonDown> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.MouseRightButtonDownEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.MouseRightButtonDown" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseRightButtonDownEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj propagacji trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement3D>.  
  
 To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.  
  
 Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń. Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu. Po zaznaczeniu <xref:System.Windows.UIElement3D.MouseRightButtonUp> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.  
  
 Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy). Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement3D>.  
  
 <xref:System.Windows.UIElement3D.MouseRightButtonUp> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.MouseRightButtonUpEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.MouseRightButtonUp" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseRightButtonUpEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zwolnieniu dowolnego przycisku myszy nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.MouseUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.MouseUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.MouseUp> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.UIElement3D.MouseLeftButtonUp> lub <xref:System.Windows.UIElement3D.MouseRightButtonUp>, które odpowiadają wersji jednego z dwóch przycisków standardowej myszki. <xref:System.Windows.UIElement3D.MouseLeftButtonUp> i <xref:System.Windows.UIElement3D.MouseRightButtonUp> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia. Zobacz uwagi dla <xref:System.Windows.UIElement3D.MouseLeftButtonUp> lub <xref:System.Windows.UIElement3D.MouseRightButtonUp>.  
  
 <xref:System.Windows.UIElement3D.MouseUp> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.MouseUpEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewMouseUp>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnMouseUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.MouseUp" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseUpEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przechwytywanie myszy lub fokus pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli zostanie wyświetlony <xref:System.Windows.UIElement3D.MouseWheel> zdarzeń z elementu ukierunkowanych lub przechwycone, wskaźnik myszy może się okazać za pośrednictwem innego elementu.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.MouseWheel> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.MouseWheel> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.MouseWheel> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.MouseWheelEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewMouseWheel>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnMouseWheel%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.MouseWheel" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseWheelEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">Żądanie przechodzenie, zawierającego właściwości, która wskazuje albo tryb przechodzenia w istniejących kolejności tabulacji lub kierunek przenoszenia wizualnie.</param>
        <summary>Próbuje Przenieś fokus z tego elementu do innego elementu. Przenieś fokus kierunek jest określany przez kierunek wskazówki jest interpretowana w obrębie organizacji elementu nadrzędnego visual dla tego elementu.</summary>
        <returns>
          <see langword="true" /> Jeśli wykonano żądanej przechodzenie; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Upewnij się, że należy sprawdzić wartość zwrotną tej metody. Zwracana wartość `false` może być zwrócony, jeśli działa podczas przechodzenia do tabulatora jest definiowana za pomocą formantu kompozycji, a nie żądał żądania przechodzenia do zakodowania.  
  
 <xref:System.Windows.UIElement3D.MoveFocus%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Dane zdarzenia do zdarzenia klucza dostępu. Raporty danych zdarzeń klucz, do którego została wywołana i wskazać, czy <see cref="T:System.Windows.Input.AccessKeyManager" /> obiekt, który kontroluje wysyłanie tych zdarzeń również wysyłane to wywołanie klucza dostępu do innych elementów.</param>
        <summary>Zawiera klasy obsługi po klucz dostępu zrozumiały dla tego elementu jest wywoływany.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nie ma żadnego rzeczywistego zdarzenia AccessKey w <xref:System.Windows.UIElement3D> klasy lub w innym miejscu, który można wywołać lub dołączyć programy obsługi dla. Zamiast tego zdarzenia jest pochodzi za pośrednictwem klasy dedykowanych Menedżera <xref:System.Windows.Input.AccessKeyManager>, który przetwarza po wszystkie dane wejściowe do wyszukiwania klucze dostępu, które mają zastosowanie do całego modelu wejściowego.  
  
 <xref:System.Windows.UIElement3D.OnAccessKey%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Domyślna implementacja tej metody w <see cref="T:System.Windows.UIElement3D" /> zestawy klawiatury fokus do tego elementu (wywołując <see cref="M:System.Windows.UIElement3D.Focus" />). Implementacje powinny widoczny przy obsłudze często to zachowanie, jeśli są one focusable, ponieważ jest to oczekiwane zachowanie dla scenariuszy ułatwień dostępu. Zauważ, że podstawowa implementacja nie działa z danymi przekazany zdarzenia i zgłasza brak dalszych zdarzenia; po prostu ustawia fokus.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca specyficzne <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji dla [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastruktury.</summary>
        <returns>Określonego typu <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacji.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnCreateAutomationPeer%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Implementacja tej metody jest zazwyczaj wywołanie konstruktora określonego <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> wdrożenia i zwraca je jako wartości zwracane.  
  
 Wszystkie <see cref="T:System.Windows.UIElement3D" /> klas pochodnych należy zaimplementować tę metodę w celu zapewnienia ich własnych określonych <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementacje do [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastruktury. Aby uzyskać szczegółowe informacje dotyczące implementacji tego wzorca, zobacz <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragEnter" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnDragEnter%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragLeave" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnDragLeave%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.DragOver" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnDragOver%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.Drop" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnDrop%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.GiveFeedback" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnGiveFeedback%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia. Te dane zdarzenie musi zawierać identyfikator <see cref="E:System.Windows.UIElement3D.GotFocus" /> zdarzeń.</param>
        <summary>Zgłasza <see cref="E:System.Windows.UIElement3D.GotFocus" /> kierowanego zdarzenia przy użyciu dane zdarzenia przekazane.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody, mimo że jest to wirtualne, mają domyślną implementację, który wywołuje zdarzenie.  
  
 To na * implementacji metody jest przeznaczona do zgłoszenia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby zgłosić zdarzenie po <xref:System.Windows.UIElement3D.IsFocused%2A> zmiany wartości właściwości. <xref:System.Windows.UIElement3D.OnGotFocus%2A> Implementacji różni się od niektórych innych [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] na * implementacji, które zapewniają tylko wygodny sposób, aby dodać klasę obsługi dla tego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.OnGotFocus%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku braku zamierzonego i nietypowych potrzebę nie wywoływanie zdarzeń fokusu, upewnij się, że wdrożenie wywołuje implementacji podstawowej. W przeciwnym razie <see cref="E:System.Windows.UIElement3D.GotFocus" /> zdarzenie nie jest wywoływane podczas operacji typowych użytkownika, które zwykle Ustaw fokus w tym elemencie. Jeśli nie chcesz, aby Twoje element ma być focusable, użytkownik może uniemożliwić element focusable przez ustawienie <see cref="P:System.Windows.UIElement3D.Focusable" /> do <see langword="false" />.</para>
        </block>
        <altmember cref="P:System.Windows.UIElement3D.Focusable" />
        <altmember cref="E:System.Windows.UIElement3D.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement3D.GotTouchCapture" /> kierowanego zdarzenia, gdy touch są przechwytywane do tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> Metoda ma domyślnej implementacji. Zastąpienie <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.GotTouchCapture> zdarzeń. Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> metody, która podstawowa klasy odbierać zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" /> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> zmiany właściwości zależności. Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> zdarzenia z tego samego wystąpienia danych zdarzenia. Zwróć uwagę, że <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> zdarzenie nie jest kierowanego zdarzenia. W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.  
  
 <xref:System.Windows.UIElement3D.OnIsKeyboardFocusedChanged%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywoływana tuż przed <see cref="E:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged" /> zdarzenie jest wywoływane przez ten element. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> zmienia się wartość właściwości zależności. Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> zdarzenia z tego samego wystąpienia danych zdarzenia. Zwróć uwagę, że <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> zdarzenie nie jest kierowanego zdarzenia. W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.  
  
 <xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.IsMouseCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> zmienia się wartość właściwości zależności. Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> zdarzenia z tego samego wystąpienia danych zdarzenia. Zwróć uwagę, że <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> zdarzenie nie jest kierowanego zdarzenia. W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.  
  
 <xref:System.Windows.UIElement3D.OnIsMouseCapturedChanged%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Ta metoda wirtualna jest wywoływane, gdy wartość <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" /> zmienia się wartość właściwości zależności. Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <see cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" /> zdarzenia z tego samego wystąpienia danych zdarzenia. Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia; W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> zmienia się wartość właściwości zależności. Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> zdarzenia z tego samego wystąpienia danych zdarzenia. Zwróć uwagę, że <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> zdarzenie nie jest kierowanego zdarzenia. W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.  
  
 <xref:System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.IsStylusCapturedChanged" /> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> zmienia się wartość właściwości zależności. Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsStylusCapturedChanged> zdarzenia z tego samego wystąpienia danych zdarzenia. Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia. W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.  
  
 <xref:System.Windows.UIElement3D.OnIsStylusCapturedChanged%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" /> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> zmienia się wartość właściwości zależności. Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> zdarzenia z tego samego wystąpienia danych zdarzenia. Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia. W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.  
  
 <xref:System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.IsStylusDirectlyOverChanged" /> zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda wirtualna jest wywoływane, gdy wartość <xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> zmienia się wartość właściwości zależności. Metoda wirtualna nazywa się najpierw, a można manipulować danymi zdarzenia w razie potrzeby. Następnie przy użyciu <xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> zdarzenia z tego samego wystąpienia danych zdarzenia. Zwróć uwagę, że zdarzenie nie jest kierowanego zdarzenia. W związku z tym nie można oznaczyć go jako obsługiwane w obsłudze klasy.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.  
  
 <xref:System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uderzenia w klawisze są obsługiwane przez dedykowane Menedżera wejściowego. Inne funkcje programowania, które opierają się na naciśnięcia klawiszy, na przykład powiązania wejściowego i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest uwidaczniany jako ogólne naciśnięcie klawisza. Te dane wejściowe funkcji systemu oznaczanie zdarzenia jako obsługiwany, następnie <xref:System.Windows.UIElement3D.OnKeyDown%2A> nie jest wywoływany.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnKeyDown%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Uderzenia w klawisze są obsługiwane przez dedykowane Menedżera wejściowego. Inne funkcje programowania, które opierają się na naciśnięcia klawiszy, na przykład powiązania wejściowego i polecenia, może obsłużyć naciśnięcia klawisza, zanim jest uwidaczniany jako ogólne naciśnięcie klawisza. Te dane wejściowe funkcji systemu oznaczanie zdarzenia jako obsługiwany, następnie <xref:System.Windows.UIElement3D.OnKeyUp%2A> nie jest wywoływany.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnKeyUp%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> zawierający dane zdarzenia. Te dane zdarzenie musi zawierać identyfikator <see cref="E:System.Windows.UIElement3D.LostFocus" /> zdarzeń.</param>
        <summary>Zgłasza <see cref="E:System.Windows.UIElement3D.LostFocus" /> kierowanego zdarzenia przy użyciu dane zdarzenia, które jest dostępne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tej metody, mimo że jest to wirtualne, mają domyślną implementację, który wywołuje zdarzenie.  
  
 To na * implementacji metody jest przeznaczona do zgłoszenia zdarzenia i tej samej implementacji metody jest wywoływana wewnętrznie, aby zgłosić zdarzenie po <xref:System.Windows.UIElement3D.IsFocused%2A> zmiany wartości właściwości. Ta implementacja różni się od niektórych innych [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] na * implementacji, które zapewniają tylko wygodny sposób, aby dodać klasę obsługi dla tego zdarzenia.  
  
 <xref:System.Windows.UIElement3D.OnLostFocus%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>W przypadku braku zamierzonego i nietypowych potrzebę nie wywoływanie zdarzeń fokusu, upewnij się, że wdrożenie wywołuje implementacji podstawowej. W przeciwnym razie <see cref="E:System.Windows.UIElement3D.LostFocus" /> zdarzenie nie jest wywoływane podczas operacji typowych użytkownika, które zwykle Ustaw fokus w tym elemencie. Jeśli nie chcesz, aby Twoje element ma być focusable, użytkownik może uniemożliwić element focusable przez ustawienie <see cref="P:System.Windows.UIElement3D.Focusable" /> do <see langword="false" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement3D.LostTouchCapture" /> kierowanego zdarzenia, gdy ten element utraci Przechwytywanie touch.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> Metoda ma domyślnej implementacji. Zastąpienie <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.LostTouchCapture> zdarzeń. Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> metody, która podstawowa klasy odbierać zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia. Te dane zdarzeń raporty szczegółowe informacje o został naciśnięty przycisk myszy i stanie obsłużone.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego. Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne. Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.UIElement3D.OnMouseDown%2A> nie jest wywoływany.  
  
 Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.UIElement3D.MouseLeftButtonDown> i <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Jedną z tych zdarzeń może zostać zgłoszone w elemencie odbierającą podczas <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> odebrania.  
  
 Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia. Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi. Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`. Obsługa <xref:System.Windows.UIElement3D.OnMouseDown%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy w dół akcje. Takie zachowanie może być niepożądane. Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.  
  
 Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym * metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnMouseDown%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> dołączone zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia, ze strategii routingu bezpośredniego. Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.  
  
 <xref:System.Windows.UIElement3D.OnMouseEnter%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> dołączone zdarzenie jest zgłaszane w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia, ze strategii routingu bezpośredniego. Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.  
  
 <xref:System.Windows.UIElement3D.OnMouseLeave%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia. Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" /> kierowanego zdarzenia w tym elemencie. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.MouseLeftButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich. <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.UIElement3D> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.MouseLeftButtonDown>. Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.MouseLeftButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia. Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.  
  
 Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne. Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>. Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D> przez zastąpienie <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>.  
  
 Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń. Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza. Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>. Na przykład może pochodzić od <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania Podstawowa implementacja; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.  
  
 <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia. Dane zdarzenia raporty zwolnienie lewego przycisku myszy.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.MouseLeftButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich. <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.UIElement3D> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.MouseLeftButtonUp>. Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.MouseLeftButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia. Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.  
  
 Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne. Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>. Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D> przez zastąpienie <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A>.  
  
 <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnMouseMove%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia. Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.MouseRightButtonDown" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.MouseRightButtonDown> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich. <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.UIElement3D> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.MouseRightButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia. Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.  
  
 Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D> nasłuchuje <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne. Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>. Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D> przez zastąpienie <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>.  
  
 Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń. Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza. Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>. Na przykład może pochodzić od <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> jednak w klasie pochodnej bez base wywołujący; to zastąpienie wyłącza kontekstu menu usług formantu, które są częścią z <xref:System.Windows.Controls.Control> zachowanie domyślne.  
  
 <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia. Dane zdarzenia raporty zwolnienie prawego przycisku myszy.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.MouseRightButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.MouseRightButtonUp> Zdarzenie wydaje się propagacji trasa podróży, ale faktycznie przesyłane w sposób pośrednich. <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> bazowe zdarzenie, dla którego jest kierowane bąbelków, a każdy <xref:System.Windows.UIElement3D> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.MouseRightButtonUp>. Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.MouseRightButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia. Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.  
  
 Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D> nasłuchuje <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne. Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>. Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D> przez zastąpienie <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A>.  
  
 <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia. Dane zdarzenia raporty, wydanej przycisk myszy.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego. Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne. Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.UIElement3D.OnMouseUp%2A> nie jest wywoływany.  
  
 Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.UIElement3D.MouseLeftButtonUp> i <xref:System.Windows.UIElement3D.MouseRightButtonUp>. Jedną z tych zdarzeń może zostać wywołane w elemencie odbierania podczas <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> odebrania.  
  
 Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia. Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi. Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`. Obsługa <xref:System.Windows.UIElement3D.OnMouseUp%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy zapasowej akcje. Takie zachowanie może być niepożądane. Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.  
  
 Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym * metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnMouseUp%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnMouseWheel%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.DragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewDrop" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewDrop%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.GiveFeedbackEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.KeyEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia. Dane zdarzenia zgłasza, że zostały naciśnięte przyciski myszy jeden lub więcej.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> dołączone kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego. Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne. Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> nie jest wywoływany.  
  
 Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> i <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>. Jedną z tych zdarzeń może zostać zgłoszone w elemencie odbierającą podczas <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> odebrania.  
  
 Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia. Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi. Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`. Obsługa <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy w dół akcje. Takie zachowanie może być niepożądane. Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.  
  
 Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym * metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia. Dane zdarzenia zgłasza, że naciśnięto lewy przycisk myszy.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich. <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.UIElement3D> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>. Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia. Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.  
  
 Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne. Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>. Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D> przez zastąpienie <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>.  
  
 Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń. Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza. Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>. Na przykład może pochodzić od <xref:System.Windows.Controls.Button> i zastąpić <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> w klasie pochodnej bez wywoływania Podstawowa implementacja; jednak to zastąpienie wyłącza <xref:System.Windows.Controls.Primitives.ButtonBase.Click> zdarzeń.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia. Dane zdarzenia raporty zwolnienie lewego przycisku myszy.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich. <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.UIElement3D> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>. Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia. Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.  
  
 Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne. Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>. Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D> przez zastąpienie <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A>.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia. Dane zdarzenia zgłasza, że naciśnięto prawy przycisk myszy.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich. <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.UIElement3D> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia. Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.  
  
 Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne. Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>. Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D> przez zastąpienie <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>.  
  
 Alternatywnie mogą przesłaniać tę metodę, aby można było zmienić obsługi stanu myszy określonych zdarzeń. Czy chcesz wywoływać implementację podstawową zależy od danego scenariusza. Nie można wywołać podstawową wyłącza domyślne obsługi danych wejściowych dla tego zdarzenia myszy na klasy nadrzędnej, które również spodziewać się do wywołania <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>. Na przykład może pochodzić od <xref:System.Windows.Controls.Control> i zastąpić <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> jednak w klasie pochodnej bez base wywołujący; to zastąpienie wyłącza kontekstu menu usług formantu, które są częścią z <xref:System.Windows.Controls.Control> zachowanie domyślne.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia. Dane zdarzenia raporty zwolnienie prawego przycisku myszy.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" /> kierowanego zdarzenia osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> Zdarzenie wydaje się podróży trasy tunelowania, ale faktycznie przesyłane w sposób pośrednich. <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> jest podstawowy zdarzenie, które jest kierowane tunelu i każde <xref:System.Windows.UIElement3D> wzdłuż zdarzenia trasy używa identyczne Obsługa podnieść bezpośredniego kierowanego zdarzenia <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>. Mimo że można zaznaczyć <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> zdarzeń, jak zostało obsłużone dla celów tego elementu, obsługiwanego stanu nie widoczny przy obsłudze często z innymi elementami wzdłuż trasy zdarzenia. Jednak warto zostać oznaczone jako obsługiwany, aby zapobiec wystąpieniu ogólne programy obsługi zdarzenia (te, które nie określił `handledEventsToo`) wywoływanie.  
  
 Domyślna implementacja dla ogólnych myszy Obsługa zdarzeń w <xref:System.Windows.UIElement3D> nasłuchuje <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> i konwertuje ją na odpowiednie zdarzenia lokalne. Jeśli chcesz przesłonić tę logikę, należy utworzyć klasy pochodnej. W konstruktorze statycznym klasy pochodnej, zarejestrować obsługi alternatywnych klasy dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>. Nie można zmienić zachowanie programu obsługi myszy <xref:System.Windows.UIElement3D> przez zastąpienie <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A>.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> Zawierający dane zdarzenia. Dane zdarzenia raporty wydane jednego lub więcej przycisków myszy.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przycisk myszy również są obsługiwane przez dedykowane Menedżera wejściowego. Inne funkcje programowania, które zależą od przycisku myszy, takich jak dane wejściowe i polecenia powiązań, może wywołać programy obsługi dla akcji przed jest uwidaczniany jako akcja przycisku myszy ogólne. Te dane wejściowe znacznik funkcje systemu <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń jako obsługiwany, <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> nie jest wywoływany.  
  
 Jeśli używasz obsługi tej klasy można oznaczyć zdarzenia jako obsługiwane potencjalnie wpływ następujące zdarzenia: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> i <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>. Jedną z tych zdarzeń może zostać wywołane w elemencie odbierania podczas <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> odebrania.  
  
 Po zaznaczeniu tego zdarzenia jako obsługiwane w klasie obsługi pojawienia się nadal subevents; jednak przekazują obsługiwanego stanu w danych zdarzenia. Jeśli zdarzenie jest obsługiwane w obsłudze klasy, chyba że jawnie używać wystąpienia obsługi subevents nie są wywoływane <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> z `handledEventsToo` `true` aby można było dołączyć programów obsługi. Obsługę klas również nie wywoływanych chyba, że zarejestrowano obsługę tych klas z <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisu z `handledEventsToo` `true`. Obsługa <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A>, są podejrzeń programu obsługi klasy wyjaśnić wszystkie możliwe myszy zapasowej akcje. Takie zachowanie może być niepożądane. Dlatego należy zachować ostrożność, korzystając z tej metody wirtualnej do oznaczenia zdarzeń jako obsługi.  
  
 Każdego zdarzenia bezpośredniego specyficzne dla przycisku ma również wirtualnym * metody; należy rozważyć, czy zastępowanie te programy obsługi przycisk klasy może być bardziej odpowiednie.  
  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane. Inny scenariusz, który jest specjalnie z myślą o Podgląd zdarzeń jest do oznaczania ich obsługi tak, aby pasujące propagacji obsługę klas nie są wywoływane.  
  
 <xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.UIElement3D.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement3D.PreviewTouchDown" /> kierowanego zdarzenia, gdy touch naciśnie tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> Metoda ma domyślnej implementacji. Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.PreviewTouchDown> zdarzeń. Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> metody, która podstawowa klasy odbierać zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement3D.PreviewTouchMove" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch znajduje się wewnątrz tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> Metoda ma domyślnej implementacji. Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.PreviewTouchMove> zdarzeń. Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> metody, która podstawowa klasy odbierać zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement3D.PreviewTouchUp" /> kierowanego zdarzenia, która występuje po zwolnieniu touch wewnątrz tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> Metoda ma domyślnej implementacji. Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.PreviewTouchUp> zdarzeń. Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> metody, która podstawowa klasy odbierać zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.QueryContinueDragEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnQueryCursor%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusDownEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusDown" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnStylusDown%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> dołączone zdarzenie jest zgłaszane przez ten element. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.  
  
 <xref:System.Windows.UIElement3D.OnStylusEnter%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnStylusInRange%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> dołączone zdarzenie jest zgłaszane przez ten element. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji. Może wywołania podstawowego przed lub po Twoje specjalnej obsługi, w zależności od wymagań.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Oznaczenie zdarzenie, ponieważ obsługiwane jest nadal pomaga zapobiegać obsługi typowych wystąpienia (te, które nie określają `handledEventsToo`) wywoływanie.  
  
 <xref:System.Windows.UIElement3D.OnStylusLeave%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusMove" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnStylusMove%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.StylusEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.Stylus.StylusUp" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnStylusUp%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> Zawierający dane zdarzenia.</param>
        <summary>Wywoływane, gdy jest to nieobsługiwany <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> dołączone zdarzenie osiągnie element trasę pochodzący z tej klasy. Zaimplementuj tę metodę, aby dodać klasę obsługi dla tego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta metoda ma domyślnej implementacji. Ponieważ klasa pośrednicząca w dziedziczenia mogą zaimplementować tę metodę, zalecamy wywoływać implementację podstawową w implementacji.  
  
 Celem tej metody jest podobny do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] wzorzec zdarzeń na * metody: Ta metoda zapewnia sposób obsługi pasujące zdarzenie z klasy pochodnej, ustanawiając obsługi zamiast obsługi wystąpienia klasy. W takim przypadku pasujące zdarzenie jest kierowanego zdarzenia. Wzorzec implementacji metod On * są różne dla kierowane zdarzenia, ponieważ kierowanego zdarzenia może być zgłaszany przez element podrzędny, który nie musi być element, który wywoła programów obsługi. W związku z tym implementacji należy zbadać właściwości źródła danych zdarzenia. Go nie należy próbować reraise zdarzeń w większości przypadków.  
  
 Tej metody lub rejestrując klasy programów obsługi z <xref:System.Windows.EventManager.RegisterClassHandler%2A>, pochodzi z klasy <xref:System.Windows.UIElement3D> można wywoływać metod obsługi Klasa prywatna, po odebraniu zdarzenia wzdłuż trasy zdarzenia. Jeden scenariusz, w której jest odpowiednia Obsługa klasy jest manipulować danymi zdarzeń i oznacz kierowanego zdarzenia, ponieważ obsługiwane.  
  
 <xref:System.Windows.UIElement3D.OnTextInput%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement3D.TouchDown" /> kierowanego zdarzenia, gdy touch naciśnie wewnątrz tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnTouchDown%2A> Metoda ma domyślnej implementacji. Zastąpienie <xref:System.Windows.UIElement3D.OnTouchDown%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.TouchDown> zdarzeń. Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement3D.OnTouchDown%2A> metody, która podstawowa klasy odbierać zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement3D.TouchEnter" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch z zewnątrz do wewnątrz granic tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnTouchEnter%2A> Metoda ma domyślnej implementacji. Zastąpienie <xref:System.Windows.UIElement3D.OnTouchEnter%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.TouchEnter> zdarzeń. Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement3D.OnTouchEnter%2A> metody, która podstawowa klasy odbierać zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement3D.TouchLeave" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch z wnętrza poza granicami tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnTouchLeave%2A> Metoda ma domyślnej implementacji. Zastąpienie <xref:System.Windows.UIElement3D.OnTouchLeave%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.TouchLeave> zdarzeń. Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement3D.OnTouchLeave%2A> metody, która podstawowa klasy odbierać zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement3D.TouchMove" /> kierowanego zdarzenia, która występuje po przemieszczeniu touch znajduje się wewnątrz tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnTouchMove%2A> Metoda ma domyślnej implementacji. Zastąpienie <xref:System.Windows.UIElement3D.OnTouchMove%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.TouchMove> zdarzeń. Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement3D.OnTouchMove%2A> metody, która podstawowa klasy odbierać zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.Input.TouchEventArgs" /> zawierający dane zdarzenia.</param>
        <summary>Udostępnia klasę obsługi <see cref="E:System.Windows.UIElement3D.TouchUp" /> kierowanego zdarzenia, która występuje po zwolnieniu touch wewnątrz tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnTouchUp%2A> Metoda ma domyślnej implementacji. Zastąpienie <xref:System.Windows.UIElement3D.OnTouchUp%2A> w klasie pochodnej w celu obsługi <xref:System.Windows.UIElement3D.TouchUp> zdarzeń. Pamiętaj wywołać klasy podstawowej <xref:System.Windows.UIElement3D.OnTouchUp%2A> metody, która podstawowa klasy odbierać zdarzenia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUpdateModel">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateModel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateModel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnUpdateModel" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateModel ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateModel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Uczestniczy w renderowania operacji w przypadku przesłonięcia w klasie pochodnej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy klasa wyprowadzona z z <xref:System.Windows.UIElement3D> klasy, można użyć tej metody razem z <xref:System.Windows.UIElement3D.InvalidateModel%2A> metodę, aby odświeżyć modelu elementu.  
  
 Należy wywołać tę metodę w zaawansowanych scenariuszach. Taki scenariusz zaawansowane jest Jeśli klasa pochodna ma wiele właściwości, które mają wpływ na wygląd i chcesz zaktualizować odpowiedni model tylko raz. W ramach <xref:System.Windows.UIElement3D.OnUpdateModel%2A> metody można zaktualizować <xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A> właściwość <xref:System.Windows.Media.Media3D.Visual3D> klasy.  
  
 Ta metoda nie ma żadnej implementacji domyślnej <xref:System.Windows.UIElement3D> klasy.  
  
 <xref:System.Windows.UIElement3D.OnUpdateModel%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Poniższy przykład przedstawia sposób pochodzi od <xref:System.Windows.UIElement3D> klasy w celu utworzenia `Sphere` klasy:  
  
 [!code-csharp[Shapes#Sphere](~/samples/snippets/csharp/VS_Snippets_Wpf/Shapes/CSharp/Sphere.cs#sphere)]
 [!code-vb[Shapes#Sphere](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Shapes/visualbasic/sphere.vb#sphere)]  
  
 Pełny przykład, zobacz [UIElement3D kuli próbki](http://go.microsoft.com/fwlink/?LinkID=160044).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">Element nadrzędny poprzedniej. Może to być dostarczone jako <see langword="null" /> Jeśli <see cref="T:System.Windows.DependencyObject" /> nie ma element nadrzędny wcześniej.</param>
        <summary>Wywoływane, gdy element nadrzędny tego <see cref="T:System.Windows.UIElement3D" /> raporty zmiany do elementu nadrzędnego visual podstawowej.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnVisualParentChanged%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Jeśli przesłonić tę metodę, zawsze wywoływać implementację podstawową. Domyślna implementacja podstawowej wykonuje niektóre wewnętrzny konserwacji właściwości dziedziczone wstecznego stanu. Nie można wywoływać implementację podstawową spowoduje unieważnienie tego stanu.  
  
 Ta metoda zastępuje <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />. <see cref="T:System.Windows.FrameworkElement" /> i <see cref="T:System.Windows.Window" /> zarówno także zastępować <see cref="T:System.Windows.UIElement3D" /> implementacja <see cref="M:System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)" />, i <see cref="T:System.Windows.Window" /> uszczelnienia go.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction">Kierunek przechodzenie żądanego fokus.</param>
        <summary>W przypadku przesłonięcia w klasie pochodnej zwraca element, który będzie fokusu dla kierunku przechodzenie określonego fokus bez faktycznie przeniesienie fokusu do tego elementu.</summary>
        <returns>Element otrzymałby fokus <see cref="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" /> zostały faktycznie wywołany.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślna implementacja tej metody tej klasy jest niekompletne i zawsze zwraca `null`.  
  
 <xref:System.Windows.UIElement3D.PredictFocus%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z tego elementu jako element docelowy przeciągania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewDragEnter> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewDragEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewDragEnter> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewDragEnterEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.DragEnter>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewDragEnter" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewDragEnterEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to element źródłowy przeciągania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewDragLeave> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewDragLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewDragLeave> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewDragLeaveEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.DragLeave>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewDragLeave" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewDragLeaveEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy system wejściowy zgłasza bazowe zdarzenie przeciągania z ten element to potencjalny element docelowy upuszczania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewDragOver> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewDragOver> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewDragOver> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewDragOverEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.DragOver>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewDragOver" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewDragOverEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy system wejściowy zgłasza bazowe zdarzenie upuszczania z tego elementu jako element docelowy upuszczania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewDrop> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewDrop> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewDrop> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewDropEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.Drop>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewDrop%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewDrop" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewDropEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy rozpoczęto operację przeciągania i upuszczania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.PreviewGiveFeedback> Zdarzeń umożliwia źródło zdarzeń przeciągnij, aby zmodyfikować wygląd wskaźnika myszy, aby przekazać opinię visual użytkownika podczas operacji przeciągania i upuszczania.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewGiveFeedback> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewGiveFeedback> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewGiveFeedback> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.GiveFeedback>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewGiveFeedback" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy klawiatura ma fokus w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ to zdarzenie używa tunelowania routingu, element, który ma fokus może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w danych zdarzeń, aby określić rzeczywistego elementu, który ma fokus.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.GotKeyboardFocus>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po naciśnięciu klawisza, gdy klawiatura ma fokus w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst. To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewKeyDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewKeyDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewKeyDown> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewKeyDownEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.KeyDown>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewKeyDown" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewKeyDownEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zwolnieniu klawisza, gdy klawiatura ma fokus w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obsługa klucza współdziała z innymi funkcjami platformy, takich jak kompozycji droższe i tekst.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewKeyUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewKeyUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewKeyUp> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewKeyUpEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.KeyUp>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewKeyUp" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewKeyUpEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy klawiatura nie ma już fokusu w tym elemencie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ponieważ to zdarzenie używa tunelowania routingu, element utracie fokusu może być elementu podrzędnego zamiast elementu którego program obsługi zdarzeń faktycznie jest podłączony. Sprawdź <xref:System.Windows.RoutedEventArgs.Source%2A> w ustalić utracie fokusu rzeczywisty element danych zdarzenia.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.LostKeyboardFocus>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po naciśnięciu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewMouseDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewMouseDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseDown> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> lub <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki. <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> i <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia. Zobacz uwagi dla <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> lub <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseDown> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewMouseDownEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.MouseDown>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewMouseDown" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseDownEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po naciśnięciu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement3D>.  
  
 To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.  
  
 Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń. Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu. Po zaznaczeniu <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych. To prawdopodobnie zawiera wygenerowane klasy obsługi zdarzenia takich jak <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.  
  
 Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy). Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement3D>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zwolnieniu lewego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement3D>.  
  
 To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.  
  
 Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń. Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu. Po zaznaczeniu <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.  
  
 Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy). Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement3D>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po przemieszczeniu wskaźnika myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie zarówno występuje, gdy wskaźnik myszy po raz pierwszy najedzie na granice elementu, a także gdy wskaźnik myszy jest przesuwany zachowując nadal w granicach elementu.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewMouseMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewMouseMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseMove> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewMouseMoveEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.MouseMove>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewMouseMove" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseMoveEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po naciśnięciu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement3D>.  
  
 To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.  
  
 Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> zdarzeń. Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu. Po zaznaczeniu <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych. To prawdopodobnie zawiera wygenerowane klasy obsługi zdarzenia takich jak <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.  
  
 Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy). Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement3D>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zwolnieniu prawego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mimo że to [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) wydaje się wykonaj tunelowania trasę przez drzewo elementu faktycznie jest bezpośrednie kierowanego zdarzenia wywoływane i reraised wzdłuż drzewa elementu przez każdą <xref:System.Windows.UIElement3D>.  
  
 To zdarzenie jest jednym z kilku zdarzenia powiązane, które zgłosiły specyfice przycisk myszy odpowiednią <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzenie, które jest dołączone zdarzenie, które są przetwarzane przez każdy element wzdłuż trasy zdarzenia.  
  
 Dane zdarzenia tego zdarzenia przedstawia dane zdarzeń podstawowych <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń. Jeśli to zdarzenie jest oznaczony jako obsługiwane wzdłuż trasy zdarzenia, nadal pojawienia się przycisk myszy określonych zdarzeń; jednak należy dodać obsługi określonych zdarzeń przycisku myszy przez wywołanie jawnie <xref:System.Windows.UIElement3D.AddHandler%2A>, z opcją do obsługi zdarzeń, które już są oznaczone jako obsługiwany, aby mogła być odbiorników w zdarzeniu. Po zaznaczeniu <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> obsługi, możesz są zasadniczo oznaczenie <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> obsługiwany w przypadku odbiorników dalsze wzdłuż trasy i na wszystkich zdarzeń powiązanych.  
  
 Koncepcyjnie, należy traktować tego zdarzenia (oraz inne zdarzenia przycisk myszy na <xref:System.Windows.UIElement3D>) być myszy "Usługa" (z definicji usługi udostępniane przez <xref:System.Windows.Input.Mouse> klasy). Zdarzenie dodaje wygodę wyeliminowanie konieczności sprawdzenia stanach przycisku myszy (lewo i w prawo, góra dół) oryginalnego zdarzenia myszy w danych zdarzenia. Dla bardziej zaawansowanych scenariuszy, takich jak sprawdzanie stanów niestandardowych przycisków, konieczne może być użyj [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] na <xref:System.Windows.Input.Mouse> klasy zamiast tych na <xref:System.Windows.UIElement3D>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zwolnieniu dowolnego przycisku myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewMouseUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewMouseUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseUp> Zdarzenie jest zgłaszane, często razem albo <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> lub <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>, które odpowiadają naciśnij jednej z dwóch przycisków standardowej myszki. <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> i <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> również są kierowane zdarzenia, ale są bezpośrednio kierowane zdarzenia i odpowiednie zdarzenie specyficzne dla przycisku jest wywoływane podczas <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> zdarzeń osiągnie ten element wzdłuż trasy zdarzenia. Zobacz uwagi dla <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> lub <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseUp> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewMouseUpEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.MouseUp>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewMouseUp" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseUpEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik obraca kółko myszy, gdy wskaźnik myszy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Przechwytywanie myszy lub fokus pierwszeństwo gdy wskaźnik myszy znajduje się; w związku z tym jeśli to zdarzenie zostanie wyświetlony w elemencie ukierunkowanych lub przechwycone, wskaźnik myszy może się okazać za pośrednictwem innego elementu.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewMouseMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewMouseMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseWheel> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewMouseWheelEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.MouseWheel>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewMouseWheel" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseWheelEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> Zdarzeń umożliwia źródła przeciągania zadeklarować, czy można anulować operację przeciągania i upuszczania.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.QueryContinueDrag>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusButtonDown>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusButtonUp>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy pióro dotyka digitizera, gdy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewStylusDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewStylusDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusDown> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewStylusDownEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusDown>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewStylusDown" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusDownEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusInAirMove>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewStylusInRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewStylusInRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusInRange> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusInRange>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewStylusInRange" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy pióro jest przemieszczane nad elementem. Pióro musi być przemieszczane podczas wykrywania przez Dyskretyzator Aby zgłosić to zdarzenie, w przeciwnym razie <see cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" /> zgłaszane jest zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewStylusMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewStylusMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusMove> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewStylusMoveEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusMove>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewStylusMove" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusMoveEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusOutOfRange>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Informacje o gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusSystemGesture>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik wywołuje pióra od dyskretyzatora, gdy pióro znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewStylusDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewStylusDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusUp> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewStylusUpEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.StylusUp>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewStylusUp" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusUpEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.PreviewTextInput> Zdarzeń umożliwia składnika lub aplikacji do nasłuchiwania wprowadzanie tekstu w sposób niezależny od urządzenia. Klawiatura jest podstawowy sposób <xref:System.Windows.UIElement3D.PreviewTextInput>; ale można również generować mowy, pisma ręcznego i innych urządzeniach wejściowych <xref:System.Windows.UIElement3D.PreviewTextInput>.  
  
 Z powodu kombinacji klawiszy — w klawiatury domyślne lub za pośrednictwem edytory input method — wiele zdarzeń klucza mogą zgłaszać tylko jedno zdarzenie wprowadzania tekstu.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.PreviewTextInput> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.PreviewTextInput> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.PreviewTextInput> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewTextInputEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.TextInput>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewTextInput" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewTextInputEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy palcem krawędzi ekranu, gdy palca znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Windows.UIElement3D.PreviewTouchDown> i <xref:System.Windows.UIElement3D.TouchDown> zdarzeń nie występują dopóki palcem dotyka ekranu i przenosi. Naciśnięcie klawisza palcem na ekranie i zawierający bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>. Naciśnij i przytrzymaj klawisz jest odpowiednikiem kliknij prawym przyciskiem myszy.  
  
 Powoduje <xref:System.Windows.UIElement3D.PreviewTouchDown> i <xref:System.Windows.UIElement3D.TouchDown> zdarzenia jak palcem krawędzi ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączona właściwość do `false` dla tego elementu.  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewTouchDownEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.TouchDown>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewTouchDown" /> kierowanego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po przemieszczeniu palcem na ekranie, gdy palca znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewTouchMoveEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.TouchMove>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewTouchMove" /> kierowanego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy jest wywoływane palcem poza ekran, gdy palca znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.PreviewTouchUpEvent>|  
|Strategii routingu|Tunelowanie|  
|Delegate|<xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Odpowiednie zdarzenie propagacji jest <xref:System.Windows.UIElement3D.TouchUp>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.PreviewTouchUp" /> kierowanego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zmianie stanu przycisku klawiatury lub myszy podczas operacji przeciągania i upuszczania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.QueryContinueDrag> Zdarzeń umożliwia ustalenie, czy można anulować operację przeciągania i upuszczania źródła przeciągania.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.QueryContinueDrag> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.QueryContinueDrag> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.QueryContinueDrag> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.QueryContinueDragEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.QueryContinueDrag" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.QueryContinueDragEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy kursor jest wymagane do wyświetlenia. To zdarzenie jest zgłaszane w elemencie każdym razem, gdy wskaźnik myszy jest przesuwany do nowej lokalizacji, która oznacza, że obiekt kursora może zaistnieć konieczność zmiany na podstawie jego nowego położenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.QueryCursor> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.QueryCursor> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Kursor jest odwołuje się ta nazwa zdarzenia nie jest kursor tekstu (czasem nazywane punktu wstawiania). Zamiast tego kursor znajduje się w tym kontekście jest obiekt, który deklaruje na ekranie graficzną związane z kilku możliwych urządzeń związanych z danych wejściowych lub pojęcia dotyczące programowania w języku systemu Windows. Ten obiekt jest reprezentowana przez <xref:System.Windows.Input.Cursor> klasy na platformie WPF. System wejściowy WPF umożliwia zmianę tego kursora, gdy reprezentuje na ekranie położenia wskaźnika myszy. Możesz użyć wstępnie zdefiniowanych wartości z <xref:System.Windows.Input.Cursors> wyliczenia, lub można zadeklarować niestandardowych kursora jako plik obrazu.  
  
 Nasłuchiwanie <xref:System.Windows.UIElement3D.QueryCursor> zdarzenie nie jest technikę efektywne zarządzanie kursora. Zamiast tego każdy element powinien definiować własne zachowania kursora w <xref:System.Windows.FrameworkContentElement.Cursor%2A> i <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>. Należy polegać wyłącznie na <xref:System.Windows.UIElement3D.QueryCursor> WPF poziomie struktury podstawowych elementów nie jest używany, czy w dodatkowej okolicznościach gdy Definiowanie zachowania kursor na podstawie na element nie spełnia Twoje potrzeby. Aby uzyskać więcej informacji na implementacji zachowanie kursora w odpowiedzi na <xref:System.Windows.UIElement3D.QueryCursor>, zobacz <xref:System.Windows.Input.QueryCursorEventHandler>.  
  
 <xref:System.Windows.UIElement3D.QueryCursor> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.QueryCursorEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   Nie ma żadnego zdefiniowane odpowiednie zdarzenia tunelowania.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnQueryCursor%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.QueryCursor" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.QueryCursorEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">A <see cref="T:System.Windows.RoutedEventArgs" /> zawiera dane zdarzeń i identyfikuje również zdarzeń, aby wywołać.</param>
        <summary>Wywołuje określone kierowanego zdarzenia. <see cref="T:System.Windows.RoutedEvent" /> Wygenerowany zostanie zidentyfikowana w <see cref="T:System.Windows.RoutedEventArgs" /> wystąpienia, który został dostarczony (jako <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> właściwości danych zdarzeń).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `e` Parametr jest typu jako typu podstawowego wspólne dla wszystkich danych kierowanego zdarzenia; jednak dane zdarzenia powinny być podane specyficzny typem danych zdarzenia, który jest dostępny dla zdarzeń zgłaszanych, ponieważ <xref:System.Windows.RoutedEventArgs> zawiera klasy pochodne rzeczywiste dane określone właściwości, które są przeznaczone do określonego zdarzenia, gdy jest on uruchamiany.  
  
 <xref:System.Windows.RoutedEventArgs> nie jest tylko właściwości stan dla zdarzeń; identyfikuje które kierowanego zdarzenia, aby wywołać. Ten wzorzec wywoływanie zdarzeń i danych kierowanego zdarzenia zarówno różnią się od [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] klasy zdarzenia i dane, które zwykle zawierają tylko właściwości, które są powiązane ze zdarzeniem.  
  
 <xref:System.Windows.UIElement3D.RaiseEvent%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia wszystkie urządzenia touch przechwyconych z tego elementu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Jeżeli ten element przechwytywania, zwalnia przechwytywanie myszy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia. Należy wziąć pod uwagę wartości <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> przed wywołaniem tej metody.  
  
 <xref:System.Windows.UIElement3D.ReleaseMouseCapture%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwalnia Przechwytywanie urządzenia pióra, jeżeli ten element przechwytywania.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli ten element nie miał nałożonej przechwytywania, wywołanie tej metody nie ma znaczenia. Należy wziąć pod uwagę wartości <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> przed wywołaniem tej metody.  
  
 <xref:System.Windows.UIElement3D.ReleaseStylusCapture%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">Urządzenie do zwolnienia.</param>
        <summary>Próbuje zwolnić urządzenia określonego touch z tego elementu.</summary>
        <returns>
          <see langword="true" /> Jeśli urządzenie touch zwolnieniu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="touchDevice" /> jest <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">Identyfikator kierowanego zdarzenia, dla którego jest umocowana Obsługa.</param>
        <param name="handler">Implementacja określony program obsługi, aby usunąć z kolekcji programu obsługi zdarzeń w tym elemencie.</param>
        <summary>Usuwa obsługi określonego kierowanego zdarzenia z tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Najbardziej typowym scenariuszem stosowania to [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] jest podczas implementowania [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] zdarzeń "otoki", który jest skojarzony z routingiem zdarzenie niestandardowe, w szczególności, gdy należy wdrożyć logikę "Usuń" dla programów obsługi na [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] poziom.  
  
 Wywołanie tej metody nie ma znaczenia, jeśli nie było żadnych programów obsługi zarejestrowany z kryteriami zgodnych parametrów wejściowych dla wywołania metody.  
  
 Jeśli więcej niż jeden program obsługi jest dołączony pasujących kryteria tylko pierwszego programu obsługi w przypadku obsługi magazyn zostanie usunięty. To zachowanie jest zgodne z [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] zachowanie `-=` operatora.  
  
 Ani `routedEvent` ani `handler` może być `null`. Podjęto próbę podać te wartości jako `null` zgłosi wyjątek.  
  
 Ta metoda powoduje ignorowanie `handledEventsToo` informacje o parametrach, która jest dostępna, jeśli program obsługi został po raz pierwszy dodane z <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> podpisie, który włącza obsługę zdarzeń już obsługiwane. Dowolnego typu program obsługi zostanie usunięta.  
  
 <xref:System.Windows.UIElement3D.RemoveHandler%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy procesy serializacji powinny serializować zawartości <see cref="P:System.Windows.UIElement3D.CommandBindings" /> właściwości wystąpienia tej klasy.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="P:System.Windows.UIElement3D.CommandBindings" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.UIElement3D.CommandBindings%2A> lokalnie jest ustawiona.  
  
 To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.UIElement3D.CommandBindings%2A> właściwość nie ma wartości domyślnej proste. Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej. Zwykle wywołuje tę metodę albo opracowywanie projektanta lub tworzenie własnych Dołączanie formantu <xref:System.Windows.UIElement3D>.  
  
 Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych z ShouldSerialize i zresetować metody](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).  
  
 <xref:System.Windows.UIElement3D.ShouldSerializeCommandBindings%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca czy procesy serializacji powinny serializować zawartości <see cref="P:System.Windows.UIElement3D.InputBindings" /> właściwości wystąpienia tej klasy.</summary>
        <returns>
          <see langword="true" /> Jeśli <see cref="P:System.Windows.UIElement3D.InputBindings" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Spowoduje to zwrócenie `true` Jeśli <xref:System.Windows.UIElement3D.InputBindings%2A> lokalnie jest ustawiona.  
  
 To `ShouldSerialize` metody jest dostępne, ponieważ <xref:System.Windows.UIElement3D.InputBindings%2A> właściwość nie ma wartości domyślnej proste. Ta metoda wskazuje, czy właściwość zmienił się z jej wartości domyślnej. Zwykle wywołuje tę metodę albo opracowywanie projektanta lub tworzenie własnych Dołączanie formantu <xref:System.Windows.UIElement3D>.  
  
 Aby uzyskać więcej informacji, zobacz [definiowanie wartości domyślnych z ShouldSerialize i zresetować metody](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).  
  
 <xref:System.Windows.UIElement3D.ShouldSerializeInputBindings%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po naciśnięciu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.StylusButtonDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.StylusButtonDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusButtonDown> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.StylusButtonDownEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusButtonDown>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.StylusButtonDown" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusButtonDownEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po zwolnieniu przycisku pióra, gdy wskaźnik znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.StylusButtonUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.StylusButtonUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusButtonUp> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.StylusButtonUpEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusButtonUp>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.StylusButtonUp" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusButtonUpEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy pióro dotyka digitizera, gdy pióro znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.StylusDown> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.StylusDown> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusDown> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.StylusDownEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusDown>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnStylusDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.StylusDown" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusDownEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po pokonaniu przez pióro granic tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.StylusEnter> jest [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) używającą bezpośredniej obsługi strategii routingu zdarzeń. Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane. Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.  
  
 Mimo że <xref:System.Windows.UIElement3D.StylusEnter> śledzi po pokonaniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement3D.IsStylusOver%2A> zmieniono wartość właściwości z `false` do `true` w tym elemencie.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.StylusEnter> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.StylusEnter> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusEnter> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.StylusEnterEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnStylusEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.StylusEnter" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusEnterEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy pióro jest przemieszczane nad elementem bez dotykania dyskretyzatora.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.StylusInAirMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.StylusInAirMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusInAirMove> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.StylusInAirMoveEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusInAirMove>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.StylusInAirMove" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusInAirMoveEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy pióro jest wystarczająco blisko dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.StylusInRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.StylusInRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusInRange> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.StylusInRangeEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusInRange>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnStylusInRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.StylusInRange" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusInRangeEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po opuszczeniu przez pióro granic elementu przez.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.StylusLeave> jest [kierowane Przegląd zdarzeń](~/docs/framework/wpf/advanced/routed-events-overview.md) używającą bezpośredniej obsługi strategii routingu zdarzeń. Bezpośrednie kierowane zdarzenia nie są zgłaszane wzdłuż trasy; Zamiast tego są obsługiwane w tym samym elemencie gdzie są zgłaszane. Jednak umożliwiają one inne aspekty zachowania kierowanego zdarzenia, takie jak wyzwalacze zdarzeń w style.  
  
 Mimo że <xref:System.Windows.UIElement3D.StylusLeave> śledzi po opuszczeniu przez pióro granic elementu, to zdarzenie więcej dosłownie zgłasza, że <xref:System.Windows.UIElement3D.IsStylusOver%2A> zmieniono wartość właściwości z `true` do `false` w tym elemencie.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.StylusLeave> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.StylusLeave> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusLeave> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.StylusLeaveEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnStylusLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.StylusLeave" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusLeaveEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy pióro jest przemieszczane nad tym elementem. Pióro musi dotykać powierzchni dyskretyzatora, aby zgłosić to zdarzenie. W przeciwnym razie <see cref="E:System.Windows.UIElement3D.StylusInAirMove" /> zgłaszane jest zdarzenie.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.StylusMove> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.StylusMove> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusMove> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.StylusMoveEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusMove>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnStylusMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.StylusMove" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusMoveEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy pióro jest zbyt daleko od dyskretyzatora, aby zostało wykryte, znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.StylusOutOfRange> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.StylusOutOfRange> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusOutOfRange> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.StylusOutOfRangeEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.StylusOutOfRange" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusOutOfRangeEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik wykonuje jeden z kilku gestów pióra.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aby uzyskać więcej informacji na temat gestów pióra, zobacz <xref:System.Windows.Input.SystemGesture>.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.StylusSystemGesture> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.StylusSystemGesture> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusSystemGesture> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.StylusSystemGestureEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.StylusSystemGesture" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusSystemGestureEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy użytkownik wywołuje pióra od dyskretyzatora, gdy znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.StylusUp> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.StylusUp> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 Touch, mysz i wprowadzania danych piórem istnieje w określonej relacji. Aby uzyskać więcej informacji, zobacz [Touch obsługi danych wejściowych w systemie Windows Vista](http://go.microsoft.com/fwlink/?LinkId=160818) i [omówienie wprowadzania](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusUp> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.StylusUpEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewStylusUp>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnStylusUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.StylusUp" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusUpEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy ten element pobiera tekst w sposób niezależny od urządzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.TextInput> Zdarzeń umożliwia składnika lub aplikacji do nasłuchiwania wprowadzanie tekstu w sposób niezależny od urządzenia. Klawiatura jest podstawowy sposób <xref:System.Windows.UIElement3D.TextInput>, ale może też wiązać mowy, pisma ręcznego i innych urządzeniach wejściowych <xref:System.Windows.UIElement3D.TextInput>.  
  
 Z powodu kombinacji klawiszy — w klawiatury domyślne lub za pośrednictwem edytory input method — wiele zdarzeń klucza może zgłaszać tylko jedno zdarzenie wprowadzania tekstu.  
  
 To zdarzenie tworzy alias dla <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączony zdarzeń dla tej klasy, aby <xref:System.Windows.UIElement3D.TextInput> jest częścią klasy elementów członkowskich listy podczas <xref:System.Windows.UIElement3D> jest dziedziczona jako podstawowy element. Programy obsługi zdarzeń, które są dołączone do <xref:System.Windows.UIElement3D.TextInput> zdarzenia są dołączone do odpowiadającego <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> dołączony zdarzeń i odbierać to samo wystąpienie danych zdarzenia.  
  
 <xref:System.Windows.UIElement3D.TextInput> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.TextInputEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewTextInput>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnTextInput%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.TextInput" /> kierowanego zdarzenia.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Identyfikatory kierowanego zdarzenia są tworzone, gdy kierowane zdarzenia są rejestrowane. Te identyfikatory zawiera nazwę identyfikującą, typ właściciela, typ obsługi, strategii routingu i narzędzie metoda dodawania właścicieli dla zdarzenia. Aby dodać obsługę klas, można użyć tych identyfikatorów.  
  
 Aby uzyskać więcej informacji na temat rejestrowania kierowane zdarzenia, zobacz <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Aby uzyskać więcej informacji o używaniu identyfikatorów kierowanego zdarzenia, aby dodać obsługę klas, zobacz <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.TextInputEvent> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy palcem krawędzi ekranu, gdy palca znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie <xref:System.Windows.UIElement3D.PreviewTouchDown> i <xref:System.Windows.UIElement3D.TouchDown> zdarzeń nie występują dopóki palcem dotyka ekranu i przenosi. Naciśnięcie klawisza palcem na ekranie i zawierający bez przenoszenia go powoduje naciśnij i przytrzymaj zachowanie <xref:System.Windows.Input.Stylus>. Naciśnij i przytrzymaj klawisz jest odpowiednikiem kliknij prawym przyciskiem myszy.  
  
 Powoduje <xref:System.Windows.UIElement3D.PreviewTouchDown> i <xref:System.Windows.UIElement3D.TouchDown> zdarzenia jak palcem krawędzi ekranu, ustaw <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> dołączona właściwość do `false` dla tego elementu.  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.TouchDownEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewTouchDown>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnTouchDown%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.TouchDown" /> kierowanego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po przemieszczeniu touch z zewnątrz do wewnątrz granic tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie jest zawsze zgłaszane, czy urządzenie touch są przechwytywane do tego elementu.  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.TouchEnterEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnTouchEnter%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.TouchEnter" /> kierowanego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wszystkie urządzenia touch, które są przechwytywane do tego elementu.</summary>
        <value>Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wszystkie urządzenia touch, które są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</summary>
        <value>Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przechwytywane do tego elementu lub elementów podrzędnych w jego drzewie wizualnym.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wszystkie urządzenia touch znajdujących się nad tym elementem.</summary>
        <value>Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów znajdujących się nad tym elementem.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera wszystkie urządzenia touch znajdujących się nad tym elementem lub wszystkie elementy podrzędne w jego drzewie wizualnym.</summary>
        <value>Wyliczenie <see cref="T:System.Windows.Input.TouchDevice" /> obiektów, które są przez ten element lub wszystkie elementy podrzędne w jego drzewie wizualnym.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po przemieszczeniu touch z wnętrza poza granicami tego elementu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.TouchLeaveEvent>|  
|Strategii routingu|Bezpośrednie|  
|Delegate|<xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnTouchLeave%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.TouchLeave" /> kierowanego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po przemieszczeniu palcem na ekranie, gdy palca znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.TouchMoveEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewTouchMove>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnTouchMove%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.TouchMove" /> kierowanego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy jest wywoływane palcem poza ekran, gdy palca znajduje się nad tym elementem.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a>Informacje dotyczące kierowanego zdarzenia  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.TouchUpEvent>|  
|Strategii routingu|Propagacji|  
|Delegate|<xref:System.EventHandler%601> typu <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Odpowiednie zdarzenie tunelowania jest <xref:System.Windows.UIElement3D.PreviewTouchUp>.  
  
-   Zastąpienie <xref:System.Windows.UIElement3D.OnTouchUp%2A> do zaimplementowania klasy obsługi dla tego zdarzenia w klasach pochodnych.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="E:System.Windows.UIElement3D.TouchUp" /> kierowanego zdarzenia.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] widoczność tego elementu.</summary>
        <value>Wartość wyliczenia. Wartość domyślna to <see cref="F:System.Windows.Visibility.Visible" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ustawienie tej właściwości ma wpływ na wartość <xref:System.Windows.UIElement3D.IsVisible%2A>, który z kolei mogą zgłaszać <xref:System.Windows.UIElement3D.IsVisibleChanged> zdarzeń. Jednak <xref:System.Windows.UIElement3D.IsVisible%2A> ma innych czynników, które wpływają, na przykład ustawień widoczności elementów nadrzędnych, które zawierałoby proces.  
  
 Elementy gdzie <xref:System.Windows.UIElement3D.Visibility%2A> nie jest <xref:System.Windows.Visibility.Visible> nie uczestniczą w zdarzeniach wejściowych (lub polecenia) i nie są zgłaszane podczas testowania trafień.  
  
 <xref:System.Windows.UIElement3D.Visibility%2A> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_Visibility"></a>   
## <a name="dependency-property-information"></a>Informacje dotyczące właściwości zależności  
  
|||  
|-|-|  
|Pole identyfikatora|<xref:System.Windows.UIElement3D.VisibilityProperty>|  
|Wartość właściwości metadanych `true`|Brak|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsVisible" />
        <altmember cref="T:System.Windows.Visibility" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identyfikuje <see cref="P:System.Windows.UIElement3D.Visibility" /> właściwości zależności.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.VisibilityProperty> wprowadzono w programie .NET Framework w wersji 3.5.  Aby uzyskać więcej informacji, zobacz [wersje i zależności](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>