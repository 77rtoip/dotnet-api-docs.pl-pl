<Type Name="DependencyPropertyHelper" FullName="System.Windows.DependencyPropertyHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c73b6283444b4ebfb43805764cd805e9ed62516a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30714131" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DependencyPropertyHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyPropertyHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyPropertyHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyHelper abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Udostępnia metodę pomocnika pojedynczego (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />) aby raporty źródła właściwości systemu wprowadzenia wartości właściwości zależności.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Właściwości systemu jest dosyć złożona i zależy od wartości, które potencjalnie pochodzą z różnych składników, oparte na wartość ustalonych określenie pierwszeństwa racjonalizuj¹ca. Ponieważ te źródła potencjalnie pochodzi od czasu wykonywania kodu, skompilowanych znaczników lub nawet z ustawień użytkownika w czasie wykonywania mogą być przydatne wiedzieli dokładnie uczestnika, który w systemie wartość właściwości zależności określone wartości, należy uzyskać podczas wywoływania metody <xref:System.Windows.DependencyObject.GetValue%2A>w czasie wykonywania dla tej właściwości. Jeśli wartość pochodzi z innego źródła niż zamierzano, może być konieczne dostosowanie niektórych aspektów aplikacji. Źródło wartości może być stylu, motyw, wartości lokalnej, animacji, powiązania lub wartości na podstawie czasu wykonywania, takich jak ustawienia systemu za pośrednictwem motywy lub zasoby systemowe. Aby uzyskać więcej informacji, zobacz [pierwszeństwo wartość właściwości zależności](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).  
  
 Innym mechanizmem, który raport dotyczący właściwości ogólnie rzecz biorąc, a nie konkretnego wystąpienia właściwości w obiekcie jest metadane właściwości. Metadane właściwości są znalezienia przez wywołanie metody <xref:System.Windows.DependencyProperty.GetMetadata%2A> i sprawdzeniu zwróconego <xref:System.Windows.PropertyMetadata> (lub jeden z kilku możliwych klas pochodnych, które metadane zwrócony właściwości jest castable do).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetValueSource">
      <MemberSignature Language="C#" Value="public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.ValueSource GetValueSource(class System.Windows.DependencyObject dependencyObject, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::ValueSource GetValueSource(System::Windows::DependencyObject ^ dependencyObject, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ValueSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Element, który zawiera <c>dependencyProperty</c> do informacji w raporcie dla.</param>
        <param name="dependencyProperty">Identyfikator właściwości zależności, aby dla informacji w raporcie.</param>
        <summary>Zwraca struktury, która raportuje różne metadane i właściwości właściwości właściwości zależności określony w przypadku określonego <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>A <see cref="T:System.Windows.ValueSource" /> struktury, która raportuje informacje szczegółowe.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tę metodę należy wywoływać w kontekście tak, aby mógł działać we właściwości były późne uczestnikami określenie wartości właściwości. Na przykład nie mogą być aktywne w właściwości powiązania, chyba że zostaną załadowane wszystkie elementy uczestnika w drzewie element powiązania asynchroniczne są propagowane i jest połączony z obiektem źródłowym powiązania. Podobnie w tym wszystkie niezbędne motywu słowniki zasobów powinny być dostępne.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsTemplatedValueDynamic">
      <MemberSignature Language="C#" Value="public static bool IsTemplatedValueDynamic (System.Windows.DependencyObject elementInTemplate, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTemplatedValueDynamic(class System.Windows.DependencyObject elementInTemplate, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTemplatedValueDynamic(System::Windows::DependencyObject ^ elementInTemplate, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementInTemplate" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="elementInTemplate">Element, który należy do wystąpienia szablonu.</param>
        <param name="dependencyProperty">Właściwości zależności. </param>
        <summary>Wskazuje, czy określony element należy do wystąpienia szablonu, który definiuje wartość dla określonej właściwości, które mogą ulec zmianie w czasie wykonywania na podstawie zmian w innym miejscu.</summary>
        <returns>
          <see langword="true" /> Jeśli <paramref name="elementInTemplate" /> należy do wystąpienia szablonu, który definiuje wartość dla określonej właściwości, które mogą ulec zmianie w czasie wykonywania na podstawie zmian w innym miejscu; w przeciwnym razie <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Przykładowe wartości, które mogą ulec zmianie w czasie wykonywania na podstawie zmian w innym miejscu są wartościami ustawionymi przez <xref:System.Windows.Data.Binding>, <xref:System.Windows.TemplateBindingExtension> i <xref:System.Windows.DynamicResourceExtension> obiektów.

Ta metoda zapewnia bardziej szczegółowe informacje w przypadkach, gdy wartość <xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType> właściwość jest <xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>.
Informacje znajdują się stosowania narzędzia diagnostyczne.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>