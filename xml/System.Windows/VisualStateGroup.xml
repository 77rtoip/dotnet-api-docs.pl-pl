<Type Name="VisualStateGroup" FullName="System.Windows.VisualStateGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f158c8d81a2f4694ed16551106363c676ea449c3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39941690" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualStateGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ContentProperty("States")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera wzajemnie się wykluczają <see cref="T:System.Windows.VisualState" /> obiektów i <see cref="T:System.Windows.VisualTransition" /> obiektów, które są używane, aby przenieść z jednego stanu do drugiego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każdy <xref:System.Windows.VisualStateGroup> zawiera zbiór <xref:System.Windows.VisualState> obiektów. A <xref:System.Windows.VisualState> zawiera zbiór <xref:System.Windows.Media.Animation.Storyboard> obiekty, które określają, jak zmienia się wygląd kontrolki gdy kontrolka jest w stanie niektórych. Na przykład <xref:System.Windows.Controls.Button> może być nieco inny wygląd, gdy zostanie naciśnięty niż, gdy nie zostanie naciśnięty. Dwustanowy, który <xref:System.Windows.Controls.Button> definiuje odpowiadają po jego kliknięciu (`"Pressed"`) i gdy nie jest (`"Normal"`).  
  
 Możesz dodać <xref:System.Windows.VisualState> do formantu przez ustawienie `VisualStateManager.VisualStateGroups` dołączona właściwość w formancie. Możesz umieścić stany, które są wzajemnie wykluczających się ze sobą w tej samej <xref:System.Windows.VisualStateGroup>. Na przykład <xref:System.Windows.Controls.CheckBox> ma dwa <xref:System.Windows.VisualStateGroup> obiektów. Jedna z nich zawiera stany, `Normal`, `MouseOver`, `Pressed`, i `Disabled`. Drugi zawiera stany, `Checked`, `UnChecked`, i `Indeterminate`. <xref:System.Windows.Controls.CheckBox> Mogą znajdować się w Stanach `MouseOver` i `UnChecked` w tym samym czasie, ale nie może znajdować się w `MouseOver` i `Pressed` Państwa, w tym samym czasie.  
  
 Chociaż możesz dodać <xref:System.Windows.VisualState> obiektów do dowolnego elementu, są one szczególnie użyteczne w sposób umożliwić innym ponowne zdefiniowanie zachowania visual <xref:System.Windows.Controls.Control>. Jeśli tworzysz formant niestandardowy, który używa <xref:System.Windows.Controls.ControlTemplate>, można określić, które stwierdza, że formant może być w przez dodanie <xref:System.Windows.TemplateVisualStateAttribute> w swojej definicji klasy. Następnie każdy, kto tworzy nową <xref:System.Windows.Controls.ControlTemplate> dla formantu można dodać <xref:System.Windows.VisualState> obiektów do szablonu. <xref:System.Windows.TemplateVisualStateAttribute> Umożliwia projektanta narzędzi, takich jak Expression Blend, aby uwidocznić stanów kontrolki. Stany o takiej samej <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> należy w tym samym <xref:System.Windows.VisualStateGroup>.  
  
 Aby uzyskać więcej informacji o sposobie używania <xref:System.Windows.VisualStateGroup> obiekty w <xref:System.Windows.Controls.ControlTemplate>, zobacz [Dostosowywanie wyglądu istniejącego formantu przez stworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). Więcej informacji na temat sposobu tworzenia formantów, które używają <xref:System.Windows.VisualStateManager>, zobacz [Tworzenie formantu zawierający możliwe do dostosowania wyglądu](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 <xref:System.Windows.VisualStateGroup.Transitions%2A> Właściwość zawiera <xref:System.Windows.VisualTransition> obiekty, które są stosowane po przejściu kontrolki między stwierdza, że są zdefiniowane w <xref:System.Windows.VisualStateGroup>.  
  
   
  
## Examples  
 Poniższy przykład tworzy prostą <xref:System.Windows.Controls.ControlTemplate> dla <xref:System.Windows.Controls.Button> zawiera jeden <xref:System.Windows.Controls.Grid>. Zawiera ona także <xref:System.Windows.VisualStateGroup> o nazwie `CommonStates`, która definiuje `MouseOver` i `Normal` stanów. <xref:System.Windows.VisualStateGroup> Ma również <xref:System.Windows.VisualTransition> określająca, czy zajmuje pół sekundy <xref:System.Windows.Controls.Grid> można zmienić z zielonego czerwony, gdy użytkownik przesuwa wskaźnik myszy nad <xref:System.Windows.Controls.Button>.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.VisualStateGroup" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.VisualState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.VisualState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As VisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VisualState ^ CurrentState { System::Windows::VisualState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Windows.VisualState" Usage="System.Windows.VisualStateGroup.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.VisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera <see cref="T:System.Windows.VisualState" /> zastosowano do formantu.</summary>
        <value>
          <see cref="T:System.Windows.VisualState" /> Zastosowano do formantu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanged : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanged : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po kontrolka przechodzi do innego stanu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie występuje po przejściu kontrolki do nowy stan i <xref:System.Windows.VisualStateGroup.CurrentStateChanging> wystąpi zdarzenie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanging;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanging : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanging : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy formant, który rozpoczyna się Przechodzenie do innego stanu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie występuje, gdy rozpoczyna stany przejścia. Jeśli <xref:System.Windows.VisualTransition> jest stosowany do tej zmiany stanu to zdarzenie występuje, gdy rozpoczyna się przejścia. Jeśli <xref:System.Windows.VisualTransition> nie została zastosowana, to zdarzenie występuje po kontrolka przechodzi w stan nowego, lecz przed <xref:System.Windows.VisualStateGroup.CurrentStateChanged> zdarzeń.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualStateGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Windows.VisualStateGroup" />.</summary>
        <value>Nazwa <see cref="T:System.Windows.VisualStateGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Autorzy kontroli określić, które stwierdza, że formant może należeć, dodając <xref:System.Windows.TemplateVisualStateAttribute> w swojej definicji klasy. Stany o takiej samej <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> należy w tym samym <xref:System.Windows.VisualStateGroup>. Ustaw <xref:System.Windows.VisualStateGroup.Name%2A> z <xref:System.Windows.VisualStateGroup> wartość <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> właściwości.  
  
   
  
## Examples  
 Poniższy przykład tworzy dwie <xref:System.Windows.VisualStateGroup> obiekty, które są nazwane `CommonStates` i `FocusStates`. Formant będzie w stanie dokładnie jeden z nich <xref:System.Windows.VisualStateGroup> przez cały czas. Na przykład cały, zobacz [Dostosowywanie wyglądu istniejącego formantu przez stworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#5](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="States">
      <MemberSignature Language="C#" Value="public System.Collections.IList States { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList States" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.States" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property States As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ States { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.States : System.Collections.IList" Usage="System.Windows.VisualStateGroup.States" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wzajemnie się wykluczają <see cref="T:System.Windows.VisualState" /> obiektów.</summary>
        <value>Kolekcja wzajemnie się wykluczają <see cref="T:System.Windows.VisualState" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy prostą <xref:System.Windows.Controls.ControlTemplate> dla <xref:System.Windows.Controls.Button> zawiera jeden <xref:System.Windows.Controls.Grid>. Zawiera ona także <xref:System.Windows.VisualStateGroup> o nazwie `CommonStates`, która definiuje `MouseOver` i `Normal` stanów. <xref:System.Windows.VisualStateGroup> Ma również <xref:System.Windows.VisualTransition> określająca, czy zajmuje pół sekundy <xref:System.Windows.Controls.Grid> można zmienić z zielonego czerwony, gdy użytkownik przesuwa wskaźnik myszy nad <xref:System.Windows.Controls.Button>.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transitions">
      <MemberSignature Language="C#" Value="public System.Collections.IList Transitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Transitions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Transitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transitions As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Transitions { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transitions : System.Collections.IList" Usage="System.Windows.VisualStateGroup.Transitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.VisualTransition" /> obiektów.</summary>
        <value>Kolekcja <see cref="T:System.Windows.VisualTransition" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition> Obiekty w <xref:System.Windows.VisualStateGroup.Transitions%2A> są stosowane, gdy kontrolka przejścia między stany, które są definiowane w <xref:System.Windows.VisualStateGroup>.  
  
   
  
## Examples  
 Poniższy przykład tworzy prostą <xref:System.Windows.Controls.ControlTemplate> dla <xref:System.Windows.Controls.Button> zawiera jeden <xref:System.Windows.Controls.Grid>. Zawiera ona także <xref:System.Windows.VisualStateGroup> o nazwie `CommonStates`, która definiuje `MouseOver` i `Normal` stanów. <xref:System.Windows.VisualStateGroup> Ma również <xref:System.Windows.VisualTransition> określająca, czy zajmuje pół sekundy <xref:System.Windows.Controls.Grid> można zmienić z zielonego czerwony, gdy użytkownik przesuwa wskaźnik myszy nad <xref:System.Windows.Controls.Button>.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>