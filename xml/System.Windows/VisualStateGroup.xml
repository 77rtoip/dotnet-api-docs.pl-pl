<Type Name="VisualStateGroup" FullName="System.Windows.VisualStateGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99374b25565fd88ac0348a8ba3946202e9ec050a" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69432765" /></Metadata><TypeSignature Language="C#" Value="public class VisualStateGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("States")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zawiera wzajemnie <see cref="T:System.Windows.VisualState" /> wykluczające <see cref="T:System.Windows.VisualTransition" /> się obiekty i obiekty, które są używane do przenoszenia z jednego stanu do drugiego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Każda <xref:System.Windows.VisualStateGroup> z<xref:System.Windows.VisualState> nich zawiera kolekcję obiektów. A <xref:System.Windows.VisualState> zawiera<xref:System.Windows.Media.Animation.Storyboard> kolekcję obiektów, które określają, jak wygląd kontrolki zmienia się, gdy kontrolka jest w określonym stanie. Na przykład <xref:System.Windows.Controls.Button> może mieć nieco inny wygląd, gdy zostanie naciśnięty, gdy nie jest wciśnięty. Dwa stany, które <xref:System.Windows.Controls.Button> odpowiadają, gdy jest wciśnięty (`"Pressed"`) i gdy nie jest (`"Normal"`).  
  
 Dodaj <xref:System.Windows.VisualState> do kontrolki, `VisualStateManager.VisualStateGroups` ustawiając właściwość dołączoną formantu. Należy umieścić Stany, które wzajemnie się wykluczają w ten sam <xref:System.Windows.VisualStateGroup>sposób. Na przykład <xref:System.Windows.Controls.CheckBox> ma dwa <xref:System.Windows.VisualStateGroup> obiekty. Jeden z nich zawiera Stany `Normal`, `MouseOver`, `Pressed`, i `Disabled`. Drugi zawiera Stany, `Checked`, `UnChecked`i `Indeterminate`. `UnChecked` `MouseOver` `Pressed` `MouseOver` Może znajdować się w Stanach i w tym samym czasie, ale nie może być jednocześnie w Stanach i. <xref:System.Windows.Controls.CheckBox>  
  
 Mimo że można dodawać <xref:System.Windows.VisualState> obiekty do dowolnego elementu, są one szczególnie przydatne, aby umożliwić innym osobom ponowne zdefiniowanie wizualnego zachowania <xref:System.Windows.Controls.Control>. Jeśli utworzysz kontrolkę niestandardową <xref:System.Windows.Controls.ControlTemplate>, która używa, możesz określić, które Stany mogą znajdować się w, <xref:System.Windows.TemplateVisualStateAttribute> dodając do jego definicji klasy. Następnie każda osoba, która tworzy <xref:System.Windows.Controls.ControlTemplate> nową kontrolkę, może <xref:System.Windows.VisualState> dodawać obiekty do szablonu. <xref:System.Windows.TemplateVisualStateAttribute> Włącza narzędzia projektanta, takie jak Expression Blend, umożliwiające uwidocznienie Stanów formantu. Stany o tej samej <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> przynależności należy do tego <xref:System.Windows.VisualStateGroup>samego.  
  
 Aby uzyskać więcej informacji o sposobach <xref:System.Windows.VisualStateGroup> używania obiektów <xref:System.Windows.Controls.ControlTemplate>w, zobacz [Dostosowywanie wyglądu istniejącej kontrolki przez utworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). Aby uzyskać więcej informacji na temat sposobu tworzenia formantów, które <xref:System.Windows.VisualStateManager>korzystają z, zobacz [Tworzenie kontrolki, która ma dostosowywalny wygląd](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 Właściwość zawiera <xref:System.Windows.VisualTransition> obiekty, które są stosowane, gdy kontrolka przechodzi między Stanami zdefiniowanymi w <xref:System.Windows.VisualStateGroup>. <xref:System.Windows.VisualStateGroup.Transitions%2A>  
  
   
  
## Examples  
 Poniższy przykład tworzy prostą <xref:System.Windows.Controls.ControlTemplate> dla elementu <xref:System.Windows.Controls.Button> , który zawiera jeden <xref:System.Windows.Controls.Grid>. Zawiera <xref:System.Windows.VisualStateGroup> on również nazwę `CommonStates`, która definiuje `MouseOver` Stany i `Normal` . Ma także, że w przypadku, gdy użytkownik przesuwa wskaźnik myszy nad <xref:System.Windows.Controls.Button>elementu <xref:System.Windows.Controls.Grid> , przyjmuje jedną połowę sekund na zmianę z zielonej na czerwony. <xref:System.Windows.VisualTransition> <xref:System.Windows.VisualStateGroup>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.VisualStateGroup" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.VisualState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.VisualState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As VisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VisualState ^ CurrentState { System::Windows::VisualState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Windows.VisualState" Usage="System.Windows.VisualStateGroup.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.VisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.VisualState" /> Pobiera, który jest aktualnie stosowany do formantu.</summary>
        <value><see cref="T:System.Windows.VisualState" /> Jest to obecnie stosowane do formantu.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanged : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanged : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje po przejściu kontrolki do innego stanu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To zdarzenie występuje, gdy kontrolka przechodzi do nowego stanu i <xref:System.Windows.VisualStateGroup.CurrentStateChanging> wystąpi zdarzenie.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanging;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanging : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanging : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Występuje, gdy kontrolka zaczyna przechodzić do innego stanu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie występuje, gdy kontrolka zaczyna przechodzić do stanu przejścia. <xref:System.Windows.VisualTransition> Jeśli zostanie zastosowany do zmiany stanu, to zdarzenie występuje po rozpoczęciu przejścia. Jeśli element <xref:System.Windows.VisualTransition> nie jest stosowany, to zdarzenie występuje po przejściu kontrolki do nowego stanu, ale <xref:System.Windows.VisualStateGroup.CurrentStateChanged> przed zdarzeniem.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualStateGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Windows.VisualStateGroup" />.</summary>
        <value>Nazwa <see cref="T:System.Windows.VisualStateGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Autorzy kontroli określają, które Stany mogą znajdować się w <xref:System.Windows.TemplateVisualStateAttribute> tej samej klasie. Stany o tej samej <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> przynależności należy do tego <xref:System.Windows.VisualStateGroup>samego. <xref:System.Windows.VisualStateGroup.Name%2A> Ustawwłaściwość<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType>nawartośćwłaściwości. <xref:System.Windows.VisualStateGroup>  
  
   
  
## Examples  
 Poniższy przykład tworzy dwa <xref:System.Windows.VisualStateGroup> obiekty o nazwach `CommonStates` i `FocusStates`. Kontrolka będzie dokładnie znajdować się w jednym stanie <xref:System.Windows.VisualStateGroup> . Dla całego przykładu, zobacz [Dostosowywanie wyglądu istniejącej kontrolki przez utworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#5](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="States">
      <MemberSignature Language="C#" Value="public System.Collections.IList States { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList States" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.States" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property States As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ States { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.States : System.Collections.IList" Usage="System.Windows.VisualStateGroup.States" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję wzajemnie wykluczających <see cref="T:System.Windows.VisualState" /> się obiektów.</summary>
        <value>Kolekcja wzajemnie wykluczających <see cref="T:System.Windows.VisualState" /> się obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład tworzy prostą <xref:System.Windows.Controls.ControlTemplate> dla elementu <xref:System.Windows.Controls.Button> , który zawiera jeden <xref:System.Windows.Controls.Grid>. Zawiera <xref:System.Windows.VisualStateGroup> on również nazwę `CommonStates`, która definiuje `MouseOver` Stany i `Normal` . Ma także, że w przypadku, gdy użytkownik przesuwa wskaźnik myszy nad <xref:System.Windows.Controls.Button>elementu <xref:System.Windows.Controls.Grid> , przyjmuje jedną połowę sekund na zmianę z zielonej na czerwony. <xref:System.Windows.VisualTransition> <xref:System.Windows.VisualStateGroup>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transitions">
      <MemberSignature Language="C#" Value="public System.Collections.IList Transitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Transitions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Transitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transitions As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Transitions { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transitions : System.Collections.IList" Usage="System.Windows.VisualStateGroup.Transitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera kolekcję <see cref="T:System.Windows.VisualTransition" /> obiektów.</summary>
        <value>Kolekcja <see cref="T:System.Windows.VisualTransition" /> obiektów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obiekty <xref:System.Windows.VisualTransition> w <xref:System.Windows.VisualStateGroup.Transitions%2A> są stosowane, gdy kontrolka przechodzi między Stanami zdefiniowanymi w <xref:System.Windows.VisualStateGroup>.  
  
   
  
## Examples  
 Poniższy przykład tworzy prostą <xref:System.Windows.Controls.ControlTemplate> dla elementu <xref:System.Windows.Controls.Button> , który zawiera jeden <xref:System.Windows.Controls.Grid>. Zawiera <xref:System.Windows.VisualStateGroup> on również nazwę `CommonStates`, która definiuje `MouseOver` Stany i `Normal` . Ma także, że w przypadku, gdy użytkownik przesuwa wskaźnik myszy nad <xref:System.Windows.Controls.Button>elementu <xref:System.Windows.Controls.Grid> , przyjmuje jedną połowę sekund na zmianę z zielonej na czerwony. <xref:System.Windows.VisualTransition> <xref:System.Windows.VisualStateGroup>  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
