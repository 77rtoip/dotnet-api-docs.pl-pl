<Type Name="MessageBox" FullName="System.Windows.MessageBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="377915fb9878d43abb5364b5fd58b277efdcc1d9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30715502" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MessageBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MessageBox extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.MessageBox" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MessageBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageBox sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Wyświetla okno komunikatu.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Okno komunikatu jest prefabrykowanych modalne okno dialogowe wyświetla wiadomości tekstowej dla użytkownika. Pokaż okno komunikatu przez wywołanie metody statycznych <xref:System.Windows.MessageBox.Show%2A> metody <xref:System.Windows.MessageBox> klasy. Wiadomość SMS, który jest wyświetlany jest argument ciągu, który jest przekazywany do <xref:System.Windows.MessageBox.Show%2A>. Kilka przeciążeń <xref:System.Windows.MessageBox.Show%2A> metody umożliwia także podać podpis paska tytułu.  
  
 Aby włączyć użytkownika zamknąć okno komunikatu <xref:System.Windows.MessageBox.Show%2A> wyświetla komunikat, który ma **OK** przycisk i **zamknąć** przycisku w pasku tytułu.  
  
 Aby zadać pytanie użytkownika umożliwia także okno komunikatu. Odpowiedzi użytkownika, klikając jeden z kilku przycisków, określających do wyświetlenia za pomocą <xref:System.Windows.MessageBoxButton> wyliczenia. To wyliczenie można przekazać do kilku przeciążeń <xref:System.Windows.MessageBox.Show%2A> metody. Wartość domyślna <xref:System.Windows.MessageBoxButton> wyliczenie jest <xref:System.Windows.MessageBoxButton.OK>.  
  
 Można określić, który przycisk, a użytkownik kliknie, sprawdzając wartość która <xref:System.Windows.MessageBox.Show%2A> zwraca. Wartość zwracana jest wartość <xref:System.Windows.MessageBoxResult> wyliczenia, w której każda wartość jest równa jeden z przycisków, który może wyświetlać okno komunikatu. Wartością domyślną dla pola wiadomości jest <xref:System.Windows.MessageBoxResult.OK> ponieważ **OK** jest przycisk pole komunikat domyślny. Jednak niektóre overloads z <xref:System.Windows.MessageBox.Show%2A> metody pozwalają udostępniać innym <xref:System.Windows.MessageBoxResult> wartość domyślna.  
  
 Pola komunikatów mogą komunikować się z informacji i można zadawać pytania, na które mają różnym stopniu znaczenie. Pola komunikatów użyj ikony, aby wskazać znaczenie. Na przykład ikony można wskazać komunikat informacyjny, to ostrzeżenie czy jest ważne jest. <xref:System.Windows.MessageBoxImage> Wyliczenie hermetyzuje zbiór ikony pola możliwe wiadomości. Domyślnie okno komunikatu nie wyświetla ikonę. Jednak można przekazać <xref:System.Windows.MessageBoxImage> wartość na jedną z kilku <xref:System.Windows.MessageBox.Show%2A> przeciążenia metody, aby określić, że komunikat zawiera ikonę.  
  
 Pola komunikatów czasami zapewniają funkcje specjalne, takie jak czytania od prawej do lewej. Można dostosować zachowanie pola wiadomości przy użyciu co najmniej jeden <xref:System.Windows.MessageBoxOptions> wartości wyliczenia, które są akceptowane przez niektóre przeciążeń <xref:System.Windows.MessageBox.Show%2A> metody.  
  
 Pola komunikatów zawsze być oknem właściciela. Domyślnie właściciel pola wiadomości ma okna, które jest aktualnie aktywne w aplikacji w czasie, który zostanie otwarte okno komunikatu. Można jednak określić innego właściciela <xref:System.Windows.Window> przy użyciu jednej z kilku <xref:System.Windows.MessageBox.Show%2A> przeciążenia. Aby uzyskać więcej informacji na temat właściciela systemu windows, temacie <xref:System.Windows.Window.Owner%2A?displayProperty=nameWithType>.  
  
 Aby uzyskać więcej informacji, zobacz [próbki MessageBox](http://go.microsoft.com/fwlink/?LinkID=160023).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.MessageBoxButton" />
    <altmember cref="T:System.Windows.MessageBoxImage" />
    <altmember cref="T:System.Windows.MessageBoxResult" />
    <altmember cref="T:System.Windows.MessageBoxOptions" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Wyświetla okno komunikatu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Użyj przeciążenia <xref:System.Windows.MessageBox.Show%2A> metodę, która umożliwia określenie oknem właściciela. W przeciwnym razie wartość pola wiadomości jest własnością okna, który jest obecnie aktywny.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.MessageBoxResult Show (string messageBoxText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.MessageBoxResult Show(string messageBoxText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MessageBox.Show(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (messageBoxText As String) As MessageBoxResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::MessageBoxResult Show(System::String ^ messageBoxText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.MessageBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBoxText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="messageBoxText">A <see cref="T:System.String" /> , który określa tekst do wyświetlenia.</param>
        <summary>Wyświetla komunikat, który ma komunikat i zwracającą wynik.</summary>
        <returns>A <see cref="T:System.Windows.MessageBoxResult" /> wartość, która określa, które wiadomości pole przycisku przez użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia użycie tego przeciążenia <xref:System.Windows.MessageBox.Show%2A> metody.  
  
 [!code-csharp[MessageBoxSnippets#MessageBoxShow1CODE](~/samples/snippets/csharp/VS_Snippets_Wpf/MessageBoxSnippets/CSharp/Show1Window.xaml.cs#messageboxshow1code)]
 [!code-vb[MessageBoxSnippets#MessageBoxShow1CODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MessageBoxSnippets/visualbasic/show1window.xaml.vb#messageboxshow1code)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.MessageBoxResult Show (string messageBoxText, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.MessageBoxResult Show(string messageBoxText, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MessageBox.Show(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (messageBoxText As String, caption As String) As MessageBoxResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::MessageBoxResult Show(System::String ^ messageBoxText, System::String ^ caption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.MessageBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBoxText" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="messageBoxText">A <see cref="T:System.String" /> , który określa tekst do wyświetlenia.</param>
        <param name="caption">A <see cref="T:System.String" /> , który określa podpis paska tytułu do wyświetlenia.</param>
        <summary>Wyświetla komunikat, który ma podpis pasek komunikatów i tytuł; i zwracającą wynik.</summary>
        <returns>A <see cref="T:System.Windows.MessageBoxResult" /> wartość, która określa, które wiadomości pole przycisku przez użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia użycie tego przeciążenia <xref:System.Windows.MessageBox.Show%2A> metody.  
  
 [!code-csharp[MessageBoxSnippets#MessageBoxShow2CODE](~/samples/snippets/csharp/VS_Snippets_Wpf/MessageBoxSnippets/CSharp/Show2Window.xaml.cs#messageboxshow2code)]
 [!code-vb[MessageBoxSnippets#MessageBoxShow2CODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MessageBoxSnippets/visualbasic/show2window.xaml.vb#messageboxshow2code)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.MessageBoxResult Show (System.Windows.Window owner, string messageBoxText);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.MessageBoxResult Show(class System.Windows.Window owner, string messageBoxText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As Window, messageBoxText As String) As MessageBoxResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::MessageBoxResult Show(System::Windows::Window ^ owner, System::String ^ messageBoxText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.MessageBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Window" />
        <Parameter Name="messageBoxText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">A <see cref="T:System.Windows.Window" /> reprezentujący okno właściciela pola wiadomości.</param>
        <param name="messageBoxText">A <see cref="T:System.String" /> , który określa tekst do wyświetlenia.</param>
        <summary>Wyświetla komunikat przed określonym oknem. Komunikat zostanie wyświetlony komunikat i zwraca wynik.</summary>
        <returns>A <see cref="T:System.Windows.MessageBoxResult" /> wartość, która określa, które wiadomości pole przycisku przez użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie zostanie wyświetlone okno komunikatu przed okna, który jest obecnie aktywny.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.MessageBox.Show(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.MessageBoxResult Show (string messageBoxText, string caption, System.Windows.MessageBoxButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.MessageBoxResult Show(string messageBoxText, string caption, valuetype System.Windows.MessageBoxButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (messageBoxText As String, caption As String, button As MessageBoxButton) As MessageBoxResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::MessageBoxResult Show(System::String ^ messageBoxText, System::String ^ caption, System::Windows::MessageBoxButton button);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.MessageBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBoxText" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="button" Type="System.Windows.MessageBoxButton" />
      </Parameters>
      <Docs>
        <param name="messageBoxText">A <see cref="T:System.String" /> , który określa tekst do wyświetlenia.</param>
        <param name="caption">A <see cref="T:System.String" /> , który określa podpis paska tytułu do wyświetlenia.</param>
        <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> wartość określająca, które lub przycisku do wyświetlenia.</param>
        <summary>Wyświetla komunikat zawierający komunikat, podpis paska tytułu i przycisk; i zwracającą wynik.</summary>
        <returns>A <see cref="T:System.Windows.MessageBoxResult" /> wartość, która określa, które wiadomości pole przycisku przez użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia użycie tego przeciążenia <xref:System.Windows.MessageBox.Show%2A> metody.  
  
 [!code-csharp[MessageBoxSnippets#MessageBoxShow3CODE](~/samples/snippets/csharp/VS_Snippets_Wpf/MessageBoxSnippets/CSharp/Show3Window.xaml.cs#messageboxshow3code)]
 [!code-vb[MessageBoxSnippets#MessageBoxShow3CODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MessageBoxSnippets/visualbasic/show3window.xaml.vb#messageboxshow3code)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.MessageBoxResult Show (System.Windows.Window owner, string messageBoxText, string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.MessageBoxResult Show(class System.Windows.Window owner, string messageBoxText, string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As Window, messageBoxText As String, caption As String) As MessageBoxResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::MessageBoxResult Show(System::Windows::Window ^ owner, System::String ^ messageBoxText, System::String ^ caption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.MessageBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Window" />
        <Parameter Name="messageBoxText" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">A <see cref="T:System.Windows.Window" /> reprezentujący okno właściciela pola wiadomości.</param>
        <param name="messageBoxText">A <see cref="T:System.String" /> , który określa tekst do wyświetlenia.</param>
        <param name="caption">A <see cref="T:System.String" /> , który określa podpis paska tytułu do wyświetlenia.</param>
        <summary>Wyświetla komunikat przed określonym oknem. Komunikat zawiera nagłówek pasek komunikatów i tytuł; i zwraca wynik.</summary>
        <returns>A <see cref="T:System.Windows.MessageBoxResult" /> wartość, która określa, które wiadomości pole przycisku przez użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie zostanie wyświetlone okno komunikatu przed okna, który jest obecnie aktywny.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.MessageBox.Show(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.MessageBoxResult Show (string messageBoxText, string caption, System.Windows.MessageBoxButton button, System.Windows.MessageBoxImage icon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.MessageBoxResult Show(string messageBoxText, string caption, valuetype System.Windows.MessageBoxButton button, valuetype System.Windows.MessageBoxImage icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (messageBoxText As String, caption As String, button As MessageBoxButton, icon As MessageBoxImage) As MessageBoxResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::MessageBoxResult Show(System::String ^ messageBoxText, System::String ^ caption, System::Windows::MessageBoxButton button, System::Windows::MessageBoxImage icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.MessageBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBoxText" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="button" Type="System.Windows.MessageBoxButton" />
        <Parameter Name="icon" Type="System.Windows.MessageBoxImage" />
      </Parameters>
      <Docs>
        <param name="messageBoxText">A <see cref="T:System.String" /> , który określa tekst do wyświetlenia.</param>
        <param name="caption">A <see cref="T:System.String" /> , który określa podpis paska tytułu do wyświetlenia.</param>
        <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> wartość określająca, które lub przycisku do wyświetlenia.</param>
        <param name="icon">A <see cref="T:System.Windows.MessageBoxImage" /> wartość, która określa ikonę do wyświetlenia.</param>
        <summary>Wyświetla komunikat wiadomości, podpis paska tytułu, przycisk i ikony; i zwracającą wynik.</summary>
        <returns>A <see cref="T:System.Windows.MessageBoxResult" /> wartość, która określa, które wiadomości pole przycisku przez użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia użycie tego przeciążenia <xref:System.Windows.MessageBox.Show%2A> metody.  
  
 [!code-csharp[MessageBoxSnippets#MessageBoxShow4CODE](~/samples/snippets/csharp/VS_Snippets_Wpf/MessageBoxSnippets/CSharp/Show4Window.xaml.cs#messageboxshow4code)]
 [!code-vb[MessageBoxSnippets#MessageBoxShow4CODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MessageBoxSnippets/visualbasic/show4window.xaml.vb#messageboxshow4code)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.MessageBoxResult Show (System.Windows.Window owner, string messageBoxText, string caption, System.Windows.MessageBoxButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.MessageBoxResult Show(class System.Windows.Window owner, string messageBoxText, string caption, valuetype System.Windows.MessageBoxButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As Window, messageBoxText As String, caption As String, button As MessageBoxButton) As MessageBoxResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::MessageBoxResult Show(System::Windows::Window ^ owner, System::String ^ messageBoxText, System::String ^ caption, System::Windows::MessageBoxButton button);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.MessageBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Window" />
        <Parameter Name="messageBoxText" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="button" Type="System.Windows.MessageBoxButton" />
      </Parameters>
      <Docs>
        <param name="owner">A <see cref="T:System.Windows.Window" /> reprezentujący okno właściciela pola wiadomości.</param>
        <param name="messageBoxText">A <see cref="T:System.String" /> , który określa tekst do wyświetlenia.</param>
        <param name="caption">A <see cref="T:System.String" /> , który określa podpis paska tytułu do wyświetlenia.</param>
        <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> wartość określająca, które lub przycisku do wyświetlenia.</param>
        <summary>Wyświetla komunikat przed określonym oknem. W oknie komunikatu wyświetla komunikat, podpis paska tytułu i przycisk; a także zwraca wynik.</summary>
        <returns>A <see cref="T:System.Windows.MessageBoxResult" /> wartość, która określa, które wiadomości pole przycisku przez użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie zostanie wyświetlone okno komunikatu przed okna, który jest obecnie aktywny.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.MessageBoxResult Show (string messageBoxText, string caption, System.Windows.MessageBoxButton button, System.Windows.MessageBoxImage icon, System.Windows.MessageBoxResult defaultResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.MessageBoxResult Show(string messageBoxText, string caption, valuetype System.Windows.MessageBoxButton button, valuetype System.Windows.MessageBoxImage icon, valuetype System.Windows.MessageBoxResult defaultResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (messageBoxText As String, caption As String, button As MessageBoxButton, icon As MessageBoxImage, defaultResult As MessageBoxResult) As MessageBoxResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::MessageBoxResult Show(System::String ^ messageBoxText, System::String ^ caption, System::Windows::MessageBoxButton button, System::Windows::MessageBoxImage icon, System::Windows::MessageBoxResult defaultResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.MessageBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBoxText" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="button" Type="System.Windows.MessageBoxButton" />
        <Parameter Name="icon" Type="System.Windows.MessageBoxImage" />
        <Parameter Name="defaultResult" Type="System.Windows.MessageBoxResult" />
      </Parameters>
      <Docs>
        <param name="messageBoxText">A <see cref="T:System.String" /> , który określa tekst do wyświetlenia.</param>
        <param name="caption">A <see cref="T:System.String" /> , który określa podpis paska tytułu do wyświetlenia.</param>
        <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> wartość określająca, które lub przycisku do wyświetlenia.</param>
        <param name="icon">A <see cref="T:System.Windows.MessageBoxImage" /> wartość, która określa ikonę do wyświetlenia.</param>
        <param name="defaultResult">A <see cref="T:System.Windows.MessageBoxResult" /> wartość określająca, domyślnym wynikiem pola wiadomości.</param>
        <summary>Wyświetla komunikat wiadomości, podpis paska tytułu, przycisk i ikony; i który akceptuje domyślne wynik pola wiadomości i zwraca wynik.</summary>
        <returns>A <see cref="T:System.Windows.MessageBoxResult" /> wartość, która określa, które wiadomości pole przycisku przez użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia użycie tego przeciążenia <xref:System.Windows.MessageBox.Show%2A> metody.  
  
 [!code-csharp[MessageBoxSnippets#MessageBoxShow5CODE](~/samples/snippets/csharp/VS_Snippets_Wpf/MessageBoxSnippets/CSharp/Show5Window.xaml.cs#messageboxshow5code)]
 [!code-vb[MessageBoxSnippets#MessageBoxShow5CODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MessageBoxSnippets/visualbasic/show5window.xaml.vb#messageboxshow5code)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.MessageBoxResult Show (System.Windows.Window owner, string messageBoxText, string caption, System.Windows.MessageBoxButton button, System.Windows.MessageBoxImage icon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.MessageBoxResult Show(class System.Windows.Window owner, string messageBoxText, string caption, valuetype System.Windows.MessageBoxButton button, valuetype System.Windows.MessageBoxImage icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As Window, messageBoxText As String, caption As String, button As MessageBoxButton, icon As MessageBoxImage) As MessageBoxResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::MessageBoxResult Show(System::Windows::Window ^ owner, System::String ^ messageBoxText, System::String ^ caption, System::Windows::MessageBoxButton button, System::Windows::MessageBoxImage icon);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.MessageBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Window" />
        <Parameter Name="messageBoxText" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="button" Type="System.Windows.MessageBoxButton" />
        <Parameter Name="icon" Type="System.Windows.MessageBoxImage" />
      </Parameters>
      <Docs>
        <param name="owner">A <see cref="T:System.Windows.Window" /> reprezentujący okno właściciela pola wiadomości.</param>
        <param name="messageBoxText">A <see cref="T:System.String" /> , który określa tekst do wyświetlenia.</param>
        <param name="caption">A <see cref="T:System.String" /> , który określa podpis paska tytułu do wyświetlenia.</param>
        <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> wartość określająca, które lub przycisku do wyświetlenia.</param>
        <param name="icon">A <see cref="T:System.Windows.MessageBoxImage" /> wartość, która określa ikonę do wyświetlenia.</param>
        <summary>Wyświetla komunikat przed określonym oknem. Okno komunikatu wyświetla komunikat, podpis paska tytułu, przycisk i ikony; a także zwraca wynik.</summary>
        <returns>A <see cref="T:System.Windows.MessageBoxResult" /> wartość, która określa, które wiadomości pole przycisku przez użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie zostanie wyświetlone okno komunikatu przed okna, który jest obecnie aktywny.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.MessageBoxResult Show (string messageBoxText, string caption, System.Windows.MessageBoxButton button, System.Windows.MessageBoxImage icon, System.Windows.MessageBoxResult defaultResult, System.Windows.MessageBoxOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.MessageBoxResult Show(string messageBoxText, string caption, valuetype System.Windows.MessageBoxButton button, valuetype System.Windows.MessageBoxImage icon, valuetype System.Windows.MessageBoxResult defaultResult, valuetype System.Windows.MessageBoxOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (messageBoxText As String, caption As String, button As MessageBoxButton, icon As MessageBoxImage, defaultResult As MessageBoxResult, options As MessageBoxOptions) As MessageBoxResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::MessageBoxResult Show(System::String ^ messageBoxText, System::String ^ caption, System::Windows::MessageBoxButton button, System::Windows::MessageBoxImage icon, System::Windows::MessageBoxResult defaultResult, System::Windows::MessageBoxOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.MessageBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBoxText" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="button" Type="System.Windows.MessageBoxButton" />
        <Parameter Name="icon" Type="System.Windows.MessageBoxImage" />
        <Parameter Name="defaultResult" Type="System.Windows.MessageBoxResult" />
        <Parameter Name="options" Type="System.Windows.MessageBoxOptions" />
      </Parameters>
      <Docs>
        <param name="messageBoxText">A <see cref="T:System.String" /> , który określa tekst do wyświetlenia.</param>
        <param name="caption">A <see cref="T:System.String" /> , który określa podpis paska tytułu do wyświetlenia.</param>
        <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> wartość określająca, które lub przycisku do wyświetlenia.</param>
        <param name="icon">A <see cref="T:System.Windows.MessageBoxImage" /> wartość, która określa ikonę do wyświetlenia.</param>
        <param name="defaultResult">A <see cref="T:System.Windows.MessageBoxResult" /> wartość określająca, domyślnym wynikiem pola wiadomości.</param>
        <param name="options">A <see cref="T:System.Windows.MessageBoxOptions" /> wartość obiektu, który określa opcje.</param>
        <summary>Wyświetla komunikat wiadomości, podpis paska tytułu, przycisk i ikony; i który akceptuje wynik pole komunikat domyślny, jest zgodna z podanych opcji i zwraca wynik.</summary>
        <returns>A <see cref="T:System.Windows.MessageBoxResult" /> wartość, która określa, które wiadomości pole przycisku przez użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Poniższy przykład przedstawia użycie tego przeciążenia <xref:System.Windows.MessageBox.Show%2A> metody.  
  
 [!code-csharp[MessageBoxSnippets#MessageBoxShow6CODE](~/samples/snippets/csharp/VS_Snippets_Wpf/MessageBoxSnippets/CSharp/Show6Window.xaml.cs#messageboxshow6code)]
 [!code-vb[MessageBoxSnippets#MessageBoxShow6CODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MessageBoxSnippets/visualbasic/show6window.xaml.vb#messageboxshow6code)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.MessageBoxResult Show (System.Windows.Window owner, string messageBoxText, string caption, System.Windows.MessageBoxButton button, System.Windows.MessageBoxImage icon, System.Windows.MessageBoxResult defaultResult);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.MessageBoxResult Show(class System.Windows.Window owner, string messageBoxText, string caption, valuetype System.Windows.MessageBoxButton button, valuetype System.Windows.MessageBoxImage icon, valuetype System.Windows.MessageBoxResult defaultResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As Window, messageBoxText As String, caption As String, button As MessageBoxButton, icon As MessageBoxImage, defaultResult As MessageBoxResult) As MessageBoxResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::MessageBoxResult Show(System::Windows::Window ^ owner, System::String ^ messageBoxText, System::String ^ caption, System::Windows::MessageBoxButton button, System::Windows::MessageBoxImage icon, System::Windows::MessageBoxResult defaultResult);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.MessageBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Window" />
        <Parameter Name="messageBoxText" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="button" Type="System.Windows.MessageBoxButton" />
        <Parameter Name="icon" Type="System.Windows.MessageBoxImage" />
        <Parameter Name="defaultResult" Type="System.Windows.MessageBoxResult" />
      </Parameters>
      <Docs>
        <param name="owner">A <see cref="T:System.Windows.Window" /> reprezentujący okno właściciela pola wiadomości.</param>
        <param name="messageBoxText">A <see cref="T:System.String" /> , który określa tekst do wyświetlenia.</param>
        <param name="caption">A <see cref="T:System.String" /> , który określa podpis paska tytułu do wyświetlenia.</param>
        <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> wartość określająca, które lub przycisku do wyświetlenia.</param>
        <param name="icon">A <see cref="T:System.Windows.MessageBoxImage" /> wartość, która określa ikonę do wyświetlenia.</param>
        <param name="defaultResult">A <see cref="T:System.Windows.MessageBoxResult" /> wartość określająca, domyślnym wynikiem pola wiadomości.</param>
        <summary>Wyświetla komunikat przed określonym oknem. Okno komunikatu wyświetla komunikat, podpis paska tytułu, przycisk i ikony; akceptuje domyślne wynik pola wiadomości i zwraca wynik.</summary>
        <returns>A <see cref="T:System.Windows.MessageBoxResult" /> wartość, która określa, które wiadomości pole przycisku przez użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie zostanie wyświetlone okno komunikatu przed okna, który jest obecnie aktywny.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public static System.Windows.MessageBoxResult Show (System.Windows.Window owner, string messageBoxText, string caption, System.Windows.MessageBoxButton button, System.Windows.MessageBoxImage icon, System.Windows.MessageBoxResult defaultResult, System.Windows.MessageBoxOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.MessageBoxResult Show(class System.Windows.Window owner, string messageBoxText, string caption, valuetype System.Windows.MessageBoxButton button, valuetype System.Windows.MessageBoxImage icon, valuetype System.Windows.MessageBoxResult defaultResult, valuetype System.Windows.MessageBoxOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Show (owner As Window, messageBoxText As String, caption As String, button As MessageBoxButton, icon As MessageBoxImage, defaultResult As MessageBoxResult, options As MessageBoxOptions) As MessageBoxResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::MessageBoxResult Show(System::Windows::Window ^ owner, System::String ^ messageBoxText, System::String ^ caption, System::Windows::MessageBoxButton button, System::Windows::MessageBoxImage icon, System::Windows::MessageBoxResult defaultResult, System::Windows::MessageBoxOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.MessageBoxResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Window" />
        <Parameter Name="messageBoxText" Type="System.String" />
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="button" Type="System.Windows.MessageBoxButton" />
        <Parameter Name="icon" Type="System.Windows.MessageBoxImage" />
        <Parameter Name="defaultResult" Type="System.Windows.MessageBoxResult" />
        <Parameter Name="options" Type="System.Windows.MessageBoxOptions" />
      </Parameters>
      <Docs>
        <param name="owner">A <see cref="T:System.Windows.Window" /> reprezentujący okno właściciela pola wiadomości.</param>
        <param name="messageBoxText">A <see cref="T:System.String" /> , który określa tekst do wyświetlenia.</param>
        <param name="caption">A <see cref="T:System.String" /> , który określa podpis paska tytułu do wyświetlenia.</param>
        <param name="button">A <see cref="T:System.Windows.MessageBoxButton" /> wartość określająca, które lub przycisku do wyświetlenia.</param>
        <param name="icon">A <see cref="T:System.Windows.MessageBoxImage" /> wartość, która określa ikonę do wyświetlenia.</param>
        <param name="defaultResult">A <see cref="T:System.Windows.MessageBoxResult" /> wartość określająca, domyślnym wynikiem pola wiadomości.</param>
        <param name="options">A <see cref="T:System.Windows.MessageBoxOptions" /> wartość obiektu, który określa opcje.</param>
        <summary>Wyświetla komunikat przed określonym oknem. Okno komunikatu wyświetla komunikat, podpis paska tytułu, przycisk i ikony; akceptuje wynik pole komunikat domyślny, jest zgodna z podanych opcji i zwraca wynik.</summary>
        <returns>A <see cref="T:System.Windows.MessageBoxResult" /> wartość, która określa, które wiadomości pole przycisku przez użytkownika.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Domyślnie zostanie wyświetlone okno komunikatu przed okna, który jest obecnie aktywny.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)" />
      </Docs>
    </Member>
  </Members>
</Type>