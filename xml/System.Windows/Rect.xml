<Type Name="Rect" FullName="System.Windows.Rect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="389a6c402545d432e5980a30b5d72f7c6b055010" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52377155" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Rect : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Rect extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Rect" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rect&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Rect : IFormattable" />
  <TypeSignature Language="F#" Value="type Rect = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.RectConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.RectValueSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5db4b-101">Opisuje szerokość, wysokość i lokalizację prostokąta.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5db4b-101">Describes the width, height, and location of a rectangle.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5db4b-102">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="5db4b-102">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y,width,height"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5db4b-103">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="5db4b-103">XAML Values</span></span>  
 <span data-ttu-id="5db4b-104">*x*</span><span class="sxs-lookup"><span data-stu-id="5db4b-104">*x*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="5db4b-105">Lokalizacja współrzędną x lewej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-105">The x-coordinate location of the left side of the rectangle.</span></span>  
  
 <span data-ttu-id="5db4b-106">*y*</span><span class="sxs-lookup"><span data-stu-id="5db4b-106">*y*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="5db4b-107">Lokalizacja współrzędną y górnej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-107">The y-coordinate location of the top side of the rectangle.</span></span>  
  
 <span data-ttu-id="5db4b-108">*width*</span><span class="sxs-lookup"><span data-stu-id="5db4b-108">*width*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="5db4b-109">Wartość nieujemną, która reprezentuje <xref:System.Windows.Rect.Width%2A> prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-109">A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle.</span></span>  
  
 <span data-ttu-id="5db4b-110">*Wysokość*</span><span class="sxs-lookup"><span data-stu-id="5db4b-110">*height*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="5db4b-111">Wartość nieujemną, która reprezentuje <xref:System.Windows.Rect.Height%2A> prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-111">A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-112">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury, aby określić wymiary i rozmieszczenie prostokąt przy użyciu XAML.</span><span class="sxs-lookup"><span data-stu-id="5db4b-112">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5db4b-113">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-113">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-114">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-114">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-115">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Rect" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-115">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect size" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="5db4b-116">A <see cref="T:System.Windows.Size" /> strukturę, która określa szerokość i wysokość prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-116">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-117">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Rect" /> struktura, która jest o określonym rozmiarze i znajduje się w folderze (0,0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-117">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is of the specified size and is located at (0,0).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-118">Poniższy przykład pokazuje, jak utworzyć nową <xref:System.Windows.Rect> struktury za pomocą <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="5db4b-118">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point1, point2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="5db4b-119">Pierwszy punkt musi zawierać nowy prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-119">The first point that the new rectangle must contain.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="5db4b-120">Drugi punkt musi zawierać nowy prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-120">The second point that the new rectangle must contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-121">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Rect" /> dokładnie wystarczająco duży, aby zawierać dwa momenty określonej struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-121">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the two specified points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-122">Poniższy przykład pokazuje, jak utworzyć nową <xref:System.Windows.Rect> struktury za pomocą <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="5db4b-122">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point location, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point location, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point location, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (location, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="5db4b-123">Punkt, który określa lokalizację, w lewym górnym rogu prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-123">A point that specifies the location of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="5db4b-124">A <see cref="T:System.Windows.Size" /> strukturę, która określa szerokość i wysokość prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-124">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-125">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Rect" /> strukturę, która ma lokalizacji określonej lewym górnym rogu i określona szerokość i wysokość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-125">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified top-left corner location and the specified width and height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-126">Poniższy przykład pokazuje, jak utworzyć nową <xref:System.Windows.Rect> struktury za pomocą <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="5db4b-126">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample4_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point, vector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="5db4b-127">Musi zawierać pierwszy punkt prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-127">The first point the rectangle must contain.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="5db4b-128">Wielkość, o które zostanie przesunięte w określonym punkcie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-128">The amount to offset the specified point.</span>
          </span>
          <span data-ttu-id="5db4b-129">Wynikowy prostokąt będzie dokładnie wystarczająco duży, aby zawierać zarówno punkty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-129">The resulting rectangle will be exactly large enough to contain both points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-130">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Rect" /> strukturę, która jest dokładnie wystarczająco duży, aby zawierać określony punkt i sumę określonego punktu i określony wektor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-130">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-131">Poniższy przykład pokazuje, jak utworzyć nową <xref:System.Windows.Rect> struktury za pomocą <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="5db4b-131">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample5_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample5_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (double x, double y, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(double x, double y, double width, double height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : double * double * double * double -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (x, y, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="5db4b-132">Współrzędna x lewego górnego rogu prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-132">The x-coordinate of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="5db4b-133">Współrzędna y lewego górnego rogu prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-133">The y-coordinate of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="5db4b-134">Szerokość krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-134">The width of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="5db4b-135">Wysokość prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-135">The height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-136">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.Rect" /> strukturę, która ma współrzędną x współrzędną y, szerokość i wysokość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-136">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-137">Poniższy przykład pokazuje, jak utworzyć nową <xref:System.Windows.Rect> struktury za pomocą <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> konstruktora.</span><span class="sxs-lookup"><span data-stu-id="5db4b-137">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample6_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5db4b-138">
            <paramref name="width" /> jest liczbą ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-138">
              <paramref name="width" /> is a negative value.</span>
          </span>
          <span data-ttu-id="5db4b-139">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-139">-or-</span>
          </span>
          <span data-ttu-id="5db4b-140">
            <paramref name="height" /> jest liczbą ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-140">
              <paramref name="height" /> is a negative value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public double Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Bottom { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Bottom : double" Usage="System.Windows.Rect.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-141">Pobiera wartość osi y dolnej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-141">Gets the y-axis value of the bottom of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-142">Wartość y dolnej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-142">The y-axis value of the bottom of the rectangle.</span>
          </span>
          <span data-ttu-id="5db4b-143">Jeśli prostokąta jest pusta, wartość jest <see cref="F:System.Double.NegativeInfinity" /> .</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-143">If the rectangle is empty, the value is <see cref="F:System.Double.NegativeInfinity" /> .</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-144">Wartość y dolnej krawędzi prostokąta jest równa sumie <xref:System.Windows.Rect.Y%2A> i <xref:System.Windows.Rect.Height%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-144">The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-145">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-145">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-146">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-146">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomLeft : System.Windows.Point" Usage="System.Windows.Rect.BottomLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-147">Pobiera pozycję w lewym dolnym rogu prostokąta</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-147">Gets the position of the bottom-left corner of the rectangle</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-148">Pozycja w lewym dolnym rogu prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-148">The position of the bottom-left corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-149">Pozycja w lewym dolnym rogu prostokąta wynosi (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>).</span><span class="sxs-lookup"><span data-stu-id="5db4b-149">The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-150">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-150">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-151">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-151">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomRight : System.Windows.Point" Usage="System.Windows.Rect.BottomRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-152">Pobiera pozycję prawym dolnym rogu prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-152">Gets the position of the bottom-right corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-153">Pozycja w prawym dolnym rogu prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-153">The position of the bottom-right corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-154">Pozycja w prawym dolnym rogu prostokąta wynosi (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>).</span><span class="sxs-lookup"><span data-stu-id="5db4b-154">The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-155">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-155">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-156">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-156">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-157">Wskazuje, czy prostokąt zawiera określony punkt lub prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-157">Indicates whether the rectangle contains the specified point or rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Point -&gt; bool" Usage="rect.Contains point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="5db4b-158">Punkt do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-158">The point to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-159">Wskazuje, czy w prostokącie określonego punktu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-159">Indicates whether the rectangle contains the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-160">
            <see langword="true" /> Jeśli w prostokącie określonego punktu; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-160">
              <see langword="true" /> if the rectangle contains the specified point; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-161">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> metodę, aby określić, jeśli w prostokącie określonego <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="5db4b-161">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> method to determine if the rectangle contains the specified <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Rect -&gt; bool" Usage="rect.Contains rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5db4b-162">Prostokąt do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-162">The rectangle to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-163">Wskazuje, czy w prostokącie określonego prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-163">Indicates whether the rectangle contains the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-164">
            <see langword="true" /> Jeśli <paramref name="rect" /> jest całkowicie zawartej przez prostokąt; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-164">
              <see langword="true" /> if <paramref name="rect" /> is entirely contained by the rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-165">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> metodę, aby określić, jeśli jeden prostokąta jest zawarty w innym prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-165">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> method to determine if one rectangle is contained by another rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (x As Double, y As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(double x, double y);" />
      <MemberSignature Language="F#" Value="member this.Contains : double * double -&gt; bool" Usage="rect.Contains (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="5db4b-166">Współrzędna x punktu do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-166">The x-coordinate of the point to check.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="5db4b-167">Współrzędna y punktu do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-167">The y-coordinate of the point to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-168">Wskazuje, czy prostokąt zawiera współrzędną x i współrzędne y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-168">Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-169">
            <see langword="true" /> Jeśli (<paramref name="x" />, <paramref name="y" />) znajduje się w prostokącie przeciwnym <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-169">
              <see langword="true" /> if (<paramref name="x" />, <paramref name="y" />) is contained by the rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-170">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> metodę pozwala ustalić, czy prostokąt zawiera punktu określonego przez dany współrzędne x i współrzędne y.</span><span class="sxs-lookup"><span data-stu-id="5db4b-170">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Rect Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Rect Empty { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Rect" Usage="System.Windows.Rect.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-171">Pobiera wartość specjalne, która reprezentuje prostokąt bez położenia lub obszaru.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-171">Gets a special value that represents a rectangle with no position or area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-172">Pusty prostokąt, który ma <see cref="P:System.Windows.Rect.X" /> i <see cref="P:System.Windows.Rect.Y" /> wartości właściwości <see cref="F:System.Double.PositiveInfinity" />i ma <see cref="P:System.Windows.Rect.Width" /> i <see cref="P:System.Windows.Rect.Height" /> wartości właściwości <see cref="F:System.Double.NegativeInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-172">The empty rectangle, which has <see cref="P:System.Windows.Rect.X" /> and <see cref="P:System.Windows.Rect.Y" /> property values of <see cref="F:System.Double.PositiveInfinity" />, and has <see cref="P:System.Windows.Rect.Width" /> and <see cref="P:System.Windows.Rect.Height" /> property values of <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-173">Należy unikać obliczeń matematycznych obejmujące prostokąty puste.</span><span class="sxs-lookup"><span data-stu-id="5db4b-173">Avoid mathematical computations involving empty rectangles.</span></span> <span data-ttu-id="5db4b-174">Ponieważ zarówno <xref:System.Windows.Rect.X%2A> i <xref:System.Windows.Rect.Y%2A> wartości nieskończonej, procesora, operacji poważnie są ograniczone przez te operacje.</span><span class="sxs-lookup"><span data-stu-id="5db4b-174">Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations.</span></span> <span data-ttu-id="5db4b-175">Porównania używające wartości te nie wpływają na wydajność aplikacji.</span><span class="sxs-lookup"><span data-stu-id="5db4b-175">Comparisons involving these values will not affect application performance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.IsEmpty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-176">Wskazuje, czy dwoma prostokątami są takie same.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-176">Indicates whether two rectangles are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rect.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="5db4b-177">Obiekt do porównania z bieżącym prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-177">The object to compare to the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-178">Wskazuje, czy określony obiekt jest taki sam, bieżący prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-178">Indicates whether the specified object is equal to the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-179">
            <see langword="true" /> Jeśli <paramref name="o" /> jest <see cref="T:System.Windows.Rect" /> i ma taką samą <see cref="P:System.Windows.Rect.Location" /> i <see cref="P:System.Windows.Rect.Size" /> wartości jako bieżący prostokąt; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-179">
              <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Rect" /> and has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-180">Ta operacja testuje pod kątem równości obiektów.</span><span class="sxs-lookup"><span data-stu-id="5db4b-180">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="5db4b-181">W tym porównanie dwóch wystąpień <xref:System.Double.NaN?displayProperty=nameWithType> są uznawane za równe.</span><span class="sxs-lookup"><span data-stu-id="5db4b-181">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5db4b-182">Pozycja prostokąta i wymiarów, które są opisane przez <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-182">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="5db4b-183">Ponieważ <xref:System.Double> wartości może spowodować utratę dokładności, gdy wykonywane są operacje, porównania między dwiema wartościami, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="5db4b-183">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-184">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Equals%28System.Object%29> metodę, aby określić, czy prostokąt jest równe podanemu obiektowi.</span><span class="sxs-lookup"><span data-stu-id="5db4b-184">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Object%29> method to determine if a rectangle is equal to a specified object.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Rect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Rect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Rect value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Rect -&gt; bool" Usage="rect.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5db4b-185">Prostokąt do porównania z bieżącym prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-185">The rectangle to compare to the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-186">Wskazuje, czy określony prostokąt pokrywa się bieżący prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-186">Indicates whether the specified rectangle is equal to the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-187">
            <see langword="true" /> Jeśli określony prostokąt ma taką samą <see cref="P:System.Windows.Rect.Location" /> i <see cref="P:System.Windows.Rect.Size" /> wartości jako bieżący prostokąt; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-187">
              <see langword="true" /> if the specified rectangle has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-188">Ta operacja testuje pod kątem równości obiektów.</span><span class="sxs-lookup"><span data-stu-id="5db4b-188">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="5db4b-189">W tym porównanie dwóch wystąpień <xref:System.Double.NaN?displayProperty=nameWithType> są uznawane za równe.</span><span class="sxs-lookup"><span data-stu-id="5db4b-189">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5db4b-190">Pozycja prostokąta i wymiarów, które są opisane przez <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-190">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="5db4b-191">Ponieważ <xref:System.Double> wartości może spowodować utratę dokładności, gdy wykonywane są operacje, porównania między dwiema wartościami, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="5db4b-191">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-192">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> metodę, aby określić, czy prostokąta jest równa określonej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-192">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> method to determine if a rectangle is equal to a specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.Equals (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="5db4b-193">Pierwszy prostokąt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-193">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="5db4b-194">Drugi prostokąta do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-194">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-195">Wskazuje, czy określony prostokąty są takie same.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-195">Indicates whether the specified rectangles are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-196">
            <see langword="true" /> Jeśli prostokątów mają taką samą <see cref="P:System.Windows.Rect.Location" /> i <see cref="P:System.Windows.Rect.Size" /> wartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-196">
              <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-197">Ta operacja testuje pod kątem równości obiektów.</span><span class="sxs-lookup"><span data-stu-id="5db4b-197">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="5db4b-198">W tym porównanie dwóch wystąpień <xref:System.Double.NaN?displayProperty=nameWithType> są uznawane za równe.</span><span class="sxs-lookup"><span data-stu-id="5db4b-198">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5db4b-199">Pozycja prostokąta i wymiarów, które są opisane przez <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-199">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="5db4b-200">Ponieważ <xref:System.Double> wartości może spowodować utratę dokładności, gdy wykonywane są operacje, porównania między dwiema wartościami, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="5db4b-200">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-201">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> metodę, aby określić, czy jeden prostokąta jest równy innemu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-201">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to determine if one rectangle is equal to another.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rect.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-202">Tworzy wartość skrótu dla prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-202">Creates a hash code for the rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-203">Wartość skrótu dla bieżącego <see cref="T:System.Windows.Rect" /> struktury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-203">A hash code for the current <see cref="T:System.Windows.Rect" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-204">Ta metoda tworzy wartość skrótu za pomocą <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, i <xref:System.Windows.Rect.Height%2A> wartości właściwości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-204">This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-205">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.GetHashCode%2A> metodę, aby uzyskać skrótu <xref:System.Windows.Rect>.</span><span class="sxs-lookup"><span data-stu-id="5db4b-205">The following example shows how to use the <xref:System.Windows.Rect.GetHashCode%2A> method to get the hash code of a <xref:System.Windows.Rect>.</span></span>  
  
 [!code-csharp[RectExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="System.Windows.Rect.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-206">Pobiera lub Ustawia wysokość prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-206">Gets or sets the height of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-207">Liczba dodatnia, która przedstawia wysokość prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-207">A positive number that represents the height of the rectangle.</span>
          </span>
          <span data-ttu-id="5db4b-208">Wartość domyślna to 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-208">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-209"><xref:System.Windows.Rect.Empty%2A> Ma prostokąt <xref:System.Windows.Rect.Height%2A> z <xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="5db4b-209">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="5db4b-210"><xref:System.Windows.Rect.Empty%2A> Prostokąt jest tylko do odczytu; jej <xref:System.Windows.Rect.Height%2A> nie można zmienić.</span><span class="sxs-lookup"><span data-stu-id="5db4b-210">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-211">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury, aby określić wymiary i rozmieszczenie prostokąt przy użyciu XAML.</span><span class="sxs-lookup"><span data-stu-id="5db4b-211">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5db4b-212">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-212">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-213">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-213">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5db4b-214">
            <see cref="P:System.Windows.Rect.Height" /> ustawiono wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-214">
              <see cref="P:System.Windows.Rect.Height" /> is set to a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-215">
            <see cref="P:System.Windows.Rect.Height" /> jest ustawiona na <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-215">
              <see cref="P:System.Windows.Rect.Height" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Width" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Inflate">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-216">Tworzy prostokąt, będącą wynikiem rozwijanie lub zmniejszając prostokąt o określoną wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-216">Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="member this.Inflate : System.Windows.Size -&gt; unit" Usage="rect.Inflate size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="5db4b-217">Określa, aby rozwinąć prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-217">Specifies the amount to expand the rectangle.</span>
          </span>
          <span data-ttu-id="5db4b-218">
            <see cref="T:System.Windows.Size" /> Struktury <see cref="P:System.Windows.Size.Width" /> właściwość określa kwotę w celu zwiększenia prostokąta <see cref="P:System.Windows.Rect.Left" /> i <see cref="P:System.Windows.Rect.Right" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-218">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          </span>
          <span data-ttu-id="5db4b-219">
            <see cref="T:System.Windows.Size" /> Struktury <see cref="P:System.Windows.Size.Height" /> właściwość określa kwotę w celu zwiększenia prostokąta <see cref="P:System.Windows.Rect.Top" /> i <see cref="P:System.Windows.Rect.Bottom" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-219">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-220">Rozwija prostokąt przy użyciu określonego <see cref="T:System.Windows.Size" />, we wszystkich kierunkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-220">Expands the rectangle by using the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-221"><xref:System.Windows.Rect.Width%2A> Prostokąta wynikowy jest zwiększana o dwa razy <xref:System.Windows.Size.Width%2A> określonego <xref:System.Windows.Size> struktury, ponieważ są zwiększony po lewej i prawej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-221">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="5db4b-222">Podobnie <xref:System.Windows.Rect.Height%2A> prostokąta wynikowy jest zwiększana o dwa razy <xref:System.Windows.Size.Height%2A> określonego <xref:System.Windows.Size> struktury.</span><span class="sxs-lookup"><span data-stu-id="5db4b-222">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-223">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> metodę, aby zwiększyć rozmiar prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-223">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> method to increase the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-224">Ta metoda jest wywoływana w <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-224">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inflate (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(double width, double height);" />
      <MemberSignature Language="F#" Value="member this.Inflate : double * double -&gt; unit" Usage="rect.Inflate (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="5db4b-225">Kwota, według którego będą rozwijane lub zwijane lewej i prawej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-225">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="5db4b-226">Wartość, o której ma zostać zwiększania lub zmniejszania górnej i dolnej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-226">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-227">Zwiększa lub zmniejsza prostokąt przy użyciu określonej ilości szerokość i wysokość, we wszystkich kierunkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-227">Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-228"><xref:System.Windows.Rect.Width%2A> Programu prostokąt wynikowy jest zwiększanie lub zmniejszanie przez dwa razy przesunięcie określona szerokość, ponieważ nie jest stosowana do lewej i prawej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-228">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="5db4b-229">Podobnie <xref:System.Windows.Rect.Height%2A> programu prostokąt wynikowy jest zwiększanie lub zmniejszanie przez dwa razy określonej wysokości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-229">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="5db4b-230">Jeśli określona szerokość lub wysokość zmniejszania prostokąt o ponad bieżącym <xref:System.Windows.Rect.Width%2A> lub <xref:System.Windows.Rect.Height%2A>— dając prostokąta obszaru ujemna — staje się prostokąt <xref:System.Windows.Rect.Empty%2A> prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-230">If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-231">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> metodę, aby zmienić rozmiar prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-231">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-232">Ta metoda jest wywoływana w <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-232">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * System.Windows.Size -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5db4b-233">
            <see cref="T:System.Windows.Rect" /> Struktury do zmodyfikowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-233">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="5db4b-234">Określa, aby rozwinąć prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-234">Specifies the amount to expand the rectangle.</span>
          </span>
          <span data-ttu-id="5db4b-235">
            <see cref="T:System.Windows.Size" /> Struktury <see cref="P:System.Windows.Size.Width" /> właściwość określa kwotę w celu zwiększenia prostokąta <see cref="P:System.Windows.Rect.Left" /> i <see cref="P:System.Windows.Rect.Right" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-235">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          </span>
          <span data-ttu-id="5db4b-236">
            <see cref="T:System.Windows.Size" /> Struktury <see cref="P:System.Windows.Size.Height" /> właściwość określa kwotę w celu zwiększenia prostokąta <see cref="P:System.Windows.Rect.Top" /> i <see cref="P:System.Windows.Rect.Bottom" /> właściwości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-236">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-237">Zwraca prostokąt, który jest wynikiem rozwijanie prostokąt określony przez określony <see cref="T:System.Windows.Size" />, we wszystkich kierunkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-237">Returns the rectangle that results from expanding the specified rectangle by the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-238">Wynikowy prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-238">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-239"><xref:System.Windows.Rect.Width%2A> Prostokąta wynikowy jest zwiększana o dwa razy <xref:System.Windows.Size.Width%2A> określonego <xref:System.Windows.Size> struktury, ponieważ są zwiększony po lewej i prawej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-239">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="5db4b-240">Podobnie <xref:System.Windows.Rect.Height%2A> prostokąta wynikowy jest zwiększana o dwa razy <xref:System.Windows.Size.Height%2A> określonego <xref:System.Windows.Size> struktury.</span><span class="sxs-lookup"><span data-stu-id="5db4b-240">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-241">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> metodę, aby zmienić rozmiar prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-241">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-242">
            <paramref name="rect" /> jest <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-242">
              <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, double width, double height);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5db4b-243">
            <see cref="T:System.Windows.Rect" /> Struktury do zmodyfikowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-243">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="5db4b-244">Kwota, według którego będą rozwijane lub zwijane lewej i prawej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-244">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="5db4b-245">Wartość, o której ma zostać zwiększania lub zmniejszania górnej i dolnej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-245">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-246">Tworzy prostokąt, która wynika z rozwijanie lub zmniejszając prostokąt określony przez szerokość i wysokość podana, we wszystkich kierunkach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-246">Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-247">Wynikowy prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-247">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-248"><xref:System.Windows.Rect.Width%2A> Programu prostokąt wynikowy jest zwiększanie lub zmniejszanie przez dwa razy przesunięcie określona szerokość, ponieważ nie jest stosowana do lewej i prawej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-248">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="5db4b-249">Podobnie <xref:System.Windows.Rect.Height%2A> programu prostokąt wynikowy jest zwiększanie lub zmniejszanie przez dwa razy określonej wysokości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-249">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="5db4b-250">Jeśli określonych modyfikatorów szerokość lub wysokość zmniejszyć prostokąt o ponad bieżącym <xref:System.Windows.Rect.Width%2A> lub <xref:System.Windows.Rect.Height%2A>— dając prostokąta obszaru ujemna — ta metoda zwraca <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5db4b-250">If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-251">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> metodę, aby zmienić rozmiar prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-251">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-252">
            <paramref name="rect" /> jest <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-252">
              <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-253">Umożliwia znalezienie część wspólną dwóch prostokątów.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-253">Finds the intersection of two rectangles.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Windows.Rect -&gt; unit" Usage="rect.Intersect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5db4b-254">Prostokąt intersect bieżący prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-254">The rectangle to intersect with the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-255">Odnajduje przecięcia bieżący prostokąt i prostokąt określony i zapisuje wynik jako bieżący prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-255">Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-256">Jeśli wspólną nie istnieje, staje się bieżącym prostokącie <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5db4b-256">If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-257">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> metody Znajdź część wspólną dwóch prostokątów i zapisz wynik jako prostokąt.</span><span class="sxs-lookup"><span data-stu-id="5db4b-257">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> method to find the intersection of two rectangles and store the result as a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Intersect (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Intersect(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Intersect (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Intersect(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Intersect (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="5db4b-258">Pierwszy prostokąt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-258">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="5db4b-259">Drugi prostokąta do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-259">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-260">Zwraca część wspólną określonej prostokąty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-260">Returns the intersection of the specified rectangles.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-261">Część wspólną dwóch prostokątów lub <see cref="P:System.Windows.Rect.Empty" /> Jeśli wspólną nie istnieje.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-261">The intersection of the two rectangles, or <see cref="P:System.Windows.Rect.Empty" /> if no intersection exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-262">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> metody do znalezienia część wspólną dwóch prostokątów.</span><span class="sxs-lookup"><span data-stu-id="5db4b-262">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="IntersectsWith">
      <MemberSignature Language="C#" Value="public bool IntersectsWith (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IntersectsWith(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IntersectsWith(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectsWith : System.Windows.Rect -&gt; bool" Usage="rect.IntersectsWith rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5db4b-263">Prostokąt do sprawdzenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-263">The rectangle to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-264">Wskazuje, czy określony prostokąt przecina bieżący prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-264">Indicates whether the specified rectangle intersects with the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-265">
            <see langword="true" /> Jeśli określony prostokąt przecina bieżący prostokąt; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-265">
              <see langword="true" /> if the specified rectangle intersects with the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-266">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.IntersectsWith%2A> metodę, aby określić, jeśli dwa prostokąty intersect.</span><span class="sxs-lookup"><span data-stu-id="5db4b-266">The following example shows how to use the <xref:System.Windows.Rect.IntersectsWith%2A> method to determine if two rectangles intersect.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectsWithExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectswithexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Rect.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-267">Pobiera wartość wskazującą, czy jest prostokąt <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-267">Gets a value that indicates whether the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-268">
            <see langword="true" /> Jeśli jest prostokąt <see cref="P:System.Windows.Rect.Empty" /> prostokąt; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-268">
              <see langword="true" /> if the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-269">Ta właściwość nie jest używana do testowania zero obszaru; Prostokąt z obszaru, zerowego niekoniecznie jest <xref:System.Windows.Rect.Empty%2A> prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-269">Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span> <span data-ttu-id="5db4b-270">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Rect.Empty%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-270">For more information, see the <xref:System.Windows.Rect.Empty%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Empty" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Left : double" Usage="System.Windows.Rect.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-271">Pobiera wartości na osi x lewej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-271">Gets the x-axis value of the left side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-272">Wartości na osi x lewej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-272">The x-axis value of the left side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-273">Wprowadzenie tej właściwości jest odpowiednikiem wprowadzenie <xref:System.Windows.Rect.X%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-273">Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-274">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-274">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-275">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-275">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Windows.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Location { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Windows.Point with get, set" Usage="System.Windows.Rect.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-276">Pobiera lub Ustawia położenie lewego górnego rogu prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-276">Gets or sets the position of the top-left corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-277">Pozycja lewego górnego rogu prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-277">The position of the top-left corner of the rectangle.</span>
          </span>
          <span data-ttu-id="5db4b-278">Wartość domyślna to (0, 0).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-278">The default is (0, 0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-279">Pozycja lewego górnego rogu prostokąta wynosi (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="5db4b-279">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-280">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury, aby określić wymiary i rozmieszczenie prostokąt przy użyciu XAML.</span><span class="sxs-lookup"><span data-stu-id="5db4b-280">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5db4b-281">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-281">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-282">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-282">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-283">
            <see cref="P:System.Windows.Rect.Location" /> jest ustawiona na <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-283">
              <see cref="P:System.Windows.Rect.Location" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Offset">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-284">Przenosi prostokąt o określoną wartość.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-284">Moves a rectangle by the specified amount.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetVector As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="member this.Offset : System.Windows.Vector -&gt; unit" Usage="rect.Offset offsetVector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="offsetVector">
          <span data-ttu-id="5db4b-285">Wektor, określający kwoty poziome i pionowe, aby przenieść prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-285">A vector that specifies the horizontal and vertical amounts to move the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-286">Przenosi prostokąt określony wektor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-286">Moves the rectangle by the specified vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-287">Wywołanie tej metody na pusty prostokąt (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) nie jest dozwolone.</span><span class="sxs-lookup"><span data-stu-id="5db4b-287">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="5db4b-288">Należy pamiętać, że wywołanie <xref:System.Windows.Rect.Offset%2A> metoda będzie miał wpływ tylko, jeśli jest możliwa zmiana <xref:System.Windows.Rect.X%2A> i <xref:System.Windows.Rect.Y%2A> właściwości bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="5db4b-288">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="5db4b-289">Ponieważ <xref:System.Windows.Rect> jest typem wartości, jeśli odwołujesz się <xref:System.Windows.Rect> obiektu za pomocą właściwości lub indeksatora, Pobierz kopię obiektu nie odwołanie do obiektu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-289">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="5db4b-290">Jeśli spróbujesz zmienić <xref:System.Windows.Rect.X%2A> lub <xref:System.Windows.Rect.Y%2A> odwołanie właściwość lub indeksator, występuje błąd kompilatora.</span><span class="sxs-lookup"><span data-stu-id="5db4b-290">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="5db4b-291">Podobnie wywołanie <xref:System.Windows.Rect.Offset%2A> na właściwość lub indeksator nie spowoduje zmiany obiektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="5db4b-291">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="5db4b-292">Jeśli chcesz zmienić wartość <xref:System.Windows.Rect> , jest określany jako właściwość lub indeksator, Utwórz nową <xref:System.Windows.Rect>, zmodyfikuj jej pola, a następnie przypisz <xref:System.Windows.Rect> do właściwości lub indeksatora.</span><span class="sxs-lookup"><span data-stu-id="5db4b-292">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-293">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> metodę, aby zmienić położenie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-293">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-294">Ta metoda jest wywoływana w <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-294">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="rect.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="5db4b-295">Kwota można przesuwać w poziomie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-295">The amount to move the rectangle horizontally.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="5db4b-296">Kwota można przesuwać w pionie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-296">The amount to move the rectangle vertically.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-297">Przenosi określonych wielkości poziome i pionowe prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-297">Moves the rectangle by the specified horizontal and vertical amounts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-298">Wywołanie tej metody na pusty prostokąt (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) nie jest dozwolone.</span><span class="sxs-lookup"><span data-stu-id="5db4b-298">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="5db4b-299">Należy pamiętać, że wywołanie <xref:System.Windows.Rect.Offset%2A> metoda będzie miał wpływ tylko, jeśli jest możliwa zmiana <xref:System.Windows.Rect.X%2A> i <xref:System.Windows.Rect.Y%2A> właściwości bezpośrednio.</span><span class="sxs-lookup"><span data-stu-id="5db4b-299">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="5db4b-300">Ponieważ <xref:System.Windows.Rect> jest typem wartości, jeśli odwołujesz się <xref:System.Windows.Rect> obiektu za pomocą właściwości lub indeksatora, Pobierz kopię obiektu nie odwołanie do obiektu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-300">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="5db4b-301">Jeśli spróbujesz zmienić <xref:System.Windows.Rect.X%2A> lub <xref:System.Windows.Rect.Y%2A> odwołanie właściwość lub indeksator, występuje błąd kompilatora.</span><span class="sxs-lookup"><span data-stu-id="5db4b-301">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="5db4b-302">Podobnie wywołanie <xref:System.Windows.Rect.Offset%2A> na właściwość lub indeksator nie spowoduje zmiany obiektu źródłowego.</span><span class="sxs-lookup"><span data-stu-id="5db4b-302">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="5db4b-303">Jeśli chcesz zmienić wartość <xref:System.Windows.Rect> , jest określany jako właściwość lub indeksator, Utwórz nową <xref:System.Windows.Rect>, zmodyfikuj jej pola, a następnie przypisz <xref:System.Windows.Rect> do właściwości lub indeksatora.</span><span class="sxs-lookup"><span data-stu-id="5db4b-303">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-304">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> metodę, aby zmienić położenie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-304">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-305">Ta metoda jest wywoływana w <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-305">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * System.Windows.Vector -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetVector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5db4b-306">Oryginalny prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-306">The original rectangle.</span>
          </span>
        </param>
        <param name="offsetVector">
          <span data-ttu-id="5db4b-307">Wektor, określający przesunięć poziome i pionowe nowy prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-307">A vector that specifies the horizontal and vertical offsets for the new rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-308">Zwraca prostokąt, który jest przesunięty od prostokąt określony przy użyciu określonego wektora.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-308">Returns a rectangle that is offset from the specified rectangle by using the specified vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-309">Wynikowy prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-309">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-310">Wywołanie tej metody za pomocą pusty prostokąt (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) nie jest dozwolone.</span><span class="sxs-lookup"><span data-stu-id="5db4b-310">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-311">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> metodę, aby zmienić położenie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-311">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-312">
            <paramref name="rect" /> jest <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-312">
              <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5db4b-313">Przenieść prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-313">The rectangle to move.</span>
          </span>
        </param>
        <param name="offsetX">
          <span data-ttu-id="5db4b-314">Przesunięcie w poziomie dla nowych prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-314">The horizontal offset for the new rectangle.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="5db4b-315">Przesunięcie w pionie nowe prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-315">The vertical offset for the new rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-316">Zwraca prostokąt, który jest przesunięty od określonego prostokąta przy użyciu określonej ilości poziome i pionowe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-316">Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-317">Wynikowy prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-317">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-318">Wywołanie tej metody za pomocą pusty prostokąt (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) nie jest dozwolone.</span><span class="sxs-lookup"><span data-stu-id="5db4b-318">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-319">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> metodę, aby zmienić położenie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-319">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-320">
            <paramref name="rect" /> jest <see cref="P:System.Windows.Rect.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-320">
              <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="rect1 = rect2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="5db4b-321">Pierwszy prostokąt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-321">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="5db4b-322">Drugi prostokąta do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-322">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-323">Porównanie dwóch prostokątów pod kątem równości dokładne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-323">Compares two rectangles for exact equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-324">
            <see langword="true" /> Jeśli prostokątów mają taką samą <see cref="P:System.Windows.Rect.Location" /> i <see cref="P:System.Windows.Rect.Size" /> wartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-324">
              <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-325">Ta operacja testuje pod kątem równości obiektów.</span><span class="sxs-lookup"><span data-stu-id="5db4b-325">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="5db4b-326">W tym porównanie dwóch wystąpień <xref:System.Double.NaN?displayProperty=nameWithType> są uznawane za równe.</span><span class="sxs-lookup"><span data-stu-id="5db4b-326">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5db4b-327">Pozycja prostokąta i wymiarów, które są opisane przez <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-327">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="5db4b-328">Ponieważ <xref:System.Double> wartości może spowodować utratę dokładności, gdy wykonywane są operacje, porównania między dwiema wartościami, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="5db4b-328">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="5db4b-329">Jest równoważne metodę dla tego operatora <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="5db4b-329">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="5db4b-330">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.op_Equality%2A> operator, aby sprawdzić, czy dwoma prostokątami są dokładnie takie same.</span><span class="sxs-lookup"><span data-stu-id="5db4b-330">The following example shows how to use the <xref:System.Windows.Rect.op_Equality%2A> operator to determine if two rectangles are exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.op_Inequality (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="5db4b-331">Pierwszy prostokąt do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-331">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="5db4b-332">Drugi prostokąta do porównania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-332">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-333">Porównuje dwa prostokąty pod kątem nierówności.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-333">Compares two rectangles for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-334">
            <see langword="true" /> Jeśli prostokątów nie mają takie same <see cref="P:System.Windows.Rect.Location" /> i <see cref="P:System.Windows.Rect.Size" /> wartości; w przeciwnym razie <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-334">
              <see langword="true" /> if the rectangles do not have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-335">Ta operacja testuje pod kątem nierówności obiektu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-335">This operation tests for object inequality.</span></span>  
  
 <span data-ttu-id="5db4b-336">W tym porównanie dwóch wystąpień <xref:System.Double.NaN?displayProperty=nameWithType> są uznawane za równe.</span><span class="sxs-lookup"><span data-stu-id="5db4b-336">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5db4b-337">Pozycja prostokąta i wymiarów, które są opisane przez <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-337">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="5db4b-338">Ponieważ <xref:System.Double> wartości może spowodować utratę dokładności, gdy wykonywane są operacje, porównania między dwiema wartościami, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="5db4b-338">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="5db4b-339">Jest równoważne metodę dla tego operatora <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="5db4b-339">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="5db4b-340">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.op_Inequality%2A> operator, aby ustalić, czy nie są dokładnie takie same prostokąty dwa.</span><span class="sxs-lookup"><span data-stu-id="5db4b-340">The following example shows how to use the <xref:System.Windows.Rect.op_Inequality%2A> operator to determine if two rectangles are not exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="5db4b-341">Ciąg reprezentujący prostokąta w formularzu "x, y, szerokość, wysokość".</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-341">The string representation of the rectangle, in the form "x, y, width, height".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-342">Tworzy nowy prostokąt z reprezentacji określony ciąg.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-342">Creates a new rectangle from the specified string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-343">Wynikowy prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-343">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-344">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Parse%2A> metodę, aby przekonwertować ciąg reprezentujący prostokąta do <xref:System.Windows.Rect> struktury.</span><span class="sxs-lookup"><span data-stu-id="5db4b-344">The following example shows how to use the <xref:System.Windows.Rect.Parse%2A> method to convert a string representation of a rectangle into a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#parseexample)]
 [!code-vb[RectExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public double Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Right { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : double" Usage="System.Windows.Rect.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-345">Pobiera wartość osi x z prawej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-345">Gets the x-axis value of the right side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-346">Wartości na osi x po prawej stronie prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-346">The x-axis value of the right side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-347">Wartości po prawej stronie prostokąt na osi x jest równa sumie <xref:System.Windows.Rect.X%2A> i <xref:System.Windows.Rect.Width%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-347">The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-348">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-348">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-349">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-349">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : double * double -&gt; unit" Usage="rect.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="5db4b-350">Współczynnik skali w kierunku x.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-350">The scale factor in the x-direction.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="5db4b-351">Współczynnik skali w kierunku y.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-351">The scale factor in the y-direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-352">Mnoży rozmiar bieżący prostokąt przez określony x i y wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-352">Multiplies the size of the current rectangle by the specified x and y values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-353">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Scale%2A> metodę, aby pomnożyć szerokość i wysokość prostokąta przez określoną liczbę.</span><span class="sxs-lookup"><span data-stu-id="5db4b-353">The following example shows how to use the <xref:System.Windows.Rect.Scale%2A> method to multiply the width and height of a rectangle by the specified amount.</span></span>  
  
 [!code-csharp[RectExamples_snip#ScaleExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#scaleexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Windows.Size with get, set" Usage="System.Windows.Rect.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-354">Pobiera lub ustawia szerokość i wysokość prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-354">Gets or sets the width and height of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-355">A <see cref="T:System.Windows.Size" /> strukturę, która określa szerokość i wysokość prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-355">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-356">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury, aby określić wymiary i rozmieszczenie prostokąt przy użyciu XAML.</span><span class="sxs-lookup"><span data-stu-id="5db4b-356">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5db4b-357">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-357">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-358">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-358">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-359">
            <see cref="P:System.Windows.Rect.Size" /> jest ustawiona na <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-359">
              <see cref="P:System.Windows.Rect.Size" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="5db4b-360">Format do użycia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-360">The format to use.</span>
          </span>
          <span data-ttu-id="5db4b-361">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-361">-or-</span>
          </span>
          <span data-ttu-id="5db4b-362">Odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) do użycia domyślny format zdefiniowany dla typu <see cref="T:System.IFormattable" /> implementacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-362">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="5db4b-363">Dostawcę, który ma być używany do formatowania wartości.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-363">The provider to use to format the value.</span>
          </span>
          <span data-ttu-id="5db4b-364">—lub—</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-364">-or-</span>
          </span>
          <span data-ttu-id="5db4b-365">Odwołanie o wartości null (<see langword="Nothing" /> w języku Visual Basic) można uzyskać informacji formatujące z bieżących ustawień regionalnych systemu operacyjnego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-365">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-366">Formatuje wartość bieżącego wystąpienia przy użyciu określonego formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-366">Formats the value of the current instance using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-367">Ciąg reprezentujący prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-367">A string representation of the rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-368">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="5db4b-368">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5db4b-369">Mogą być używane tylko wtedy, gdy <xref:System.Windows.Rect> wystąpienia jest rzutowany na <xref:System.IFormattable> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-369">It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Top : double" Usage="System.Windows.Rect.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-370">Pobiera położenie y górnej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-370">Gets the y-axis position of the top of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-371">Położenie y górnej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-371">The y-axis position of the top of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-372">Wprowadzenie tej właściwości jest odpowiednikiem wprowadzenie <xref:System.Windows.Rect.Y%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-372">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-373">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-373">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-374">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-374">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="TopLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLeft : System.Windows.Point" Usage="System.Windows.Rect.TopLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-375">Pobiera pozycję lewego górnego rogu prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-375">Gets the position of the top-left corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-376">Pozycja lewego górnego rogu prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-376">The position of the top-left corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-377">Pozycja lewego górnego rogu prostokąta wynosi (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="5db4b-377">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-378">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-378">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-379">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-379">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopRight : System.Windows.Point" Usage="System.Windows.Rect.TopRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-380">Pobiera pozycję w prawym górnym rogu prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-380">Gets the position of the top-right corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-381">Pozycja w prawym górnym rogu prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-381">The position of the top-right corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-382">Pozycja w prawym górnym rogu prostokąta wynosi (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="5db4b-382">The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-383">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-383">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-384">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-384">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-385">Zwraca ciąg reprezentujący prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-385">Returns a string representation of the rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="rect.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-386">Zwraca ciąg reprezentujący prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-386">Returns a string representation of the rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-387">Ciąg reprezentujący bieżący prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-387">A string representation of the current rectangle.</span>
          </span>
          <span data-ttu-id="5db4b-388">Ten ciąg ma następującą postać: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-388">The string has the following form: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-389">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.ToString> metodę, aby uzyskać ciąg reprezentujący <xref:System.Windows.Rect> struktury.</span><span class="sxs-lookup"><span data-stu-id="5db4b-389">The following example shows how to use the <xref:System.Windows.Rect.ToString> method to get a string representation of a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ToStringExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#tostringexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="rect.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="5db4b-390">Informacje o formatowaniu specyficzne dla kultury.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-390">Culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-391">Zwraca ciąg reprezentujący prostokąta przy użyciu dostawcy określonego formatu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-391">Returns a string representation of the rectangle by using the specified format provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-392">Ciąg reprezentujący bieżący prostokąt, który jest określany przez dostawcę w określonym formacie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-392">A string representation of the current rectangle that is determined by the specified format provider.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-393">Przekształca prostokąt przy użyciu określonej macierzy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-393">Transforms a rectangle by using the specified matrix.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Media.Matrix -&gt; unit" Usage="rect.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="5db4b-394">Macierz, która określa przekształcenie do zastosowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-394">A matrix that specifies the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-395">Przekształca prostokąt, za pomocą określonej macierzy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-395">Transforms the rectangle by applying the specified matrix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-396">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> metodę, aby przekształcić <xref:System.Windows.Rect> struktury za pomocą <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="5db4b-396">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> method to transform a <xref:System.Windows.Rect> structure by using a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Transform (System.Windows.Rect rect, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Transform(valuetype System.Windows.Rect rect, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Transform(System::Windows::Rect rect, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Windows.Rect * System.Windows.Media.Matrix -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Transform (rect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5db4b-397">Prostokąt, który stanowi podstawę do przekształcenia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-397">A rectangle that is the basis for the transformation.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="5db4b-398">Macierz, która określa przekształcenie do zastosowania.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-398">A matrix that specifies the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-399">Zwraca prostokąt, który jest wynikiem zastosowania macierzy określony obszar przycinania na prostokąt określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-399">Returns the rectangle that results from applying the specified matrix to the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-400">Prostokąt, który jest wynikiem operacji.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-400">The rectangle that results from the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-401">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> metodę, aby utworzyć nową <xref:System.Windows.Rect> struktury, które powstały na skutek stosowania <xref:System.Windows.Media.Matrix> do istniejących prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-401">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> method to create a new <xref:System.Windows.Rect> structure that results from applying a <xref:System.Windows.Media.Matrix> to an existing rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-402">Tworzy prostokąt, który jest dokładnie wystarczająco duży, aby zawierać danego prostokąt i określony punkt lub innego prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-402">Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Point -&gt; unit" Usage="rect.Union point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="5db4b-403">Punkt do uwzględnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-403">The point to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-404">Rozwija bieżący prostokąt wystarczająco dokładnie zawierają określony punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-404">Expands the current rectangle exactly enough to contain the specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-405">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Union%28System.Windows.Point%29> metodę, aby rozwinąć bieżący prostokąt wystarczająco dokładnie zawiera dany <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="5db4b-405">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Point%29> method to expand the current rectangle exactly enough to contain a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Rect -&gt; unit" Usage="rect.Union rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5db4b-406">Prostokąt do uwzględnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-406">The rectangle to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-407">Rozwija bieżący prostokąt wystarczająco dokładnie zawierają określony prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-407">Expands the current rectangle exactly enough to contain the specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-408">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> metodę, aby rozwinąć bieżący prostokąt wystarczająco dokładnie zawierają określony prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-408">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> method to expand the current rectangle exactly enough to contain the specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect, System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Point -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5db4b-409">Prostokąt do uwzględnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-409">The rectangle to include.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="5db4b-410">Punkt do uwzględnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-410">The point to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-411">Tworzy prostokąt, który jest dokładnie wystarczająco duży, aby dołączyć określonej prostokąt i określony punkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-411">Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-412">Prostokąt, który jest dokładnie wystarczająco duży, aby zawierać prostokąt określony a określonym punktem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-412">A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-413">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> metodę w celu utworzenia prostokąt, który jest dokładnie wystarczająco duży, aby zawierać danego prostokąt i danym <xref:System.Windows.Point>.</span><span class="sxs-lookup"><span data-stu-id="5db4b-413">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Union (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="5db4b-414">Pierwszy prostokąt do uwzględnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-414">The first rectangle to include.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="5db4b-415">Drugi prostokąta do uwzględnienia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-415">The second rectangle to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5db4b-416">Tworzy prostokąt, który jest dokładnie wystarczająco duży, aby zawierać dwoma prostokątami określony.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-416">Creates a rectangle that is exactly large enough to contain the two specified rectangles.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5db4b-417">Wynikowy prostokąt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-417">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5db4b-418">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> metodę w celu utworzenia prostokąt, który jest dokładnie wystarczająco duży, aby zawierać dwoma prostokątami danego.</span><span class="sxs-lookup"><span data-stu-id="5db4b-418">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to create a rectangle that is exactly large enough to contain two given rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.Rect.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-419">Pobiera lub ustawia szerokość prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-419">Gets or sets the width of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-420">Liczba dodatnia, która przedstawia szerokość prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-420">A positive number that represents the width of the rectangle.</span>
          </span>
          <span data-ttu-id="5db4b-421">Wartość domyślna to 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-421">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-422"><xref:System.Windows.Rect.Empty%2A> Ma prostokąt <xref:System.Windows.Rect.Width%2A> z <xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="5db4b-422">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="5db4b-423"><xref:System.Windows.Rect.Empty%2A> Prostokąt jest tylko do odczytu; jej <xref:System.Windows.Rect.Width%2A> nie można zmienić.</span><span class="sxs-lookup"><span data-stu-id="5db4b-423">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-424">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury, aby określić wymiary i rozmieszczenie prostokąt przy użyciu XAML.</span><span class="sxs-lookup"><span data-stu-id="5db4b-424">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5db4b-425">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-425">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-426">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-426">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5db4b-427">
            <see cref="P:System.Windows.Rect.Width" /> ustawiono wartość ujemną.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-427">
              <see cref="P:System.Windows.Rect.Width" /> is set to a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-428">
            <see cref="P:System.Windows.Rect.Width" /> jest ustawiona na <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-428">
              <see cref="P:System.Windows.Rect.Width" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Height" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Rect.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-429">Pobiera lub ustawia wartości osi x lewej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-429">Gets or sets the x-axis value of the left side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-430">Wartości na osi x lewej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-430">The x-axis value of the left side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-431">Wprowadzenie tej właściwości jest odpowiednikiem wprowadzenie <xref:System.Windows.Rect.Left%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-431">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-432">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury, aby określić wymiary i rozmieszczenie prostokąt przy użyciu XAML.</span><span class="sxs-lookup"><span data-stu-id="5db4b-432">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5db4b-433">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-433">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-434">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-434">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-435">
            <see cref="P:System.Windows.Rect.X" /> jest ustawiona na <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-435">
              <see cref="P:System.Windows.Rect.X" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Rect.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5db4b-436">Pobiera lub ustawia wartość osi y górnej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-436">Gets or sets the y-axis value of the top side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5db4b-437">Wartość y górnej krawędzi prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-437">The y-axis value of the top side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5db4b-438">Wprowadzenie tej właściwości jest odpowiednikiem wprowadzenie <xref:System.Windows.Rect.Top%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="5db4b-438">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5db4b-439">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury, aby określić wymiary i rozmieszczenie prostokąt przy użyciu XAML.</span><span class="sxs-lookup"><span data-stu-id="5db4b-439">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5db4b-440">Poniższy przykład pokazuje, jak utworzyć prostokąt i dodaj go do strony za pomocą kodu.</span><span class="sxs-lookup"><span data-stu-id="5db4b-440">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5db4b-441">Ten przykład ilustruje sposób znaleźć rozmiar i współrzędnych informacje o nowych prostokąt i renderowane informacje w <xref:System.Windows.Controls.TextBox> poniżej prostokąta.</span><span class="sxs-lookup"><span data-stu-id="5db4b-441">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5db4b-442">
            <see cref="P:System.Windows.Rect.Y" /> jest ustawiona na <see cref="P:System.Windows.Rect.Empty" /> prostokąta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5db4b-442">
              <see cref="P:System.Windows.Rect.Y" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
  </Members>
</Type>