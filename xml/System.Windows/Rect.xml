<Type Name="Rect" FullName="System.Windows.Rect">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ec91a82d02acf1662d7ec2571ba0b106ca0021a3" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444226" /></Metadata><TypeSignature Language="C#" Value="public struct Rect : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Rect extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Rect" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rect&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Rect : IFormattable" />
  <TypeSignature Language="F#" Value="type Rect = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.RectConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.RectValueSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="591ba-101">Opisuje szerokość, Wysokość i położenie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-101">Describes the width, height, and location of a rectangle.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="591ba-102">Użycie atrybutu języka XAML</span><span class="sxs-lookup"><span data-stu-id="591ba-102">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y,width,height"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="591ba-103">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="591ba-103">XAML Values</span></span>  
 <span data-ttu-id="591ba-104">*x*</span><span class="sxs-lookup"><span data-stu-id="591ba-104">*x*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="591ba-105">Lokalizacja współrzędnej x lewej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-105">The x-coordinate location of the left side of the rectangle.</span></span>  
  
 <span data-ttu-id="591ba-106">*y*</span><span class="sxs-lookup"><span data-stu-id="591ba-106">*y*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="591ba-107">Lokalizacja współrzędnej y górnej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-107">The y-coordinate location of the top side of the rectangle.</span></span>  
  
 <span data-ttu-id="591ba-108">*width*</span><span class="sxs-lookup"><span data-stu-id="591ba-108">*width*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="591ba-109">Nieujemna wartość, która reprezentuje <xref:System.Windows.Rect.Width%2A> prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-109">A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle.</span></span>  
  
 <span data-ttu-id="591ba-110">*proporcj*</span><span class="sxs-lookup"><span data-stu-id="591ba-110">*height*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="591ba-111">Nieujemna wartość, która reprezentuje <xref:System.Windows.Rect.Height%2A> prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-111">A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-112">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury do określania wymiarów i lokalizacji prostokąta przy użyciu języka XAML.</span><span class="sxs-lookup"><span data-stu-id="591ba-112">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="591ba-113">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-113">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-114">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-114">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="591ba-115">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Rect" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="591ba-115">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect size" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="591ba-116"><see cref="T:System.Windows.Size" /> Struktura, która określa szerokość i wysokość prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-116">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span></span></param>
        <summary><span data-ttu-id="591ba-117">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Rect" /> struktury o określonym rozmiarze i znajduje się w lokalizacji (0, 0).</span><span class="sxs-lookup"><span data-stu-id="591ba-117">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is of the specified size and is located at (0,0).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-118">Poniższy przykład pokazuje, jak utworzyć nową <xref:System.Windows.Rect> strukturę przy <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> użyciu konstruktora.</span><span class="sxs-lookup"><span data-stu-id="591ba-118">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Point -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point1, point2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="591ba-119">Pierwszy punkt, w którym musi znajdować się nowy prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-119">The first point that the new rectangle must contain.</span></span></param>
        <param name="point2"><span data-ttu-id="591ba-120">Drugi punkt, który musi zawierać nowy prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-120">The second point that the new rectangle must contain.</span></span></param>
        <summary><span data-ttu-id="591ba-121">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Rect" /> struktury, która jest wystarczająco duża, aby można było zawierać dwa określone punkty.</span><span class="sxs-lookup"><span data-stu-id="591ba-121">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the two specified points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-122">Poniższy przykład pokazuje, jak utworzyć nową <xref:System.Windows.Rect> strukturę przy <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> użyciu konstruktora.</span><span class="sxs-lookup"><span data-stu-id="591ba-122">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point location, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point location, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point location, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Size -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (location, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="591ba-123">Punkt określający lokalizację lewego górnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-123">A point that specifies the location of the top-left corner of the rectangle.</span></span></param>
        <param name="size"><span data-ttu-id="591ba-124"><see cref="T:System.Windows.Size" /> Struktura, która określa szerokość i wysokość prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-124">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span></span></param>
        <summary><span data-ttu-id="591ba-125">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Rect" /> struktury, która ma określoną górną lokalizację kursora i określoną szerokość i wysokość.</span><span class="sxs-lookup"><span data-stu-id="591ba-125">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified top-left corner location and the specified width and height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-126">Poniższy przykład pokazuje, jak utworzyć nową <xref:System.Windows.Rect> strukturę przy <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> użyciu konstruktora.</span><span class="sxs-lookup"><span data-stu-id="591ba-126">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample4_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : System.Windows.Point * System.Windows.Vector -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (point, vector)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="591ba-127">Pierwszy punkt musi zawierać prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-127">The first point the rectangle must contain.</span></span></param>
        <param name="vector"><span data-ttu-id="591ba-128">Kwota do przesunięcia określonego punktu.</span><span class="sxs-lookup"><span data-stu-id="591ba-128">The amount to offset the specified point.</span></span> <span data-ttu-id="591ba-129">Prostokąt wynikający z nich będzie wystarczająco duży, aby można było zawierać oba punkty.</span><span class="sxs-lookup"><span data-stu-id="591ba-129">The resulting rectangle will be exactly large enough to contain both points.</span></span></param>
        <summary><span data-ttu-id="591ba-130">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Rect" /> struktury, które jest wystarczająco duże, aby zawierało określony punkt oraz sumę określonego punktu i określonego wektora.</span><span class="sxs-lookup"><span data-stu-id="591ba-130">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-131">Poniższy przykład pokazuje, jak utworzyć nową <xref:System.Windows.Rect> strukturę przy <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> użyciu konstruktora.</span><span class="sxs-lookup"><span data-stu-id="591ba-131">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample5_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample5_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (double x, double y, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(double x, double y, double width, double height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Rect : double * double * double * double -&gt; System.Windows.Rect" Usage="new System.Windows.Rect (x, y, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="591ba-132">Współrzędna x lewego górnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-132">The x-coordinate of the top-left corner of the rectangle.</span></span></param>
        <param name="y"><span data-ttu-id="591ba-133">Współrzędna y lewego górnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-133">The y-coordinate of the top-left corner of the rectangle.</span></span></param>
        <param name="width"><span data-ttu-id="591ba-134">Szerokość prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-134">The width of the rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="591ba-135">Wysokość prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-135">The height of the rectangle.</span></span></param>
        <summary><span data-ttu-id="591ba-136">Inicjuje nowe wystąpienie <see cref="T:System.Windows.Rect" /> struktury, która ma określoną współrzędną x, Współrzędne y, Szerokość i wysokość.</span><span class="sxs-lookup"><span data-stu-id="591ba-136">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-137">Poniższy przykład pokazuje, jak utworzyć nową <xref:System.Windows.Rect> strukturę przy <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> użyciu konstruktora.</span><span class="sxs-lookup"><span data-stu-id="591ba-137">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample6_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="591ba-138"><paramref name="width" />jest wartością ujemną.</span><span class="sxs-lookup"><span data-stu-id="591ba-138"><paramref name="width" /> is a negative value.</span></span>  
  
<span data-ttu-id="591ba-139">—lub—</span><span class="sxs-lookup"><span data-stu-id="591ba-139">-or-</span></span> 
 <span data-ttu-id="591ba-140"><paramref name="height" />jest wartością ujemną.</span><span class="sxs-lookup"><span data-stu-id="591ba-140"><paramref name="height" /> is a negative value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public double Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Bottom { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Bottom : double" Usage="System.Windows.Rect.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-141">Pobiera wartość osi y dolnego prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-141">Gets the y-axis value of the bottom of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-142">Wartość osi y dolnej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-142">The y-axis value of the bottom of the rectangle.</span></span> <span data-ttu-id="591ba-143">Jeśli prostokąt jest pusty, wartość jest <see cref="F:System.Double.NegativeInfinity" /> .</span><span class="sxs-lookup"><span data-stu-id="591ba-143">If the rectangle is empty, the value is <see cref="F:System.Double.NegativeInfinity" /> .</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-144">Wartość osi y dolnej krawędzi prostokąta jest równa sumie <xref:System.Windows.Rect.Y%2A> właściwości i. <xref:System.Windows.Rect.Height%2A></span><span class="sxs-lookup"><span data-stu-id="591ba-144">The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-145">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-145">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-146">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-146">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomLeft : System.Windows.Point" Usage="System.Windows.Rect.BottomLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-147">Pobiera pozycję lewego dolnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-147">Gets the position of the bottom-left corner of the rectangle</span></span></summary>
        <value><span data-ttu-id="591ba-148">Pozycja lewego dolnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-148">The position of the bottom-left corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-149"><xref:System.Windows.Rect.X%2A>Pozycja lewego dolnego rogu prostokąta jest równa (, <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>).</span><span class="sxs-lookup"><span data-stu-id="591ba-149">The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-150">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-150">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-151">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-151">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomRight : System.Windows.Point" Usage="System.Windows.Rect.BottomRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-152">Pobiera pozycję prawego dolnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-152">Gets the position of the bottom-right corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-153">Pozycja prawego dolnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-153">The position of the bottom-right corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-154">Pozycja prawego dolnego<xref:System.Windows.Rect.X%2A>rogu prostokąta jest równa ( <xref:System.Windows.Rect.Height%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>  + ).</span><span class="sxs-lookup"><span data-stu-id="591ba-154">The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-155">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-155">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-156">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-156">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="591ba-157">Wskazuje, czy prostokąt zawiera określony punkt lub prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-157">Indicates whether the rectangle contains the specified point or rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Point -&gt; bool" Usage="rect.Contains point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="591ba-158">Punkt do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="591ba-158">The point to check.</span></span></param>
        <summary><span data-ttu-id="591ba-159">Wskazuje, czy prostokąt zawiera określony punkt.</span><span class="sxs-lookup"><span data-stu-id="591ba-159">Indicates whether the rectangle contains the specified point.</span></span></summary>
        <returns><span data-ttu-id="591ba-160"><see langword="true" />Jeśli prostokąt zawiera określony punkt; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="591ba-160"><see langword="true" /> if the rectangle contains the specified point; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-161">Poniższy przykład pokazuje, jak używać metody, <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> aby określić, czy prostokąt zawiera określony. <xref:System.Windows.Point></span><span class="sxs-lookup"><span data-stu-id="591ba-161">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> method to determine if the rectangle contains the specified <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Rect -&gt; bool" Usage="rect.Contains rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="591ba-162">Prostokąt do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="591ba-162">The rectangle to check.</span></span></param>
        <summary><span data-ttu-id="591ba-163">Wskazuje, czy prostokąt zawiera określony prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-163">Indicates whether the rectangle contains the specified rectangle.</span></span></summary>
        <returns><span data-ttu-id="591ba-164"><see langword="true" />Jeśli <paramref name="rect" /> jest całkowicie zawarty w prostokącie; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="591ba-164"><see langword="true" /> if <paramref name="rect" /> is entirely contained by the rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-165">Poniższy przykład pokazuje, jak używać metody, <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> aby określić, czy jeden prostokąt jest zawarty w innym prostokącie.</span><span class="sxs-lookup"><span data-stu-id="591ba-165">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> method to determine if one rectangle is contained by another rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (x As Double, y As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(double x, double y);" />
      <MemberSignature Language="F#" Value="member this.Contains : double * double -&gt; bool" Usage="rect.Contains (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="591ba-166">Współrzędna x punktu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="591ba-166">The x-coordinate of the point to check.</span></span></param>
        <param name="y"><span data-ttu-id="591ba-167">Współrzędna y punktu do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="591ba-167">The y-coordinate of the point to check.</span></span></param>
        <summary><span data-ttu-id="591ba-168">Wskazuje, czy prostokąt zawiera współrzędne x i Współrzędne y.</span><span class="sxs-lookup"><span data-stu-id="591ba-168">Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</span></span></summary>
        <returns><span data-ttu-id="591ba-169"><see langword="true" />if (<paramref name="x" />, <paramref name="y" />) jest zawarty prostokąt; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="591ba-169"><see langword="true" /> if (<paramref name="x" />, <paramref name="y" />) is contained by the rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-170">Poniższy przykład pokazuje, jak używać metody, <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> aby określić, czy prostokąt zawiera punkt określony przez daną współrzędną x i Współrzędne y.</span><span class="sxs-lookup"><span data-stu-id="591ba-170">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Rect Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Rect Empty { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Rect" Usage="System.Windows.Rect.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-171">Pobiera specjalną wartość, która reprezentuje prostokąt bez pozycji ani obszaru.</span><span class="sxs-lookup"><span data-stu-id="591ba-171">Gets a special value that represents a rectangle with no position or area.</span></span></summary>
        <value><span data-ttu-id="591ba-172">Pusty prostokąt, <see cref="P:System.Windows.Rect.X" /> który ma <see cref="P:System.Windows.Rect.Y" /> wartości <see cref="F:System.Double.PositiveInfinity" />właściwości, i ma <see cref="P:System.Windows.Rect.Width" /> <see cref="P:System.Windows.Rect.Height" /> wartości <see cref="F:System.Double.NegativeInfinity" />właściwości.</span><span class="sxs-lookup"><span data-stu-id="591ba-172">The empty rectangle, which has <see cref="P:System.Windows.Rect.X" /> and <see cref="P:System.Windows.Rect.Y" /> property values of <see cref="F:System.Double.PositiveInfinity" />, and has <see cref="P:System.Windows.Rect.Width" /> and <see cref="P:System.Windows.Rect.Height" /> property values of <see cref="F:System.Double.NegativeInfinity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-173">Unikaj obliczeń matematycznych obejmujących puste prostokąty.</span><span class="sxs-lookup"><span data-stu-id="591ba-173">Avoid mathematical computations involving empty rectangles.</span></span> <span data-ttu-id="591ba-174">Ponieważ oba <xref:System.Windows.Rect.X%2A> i <xref:System.Windows.Rect.Y%2A> są nieskończone wartości, operacje procesora są poważnie ograniczone przez te operacje.</span><span class="sxs-lookup"><span data-stu-id="591ba-174">Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations.</span></span> <span data-ttu-id="591ba-175">Porównania dotyczące tych wartości nie wpłyną na wydajność aplikacji.</span><span class="sxs-lookup"><span data-stu-id="591ba-175">Comparisons involving these values will not affect application performance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.IsEmpty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="591ba-176">Wskazuje, czy dwa prostokąty są równe.</span><span class="sxs-lookup"><span data-stu-id="591ba-176">Indicates whether two rectangles are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rect.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="591ba-177">Obiekt do porównania z bieżącym prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-177">The object to compare to the current rectangle.</span></span></param>
        <summary><span data-ttu-id="591ba-178">Wskazuje, czy określony obiekt jest równy bieżącemu prostokątowi.</span><span class="sxs-lookup"><span data-stu-id="591ba-178">Indicates whether the specified object is equal to the current rectangle.</span></span></summary>
        <returns><span data-ttu-id="591ba-179"><see langword="true" />Jeśli <paramref name="o" /> <see cref="P:System.Windows.Rect.Location" /> <see langword="false" />jest i ma takie same wartości,jakbieżącyprostokąt;wprzeciwnymrazie.<see cref="P:System.Windows.Rect.Size" /> <see cref="T:System.Windows.Rect" /></span><span class="sxs-lookup"><span data-stu-id="591ba-179"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Rect" /> and has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-180">Ta operacja sprawdza równość obiektów.</span><span class="sxs-lookup"><span data-stu-id="591ba-180">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="591ba-181">W tym porównaniu dwa wystąpienia <xref:System.Double.NaN?displayProperty=nameWithType> są uważane za równe.</span><span class="sxs-lookup"><span data-stu-id="591ba-181">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="591ba-182">Pozycja i wymiary prostokąta są opisane przez <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="591ba-182">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="591ba-183">Ponieważ <xref:System.Double> wartości mogą spowodować utratę precyzji podczas działania, porównanie dwóch wartości, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="591ba-183">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-184">Poniższy przykład pokazuje, jak używać metody, <xref:System.Windows.Rect.Equals%28System.Object%29> aby określić, czy prostokąt jest równy określonemu obiektowi.</span><span class="sxs-lookup"><span data-stu-id="591ba-184">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Object%29> method to determine if a rectangle is equal to a specified object.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Rect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Rect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Rect value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Rect -&gt; bool" Usage="rect.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="591ba-185">Prostokąt, który ma zostać porównany z bieżącym prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-185">The rectangle to compare to the current rectangle.</span></span></param>
        <summary><span data-ttu-id="591ba-186">Wskazuje, czy określony prostokąt jest równy bieżącemu prostokątowi.</span><span class="sxs-lookup"><span data-stu-id="591ba-186">Indicates whether the specified rectangle is equal to the current rectangle.</span></span></summary>
        <returns><span data-ttu-id="591ba-187"><see langword="true" />Jeśli określony prostokąt ma takie same <see cref="P:System.Windows.Rect.Location" /> <see cref="P:System.Windows.Rect.Size" /> wartości, jak bieżący prostokąt, <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="591ba-187"><see langword="true" /> if the specified rectangle has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-188">Ta operacja sprawdza równość obiektów.</span><span class="sxs-lookup"><span data-stu-id="591ba-188">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="591ba-189">W tym porównaniu dwa wystąpienia <xref:System.Double.NaN?displayProperty=nameWithType> są uważane za równe.</span><span class="sxs-lookup"><span data-stu-id="591ba-189">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="591ba-190">Pozycja i wymiary prostokąta są opisane przez <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="591ba-190">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="591ba-191">Ponieważ <xref:System.Double> wartości mogą spowodować utratę precyzji podczas działania, porównanie dwóch wartości, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="591ba-191">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-192">Poniższy przykład pokazuje, jak używać metody, <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> aby określić, czy prostokąt jest równy określonemu prostokątowi.</span><span class="sxs-lookup"><span data-stu-id="591ba-192">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> method to determine if a rectangle is equal to a specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.Equals (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="591ba-193">Pierwszy prostokąt do porównania.</span><span class="sxs-lookup"><span data-stu-id="591ba-193">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="591ba-194">Drugi prostokąt do porównania.</span><span class="sxs-lookup"><span data-stu-id="591ba-194">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="591ba-195">Wskazuje, czy określone prostokąty są równe.</span><span class="sxs-lookup"><span data-stu-id="591ba-195">Indicates whether the specified rectangles are equal.</span></span></summary>
        <returns><span data-ttu-id="591ba-196"><see langword="true" />Jeśli prostokąty mają te same <see cref="P:System.Windows.Rect.Location" /> <see cref="P:System.Windows.Rect.Size" /> wartości, w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="591ba-196"><see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-197">Ta operacja sprawdza równość obiektów.</span><span class="sxs-lookup"><span data-stu-id="591ba-197">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="591ba-198">W tym porównaniu dwa wystąpienia <xref:System.Double.NaN?displayProperty=nameWithType> są uważane za równe.</span><span class="sxs-lookup"><span data-stu-id="591ba-198">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="591ba-199">Pozycja i wymiary prostokąta są opisane przez <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="591ba-199">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="591ba-200">Ponieważ <xref:System.Double> wartości mogą spowodować utratę precyzji podczas działania, porównanie dwóch wartości, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="591ba-200">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-201">Poniższy przykład pokazuje, jak używać metody, <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> aby określić, czy jeden prostokąt jest równy innemu.</span><span class="sxs-lookup"><span data-stu-id="591ba-201">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to determine if one rectangle is equal to another.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rect.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="591ba-202">Tworzy kod skrótu dla prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-202">Creates a hash code for the rectangle.</span></span></summary>
        <returns><span data-ttu-id="591ba-203">Kod skrótu dla bieżącej <see cref="T:System.Windows.Rect" /> struktury.</span><span class="sxs-lookup"><span data-stu-id="591ba-203">A hash code for the current <see cref="T:System.Windows.Rect" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-204">Ta metoda tworzy <xref:System.Windows.Rect.X%2A>kod skrótu przy użyciu wartości właściwości, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>i. <xref:System.Windows.Rect.Height%2A></span><span class="sxs-lookup"><span data-stu-id="591ba-204">This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-205">Poniższy przykład pokazuje, <xref:System.Windows.Rect.GetHashCode%2A> jak używać metody w celu uzyskania kodu skrótu a. <xref:System.Windows.Rect></span><span class="sxs-lookup"><span data-stu-id="591ba-205">The following example shows how to use the <xref:System.Windows.Rect.GetHashCode%2A> method to get the hash code of a <xref:System.Windows.Rect>.</span></span>  
  
 [!code-csharp[RectExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="System.Windows.Rect.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-206">Pobiera lub ustawia wysokość prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-206">Gets or sets the height of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-207">Liczba dodatnia reprezentująca wysokość prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-207">A positive number that represents the height of the rectangle.</span></span> <span data-ttu-id="591ba-208">Wartość domyślna to 0.</span><span class="sxs-lookup"><span data-stu-id="591ba-208">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-209"><xref:System.Windows.Rect.Empty%2A> Prostokąt<xref:System.Windows.Rect.Height%2A> ma .<xref:System.Double.NegativeInfinity></span><span class="sxs-lookup"><span data-stu-id="591ba-209">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="591ba-210">Prostokąt jest tylko do odczytu <xref:System.Windows.Rect.Height%2A> ; nie można go zmienić. <xref:System.Windows.Rect.Empty%2A></span><span class="sxs-lookup"><span data-stu-id="591ba-210">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-211">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury do określania wymiarów i lokalizacji prostokąta przy użyciu języka XAML.</span><span class="sxs-lookup"><span data-stu-id="591ba-211">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="591ba-212">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-212">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-213">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-213">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="591ba-214"><see cref="P:System.Windows.Rect.Height" />jest ustawiona na wartość ujemną.</span><span class="sxs-lookup"><span data-stu-id="591ba-214"><see cref="P:System.Windows.Rect.Height" /> is set to a negative value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-215"><see cref="P:System.Windows.Rect.Height" />jest ustawiony w <see cref="P:System.Windows.Rect.Empty" /> prostokącie.</span><span class="sxs-lookup"><span data-stu-id="591ba-215"><see cref="P:System.Windows.Rect.Height" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.Width" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Inflate">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="591ba-216">Tworzy prostokąt, który jest wynikiem rozwinięcia lub zmniejszenia prostokąta o określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="591ba-216">Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="member this.Inflate : System.Windows.Size -&gt; unit" Usage="rect.Inflate size" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size"><span data-ttu-id="591ba-217">Określa kwotę do rozwinięcia prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-217">Specifies the amount to expand the rectangle.</span></span> <span data-ttu-id="591ba-218">Właściwość Structure określa wielkość, <see cref="P:System.Windows.Rect.Left" /> aby zwiększyć jej prostokąt i <see cref="P:System.Windows.Rect.Right" /> właściwości. <see cref="T:System.Windows.Size" /> <see cref="P:System.Windows.Size.Width" /></span><span class="sxs-lookup"><span data-stu-id="591ba-218">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span></span> <span data-ttu-id="591ba-219">Właściwość Structure określa wielkość, <see cref="P:System.Windows.Rect.Top" /> aby zwiększyć jej prostokąt i <see cref="P:System.Windows.Rect.Bottom" /> właściwości. <see cref="T:System.Windows.Size" /> <see cref="P:System.Windows.Size.Height" /></span><span class="sxs-lookup"><span data-stu-id="591ba-219">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span></span></param>
        <summary><span data-ttu-id="591ba-220">Rozwija prostokąt przy użyciu określonego <see cref="T:System.Windows.Size" />, we wszystkich kierunkach.</span><span class="sxs-lookup"><span data-stu-id="591ba-220">Expands the rectangle by using the specified <see cref="T:System.Windows.Size" />, in all directions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-221">Prostokąt z wynikiem jest zwiększany przez <xref:System.Windows.Size.Width%2A> dwukrotność określonej <xref:System.Windows.Size> struktury, ponieważ po lewej i prawej stronie prostokąta są naliczane. <xref:System.Windows.Rect.Width%2A></span><span class="sxs-lookup"><span data-stu-id="591ba-221">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="591ba-222">Analogiczny prostokąt zostanie zwiększony przez <xref:System.Windows.Size.Height%2A> dwukrotność określonej <xref:System.Windows.Size> struktury. <xref:System.Windows.Rect.Height%2A></span><span class="sxs-lookup"><span data-stu-id="591ba-222">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-223">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> jak używać metody w celu zwiększenia rozmiaru prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-223">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> method to increase the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-224">Ta metoda jest wywoływana w <see cref="P:System.Windows.Rect.Empty" /> prostokącie.</span><span class="sxs-lookup"><span data-stu-id="591ba-224">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inflate (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(double width, double height);" />
      <MemberSignature Language="F#" Value="member this.Inflate : double * double -&gt; unit" Usage="rect.Inflate (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="591ba-225">Kwota do rozwinięcia lub zmniejszenia po lewej i prawej stronie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-225">The amount by which to expand or shrink the left and right sides of the rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="591ba-226">Kwota do rozwinięcia lub zmniejszenia górnych i dolnych krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-226">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span></span></param>
        <summary><span data-ttu-id="591ba-227">Rozwija lub zmniejsza prostokąt przy użyciu określonej wartości szerokości i wysokości we wszystkich kierunkach.</span><span class="sxs-lookup"><span data-stu-id="591ba-227">Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-228">Wartość <xref:System.Windows.Rect.Width%2A> prostokąta będącego wynikiem jest zwiększana lub zmniejszana o dwa razy określone przesunięcie szerokości, ponieważ jest stosowana do lewej i prawej strony prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-228">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="591ba-229"><xref:System.Windows.Rect.Height%2A> Analogiczny prostokąt zostanie zwiększony lub zmniejszony o dwa razy określoną wysokość.</span><span class="sxs-lookup"><span data-stu-id="591ba-229">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="591ba-230">Jeśli określona szerokość lub wysokość zmniejsza rozmiar prostokąta o więcej niż jego bieżąca <xref:System.Windows.Rect.Width%2A> lub <xref:System.Windows.Rect.Height%2A> — w przypadku prostokąta w obszarze negatywnym prostokąt <xref:System.Windows.Rect.Empty%2A> zostanie prostokątny.</span><span class="sxs-lookup"><span data-stu-id="591ba-230">If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A> - giving the rectangle a negative area - the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-231">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> jak używać metody do zmiany rozmiaru prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-231">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-232">Ta metoda jest wywoływana w <see cref="P:System.Windows.Rect.Empty" /> prostokącie.</span><span class="sxs-lookup"><span data-stu-id="591ba-232">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, System::Windows::Size size);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * System.Windows.Size -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="591ba-233"><see cref="T:System.Windows.Rect" /> Struktura do zmodyfikowania.</span><span class="sxs-lookup"><span data-stu-id="591ba-233">The <see cref="T:System.Windows.Rect" /> structure to modify.</span></span></param>
        <param name="size"><span data-ttu-id="591ba-234">Określa kwotę do rozwinięcia prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-234">Specifies the amount to expand the rectangle.</span></span> <span data-ttu-id="591ba-235">Właściwość Structure określa wielkość, <see cref="P:System.Windows.Rect.Left" /> aby zwiększyć jej prostokąt i <see cref="P:System.Windows.Rect.Right" /> właściwości. <see cref="T:System.Windows.Size" /> <see cref="P:System.Windows.Size.Width" /></span><span class="sxs-lookup"><span data-stu-id="591ba-235">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span></span> <span data-ttu-id="591ba-236">Właściwość Structure określa wielkość, <see cref="P:System.Windows.Rect.Top" /> aby zwiększyć jej prostokąt i <see cref="P:System.Windows.Rect.Bottom" /> właściwości. <see cref="T:System.Windows.Size" /> <see cref="P:System.Windows.Size.Height" /></span><span class="sxs-lookup"><span data-stu-id="591ba-236">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span></span></param>
        <summary><span data-ttu-id="591ba-237">Zwraca prostokąt, który jest wynikiem rozwinięcia określonego prostokąta przez określony <see cref="T:System.Windows.Size" />, we wszystkich kierunkach.</span><span class="sxs-lookup"><span data-stu-id="591ba-237">Returns the rectangle that results from expanding the specified rectangle by the specified <see cref="T:System.Windows.Size" />, in all directions.</span></span></summary>
        <returns><span data-ttu-id="591ba-238">Prostokątny.</span><span class="sxs-lookup"><span data-stu-id="591ba-238">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-239">Prostokąt z wynikiem jest zwiększany przez <xref:System.Windows.Size.Width%2A> dwukrotność określonej <xref:System.Windows.Size> struktury, ponieważ po lewej i prawej stronie prostokąta są naliczane. <xref:System.Windows.Rect.Width%2A></span><span class="sxs-lookup"><span data-stu-id="591ba-239">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="591ba-240">Analogiczny prostokąt zostanie zwiększony przez <xref:System.Windows.Size.Height%2A> dwukrotność określonej <xref:System.Windows.Size> struktury. <xref:System.Windows.Rect.Height%2A></span><span class="sxs-lookup"><span data-stu-id="591ba-240">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-241">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> jak używać metody do zmiany rozmiaru prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-241">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-242"><paramref name="rect" /><see cref="P:System.Windows.Rect.Empty" /> jest prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-242"><paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, double width, double height);" />
      <MemberSignature Language="F#" Value="static member Inflate : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Inflate (rect, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="591ba-243"><see cref="T:System.Windows.Rect" /> Struktura do zmodyfikowania.</span><span class="sxs-lookup"><span data-stu-id="591ba-243">The <see cref="T:System.Windows.Rect" /> structure to modify.</span></span></param>
        <param name="width"><span data-ttu-id="591ba-244">Kwota do rozwinięcia lub zmniejszenia po lewej i prawej stronie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-244">The amount by which to expand or shrink the left and right sides of the rectangle.</span></span></param>
        <param name="height"><span data-ttu-id="591ba-245">Kwota do rozwinięcia lub zmniejszenia górnych i dolnych krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-245">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span></span></param>
        <summary><span data-ttu-id="591ba-246">Tworzy prostokąt, który jest wynikiem rozwinięcia lub zmniejszenia określonego prostokąta o określoną szerokość i wysokość, we wszystkich kierunkach.</span><span class="sxs-lookup"><span data-stu-id="591ba-246">Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</span></span></summary>
        <returns><span data-ttu-id="591ba-247">Prostokątny.</span><span class="sxs-lookup"><span data-stu-id="591ba-247">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-248">Wartość <xref:System.Windows.Rect.Width%2A> prostokąta będącego wynikiem jest zwiększana lub zmniejszana o dwa razy określone przesunięcie szerokości, ponieważ jest stosowana do lewej i prawej strony prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-248">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="591ba-249"><xref:System.Windows.Rect.Height%2A> Analogiczny prostokąt zostanie zwiększony lub zmniejszony o dwa razy określoną wysokość.</span><span class="sxs-lookup"><span data-stu-id="591ba-249">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="591ba-250">Jeśli określone Modyfikatory Width lub Height zmniejszają prostokąt o więcej niż jego bieżąca <xref:System.Windows.Rect.Width%2A> lub <xref:System.Windows.Rect.Height%2A> — dając prostokątowi powierzchnię ujemną — ta metoda zwraca <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="591ba-250">If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A> - giving the rectangle a negative area - this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-251">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> jak używać metody do zmiany rozmiaru prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-251">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-252"><paramref name="rect" /><see cref="P:System.Windows.Rect.Empty" /> jest prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-252"><paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="591ba-253">Znajduje część wspólną dwóch prostokątów.</span><span class="sxs-lookup"><span data-stu-id="591ba-253">Finds the intersection of two rectangles.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Windows.Rect -&gt; unit" Usage="rect.Intersect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="591ba-254">Prostokąt do przecięcia z bieżącym prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-254">The rectangle to intersect with the current rectangle.</span></span></param>
        <summary><span data-ttu-id="591ba-255">Znajduje część wspólną bieżącego prostokąta i określonego prostokąta oraz zapisuje wynik jako bieżący prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-255">Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-256">Jeśli nie istnieje wspólna część, bieżący prostokąt zostanie <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>wyświetlony.</span><span class="sxs-lookup"><span data-stu-id="591ba-256">If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-257">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> metody do znajdowania przecięcia dwóch prostokątów i przechowywania wyniku jako prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-257">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> method to find the intersection of two rectangles and store the result as a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Intersect (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Intersect(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Intersect (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Intersect(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Intersect (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="591ba-258">Pierwszy prostokąt do porównania.</span><span class="sxs-lookup"><span data-stu-id="591ba-258">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="591ba-259">Drugi prostokąt do porównania.</span><span class="sxs-lookup"><span data-stu-id="591ba-259">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="591ba-260">Zwraca przecięcie określonych prostokątów.</span><span class="sxs-lookup"><span data-stu-id="591ba-260">Returns the intersection of the specified rectangles.</span></span></summary>
        <returns><span data-ttu-id="591ba-261">Część wspólna dwóch prostokątów lub <see cref="P:System.Windows.Rect.Empty" /> Jeśli nie istnieje przecięcie.</span><span class="sxs-lookup"><span data-stu-id="591ba-261">The intersection of the two rectangles, or <see cref="P:System.Windows.Rect.Empty" /> if no intersection exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-262">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> metody, aby znaleźć część wspólną dwóch prostokątów.</span><span class="sxs-lookup"><span data-stu-id="591ba-262">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="IntersectsWith">
      <MemberSignature Language="C#" Value="public bool IntersectsWith (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IntersectsWith(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IntersectsWith(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectsWith : System.Windows.Rect -&gt; bool" Usage="rect.IntersectsWith rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="591ba-263">Prostokąt do sprawdzenia.</span><span class="sxs-lookup"><span data-stu-id="591ba-263">The rectangle to check.</span></span></param>
        <summary><span data-ttu-id="591ba-264">Wskazuje, czy określony prostokąt przecina się z bieżącym prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-264">Indicates whether the specified rectangle intersects with the current rectangle.</span></span></summary>
        <returns><span data-ttu-id="591ba-265"><see langword="true" />Jeśli określony prostokąt przecina się z bieżącym prostokątem; w przeciwnym razie. <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="591ba-265"><see langword="true" /> if the specified rectangle intersects with the current rectangle; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-266">Poniższy przykład pokazuje, jak używać metody, <xref:System.Windows.Rect.IntersectsWith%2A> aby określić, czy dwa prostokąty przecinają się.</span><span class="sxs-lookup"><span data-stu-id="591ba-266">The following example shows how to use the <xref:System.Windows.Rect.IntersectsWith%2A> method to determine if two rectangles intersect.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectsWithExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectswithexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Windows.Rect.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-267">Pobiera wartość wskazującą, czy prostokąt jest <see cref="P:System.Windows.Rect.Empty" /> prostokątny.</span><span class="sxs-lookup"><span data-stu-id="591ba-267">Gets a value that indicates whether the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-268"><see langword="true" />Jeśli prostokąt jest <see cref="P:System.Windows.Rect.Empty" /> prostokątny; <see langword="false" />w przeciwnym razie.</span><span class="sxs-lookup"><span data-stu-id="591ba-268"><see langword="true" /> if the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-269">Nie należy używać tej właściwości do testowania dla obszaru zerowego; prostokąt z obszarem zerowym nie musi być <xref:System.Windows.Rect.Empty%2A> prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-269">Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span> <span data-ttu-id="591ba-270">Aby uzyskać więcej informacji, zobacz <xref:System.Windows.Rect.Empty%2A> właściwość.</span><span class="sxs-lookup"><span data-stu-id="591ba-270">For more information, see the <xref:System.Windows.Rect.Empty%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Empty" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Left : double" Usage="System.Windows.Rect.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-271">Pobiera wartość osi x lewej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-271">Gets the x-axis value of the left side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-272">Wartość osi x lewej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-272">The x-axis value of the left side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-273">Pobieranie tej właściwości jest równoznaczne z uzyskaniem <xref:System.Windows.Rect.X%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="591ba-273">Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-274">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-274">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-275">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-275">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Windows.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Location { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Windows.Point with get, set" Usage="System.Windows.Rect.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-276">Pobiera lub ustawia pozycję lewego górnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-276">Gets or sets the position of the top-left corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-277">Pozycja lewego górnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-277">The position of the top-left corner of the rectangle.</span></span> <span data-ttu-id="591ba-278">Wartość domyślna to (0, 0).</span><span class="sxs-lookup"><span data-stu-id="591ba-278">The default is (0, 0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-279">Pozycja lewego górnego rogu prostokąta jest równa (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="591ba-279">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-280">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury do określania wymiarów i lokalizacji prostokąta przy użyciu języka XAML.</span><span class="sxs-lookup"><span data-stu-id="591ba-280">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="591ba-281">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-281">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-282">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-282">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-283"><see cref="P:System.Windows.Rect.Location" />jest ustawiony w <see cref="P:System.Windows.Rect.Empty" /> prostokącie.</span><span class="sxs-lookup"><span data-stu-id="591ba-283"><see cref="P:System.Windows.Rect.Location" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Offset">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="591ba-284">Przenosi prostokąt o określoną liczbę.</span><span class="sxs-lookup"><span data-stu-id="591ba-284">Moves a rectangle by the specified amount.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetVector As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="member this.Offset : System.Windows.Vector -&gt; unit" Usage="rect.Offset offsetVector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="offsetVector"><span data-ttu-id="591ba-285">Wektor, który określa wielkość w poziomie i pionie, aby przenieść prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-285">A vector that specifies the horizontal and vertical amounts to move the rectangle.</span></span></param>
        <summary><span data-ttu-id="591ba-286">Przenosi prostokąt według określonego wektora.</span><span class="sxs-lookup"><span data-stu-id="591ba-286">Moves the rectangle by the specified vector.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-287">Wywołanie tej metody w pustym prostokącie (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) jest niedozwolone.</span><span class="sxs-lookup"><span data-stu-id="591ba-287">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="591ba-288">Należy zauważyć, że <xref:System.Windows.Rect.Offset%2A> wywołanie metody będzie miało wpływ tylko wtedy, gdy można <xref:System.Windows.Rect.X%2A> zmienić <xref:System.Windows.Rect.Y%2A> właściwości i.</span><span class="sxs-lookup"><span data-stu-id="591ba-288">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="591ba-289">Ponieważ <xref:System.Windows.Rect> jest typem wartości, w przypadku odwoływania się <xref:System.Windows.Rect> do obiektu za pomocą właściwości lub indeksatora otrzymujesz kopię obiektu, a nie odwołanie do obiektu.</span><span class="sxs-lookup"><span data-stu-id="591ba-289">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="591ba-290">Jeśli spróbujesz zmienić <xref:System.Windows.Rect.X%2A> lub <xref:System.Windows.Rect.Y%2A> na odwołanie do właściwości lub indeksatora, wystąpi błąd kompilatora.</span><span class="sxs-lookup"><span data-stu-id="591ba-290">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="591ba-291">Podobnie wywołanie <xref:System.Windows.Rect.Offset%2A> właściwości lub indeksatora nie spowoduje zmiany bazowego obiektu.</span><span class="sxs-lookup"><span data-stu-id="591ba-291">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="591ba-292">Jeśli chcesz zmienić wartość <xref:System.Windows.Rect> , która jest przywoływana jako właściwość lub indeksator, Utwórz nową <xref:System.Windows.Rect>, zmodyfikuj jej pola <xref:System.Windows.Rect> , a następnie przypisz z powrotem do właściwości lub indeksatora.</span><span class="sxs-lookup"><span data-stu-id="591ba-292">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-293">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> jak za pomocą metody zmienić położenie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-293">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-294">Ta metoda jest wywoływana w <see cref="P:System.Windows.Rect.Empty" /> prostokącie.</span><span class="sxs-lookup"><span data-stu-id="591ba-294">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Offset : double * double -&gt; unit" Usage="rect.Offset (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="591ba-295">Kwota do przeniesienia prostokąta w poziomie.</span><span class="sxs-lookup"><span data-stu-id="591ba-295">The amount to move the rectangle horizontally.</span></span></param>
        <param name="offsetY"><span data-ttu-id="591ba-296">Kwota do przeniesienia prostokąta w pionie.</span><span class="sxs-lookup"><span data-stu-id="591ba-296">The amount to move the rectangle vertically.</span></span></param>
        <summary><span data-ttu-id="591ba-297">Przenosi prostokąt o określoną ilość poziomą i pionową.</span><span class="sxs-lookup"><span data-stu-id="591ba-297">Moves the rectangle by the specified horizontal and vertical amounts.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-298">Wywołanie tej metody w pustym prostokącie (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) jest niedozwolone.</span><span class="sxs-lookup"><span data-stu-id="591ba-298">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="591ba-299">Należy zauważyć, że <xref:System.Windows.Rect.Offset%2A> wywołanie metody będzie miało wpływ tylko wtedy, gdy można <xref:System.Windows.Rect.X%2A> zmienić <xref:System.Windows.Rect.Y%2A> właściwości i.</span><span class="sxs-lookup"><span data-stu-id="591ba-299">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="591ba-300">Ponieważ <xref:System.Windows.Rect> jest typem wartości, w przypadku odwoływania się <xref:System.Windows.Rect> do obiektu za pomocą właściwości lub indeksatora otrzymujesz kopię obiektu, a nie odwołanie do obiektu.</span><span class="sxs-lookup"><span data-stu-id="591ba-300">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="591ba-301">Jeśli spróbujesz zmienić <xref:System.Windows.Rect.X%2A> lub <xref:System.Windows.Rect.Y%2A> na odwołanie do właściwości lub indeksatora, wystąpi błąd kompilatora.</span><span class="sxs-lookup"><span data-stu-id="591ba-301">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="591ba-302">Podobnie wywołanie <xref:System.Windows.Rect.Offset%2A> właściwości lub indeksatora nie spowoduje zmiany bazowego obiektu.</span><span class="sxs-lookup"><span data-stu-id="591ba-302">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="591ba-303">Jeśli chcesz zmienić wartość <xref:System.Windows.Rect> , która jest przywoływana jako właściwość lub indeksator, Utwórz nową <xref:System.Windows.Rect>, zmodyfikuj jej pola <xref:System.Windows.Rect> , a następnie przypisz z powrotem do właściwości lub indeksatora.</span><span class="sxs-lookup"><span data-stu-id="591ba-303">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-304">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> jak za pomocą metody zmienić położenie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-304">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-305">Ta metoda jest wywoływana w <see cref="P:System.Windows.Rect.Empty" /> prostokącie.</span><span class="sxs-lookup"><span data-stu-id="591ba-305">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, System::Windows::Vector offsetVector);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * System.Windows.Vector -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetVector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="591ba-306">Oryginalny prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-306">The original rectangle.</span></span></param>
        <param name="offsetVector"><span data-ttu-id="591ba-307">Wektor, który określa przesunięcie w poziomie i w pionie dla nowego prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-307">A vector that specifies the horizontal and vertical offsets for the new rectangle.</span></span></param>
        <summary><span data-ttu-id="591ba-308">Zwraca prostokąt, który jest przesunięty od określonego prostokąta przy użyciu określonego wektora.</span><span class="sxs-lookup"><span data-stu-id="591ba-308">Returns a rectangle that is offset from the specified rectangle by using the specified vector.</span></span></summary>
        <returns><span data-ttu-id="591ba-309">Prostokątny.</span><span class="sxs-lookup"><span data-stu-id="591ba-309">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-310">Wywołanie tej metody za pomocą pustego prostokąta (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) jest niedozwolone.</span><span class="sxs-lookup"><span data-stu-id="591ba-310">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-311">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> jak za pomocą metody zmienić położenie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-311">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-312"><paramref name="rect" />jest <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="591ba-312"><paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="static member Offset : System.Windows.Rect * double * double -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Offset (rect, offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="591ba-313">Prostokąt do przeniesienia.</span><span class="sxs-lookup"><span data-stu-id="591ba-313">The rectangle to move.</span></span></param>
        <param name="offsetX"><span data-ttu-id="591ba-314">Przesunięcie w poziomie dla nowego prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-314">The horizontal offset for the new rectangle.</span></span></param>
        <param name="offsetY"><span data-ttu-id="591ba-315">Przesunięcie w pionie dla nowego prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-315">The vertical offset for the new rectangle.</span></span></param>
        <summary><span data-ttu-id="591ba-316">Zwraca prostokąt przesunięty od określonego prostokąta przy użyciu określonych wartości w poziomie i w pionie.</span><span class="sxs-lookup"><span data-stu-id="591ba-316">Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</span></span></summary>
        <returns><span data-ttu-id="591ba-317">Prostokątny.</span><span class="sxs-lookup"><span data-stu-id="591ba-317">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-318">Wywołanie tej metody za pomocą pustego prostokąta (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) jest niedozwolone.</span><span class="sxs-lookup"><span data-stu-id="591ba-318">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-319">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> jak za pomocą metody zmienić położenie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-319">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-320"><paramref name="rect" />jest <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="591ba-320"><paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="rect1 = rect2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="591ba-321">Pierwszy prostokąt do porównania.</span><span class="sxs-lookup"><span data-stu-id="591ba-321">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="591ba-322">Drugi prostokąt do porównania.</span><span class="sxs-lookup"><span data-stu-id="591ba-322">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="591ba-323">Porównuje dwa prostokąty pod kątem dokładnego równości.</span><span class="sxs-lookup"><span data-stu-id="591ba-323">Compares two rectangles for exact equality.</span></span></summary>
        <returns><span data-ttu-id="591ba-324"><see langword="true" />Jeśli prostokąty mają te same <see cref="P:System.Windows.Rect.Location" /> <see cref="P:System.Windows.Rect.Size" /> wartości, w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="591ba-324"><see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-325">Ta operacja sprawdza równość obiektów.</span><span class="sxs-lookup"><span data-stu-id="591ba-325">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="591ba-326">W tym porównaniu dwa wystąpienia <xref:System.Double.NaN?displayProperty=nameWithType> są uważane za równe.</span><span class="sxs-lookup"><span data-stu-id="591ba-326">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="591ba-327">Pozycja i wymiary prostokąta są opisane przez <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="591ba-327">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="591ba-328">Ponieważ <xref:System.Double> wartości mogą spowodować utratę precyzji podczas działania, porównanie dwóch wartości, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="591ba-328">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="591ba-329">Równoważna Metoda dla tego operatora to<xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="591ba-329">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="591ba-330">Poniższy przykład pokazuje, jak użyć operatora, <xref:System.Windows.Rect.op_Equality%2A> aby określić, czy dwa prostokąty są dokładnie równe.</span><span class="sxs-lookup"><span data-stu-id="591ba-330">The following example shows how to use the <xref:System.Windows.Rect.op_Equality%2A> operator to determine if two rectangles are exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Rect * System.Windows.Rect -&gt; bool" Usage="System.Windows.Rect.op_Inequality (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="591ba-331">Pierwszy prostokąt do porównania.</span><span class="sxs-lookup"><span data-stu-id="591ba-331">The first rectangle to compare.</span></span></param>
        <param name="rect2"><span data-ttu-id="591ba-332">Drugi prostokąt do porównania.</span><span class="sxs-lookup"><span data-stu-id="591ba-332">The second rectangle to compare.</span></span></param>
        <summary><span data-ttu-id="591ba-333">Porównuje dwa prostokąty pod kątem nierówności.</span><span class="sxs-lookup"><span data-stu-id="591ba-333">Compares two rectangles for inequality.</span></span></summary>
        <returns><span data-ttu-id="591ba-334"><see langword="true" />Jeśli prostokąty nie mają tych samych <see cref="P:System.Windows.Rect.Location" /> <see cref="P:System.Windows.Rect.Size" /> wartości, w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="591ba-334"><see langword="true" /> if the rectangles do not have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-335">Ta operacja testuje nierówność obiektu.</span><span class="sxs-lookup"><span data-stu-id="591ba-335">This operation tests for object inequality.</span></span>  
  
 <span data-ttu-id="591ba-336">W tym porównaniu dwa wystąpienia <xref:System.Double.NaN?displayProperty=nameWithType> są uważane za równe.</span><span class="sxs-lookup"><span data-stu-id="591ba-336">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="591ba-337">Pozycja i wymiary prostokąta są opisane przez <xref:System.Double> wartości.</span><span class="sxs-lookup"><span data-stu-id="591ba-337">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="591ba-338">Ponieważ <xref:System.Double> wartości mogą spowodować utratę precyzji podczas działania, porównanie dwóch wartości, które są logicznie równe może zakończyć się niepowodzeniem.</span><span class="sxs-lookup"><span data-stu-id="591ba-338">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="591ba-339">Równoważna Metoda dla tego operatora to<xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="591ba-339">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="591ba-340">Poniższy przykład pokazuje, jak użyć operatora, <xref:System.Windows.Rect.op_Inequality%2A> aby określić, czy dwa prostokąty nie są dokładnie równe.</span><span class="sxs-lookup"><span data-stu-id="591ba-340">The following example shows how to use the <xref:System.Windows.Rect.op_Inequality%2A> operator to determine if two rectangles are not exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="591ba-341">Ciąg reprezentujący prostokąt w postaci "x, y, Szerokość, Wysokość".</span><span class="sxs-lookup"><span data-stu-id="591ba-341">The string representation of the rectangle, in the form "x, y, width, height".</span></span></param>
        <summary><span data-ttu-id="591ba-342">Tworzy nowy prostokąt na podstawie podanej reprezentacji w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="591ba-342">Creates a new rectangle from the specified string representation.</span></span></summary>
        <returns><span data-ttu-id="591ba-343">Prostokątny.</span><span class="sxs-lookup"><span data-stu-id="591ba-343">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-344">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Parse%2A> jak używać metody do konwertowania ciągu reprezentującego prostokąt <xref:System.Windows.Rect> do struktury.</span><span class="sxs-lookup"><span data-stu-id="591ba-344">The following example shows how to use the <xref:System.Windows.Rect.Parse%2A> method to convert a string representation of a rectangle into a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#parseexample)]
 [!code-vb[RectExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public double Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Right { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : double" Usage="System.Windows.Rect.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-345">Pobiera wartość osi x po prawej stronie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-345">Gets the x-axis value of the right side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-346">Wartość osi x po prawej stronie prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-346">The x-axis value of the right side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-347">Wartość osi x po prawej stronie prostokąta jest równa sumie <xref:System.Windows.Rect.X%2A> właściwości i. <xref:System.Windows.Rect.Width%2A></span><span class="sxs-lookup"><span data-stu-id="591ba-347">The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-348">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-348">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-349">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-349">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : double * double -&gt; unit" Usage="rect.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="591ba-350">Współczynnik skalowania w kierunku x.</span><span class="sxs-lookup"><span data-stu-id="591ba-350">The scale factor in the x-direction.</span></span></param>
        <param name="scaleY"><span data-ttu-id="591ba-351">Współczynnik skali w kierunku y.</span><span class="sxs-lookup"><span data-stu-id="591ba-351">The scale factor in the y-direction.</span></span></param>
        <summary><span data-ttu-id="591ba-352">Mnoży rozmiar bieżącego prostokąta przez określone wartości x i y.</span><span class="sxs-lookup"><span data-stu-id="591ba-352">Multiplies the size of the current rectangle by the specified x and y values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-353">Poniższy przykład pokazuje, jak za pomocą <xref:System.Windows.Rect.Scale%2A> metody pomnożyć szerokość i wysokość prostokąta przez określoną wartość.</span><span class="sxs-lookup"><span data-stu-id="591ba-353">The following example shows how to use the <xref:System.Windows.Rect.Scale%2A> method to multiply the width and height of a rectangle by the specified amount.</span></span>  
  
 [!code-csharp[RectExamples_snip#ScaleExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#scaleexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Windows.Size with get, set" Usage="System.Windows.Rect.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-354">Pobiera lub ustawia szerokość i wysokość prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-354">Gets or sets the width and height of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-355"><see cref="T:System.Windows.Size" /> Struktura, która określa szerokość i wysokość prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-355">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-356">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury do określania wymiarów i lokalizacji prostokąta przy użyciu języka XAML.</span><span class="sxs-lookup"><span data-stu-id="591ba-356">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="591ba-357">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-357">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-358">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-358">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-359"><see cref="P:System.Windows.Rect.Size" />jest ustawiony w <see cref="P:System.Windows.Rect.Empty" /> prostokącie.</span><span class="sxs-lookup"><span data-stu-id="591ba-359"><see cref="P:System.Windows.Rect.Size" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="591ba-360">Format do użycia.</span><span class="sxs-lookup"><span data-stu-id="591ba-360">The format to use.</span></span>  
  
<span data-ttu-id="591ba-361">—lub—</span><span class="sxs-lookup"><span data-stu-id="591ba-361">-or-</span></span> 
<span data-ttu-id="591ba-362">Odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic) do użycia domyślnego formatu zdefiniowanego dla typu <see cref="T:System.IFormattable" /> implementacji.</span><span class="sxs-lookup"><span data-stu-id="591ba-362">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="provider"><span data-ttu-id="591ba-363">Dostawca służący do formatowania wartości.</span><span class="sxs-lookup"><span data-stu-id="591ba-363">The provider to use to format the value.</span></span>  
  
<span data-ttu-id="591ba-364">—lub—</span><span class="sxs-lookup"><span data-stu-id="591ba-364">-or-</span></span> 
<span data-ttu-id="591ba-365">Odwołanie o wartości null<see langword="Nothing" /> (w Visual Basic), aby uzyskać informacje o formacie liczbowym z bieżących ustawień regionalnych systemu operacyjnego.</span><span class="sxs-lookup"><span data-stu-id="591ba-365">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="591ba-366">Formatuje wartość bieżącego wystąpienia w określonym formacie.</span><span class="sxs-lookup"><span data-stu-id="591ba-366">Formats the value of the current instance using the specified format.</span></span></summary>
        <returns><span data-ttu-id="591ba-367">Reprezentacja prostokąta w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="591ba-367">A string representation of the rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-368">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="591ba-368">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="591ba-369">Może być używana tylko wtedy, <xref:System.Windows.Rect> gdy wystąpienie jest rzutowane <xref:System.IFormattable> do interfejsu.</span><span class="sxs-lookup"><span data-stu-id="591ba-369">It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Top : double" Usage="System.Windows.Rect.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-370">Pobiera pozycję osi y górnej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-370">Gets the y-axis position of the top of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-371">Pozycja osi y górnej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-371">The y-axis position of the top of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-372">Pobieranie tej właściwości jest równoznaczne z uzyskaniem <xref:System.Windows.Rect.Y%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="591ba-372">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-373">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-373">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-374">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-374">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="TopLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopLeft { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLeft : System.Windows.Point" Usage="System.Windows.Rect.TopLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-375">Pobiera pozycję lewego górnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-375">Gets the position of the top-left corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-376">Pozycja lewego górnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-376">The position of the top-left corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-377">Pozycja lewego górnego rogu prostokąta jest równa (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="591ba-377">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-378">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-378">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-379">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-379">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopRight { System::Windows::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.TopRight : System.Windows.Point" Usage="System.Windows.Rect.TopRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-380">Pobiera pozycję prawego górnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-380">Gets the position of the top-right corner of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-381">Pozycja prawego górnego rogu prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-381">The position of the top-right corner of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-382">Pozycja prawego górnego<xref:System.Windows.Rect.X%2A>rogu prostokąta jest równa ( + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span><span class="sxs-lookup"><span data-stu-id="591ba-382">The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-383">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-383">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-384">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-384">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="591ba-385">Zwraca ciąg reprezentujący prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-385">Returns a string representation of the rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="rect.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="591ba-386">Zwraca ciąg reprezentujący prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-386">Returns a string representation of the rectangle.</span></span></summary>
        <returns><span data-ttu-id="591ba-387">Reprezentacja bieżącego prostokąta w postaci ciągu.</span><span class="sxs-lookup"><span data-stu-id="591ba-387">A string representation of the current rectangle.</span></span> <span data-ttu-id="591ba-388">Ciąg ma następującą postać:<see cref="P:System.Windows.Rect.X" />",<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span><span class="sxs-lookup"><span data-stu-id="591ba-388">The string has the following form: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-389">Poniższy przykład pokazuje, <xref:System.Windows.Rect.ToString> jak używać metody w celu uzyskania ciągu reprezentującego <xref:System.Windows.Rect> strukturę.</span><span class="sxs-lookup"><span data-stu-id="591ba-389">The following example shows how to use the <xref:System.Windows.Rect.ToString> method to get a string representation of a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ToStringExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#tostringexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="rect.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="591ba-390">Informacje o formatowaniu specyficzne dla kultury.</span><span class="sxs-lookup"><span data-stu-id="591ba-390">Culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="591ba-391">Zwraca ciąg reprezentujący prostokąt przy użyciu określonego dostawcy formatu.</span><span class="sxs-lookup"><span data-stu-id="591ba-391">Returns a string representation of the rectangle by using the specified format provider.</span></span></summary>
        <returns><span data-ttu-id="591ba-392">Ciąg reprezentujący bieżący prostokąt, który jest określany przez określonego dostawcę formatu.</span><span class="sxs-lookup"><span data-stu-id="591ba-392">A string representation of the current rectangle that is determined by the specified format provider.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="591ba-393">Przekształca prostokąt przy użyciu określonej macierzy.</span><span class="sxs-lookup"><span data-stu-id="591ba-393">Transforms a rectangle by using the specified matrix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Media.Matrix -&gt; unit" Usage="rect.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="591ba-394">Macierz, która określa transformację, która ma zostać zastosowana.</span><span class="sxs-lookup"><span data-stu-id="591ba-394">A matrix that specifies the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="591ba-395">Przekształca prostokąt, stosując określoną macierz.</span><span class="sxs-lookup"><span data-stu-id="591ba-395">Transforms the rectangle by applying the specified matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-396">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> jak używać metody do <xref:System.Windows.Rect> przekształcania struktury przy użyciu <xref:System.Windows.Media.Matrix>.</span><span class="sxs-lookup"><span data-stu-id="591ba-396">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> method to transform a <xref:System.Windows.Rect> structure by using a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Transform (System.Windows.Rect rect, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Transform(valuetype System.Windows.Rect rect, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Transform(System::Windows::Rect rect, System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Windows.Rect * System.Windows.Media.Matrix -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Transform (rect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="591ba-397">Prostokąt, który jest podstawą transformacji.</span><span class="sxs-lookup"><span data-stu-id="591ba-397">A rectangle that is the basis for the transformation.</span></span></param>
        <param name="matrix"><span data-ttu-id="591ba-398">Macierz, która określa transformację, która ma zostać zastosowana.</span><span class="sxs-lookup"><span data-stu-id="591ba-398">A matrix that specifies the transformation to apply.</span></span></param>
        <summary><span data-ttu-id="591ba-399">Zwraca prostokąt, który jest wynikiem zastosowania określonej macierzy do określonego prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-399">Returns the rectangle that results from applying the specified matrix to the specified rectangle.</span></span></summary>
        <returns><span data-ttu-id="591ba-400">Prostokąt, który jest wynikiem operacji.</span><span class="sxs-lookup"><span data-stu-id="591ba-400">The rectangle that results from the operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-401">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> jak używać metody do tworzenia nowej <xref:System.Windows.Rect> struktury wynikającej z zastosowania <xref:System.Windows.Media.Matrix> do istniejącego prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-401">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> method to create a new <xref:System.Windows.Rect> structure that results from applying a <xref:System.Windows.Media.Matrix> to an existing rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="591ba-402">Tworzy prostokąt, który jest wystarczająco duży, aby zawierał dany prostokąt i określony punkt lub drugi prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-402">Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Point -&gt; unit" Usage="rect.Union point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="591ba-403">Punkt do uwzględnienia.</span><span class="sxs-lookup"><span data-stu-id="591ba-403">The point to include.</span></span></param>
        <summary><span data-ttu-id="591ba-404">Rozwija bieżący prostokąt wystarczająco dokładnie, aby zawierał określony punkt.</span><span class="sxs-lookup"><span data-stu-id="591ba-404">Expands the current rectangle exactly enough to contain the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-405">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Union%28System.Windows.Point%29> jak używać metody, aby rozwinąć bieżący prostokąt wystarczająco dokładnie, aby zawierał daną. <xref:System.Windows.Point></span><span class="sxs-lookup"><span data-stu-id="591ba-405">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Point%29> method to expand the current rectangle exactly enough to contain a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Rect rect);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Windows.Rect -&gt; unit" Usage="rect.Union rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="591ba-406">Prostokąt do uwzględnienia.</span><span class="sxs-lookup"><span data-stu-id="591ba-406">The rectangle to include.</span></span></param>
        <summary><span data-ttu-id="591ba-407">Rozwija bieżący prostokąt wystarczająco dokładnie, aby zawierał określony prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-407">Expands the current rectangle exactly enough to contain the specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-408">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> jak używać metody, aby rozwinąć bieżący prostokąt wystarczająco dokładnie, aby zawierał określony prostokąt.</span><span class="sxs-lookup"><span data-stu-id="591ba-408">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> method to expand the current rectangle exactly enough to contain the specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect, System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Point -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="591ba-409">Prostokąt do uwzględnienia.</span><span class="sxs-lookup"><span data-stu-id="591ba-409">The rectangle to include.</span></span></param>
        <param name="point"><span data-ttu-id="591ba-410">Punkt do uwzględnienia.</span><span class="sxs-lookup"><span data-stu-id="591ba-410">The point to include.</span></span></param>
        <summary><span data-ttu-id="591ba-411">Tworzy prostokąt, który jest wystarczająco duży, aby obejmował określony prostokąt i określony punkt.</span><span class="sxs-lookup"><span data-stu-id="591ba-411">Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</span></span></summary>
        <returns><span data-ttu-id="591ba-412">Prostokąt, który jest wystarczająco duży, aby zawierał określony prostokąt i określony punkt.</span><span class="sxs-lookup"><span data-stu-id="591ba-412">A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-413">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> jak używać metody, aby utworzyć prostokąt, który jest wystarczająco duży, aby zawierał dany prostokąt i podane. <xref:System.Windows.Point></span><span class="sxs-lookup"><span data-stu-id="591ba-413">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Union (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberSignature Language="F#" Value="static member Union : System.Windows.Rect * System.Windows.Rect -&gt; System.Windows.Rect" Usage="System.Windows.Rect.Union (rect1, rect2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1"><span data-ttu-id="591ba-414">Pierwszy prostokąt do uwzględnienia.</span><span class="sxs-lookup"><span data-stu-id="591ba-414">The first rectangle to include.</span></span></param>
        <param name="rect2"><span data-ttu-id="591ba-415">Drugi prostokąt do uwzględnienia.</span><span class="sxs-lookup"><span data-stu-id="591ba-415">The second rectangle to include.</span></span></param>
        <summary><span data-ttu-id="591ba-416">Tworzy prostokąt, który jest wystarczająco duży, aby zawierał dwa określone prostokąty.</span><span class="sxs-lookup"><span data-stu-id="591ba-416">Creates a rectangle that is exactly large enough to contain the two specified rectangles.</span></span></summary>
        <returns><span data-ttu-id="591ba-417">Prostokątny.</span><span class="sxs-lookup"><span data-stu-id="591ba-417">The resulting rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="591ba-418">Poniższy przykład pokazuje, <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> jak używać metody, aby utworzyć prostokąt, który jest wystarczająco duży, aby zawierał dwa prostokąty.</span><span class="sxs-lookup"><span data-stu-id="591ba-418">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to create a rectangle that is exactly large enough to contain two given rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.Rect.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-419">Pobiera lub ustawia szerokość prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-419">Gets or sets the width of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-420">Liczba dodatnia reprezentująca szerokość prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-420">A positive number that represents the width of the rectangle.</span></span> <span data-ttu-id="591ba-421">Wartość domyślna to 0.</span><span class="sxs-lookup"><span data-stu-id="591ba-421">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-422"><xref:System.Windows.Rect.Empty%2A> Prostokąt<xref:System.Windows.Rect.Width%2A> ma .<xref:System.Double.NegativeInfinity></span><span class="sxs-lookup"><span data-stu-id="591ba-422">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="591ba-423">Prostokąt jest tylko do odczytu <xref:System.Windows.Rect.Width%2A> ; nie można go zmienić. <xref:System.Windows.Rect.Empty%2A></span><span class="sxs-lookup"><span data-stu-id="591ba-423">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-424">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury do określania wymiarów i lokalizacji prostokąta przy użyciu języka XAML.</span><span class="sxs-lookup"><span data-stu-id="591ba-424">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="591ba-425">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-425">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-426">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-426">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="591ba-427"><see cref="P:System.Windows.Rect.Width" />jest ustawiona na wartość ujemną.</span><span class="sxs-lookup"><span data-stu-id="591ba-427"><see cref="P:System.Windows.Rect.Width" /> is set to a negative value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-428"><see cref="P:System.Windows.Rect.Width" />jest ustawiony w <see cref="P:System.Windows.Rect.Empty" /> prostokącie.</span><span class="sxs-lookup"><span data-stu-id="591ba-428"><see cref="P:System.Windows.Rect.Width" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.Height" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Rect.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-429">Pobiera lub ustawia wartość osi x lewej strony prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-429">Gets or sets the x-axis value of the left side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-430">Wartość osi x lewej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-430">The x-axis value of the left side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-431">Pobieranie tej właściwości jest równoznaczne z uzyskaniem <xref:System.Windows.Rect.Left%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="591ba-431">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-432">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury do określania wymiarów i lokalizacji prostokąta przy użyciu języka XAML.</span><span class="sxs-lookup"><span data-stu-id="591ba-432">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="591ba-433">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-433">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-434">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-434">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-435"><see cref="P:System.Windows.Rect.X" />jest ustawiony w <see cref="P:System.Windows.Rect.Empty" /> prostokącie.</span><span class="sxs-lookup"><span data-stu-id="591ba-435"><see cref="P:System.Windows.Rect.X" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Rect.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="591ba-436">Pobiera lub ustawia wartość osi y górnej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-436">Gets or sets the y-axis value of the top side of the rectangle.</span></span></summary>
        <value><span data-ttu-id="591ba-437">Wartość osi y górnej krawędzi prostokąta.</span><span class="sxs-lookup"><span data-stu-id="591ba-437">The y-axis value of the top side of the rectangle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="591ba-438">Pobieranie tej właściwości jest równoznaczne z uzyskaniem <xref:System.Windows.Rect.Top%2A> właściwości.</span><span class="sxs-lookup"><span data-stu-id="591ba-438">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="591ba-439">Poniższy przykład pokazuje, jak używać <xref:System.Windows.Rect> struktury do określania wymiarów i lokalizacji prostokąta przy użyciu języka XAML.</span><span class="sxs-lookup"><span data-stu-id="591ba-439">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="591ba-440">Poniższy przykład pokazuje, jak za pomocą kodu utworzyć prostokąt i dodać go do strony.</span><span class="sxs-lookup"><span data-stu-id="591ba-440">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="591ba-441">W przykładzie pokazano również, jak znaleźć informacje o rozmiarze i koordynacji dla nowego prostokąta i renderować informacje w obszarze <xref:System.Windows.Controls.TextBox> pod prostokątem.</span><span class="sxs-lookup"><span data-stu-id="591ba-441">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="591ba-442"><see cref="P:System.Windows.Rect.Y" />jest ustawiony w <see cref="P:System.Windows.Rect.Empty" /> prostokącie.</span><span class="sxs-lookup"><span data-stu-id="591ba-442"><see cref="P:System.Windows.Rect.Y" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span></span></exception>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
  </Members>
</Type>
