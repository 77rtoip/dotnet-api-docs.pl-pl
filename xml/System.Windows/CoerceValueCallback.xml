<Type Name="CoerceValueCallback" FullName="System.Windows.CoerceValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bbc70fa825fb1449321a5aebd633372a4e8df0e5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69434872" /></Metadata><TypeSignature Language="C#" Value="public delegate object CoerceValueCallback(DependencyObject d, object baseValue);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CoerceValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CoerceValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function CoerceValueCallback(d As DependencyObject, baseValue As Object) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ CoerceValueCallback(DependencyObject ^ d, System::Object ^ baseValue);" />
  <TypeSignature Language="F#" Value="type CoerceValueCallback = delegate of DependencyObject * obj -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="d" Type="System.Windows.DependencyObject" />
    <Parameter Name="baseValue" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="d">Obiekt, w którym znajduje się właściwość. Po wywołaniu wywołania zwrotnego System właściwości przekaże tę wartość.</param>
    <param name="baseValue">Nowa wartość właściwości, przed podjęciem próby wykonania.</param>
    <summary>Udostępnia szablon metody, która jest wywoływana za każdym razem, gdy wartość właściwości zależności jest przeliczana lub zażądano założenia.</summary>
    <returns>Wartość przymusowa (z odpowiednim typem).</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wywołania zwrotne oparte <xref:System.Windows.CoerceValueCallback> na programie można przypisywać do właściwości zależności za pomocą kilku różnych technik. Każda z tych technik wymaga, aby najpierw utworzyć nowy obiekt metadanych właściwości (<xref:System.Windows.PropertyMetadata>lub klasę pochodną, taką jak <xref:System.Windows.FrameworkPropertyMetadata>). Utwórz obiekt metadanych przy użyciu podpisu konstruktora, który przyjmuje `coerceValueCallback` parametr, i przypisz ten parametr do procedury obsługi wywołania zwrotnego. Lub Utwórz metadane za pomocą dowolnej sygnatury i ustaw <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> właściwość przed umieszczeniem metadanych w użyciu.  
  
 Po wykonaniu tych metadanych można:  
  
-   Zdefiniuj nową właściwość zależności dla nowej klasy, przy użyciu dowolnej sygnatury <xref:System.Windows.DependencyProperty.Register%2A>, podając metadane `typeMetadata` jako wartość.  
  
-   Zastąp metadane (wywołanie <xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29>) istniejącej właściwości zależności, gdy dziedziczysz z klasy, która jest właścicielem właściwości zależności.  
  
-   Dodaj istniejącą właściwość zależności do nowej <xref:System.Windows.DependencyObject> klasy przy użyciu nowych metadanych, wywołując <xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29>metodę.  
  
 Implementacje tego wywołania zwrotnego powinny sprawdzać `baseValue` wartość w i określać na podstawie wartości lub typu, czy jest to wartość, która musi być dodatkowo wymuszona.  
  
 Właściwość for zależności jest wywoływana za każdym razem, gdy system właściwości lub inne wywołania <xref:System.Windows.DependencyObject.CoerceValue%2A> wywołujące w <xref:System.Windows.DependencyObject> wystąpieniu `dp`, określając identyfikator tej właściwości jako. <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>  
  
 Zmiany wartości właściwości mogą pochodzić z dowolnego możliwego uczestnika w systemie właściwości. Obejmuje to style, ogólne unieważnienie, wyzwalacze, dziedziczenie wartości właściwości i ustawienie wartości lokalnej.  
  
 Ogólnie rzecz biorąc, należy unikać określania więcej <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> niż jednego elementu dla danej właściwości zależności (zastępowanie lub Dodawanie nowych metadanych dla właściwości zależności, która już <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>miała). Tylko jedno wywołanie zwrotne będzie mogło działać. Działające wywołanie zwrotne będzie to ten, który został zastosowany do najbardziej pochodnej klasy w dziedziczeniu w porównaniu <xref:System.Windows.DependencyObject> z obiektem wywołującym. Inne wywołania zwrotne przypisane do metadanych dla właściwości zależności, które istniały wyżej w hierarchii właściciela, są zastępowane, gdy metadane są zastępowane.  
  
   
  
## Examples  
 Poniższy przykład zawiera implementację tego wywołania zwrotnego w celu wymuszenia przechowywanej wartości właściwości zależności na podstawie innych danych wejściowych, takich jak wartość innej właściwości. W takim przypadku wywołania zwrotne sprawdzają, czy `ShirtType` właściwość odpowiada typowi koszulki, która ma przyciski; Jeśli tak, oznacza to `ButtonColor`, że określa początkowy kolor domyślny dla, jeśli typ koszul nie ma przycisków `ButtonColor` , spowoduje to przekształcenie wartości z powrotem do wartości początkowej, która powoduje [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] , że (niepokazywany) usunąć tę listę rozwijaną z efektywnych opcji.  
  
 [!code-csharp[DPCustom#CoerceValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#coercevaluecallback)]
 [!code-vb[DPCustom#CoerceValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#coercevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>
