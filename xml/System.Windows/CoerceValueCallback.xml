<Type Name="CoerceValueCallback" FullName="System.Windows.CoerceValueCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc1a383fe21e6b9b549e0ccda7aa8c21c6f92d9f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37493666" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate object CoerceValueCallback(DependencyObject d, object baseValue);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CoerceValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CoerceValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function CoerceValueCallback(d As DependencyObject, baseValue As Object) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ CoerceValueCallback(DependencyObject ^ d, System::Object ^ baseValue);" />
  <TypeSignature Language="F#" Value="type CoerceValueCallback = delegate of DependencyObject * obj -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="d" Type="System.Windows.DependencyObject" />
    <Parameter Name="baseValue" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="d">Obiekt, który na istnieje właściwość. Po wywołaniu zwrotnym tę wartość przekazuje system właściwości.</param>
    <param name="baseValue">Nowa wartość właściwości, przed każda próba wymuszenia.</param>
    <summary>Zawiera szablon dla metody, która jest wywoływana zawsze wtedy, gdy trwa ponowne obliczanie wartości właściwości zależności lub wymuszenia specjalnie żądania.</summary>
    <returns>Wartość coerced (przy użyciu odpowiedniego typu).</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Na podstawie wywołań zwrotnych <xref:System.Windows.CoerceValueCallback> mogą być przypisane do właściwości zależności za pomocą kilku różnych technik. Każdy z tych metod wymaga, należy najpierw utworzyć nowy obiekt metadanych właściwości (<xref:System.Windows.PropertyMetadata>, lub klasy pochodnej, takie jak <xref:System.Windows.FrameworkPropertyMetadata>). Tworzenie obiektu metadanych przy użyciu sygnatury konstruktora, który przyjmuje `coerceValueCallback` parametru i Przypisz ten parametr do programu obsługi wywołania zwrotnego. Lub konstrukcji metadanych podpisu, a zestaw <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> właściwości przed umieszczania metadanych w użyciu.  
  
 W przypadku takich metadanych, możesz wykonywać następujące czynności:  
  
-   Zdefiniować nową właściwość zależności dla nowej klasy, przy użyciu albo podpis <xref:System.Windows.DependencyProperty.Register%2A>, dzięki czemu metadanych jako `typeMetadata` wartość.  
  
-   Zastąp metadane (Wywołaj <xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29>) dla istniejącej właściwości zależności, po utworzeniu klasy pochodnej z klasy, która jest właścicielem właściwość zależności.  
  
-   Dodaj istniejącą właściwość zależności na nową <xref:System.Windows.DependencyObject> klasy przy użyciu nowych metadanych, wywołując <xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29>.  
  
 Implementacje to wywołanie zwrotne zaewidencjonować wartość `baseValue` i określić na podstawie wartości lub typem czy jest to wartość, która musi zostać dodatkowo przekształcone.  
  
 <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> Zależność właściwości jest wywoływana za każdym razem system właściwości lub dowolny obiekt wywołujący wywołuje <xref:System.Windows.DependencyObject.CoerceValue%2A> na <xref:System.Windows.DependencyObject> wystąpienie określający identyfikator tę właściwość jako `dp`.  
  
 Zmiana wartości właściwości może pochodzić z każdy uczestnik możliwe w systemie właściwości. Obejmuje to style, ogólny unieważniania, wyzwalacze, dziedziczenie wartości właściwości i ustawienie wartości lokalnej.  
  
 Ogólnie należy unikać określenie więcej niż jedną <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> dla dowolnej podanej właściwości zależności (zastępowanie lub dodawanie o nowe metadane dla właściwości zależności, który był już <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>). Tylko jedno z wywołań zwrotnych będą działać. Wywołanie zwrotne acting będzie jedną, która została zastosowana do najbardziej pochodnej klasy w dziedziczeniu w porównaniu z <xref:System.Windows.DependencyObject> obiektu wywołującego. Inne wywołania zwrotne przypisane metadane dla właściwości zależności wyższej znajdowały się w hierarchii właściciel jest zastępowany w przypadku metadanych jest zastępowany.  
  
   
  
## Examples  
 Poniższy przykład zawiera implementację wymuszone przechowywana wartość właściwości zależności oparte na pozostałych danych wejściowych, takie jak wartości innej właściwości tego wywołania zwrotnego. W takim przypadku wywołanie zwrotne sprawdza, czy `ShirtType` właściwość odnosi się do typu koszulka, który zawiera przyciski; sytuacji nawiązaniem początkowy domyślny kolor dla `ButtonColor`, jeśli typ koszuli nie ma żadnych przycisków, jego przekształca wynik dane `ButtonColor` wartość Powrót do wartości początkowej, co powoduje, że [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] (niewyświetlany) do usuwania tej listy rozwijanej Opcje skuteczne.  
  
 [!code-csharp[DPCustom#CoerceValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#coercevaluecallback)]
 [!code-vb[DPCustom#CoerceValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#coercevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>