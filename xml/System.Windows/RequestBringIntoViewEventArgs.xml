<Type Name="RequestBringIntoViewEventArgs" FullName="System.Windows.RequestBringIntoViewEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8dedc010a032951ae5455df27586a27907cf9a1f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444278" /></Metadata><TypeSignature Language="C#" Value="public class RequestBringIntoViewEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestBringIntoViewEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestBringIntoViewEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestBringIntoViewEventArgs : System::Windows::RoutedEventArgs" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventArgs = class&#xA;    inherit RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Zawiera dane dla <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> zdarzenia kierowanego.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zdarzenie jest wywoływane przez elementy w przypadku wywołania <xref:System.Windows.FrameworkElement.BringIntoView%2A> z tego elementu. <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> Ogólnie rzecz biorąc to zdarzenie kierowane nie jest obsługiwane przez źródło. Klasy pośrednie, które nie implementują regionów przewijalnych lub podobne koncepcje, które nie powinny obsłużyć zdarzenia.  Zdarzenie powinno być dozwolone do elementów nadrzędnych, które implementują region przewijalny lub określone <xref:System.Windows.UIElement.ClipToBounds%2A> `false`w inny sposób. Takie elementy nadrzędne zwykle zapewniają obsługę klasy dla <xref:System.Windows.FrameworkElement.RequestBringIntoView> zdarzenia, czyli, gdy wymagana logika renderowania występuje zawsze, gdy dany element żąda, aby można go było wyświetlić w obszarze przycinania.  
  
 Elementy zawartości mogą spowodować, że zdarzenie zostanie zgłoszone przez ich hosty zawartości ( <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> przez wywołanie <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> i podnoszenie z hosta zawartości). Analogicznie, można zażądać elementów drzewa logicznego do uwzględnienia z metodą <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>pomocnika.  
  
 A <xref:System.Windows.Controls.ListBox> implementuje pokrewną, ale <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>inną metodę.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
  </Docs>
  <Members>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="requestBringIntoViewEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">Procedura obsługi ogólnej do wywołania w sposób specyficzny dla typu.</param>
        <param name="genericTarget">Obiekt docelowy, na którym ma zostać wywołana procedura obsługi.</param>
        <summary>Wywołuje programy obsługi zdarzeń w sposób specyficzny dla typu, co może zwiększyć wydajność systemu zdarzeń.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta implementacja rzutuje ogólną procedurę obsługi jako <xref:System.Windows.RequestBringIntoViewEventHandler> a, a następnie wywołuje ją. Aby uzyskać szczegółowe informacje na temat tego wzorca implementacji i przyczyn dla niego <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> , zobacz i [rozesłane zdarzenia — Omówienie](~/docs/framework/wpf/advanced/routed-events-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ TargetObject { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : System.Windows.DependencyObject" Usage="System.Windows.RequestBringIntoViewEventArgs.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera obiekt, który powinien być widoczny w odpowiedzi na zdarzenie.</summary>
        <value>Obiekt, który został <see cref="M:System.Windows.FrameworkElement.BringIntoView" />wywołany.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten obiekt jest zwykle tym samym obiektem, który <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType>został zwrócony przez.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.RoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TargetRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect TargetRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect TargetRect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetRect As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect TargetRect { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetRect : System.Windows.Rect" Usage="System.Windows.RequestBringIntoViewEventArgs.TargetRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera prostokątny region w przestrzeni współrzędnych obiektu, który powinien być widoczny.</summary>
        <value>Żądany prostokątny obszar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jeśli sygnatura <xref:System.Windows.FrameworkElement.BringIntoView%2A> , która została wywołana w celu podniesienia poziomu zdarzenia nie określiła docelowego prostokąta, ta właściwość <xref:System.Windows.Rect.Empty%2A> może być wartością <xref:System.Windows.Rect> struktury.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
      </Docs>
    </Member>
  </Members>
</Type>
