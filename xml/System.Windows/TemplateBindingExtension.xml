<Type Name="TemplateBindingExtension" FullName="System.Windows.TemplateBindingExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d273eae027853d484db4e79763e403bb410aedbe" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36456841" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TemplateBindingExtension : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateBindingExtension extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TemplateBindingExtension" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateBindingExtension&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateBindingExtension : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type TemplateBindingExtension = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.TemplateBindingExtensionConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementuje rozszerzeniu znacznika, które obsługuje powiązania między wartością właściwości w szablonie, a wartość ujawnionych właściwości kontrolki z szablonem.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć `TemplateBinding` szablonu, aby powiązać wartości na szablon jest stosowany dla formantu. A `TemplateBinding` jest bardziej efektywne niż <xref:System.Windows.Data.Binding> , ale ma mniej funkcji. Przy użyciu `TemplateBinding` odpowiada za pomocą <xref:System.Windows.Data.Binding> z <xref:System.Windows.Data.Binding.RelativeSource%2A> ustawioną właściwość <xref:System.Windows.Data.RelativeSource.TemplatedParent%2A?displayProperty=nameWithType>.  
  
<a name="xamlTextUsage_TemplateBindingExtension"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informacji, zobacz [rozszerzenie znacznika TemplateBinding](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md).  
  
   
  
## Examples  
 W poniższym przykładzie przedstawiono <xref:System.Windows.Controls.ControlTemplate> definiuje <xref:System.Windows.Controls.ListBox> czy poziomy i ma zaokrąglone narożniki. `TemplateBinding` Oznacza to, że <xref:System.Windows.Controls.Border.Background%2A> z <xref:System.Windows.Controls.Border> powinien zostać zsynchronizowany z <xref:System.Windows.Controls.Border.Background%2A> jest ustawiona na wartość <xref:System.Windows.Controls.ListBox>. Możesz użyć `TemplateBinding` w Twojej <xref:System.Windows.Controls.ControlTemplate> chcąc nadać użytkownikowi formantu kontrolę nad wartości niektórych właściwości. Omówienie tego przykładu, zobacz [stylami i tworzenia szablonów](~/docs/framework/wpf/controls/styling-and-templating.md).  
  
 [!code-xaml[StylingIntroSnippet#ListBoxCT](~/samples/snippets/csharp/VS_Snippets_Wpf/StylingIntroSnippet/CS/window1.xaml#listboxct)]    
  
 W poniższym przykładzie przedstawiono <xref:System.Windows.Controls.ControlTemplate> z <xref:System.Windows.Controls.Label> formantu. <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> i <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> właściwości są powiązane z wartościami <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> i <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> właściwości <xref:System.Windows.Controls.Label> kontroli tego <xref:System.Windows.Controls.ControlTemplate> jest stosowany do.  
  
 [!code-xaml[ControlTemplateExamples#Label](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples/CS/resources/label.xaml#label)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.TemplateBindingExtension" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateBindingExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateBindingExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateBindingExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.TemplateBindingExtension" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateBindingExtension (System.Windows.DependencyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateBindingExtension.#ctor(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateBindingExtension(System::Windows::DependencyProperty ^ property);" />
      <MemberSignature Language="F#" Value="new System.Windows.TemplateBindingExtension : System.Windows.DependencyProperty -&gt; System.Windows.TemplateBindingExtension" Usage="new System.Windows.TemplateBindingExtension property" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="property">Identyfikator właściwości jest powiązany.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.TemplateBindingExtension" /> klasy z właściwości określonym zależności, który jest źródłem powiązania.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateBindingExtension.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IValueConverter ^ Converter { System::Windows::Data::IValueConverter ^ get(); void set(System::Windows::Data::IValueConverter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.Windows.Data.IValueConverter with get, set" Usage="System.Windows.TemplateBindingExtension.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia konwerter interpretuje między źródłem a celem powiązania.</summary>
        <value>Implementacja konwertera. Wartością domyślną jest <see langword="null" /> i jest zwykle zapewniany jako opcjonalny parametr wiązania.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta wartość nie jest <xref:System.Windows.TemplateBindingExtensionConverter>. Jest wzorzec określonego konwertera obsługiwane przez [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] wiązania z danymi.  
  
<a name="xamlTextUsage_Converter"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informacji, zobacz [rozszerzenie znacznika TemplateBinding](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateBindingExtension.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterParameter : obj with get, set" Usage="System.Windows.TemplateBindingExtension.ConverterParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub Ustawia parametr do przekazania do konwerter.</summary>
        <value>Parametr związany następujący odwołuje implementacji konwertera. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_ConverterParameter"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informacji, zobacz [rozszerzenie znacznika TemplateBinding](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ConverterParameter" />
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateBindingExtension.Property" />
      <MemberSignature Language="VB.NET" Value="Public Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); void set(System::Windows::DependencyProperty ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty with get, set" Usage="System.Windows.TemplateBindingExtension.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.ConstructorArgument("property")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia właściwość jest powiązana z.</summary>
        <value>Identyfikator właściwości zależności są powiązane.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_Property"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informacji, zobacz [rozszerzenie znacznika TemplateBinding](~/docs/framework/wpf/advanced/templatebinding-markup-extension.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateBindingExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="templateBindingExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Obiekt, który może zapewnić usługi rozszerzenia znaczników. Może być <see langword="null" /> w tej implementacji.</param>
        <summary>Zwraca obiekt, który powinna być ustawiona jako wartość właściwości obiektu docelowego dla tego rozszerzenia znacznika. Aby uzyskać <see cref="T:System.Windows.TemplateBindingExtension" />, jest to wyrażenie (<see cref="T:System.Windows.TemplateBindingExpression" />) obsługującego powiązanie.</summary>
        <returns>Wyrażenie, które obsługuje powiązania.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>