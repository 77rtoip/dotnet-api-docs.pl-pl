<Type Name="RoutedEvent" FullName="System.Windows.RoutedEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7b29345e42d255209a1b8868b1734575553c533" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56360720" /></Metadata><TypeSignature Language="C#" Value="public sealed class RoutedEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RoutedEvent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoutedEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutedEvent sealed" />
  <TypeSignature Language="F#" Value="type RoutedEvent = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Markup.RoutedEventConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Markup.RoutedEventValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Markup.RoutedEventConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Markup.RoutedEventValueSerializer, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje i identyfikuje zdarzenia trasowanego deklaruje jego właściwości.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa zawiera <xref:System.Windows.RoutedEvent.Name%2A>, <xref:System.Windows.RoutedEvent.RoutingStrategy%2A>, <xref:System.Windows.RoutedEvent.HandlerType%2A>, i <xref:System.Windows.RoutedEvent.OwnerType%2A> właściwości. Żadna z tych elementów członkowskich może mieć wartości null.  
  
 Ta klasa ma użycie XAML, które jest przeznaczonych wyłącznie dla podanie wartości <xref:System.Windows.EventTrigger.RoutedEvent%2A> właściwość <xref:System.Windows.EventTrigger> (lub klasy pochodnej) lub <xref:System.Windows.EventSetter.Event%2A> właściwość <xref:System.Windows.EventSetter> (lub klasy pochodnej). Aby uzyskać więcej informacji na temat <xref:System.Windows.EventTrigger>, <xref:System.Windows.EventSetter>, i użycia XAML dla tych klas, zobacz [Przegląd zdarzeń kierowane](~/docs/framework/wpf/advanced/routed-events-overview.md).  
  
<a name="xamlAttributeUsage_RoutedEvent"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="eventName"/>  
- or -  
<object property="type.eventName"/>  
  
```  
  
<a name="xamlValues_RoutedEvent"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *eventName*  
 Nazwą niekwalifikowaną zdarzeń odpowiadającą <xref:System.Windows.RoutedEvent.Name%2A> właściwość <xref:System.Windows.RoutedEvent> pola nie rzeczywista nazwa elementu członkowskiego <xref:System.Windows.RoutedEvent> pole identyfikatora w ramach danego typu. Bez kwalifikacji *eventName* należy nadać nazwę zdarzenia, tak jak w typie, który jest <xref:System.Windows.Style.TargetType%2A> zawierającego bieżącego stylu <xref:System.Windows.EventSetter> lub <xref:System.Windows.EventTrigger>.  
  
 *type*  
 Typ, który ma być używany do kwalifikowania nazwy zdarzenia. Jeśli podano bez prefiksu *typu* powinien być typem w domyślnej przestrzeni nazw XAML, i można go mapować do istniejącego typu CLR. Zdarzenia niestandardowe lub zdarzenia, które znajdują się na typów poza obszaru nazw XAML domyślny ciąg dla *typu* może zawierać prefiks dla mapowanego przestrzeni nazw XAML. Przestrzeń nazw XAML powinien zawierać typ XAML, które można zamapować na zapasowy typ CLR i typu CLR powinien zdefiniować identyfikator zdarzenia trasowanego żądaną. Aby uzyskać szczegółowe informacje dotyczące mapowania przestrzeni nazw XAML, zobacz [przestrzeń nazw XAML i mapowanie Namespace dla WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddOwner">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent AddOwner (Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.RoutedEvent AddOwner(class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEvent.AddOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOwner (ownerType As Type) As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::RoutedEvent ^ AddOwner(Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="member this.AddOwner : Type -&gt; System.Windows.RoutedEvent" Usage="routedEvent.AddOwner ownerType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ownerType">Typ, gdzie zdarzenia trasowanego zostanie dodany.</param>
        <summary>Kojarzy inny typ właściciela z zdarzenia trasowanego reprezentowany przez <see cref="T:System.Windows.RoutedEvent" /> metodą wystąpienia oraz umożliwia routing zdarzenia oraz jego obsługi.</summary>
        <returns>Pole identyfikatora zdarzenia. Zwrócona wartość należy ustawić publiczne statyczne tylko do odczytu pola, które będą przechowywane na identyfikator reprezentujący zdarzenia trasowanego na typu, będącego właścicielem. To pole jest zazwyczaj zdefiniowane za pomocą publicznego dostępu, ponieważ kod użytkownika należy odwołanie do pola, aby dołączyć obsługi zdarzenia trasowanego, korzystając z dowolnego wystąpienia <see cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" /> metoda narzędzia.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ właściciela jest używana wewnętrznie podczas rozpoznawania zdarzenia według nazwy.  
  
   
  
## Examples  
 Poniższy przykład dodaje bieżącej klasy jako innego właściciela zdarzenie zdefiniowane w innej klasie. W tym miejscu `AnotherEditContainer` jest bieżącej klasy i `EditStateChangedEvent` <xref:System.Windows.RoutedEvent> pole jest zdefiniowane jako członek tej klasy. `MyEditContainer` Pierwotnie zdefiniowana klasa zdarzenia, rejestrując ją za pomocą o identycznej nazwie `EditStateChangedEvent` identyfikatora.  
  
 [!code-csharp[ClassHandling#RoutedEventAddOwner](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#routedeventaddowner)]
 [!code-vb[ClassHandling#RoutedEventAddOwner](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#routedeventaddowner)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlerType">
      <MemberSignature Language="C#" Value="public Type HandlerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type HandlerType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.HandlerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HandlerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ HandlerType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlerType : Type" Usage="System.Windows.RoutedEvent.HandlerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ procedury obsługi zdarzeń trasowanych.</summary>
        <value>Typ obsługi zdarzenia trasowanego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Typ programu obsługującego jest delegata obsługi zdarzeń, które mają być używane podczas wykonywania programów obsługi, które będzie nasłuchiwać zdarzeń, reprezentowane przez to <xref:System.Windows.RoutedEvent>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.RoutedEvent.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera nazwę identyfikującą zdarzenia trasowanego.</summary>
        <value>Nazwa zdarzenia trasowanego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nazwa zdarzenia trasowanego musi być unikatowa w obrębie każdego typu właściciela, ale nie musi być unikatowa w skali globalnej.  
  
 Wartość tej właściwości pochodzi z <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> metody definiującej <xref:System.Windows.RoutedEvent>. W szczególności wartość <xref:System.Windows.RoutedEvent.Name%2A> jest `name` wartość parametru, który został przekazany do <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="OwnerType">
      <MemberSignature Language="C#" Value="public Type OwnerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type OwnerType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.OwnerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ OwnerType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerType : Type" Usage="System.Windows.RoutedEvent.OwnerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera typ zarejestrowanego właściciela zdarzenia trasowanego.</summary>
        <value>Typ właściciela zdarzenia trasowanego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten typ może być dowolnego typu obiektu, nie są zawsze ograniczone do <xref:System.Windows.DependencyObject>. W przypadku zdarzenia trasowane, które zostały dodane właścicieli właściwość ta zwróci pierwszy właściciela zadeklarowane.  
  
 Wartość tej właściwości pochodzi z <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> metody definiującej <xref:System.Windows.RoutedEvent>. W szczególności wartość <xref:System.Windows.RoutedEvent.OwnerType%2A> jest `ownerType` wartość parametru, który został przekazany do <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="RoutingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.RoutingStrategy RoutingStrategy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.RoutingStrategy RoutingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.RoutingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoutingStrategy As RoutingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutingStrategy RoutingStrategy { System::Windows::RoutingStrategy get(); };" />
      <MemberSignature Language="F#" Value="member this.RoutingStrategy : System.Windows.RoutingStrategy" Usage="System.Windows.RoutedEvent.RoutingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera strategii routingu zdarzenia trasowane.</summary>
        <value>Jedna z wartości wyliczenia. Wartość domyślna to wartość domyślna wyliczenie <see cref="F:System.Windows.RoutingStrategy.Bubble" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zgodnie z Konwencją zdarzenia trasowane tunelowania mają prefiks nazwy "Preview", a skojarzone zdarzenia propagacji zdefiniowane. Powinna to być rzadkie, aby istniała tylko tunelowania wersji i nie odpowiednią wersję propagacji. Aby uzyskać więcej informacji, zobacz [jak: Utwórz niestandardowe zdarzenie trasowane](~/docs/framework/wpf/advanced/how-to-create-a-custom-routed-event.md).  
  
 Wartość tej właściwości pochodzi z <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> metody definiującej <xref:System.Windows.RoutedEvent>. W szczególności wartość <xref:System.Windows.RoutedEvent.RoutingStrategy%2A> jest `routingStrategy` wartość parametru, który został przekazany do <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEvent.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="routedEvent.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Zwraca reprezentację ciągu tego <see cref="T:System.Windows.RoutedEvent" />.</summary>
        <returns>Reprezentacja ciągu dla tego obiektu, który jest taka sama jak wartość zwrócona przez obiekt <see cref="P:System.Windows.RoutedEvent.Name" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>