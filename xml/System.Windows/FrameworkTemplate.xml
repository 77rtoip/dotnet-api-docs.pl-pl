<Type Name="FrameworkTemplate" FullName="System.Windows.FrameworkTemplate">
  <TypeSignature Language="C#" Value="public abstract class FrameworkTemplate : System.Windows.Threading.DispatcherObject, System.Windows.ISealable, System.Windows.Markup.INameScope, System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FrameworkTemplate extends System.Windows.Threading.DispatcherObject implements class System.Windows.ISealable, class System.Windows.Markup.INameScope, class System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkTemplate" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FrameworkTemplate&#xA;Inherits DispatcherObject&#xA;Implements INameScope, IQueryAmbient, ISealable" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkTemplate abstract : System::Windows::Threading::DispatcherObject, System::Windows::ISealable, System::Windows::Markup::INameScope, System::Windows::Markup::IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.ISealable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScope</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("VisualTree")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="70cd4-101">Umożliwia utworzenie wystąpienia drzewa <see cref="T:System.Windows.FrameworkElement" /> i/lub <see cref="T:System.Windows.FrameworkContentElement" /> obiektów.</span><span class="sxs-lookup"><span data-stu-id="70cd4-101">Enables the instantiation of a tree of <see cref="T:System.Windows.FrameworkElement" /> and/or <see cref="T:System.Windows.FrameworkContentElement" /> objects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FrameworkTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FrameworkTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="70cd4-102">Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.FrameworkTemplate" /> klasy.</span><span class="sxs-lookup"><span data-stu-id="70cd4-102">Initializes a new instance of the <see cref="T:System.Windows.FrameworkTemplate" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name, System.Windows.FrameworkElement templatedParent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindName(string name, class System.Windows.FrameworkElement templatedParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String, templatedParent As FrameworkElement) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name, System::Windows::FrameworkElement ^ templatedParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="templatedParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="70cd4-103">Nazwa ciągu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-103">The string name.</span></span></param>
        <param name="templatedParent"><span data-ttu-id="70cd4-104">Kontekst <see cref="T:System.Windows.FrameworkElement" /> których zastosowano ten szablon.</span><span class="sxs-lookup"><span data-stu-id="70cd4-104">The context of the <see cref="T:System.Windows.FrameworkElement" /> where this template is applied.</span></span></param>
        <summary><span data-ttu-id="70cd4-105">Odnajduje element skojarzony z określoną nazwą zdefiniowane w tym szablonie.</span><span class="sxs-lookup"><span data-stu-id="70cd4-105">Finds the element associated with the specified name defined within this template.</span></span></summary>
        <returns><span data-ttu-id="70cd4-106">Element skojarzony z określoną nazwą.</span><span class="sxs-lookup"><span data-stu-id="70cd4-106">The element associated with the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70cd4-107">Aby uzyskać więcej informacji, zobacz "Namescopes XAML w style i szablony" w [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="70cd4-107">For more information, see "XAML Namescopes in Styles and Templates" in [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasContent">
      <MemberSignature Language="C#" Value="public bool HasContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.HasContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70cd4-108">Pobiera wartość wskazującą, czy zawartość ma jest zoptymalizowana, ten szablon.</span><span class="sxs-lookup"><span data-stu-id="70cd4-108">Gets a value that indicates whether this template has optimized content.</span></span></summary>
        <value>
          <span data-ttu-id="70cd4-109"><see langword="true" /> Jeśli ten szablon zawiera zoptymalizowaną zawartość; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="70cd4-109"><see langword="true" /> if this template has optimized content; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70cd4-110">Pobiera wartość wskazującą, czy ten obiekt jest w stanie niezmienne, więc nie można zmienić.</span><span class="sxs-lookup"><span data-stu-id="70cd4-110">Gets a value that indicates whether this object is in an immutable state so it cannot be changed.</span></span></summary>
        <value>
          <span data-ttu-id="70cd4-111"><see langword="true" /> Jeśli ten obiekt jest w stanie niezmienne; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="70cd4-111"><see langword="true" /> if this object is in an immutable state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadContent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject LoadContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject LoadContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.LoadContent" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadContent () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ LoadContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="70cd4-112">Ładuje zawartość szablonu jako wystąpienie obiektu i zwraca element główny zawartości.</span><span class="sxs-lookup"><span data-stu-id="70cd4-112">Loads the content of the template as an instance of an object and returns the root element of the content.</span></span></summary>
        <returns><span data-ttu-id="70cd4-113">Element główny zawartości.</span><span class="sxs-lookup"><span data-stu-id="70cd4-113">The root element of the content.</span></span> <span data-ttu-id="70cd4-114">Wywoływanie wielokrotnie zwraca oddzielnego wystąpienia.</span><span class="sxs-lookup"><span data-stu-id="70cd4-114">Calling this multiple times returns separate instances.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="70cd4-115">Nazwa do zarejestrowania.</span><span class="sxs-lookup"><span data-stu-id="70cd4-115">The name to register.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="70cd4-116">Obiekt można mapować na podanej nazwy.</span><span class="sxs-lookup"><span data-stu-id="70cd4-116">The object to be mapped to the provided name.</span></span></param>
        <summary><span data-ttu-id="70cd4-117">Rejestruje nowej pary nazwa/obiektu w bieżącym zakresie nazwy.</span><span class="sxs-lookup"><span data-stu-id="70cd4-117">Registers a new name/object pair into the current name scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70cd4-118">Aby uzyskać więcej informacji, zobacz "Namescopes XAML w style i szablony" w [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="70cd4-118">For more information, see "XAML Namescopes in Styles and Templates" in [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IHaveResources.Resources</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70cd4-119">Pobiera lub ustawia kolekcję zasobów, które mogą być używane w zakresie tego szablonu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-119">Gets or sets the collection of resources that can be used within the scope of this template.</span></span></summary>
        <value><span data-ttu-id="70cd4-120">Zasoby, które mogą być używane w zakresie tego szablonu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-120">The resources that can be used within the scope of this template.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Resources"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="70cd4-121">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="70cd4-121">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Resources>  
    oneOrMoreResourceElements  
  </object.Resources>  
</object>  
- or -   
<object>  
  <object.Resources>  
    <ResourceDictionary Source="externalDictionarySource"/>  
  </object.Resources>  
</object>  
```  
  
<a name="xamlValues_Resources"></a>   
## <a name="xaml-values"></a><span data-ttu-id="70cd4-122">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="70cd4-122">XAML Values</span></span>  
 <span data-ttu-id="70cd4-123">*oneOrMoreResourceElements*</span><span class="sxs-lookup"><span data-stu-id="70cd4-123">*oneOrMoreResourceElements*</span></span>  
 <span data-ttu-id="70cd4-124">Jeden lub więcej elementów zasobów.</span><span class="sxs-lookup"><span data-stu-id="70cd4-124">One or more resource elements.</span></span> <span data-ttu-id="70cd4-125">Aby odwoływać się do później albo [StaticResource — rozszerzenie znaczników](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) lub [DynamicResource — rozszerzenie znaczników](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) składni w języku XAML, zasób musi mieć `x:Key` atrybutu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-125">To be referenced later in either [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) syntax in XAML, a resource element MUST have an `x:Key` attribute.</span></span>  
  
 <span data-ttu-id="70cd4-126">\<ResourceDictionary Source="*externalDictionarySource*"/></span><span class="sxs-lookup"><span data-stu-id="70cd4-126">\<ResourceDictionary Source="*externalDictionarySource*"/></span></span>  
 <span data-ttu-id="70cd4-127">Pliku zewnętrznego, który definiuje <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="70cd4-127">An external file that defines a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seal">
      <MemberSignature Language="C#" Value="public void Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.Seal" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="70cd4-128">Umożliwia zablokowanie szablon, więc nie można zmienić.</span><span class="sxs-lookup"><span data-stu-id="70cd4-128">Locks the template so it cannot be changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeResources">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeResources (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeResources(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeResources (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeResources(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="70cd4-129"><see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" />.</span><span class="sxs-lookup"><span data-stu-id="70cd4-129">The <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager" />.</span></span></param>
        <summary><span data-ttu-id="70cd4-130">Zwraca wartość wskazującą, czy procesy serializacji powinny serializacji wartości <see cref="P:System.Windows.FrameworkTemplate.Resources" /> właściwości wystąpienia tej klasy.</span><span class="sxs-lookup"><span data-stu-id="70cd4-130">Returns a value that indicates whether serialization processes should serialize the value of the <see cref="P:System.Windows.FrameworkTemplate.Resources" /> property on instances of this class.</span></span></summary>
        <returns>
          <span data-ttu-id="70cd4-131"><see langword="true" /> Jeśli <see cref="P:System.Windows.FrameworkTemplate.Resources" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="70cd4-131"><see langword="true" /> if the <see cref="P:System.Windows.FrameworkTemplate.Resources" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeVisualTree">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeVisualTree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeVisualTree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.ShouldSerializeVisualTree" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeVisualTree () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeVisualTree();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="70cd4-132">Zwraca wartość wskazującą, czy procesy serializacji powinny serializacji wartości <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> właściwości wystąpienia tej klasy.</span><span class="sxs-lookup"><span data-stu-id="70cd4-132">Returns a value that indicates whether serialization processes should serialize the value of the <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> property on instances of this class.</span></span></summary>
        <returns>
          <span data-ttu-id="70cd4-133"><see langword="true" /> Jeśli <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> wartość właściwości powinny być serializowane; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="70cd4-133"><see langword="true" /> if the <see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.CanSeal">
      <MemberSignature Language="C#" Value="bool System.Windows.ISealable.CanSeal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.ISealable.CanSeal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.System#Windows#ISealable#CanSeal" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CanSeal As Boolean Implements ISealable.CanSeal" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Windows.ISealable.CanSeal { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.IsSealed">
      <MemberSignature Language="C#" Value="bool System.Windows.ISealable.IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Windows.ISealable.IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.System#Windows#ISealable#IsSealed" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSealed As Boolean Implements ISealable.IsSealed" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Windows.ISealable.IsSealed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.ISealable.Seal">
      <MemberSignature Language="C#" Value="void ISealable.Seal ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.ISealable.Seal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.System#Windows#ISealable#Seal" />
      <MemberSignature Language="VB.NET" Value="Sub Seal () Implements ISealable.Seal" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.ISealable.Seal() = System::Windows::ISealable::Seal;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.INameScope.FindName">
      <MemberSignature Language="C#" Value="object INameScope.FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Windows.Markup.INameScope.FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function FindName (name As String) As Object Implements INameScope.FindName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Windows.Markup.INameScope.FindName(System::String ^ name) = System::Windows::Markup::INameScope::FindName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.FindName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="70cd4-134">Identyfikator nazwy dla żądanego obiektu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-134">The name identifier for the object being requested.</span></span></param>
        <summary><span data-ttu-id="70cd4-135">Zwraca obiekt, który ma nazwę identyfikującą podana.</span><span class="sxs-lookup"><span data-stu-id="70cd4-135">Returns an object that has the provided identifying name.</span></span></summary>
        <returns><span data-ttu-id="70cd4-136">Obiekt, jeśli znaleziono.</span><span class="sxs-lookup"><span data-stu-id="70cd4-136">The object, if found.</span></span> <span data-ttu-id="70cd4-137">Zwraca <see langword="null" /> Jeśli został znaleziony żaden obiekt o tej nazwie.</span><span class="sxs-lookup"><span data-stu-id="70cd4-137">Returns <see langword="null" /> if no object of that name was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70cd4-138">Ten element jest jawną implementacją członków.</span><span class="sxs-lookup"><span data-stu-id="70cd4-138">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="70cd4-139">Można go używać tylko wtedy, gdy <xref:System.Windows.FrameworkTemplate> wystąpienia jest rzutowane na <xref:System.Windows.Markup.INameScope> interfejsu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-139">It can be used only when the <xref:System.Windows.FrameworkTemplate> instance is cast to an <xref:System.Windows.Markup.INameScope> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="70cd4-140">Nazwa żądanej właściwości otoczenia.</span><span class="sxs-lookup"><span data-stu-id="70cd4-140">The name of the requested ambient property.</span></span></param>
        <summary><span data-ttu-id="70cd4-141">Pyta, czy określona właściwość otoczenia jest dostępna w bieżącym zakresie.</span><span class="sxs-lookup"><span data-stu-id="70cd4-141">Queries whether a specified ambient property is available in the current scope.</span></span></summary>
        <returns>
          <span data-ttu-id="70cd4-142"><see langword="true" /> Jeśli żądana właściwość otoczenia jest dostępna; w przeciwnym razie <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="70cd4-142"><see langword="true" /> if the requested ambient property is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Template">
      <MemberSignature Language="C#" Value="public System.Windows.TemplateContent Template { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TemplateContent Template" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.Template" />
      <MemberSignature Language="VB.NET" Value="Public Property Template As TemplateContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TemplateContent ^ Template { System::Windows::TemplateContent ^ get(); void set(System::Windows::TemplateContent ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TemplateContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70cd4-143">Pobiera lub ustawia odwołanie do obiektu, który rejestruje lub gdy szablon jest zdefiniowany lub stosowane przez moduł zapisujący jest odtwarzany węzłów XAML dla szablonu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-143">Gets or sets a reference to the object that records or plays the XAML nodes for the template when the template is defined or applied by a writer.</span></span></summary>
        <value><span data-ttu-id="70cd4-144">Odwołanie do obiektu, który rejestruje lub odgrywa węzłów XAML dla szablonu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-144">A reference to the object that records or plays the XAML nodes for the template.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.TemplateContent" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="70cd4-145">Nazwa mapowania do usunięcia.</span><span class="sxs-lookup"><span data-stu-id="70cd4-145">The name of the mapping to remove.</span></span></param>
        <summary><span data-ttu-id="70cd4-146">Usuwa mapowanie nazwa/obiektów z XAML namescope.</span><span class="sxs-lookup"><span data-stu-id="70cd4-146">Removes a name/object mapping from the XAML namescope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70cd4-147">Aby uzyskać więcej informacji, zobacz "Namescopes XAML w style i szablony" w [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="70cd4-147">For more information, see "XAML Namescopes in Styles and Templates" in [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTemplatedParent">
      <MemberSignature Language="C#" Value="protected virtual void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateTemplatedParent(class System.Windows.FrameworkElement templatedParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ValidateTemplatedParent (templatedParent As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ValidateTemplatedParent(System::Windows::FrameworkElement ^ templatedParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templatedParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="templatedParent"><span data-ttu-id="70cd4-148">Element ten szablon jest stosowany do.</span><span class="sxs-lookup"><span data-stu-id="70cd4-148">The element this template is applied to.</span></span></param>
        <summary><span data-ttu-id="70cd4-149">W przypadku przesłonięcia w klasie pochodnej udostępnia zasady dla tego szablonu jest stosowana do elementu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-149">When overridden in a derived class, supplies rules for the element this template is applied to.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="70cd4-150">Podstawowa implementacja Określa, czy opartego na szablonie nadrzędny musi być inne niż null <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="70cd4-150">The base implementation specifies that the templated parent must be a non-null <xref:System.Windows.FrameworkElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTree">
      <MemberSignature Language="C#" Value="public System.Windows.FrameworkElementFactory VisualTree { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.FrameworkElementFactory VisualTree" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkTemplate.VisualTree" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualTree As FrameworkElementFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FrameworkElementFactory ^ VisualTree { System::Windows::FrameworkElementFactory ^ get(); void set(System::Windows::FrameworkElementFactory ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FrameworkElementFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="70cd4-151">Pobiera lub ustawia węzeł główny szablonu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-151">Gets or sets the root node of the template.</span></span></summary>
        <value><span data-ttu-id="70cd4-152">Węzeł główny szablonu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-152">The root node of the template.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_VisualTree"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="70cd4-153">Użycie elementu właściwości języka XAML</span><span class="sxs-lookup"><span data-stu-id="70cd4-153">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <VisualTreeRootNode > VisualTreeNodeContents  
  </VisualTreeRootNode >  
</object>  
```  
  
<a name="xamlValues_VisualTree"></a>   
## <a name="xaml-values"></a><span data-ttu-id="70cd4-154">Wartości XAML</span><span class="sxs-lookup"><span data-stu-id="70cd4-154">XAML Values</span></span>  
 <span data-ttu-id="70cd4-155">*VisualTreeRootNode*</span><span class="sxs-lookup"><span data-stu-id="70cd4-155">*VisualTreeRootNode*</span></span>  
 <span data-ttu-id="70cd4-156">Pojedynczy element XAML jako podrzędny natychmiastowego <xref:System.Windows.FrameworkTemplate> podklasy.</span><span class="sxs-lookup"><span data-stu-id="70cd4-156">A single XAML element as the immediate child of the <xref:System.Windows.FrameworkTemplate> subclass.</span></span> <span data-ttu-id="70cd4-157">Szablony musi mieć na jednym węźle głównym.</span><span class="sxs-lookup"><span data-stu-id="70cd4-157">Templates must have a single root node.</span></span> <span data-ttu-id="70cd4-158">Aby wygenerować przydatne szablonu, jako element *VisualTreeRootNode* ma obsługiwać model zawartości własnych, często modelu, który obsługuje wielu elementów podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="70cd4-158">In order to generate a useful template, the element chosen as *VisualTreeRootNode* is expected to support a content model of its own, often a model that supports multiple child elements.</span></span>  
  
 <span data-ttu-id="70cd4-159">*VisualTreeNodeContents*</span><span class="sxs-lookup"><span data-stu-id="70cd4-159">*VisualTreeNodeContents*</span></span>  
 <span data-ttu-id="70cd4-160">Jeden lub więcej elementów, które ukończenia odpowiedniego szablonu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-160">One or more elements that complete the intended template.</span></span> <span data-ttu-id="70cd4-161">Jeśli wybrana jako element *VisualTreeRootNode* obsługuje tylko pojedynczy element potomny, następnie może tylko jeden element jest zadeklarowany jako *VisualTreeNodeContents*.</span><span class="sxs-lookup"><span data-stu-id="70cd4-161">If the element chosen as *VisualTreeRootNode* only supports a single child, then there can only be one element declared as *VisualTreeNodeContents*.</span></span> <span data-ttu-id="70cd4-162">Istnieje również możliwość (jeśli jest to rzadko) zapewnienie zawartości tekstowej, jeśli wybrana *VisualTreeRootNode* obsługuje właściwości zawartości tekstu.</span><span class="sxs-lookup"><span data-stu-id="70cd4-162">It is also possible (though uncommon) to provide text content if the chosen *VisualTreeRootNode* supports a text content property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>