<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbc7db2e99d5b9a8a10543b7c7f9813e8671c021" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48589274" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <TypeSignature Language="F#" Value="type PropertyPath = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementuje strukturą danych do opisywania właściwości jako ścieżka poniżej innej właściwości lub poniżej typu, będącego właścicielem. Ścieżki właściwości są używane w powiązaniu danych do obiektów, a w scenorysami oraz osiami czasu animacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa zawiera ciąg <xref:System.Windows.PropertyPath.Path%2A>i listę właściwości zależności, które są <xref:System.Windows.PropertyPath.PathParameters%2A> do ciągu <xref:System.Windows.PropertyPath.Path%2A>.  
  
 <xref:System.Windows.PropertyPath> obsługuje dwa tryby działania:  
  
 **Tryb źródła** opisuje ścieżkę do właściwości, która jest używana jako źródło dla innej operacji. Ten tryb jest używany przez <xref:System.Windows.Data.Binding> klasy obsługuje powiązanie danych.  
  
 **Tryb docelowy** opisuje ścieżkę do właściwości, która zostanie ustawione jako właściwość docelowa. Ten tryb jest używany przez animację w odniesieniu do scenorysu i oś czasu metod ustawiających.  
  
 Na przykład `Background.Opacity` jest ścieżką dwuetapowej. Oznacza to ścieżki: po pierwsze Znajdź `Background` właściwości obiektu, Pobierz obiekt wartość `Background` właściwość jest ustawiona na, a następnie pobrać wartość `Opacity` właściwości dla tego obiektu.  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *propertyPath*  
 Ciąg, który jest wynikiem obliczania ścieżki właściwości prostych lub złożonych. Składnia służąca do ustawienia <xref:System.Windows.PropertyPath> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] jest uniwersalny, ale złożone i jest opisany w osobnym temacie [PropertyPath, składnia XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/056aee79-7cdd-434f-8174-dfc856cad343">x:Static — Rozszerzenie znaczników</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.PropertyPath" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : obj -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath parameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">Ścieżka właściwości, albo opisujący ścieżkę do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] właściwości lub właściwości pojedynczej zależności.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.PropertyPath" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor ma dwa sposoby użycia zupełnie inaczej, w zależności od tego, czy jest on używany dla ścieżki właściwości trybu źródłowego powiązania lub ścieżkę właściwości pojedynczy krok tryb obiektu docelowego dla docelowego scenorysu.  
  
 Jeśli za pomocą tego <xref:System.Windows.PropertyPath> w trybie źródło powiązania, `parameter` jest ciąg reprezentujący nazwę właściwości lub może być ciąg, który opisuje ścieżkę "krokowym" do właściwości w [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] modelu obiektów, obiektu, który jest używany jako źródło dla powiązania. W przypadku ścieżką właściwości powiązania znak, który identyfikuje "krok" jest pojedynczego znaku kropki (.). Indeksator odwołania (w tym wiele indeksatorów i różnice między typu) są również obsługiwane. Aby uzyskać szczegółowe informacje na temat składni ciąg szczegółowo używany przez <xref:System.Windows.Data.Binding> obiektu, zobacz <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>. Właściwość używana jako źródło powiązania nie musi być właściwość zależności. Jeśli wiązanie aktualizuje dwukierunkowe, odwołanie do właściwości musi być odczytu i zapisu. Należy również zauważyć, że wiązanie docelowe musi być właściwość zależności. Aby uzyskać więcej informacji, zobacz [Przegląd wiązanie danych](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Jeśli za pomocą tego <xref:System.Windows.PropertyPath> w trybie docelowego dla ścieżki pojedynczy krok dla docelowego scenorysu, `parameter` jest zazwyczaj podawana jako typ <xref:System.Windows.DependencyProperty>. Można również określić ciąg, który jest <xref:System.Windows.DependencyProperty.Name%2A>. Każda z tych obliczyć na ten sam wynik, ponieważ są przechowywane wewnętrznie jako ciąg. Podana <xref:System.Windows.DependencyProperty> jest konwertowana na ciąg za pośrednictwem <xref:System.Windows.Markup.DependencyPropertyConverter>. <xref:System.Windows.Markup.DependencyPropertyConverter> Obsługuje kwalifikowaną format nazwy właściwości zależności, aby można było wprowadzić *typeName*.* propertyName* kwalifikowana ciągu nazwy właściwości zależności do <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> konstruktora w kodzie. Kwalifikowana ścieżka do identyfikatora właściwości zależności jest koncepcja innego niż skomplikowanej ścieżki. Ścieżką złożone <xref:System.Windows.PropertyPath> zamiast tego powinny zostać utworzone za pomocą <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> konstruktora.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : string * obj[] -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath (path, pathParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">Ciąg, który określa <see cref="P:System.Windows.PropertyPath.Path" />, w formacie tokenami.</param>
        <param name="pathParameters">Tablica obiektów, która ustawia <see cref="P:System.Windows.PropertyPath.PathParameters" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.PropertyPath" /> klasy za pomocą pathing podany ciąg tokenu i parametrów.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta sygnatura jest zwykle używany wyłącznie w docelowym trybie <xref:System.Windows.PropertyPath> użycia ze ścieżkami złożone.  
  
 Ten konstruktor obsługuje `params` dla `pathParameters` argumentu konstruktora. W związku z tym można określić zawartość `pathParameters` jako serię argumentów konstruktora rozdzielonych przecinkami, służące do wypełniania tablicy, zamiast konieczności wymiaru tablicy, a następnie wypełnij ją za pomocą `pathParameters` elementów. Każdy element, należy określić musi mieć jedną z następujących typów: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.  
  
 Aby uzyskać więcej informacji na temat wymagań parametrów, zobacz <xref:System.Windows.PropertyPath.Path%2A> i <xref:System.Windows.PropertyPath.PathParameters%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Windows.PropertyPath.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg opisujący ścieżkę.</summary>
        <value>Ciąg opisujący ścieżkę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg znajdujący się w tej właściwości ma trzy całkowicie różne znaczenie w zależności od tego, czy <xref:System.Windows.PropertyPath> używany jest tryb źródła ścieżkę właściwości powiązania, dla ścieżki właściwości pojedynczy krok tryb obiektu docelowego dla docelowego scenorysu lub złożony Ścieżka dla docelowego scenorysu.  
  
 Jeśli za pomocą tego <xref:System.Windows.PropertyPath> w trybie źródło powiązania, <xref:System.Windows.PropertyPath.Path%2A> jest ciąg reprezentujący nazwę właściwości lub może być ciąg, który opisuje ścieżkę "krokowym" do właściwości w [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] modelu obiektów, obiektu, który jest używany jako źródło dla powiązania. W przypadku ścieżką właściwości powiązania znak, który identyfikuje "krok" jest pojedynczego znaku kropki (.). Indeksator odwołania (w tym wiele indeksatorów i różnice między typu) są również obsługiwane. Aby uzyskać szczegółowe informacje na temat składni ciąg szczegółowo używany przez <xref:System.Windows.Data.Binding> obiektu, zobacz <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>. Właściwość używana jako źródło powiązania nie musi być właściwość zależności. Jeśli powiązanie aktualizacji dwukierunkowe źródła właściwości musi być odczytu i zapisu. Należy również zauważyć, że wiązanie docelowe musi być właściwość zależności. Aby uzyskać więcej informacji, zobacz [Przegląd wiązanie danych](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Jeśli za pomocą tego <xref:System.Windows.PropertyPath> w trybie docelowego dla ścieżki pojedynczy krok dla docelowego scenorysu, <xref:System.Windows.PropertyPath> jest ciągiem, który jest *typeName*.* propertyName* kwalifikowana ciągu nazwy właściwości zależności.  
  
 Jeśli za pomocą tego <xref:System.Windows.PropertyPath> złożone ścieżki dla elementu docelowego scenorysu <xref:System.Windows.PropertyPath.Path%2A> jest format tokenami ciąg, który opisuje relacje różnych obiektów, które są podane w <xref:System.Windows.PropertyPath.PathParameters%2A>.  
  
-   Każdy element w tablicy jest określony w tym formacie za pomocą indeksu tablicy dla elementu w nawiasach. Na przykład, aby określić pierwszy element w tablicy, token ciągu jest `(0)`.  
  
-   Relacje między elementami ("kroki" w ścieżce) są określane przez pojedynczego znaku kropki (.). Właściwość do przodu kropki (.) jest pierwszym krokiem w ścieżce właściwość po jest drugi etap i tak dalej, (można określić kroki opisane powyżej dwóch). Ostatnim krokiem w łańcuchu zawsze reprezentuje właściwość, jest animowany.  
  
-   Elementy w kolekcji właściwości są dostępne przy użyciu składni indeksatora, za pomocą indeksu w nawiasy kwadratowe ([i]). Indeksator to dodatek do tokenu reprezentujące właściwość. Na przykład Oto ścieżką dwuetapowej dzięki połączeniu tokenu w pierwszym kroku określenia drugiego elementu z kolekcji właściwości: `(0)[1].(1)` . Nie można użyć indeksatora ostatnie właściwości w łańcuchu; Nie można animować położenie rzeczywista kolekcja, należy animować właściwości dla tego obiektu.  
  
 Ciąg ścieżki dla <xref:System.Windows.PropertyPath> zazwyczaj zostanie nawiązane za pomocą konstruktorów: <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> podpis dla powiązań lub celów scenorysu pojedynczy krok <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> podpisu dla celów wieloetapowego scenorysu.  
  
 **XAML:** zastosowania <xref:System.Windows.PropertyPath> do opisania odwołaniem do właściwości w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], zgodnie z wartością atrybutu ciąg, który określisz najpierw jest obsługiwany przez konwertera typów (<xref:System.Windows.PropertyPathConverter>). Ten konwerter typu, a następnie przetwarza ciąg i na podstawie jego składni będzie wywołać jedną z <xref:System.Windows.PropertyPath> sygnatury konstruktora. Tego operatora pośredniego za pomocą konwertera typów obsługi wartość atrybutu jest ogólnie, jak używać <xref:System.Windows.PropertyPath> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], zamiast deklarowania <xref:System.Windows.PropertyPath> obiekt elementu, a następnie zastosowanie określone wartości do atrybutów, takich jak <xref:System.Windows.PropertyPath.Path%2A> i <xref:System.Windows.PropertyPath.PathParameters%2A>. Aby uzyskać więcej informacji, zobacz [PropertyPath, składnia XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Elementy członkowskie <xref:System.Windows.PropertyPath> typu nie są zwykle skonfigurowane w bezpośrednią [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] składni. Zobacz uwagi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathParameters : System.Collections.ObjectModel.Collection&lt;obj&gt;" Usage="System.Windows.PropertyPath.PathParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę parametrów do użycia podczas ścieżka odnosi się do parametrów indeksowane.</summary>
        <value>Lista parametrów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Windows.PropertyPath> zazwyczaj są określane za pomocą konstruktorów. Dla ustawienia <xref:System.Windows.PropertyPath.PathParameters%2A>, <xref:System.Windows.PropertyPath.%23ctor%2A> Konstruktor jest szczególnie przydatna ponieważ `pathParameters` wyznaczony jako argument konstruktora `params`, co oznacza, nie trzeba utworzyć lub wymiaru tablicy do konstruowania. Wystarczy określić każdy element członkowski tablicy jako dodatkowy parametr.  
  
 Jeśli ostateczny właściwość, która jest elementem docelowym jest <xref:System.Windows.Freezable> typu i wartości zostaną sklonowane. Aby uzyskać więcej informacji, zobacz [Przegląd Scenorysy](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 Rzeczywiste oceny łańcucha właściwość odbywa się przez mechanizmy animacji scenorysu. W <xref:System.Windows.PropertyPath> poziomu, nie nastąpi sprawdzanie poprawności jest wykonywane się upewnić, że na wszystkich połączyć kroki ścieżki. Na przykład można utworzyć ścieżkę właściwości, która ma <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> w pierwszym kroku i <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> jako drugi etap. Ale ścieżkę właściwości będą się kończyć niepowodzeniem jeśli rzeczywiście stosowane jako obiekt docelowy, ponieważ typ elementu Brush wypełnienia tego <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> nie ma <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> właściwości. Nieprawidłowa właściwość ścieżki dyskretnie zakończyć się niepowodzeniem. Aby uzyskać więcej informacji, zobacz [Przegląd Scenorysy](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 **XAML:** zastosowania <xref:System.Windows.PropertyPath> do opisania odwołaniem do właściwości w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], zgodnie z wartością atrybutu ciąg, który określisz najpierw jest obsługiwany przez konwertera typów (<xref:System.Windows.PropertyPathConverter>). Ten konwerter typu, a następnie przetwarza ciąg i na podstawie jego składni będzie wywołać jedną z <xref:System.Windows.PropertyPath> sygnatury konstruktora. Tego operatora pośredniego za pomocą konwertera typów obsługi wartość atrybutu jest ogólnie, jak używać <xref:System.Windows.PropertyPath> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], zamiast deklarowania <xref:System.Windows.PropertyPath> obiekt elementu, a następnie zastosowanie określone wartości do atrybutów, takich jak <xref:System.Windows.PropertyPath.Path%2A> i <xref:System.Windows.PropertyPath.PathParameters%2A>. Aby uzyskać więcej informacji, zobacz [PropertyPath, składnia XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Elementy członkowskie <xref:System.Windows.PropertyPath> typu nie są zwykle skonfigurowane w bezpośrednią [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] składni. Zobacz uwagi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>