<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d5d584f27f34c4e995e0aa1864997e6f5ed19cec" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36457875" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <TypeSignature Language="F#" Value="type PropertyPath = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementuje struktura danych opisu właściwości jako ścieżka poniżej innej właściwości lub poniżej typem właściciela. Ścieżki właściwości są używane w powiązaniu danych do obiektów oraz scenorys i osiach czasu dla animacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa zawiera ciąg <xref:System.Windows.PropertyPath.Path%2A>i listy właściwości zależności, które są <xref:System.Windows.PropertyPath.PathParameters%2A> w ciągu <xref:System.Windows.PropertyPath.Path%2A>.  
  
 <xref:System.Windows.PropertyPath> obsługuje dwa tryby działania:  
  
 **Tryb źródła** opisuje ścieżkę do właściwości, która jest używana jako źródło dla innej operacji. Ten tryb jest używany przez <xref:System.Windows.Data.Binding> klasy do obsługi wiązania z danymi.  
  
 **Tryb docelowy** opisuje ścieżkę do właściwości, która zostanie ustawione jako właściwość target. Ten tryb jest używany przez animacji wesprzeć ustawiające oś czasu i scenorysu.  
  
 Na przykład `Background.Opacity` jest ścieżką dwuetapową. Tej ścieżki oznacza: najpierw należy znaleźć `Background` właściwość obiektu, Pobierz obiekt wartość `Background` właściwość ma wartość, a następnie pobrać wartości `Opacity` właściwości tego obiektu.  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *propertyPath*  
 Ciąg, który zostanie zidentyfikowane jako ścieżki właściwości prostymi lub złożonymi. Składnia ustawienie <xref:System.Windows.PropertyPath> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] jest uniwersalny, ale złożone i jest opisany w innym temacie [składnia PropertyPath XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.PropertyPath" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : obj -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath parameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">Ścieżka właściwości, albo opisujący ścieżkę do [! Właściwość include[TLA#tla_clr](~/includes/tlasharptla-CLR-MD.MD)] lub właściwości jednej zależności.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.PropertyPath" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor ma dwa użycia zupełnie inaczej w zależności od tego, czy jest on używany dla ścieżki właściwości tryb źródła dla powiązania lub ścieżki właściwości pojedynczy krok tryb obiektu docelowego dla docelowego scenorysu.  
  
 Jeśli za pomocą tej <xref:System.Windows.PropertyPath> w trybie źródła dla powiązania, `parameter` jest ciąg reprezentujący nazwę właściwości lub może być ciąg opisujący ścieżkę "krokowym" do właściwości w [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] modelu obiektu obiektu, który jest używany jako źródło dla powiązania. Ścieżki właściwości powiązania znaku, który identyfikuje "krok" jest kropkę (.). Odwołania indeksatora (w tym wiele indeksatorów i typ zróżnicowanie) również są obsługiwane. Aby uzyskać więcej informacji o składni, parametrów szczegółowo używanych przez <xref:System.Windows.Data.Binding> obiektów, zobacz <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>. Właściwość używana jako źródło powiązania nie musi być właściwością zależności. Jeśli powiązanie aktualizuje dwukierunkowe, odwołuje się do właściwości musi być do odczytu / zapisu. Należy również zauważyć, że cel wiązania musi być właściwością zależności. Aby uzyskać więcej informacji, zobacz [omówienie powiązania danych](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Jeśli za pomocą tej <xref:System.Windows.PropertyPath> w trybie docelowej ścieżce pojedynczy krok dla docelowego scenorysu, `parameter` jest zazwyczaj podawana jako typ <xref:System.Windows.DependencyProperty>. Można również określić ciąg, który jest <xref:System.Windows.DependencyProperty.Name%2A>. Każda z tych ocenić do tego samego rezultatu, ponieważ jest ona przechowywana wewnętrznie jako ciąg. Podana <xref:System.Windows.DependencyProperty> jest konwertowana na ciąg za pośrednictwem <xref:System.Windows.Markup.DependencyPropertyConverter>. <xref:System.Windows.Markup.DependencyPropertyConverter> Kwalifikowaną formatu nazewnictwa jest obsługiwana dla właściwości zależności, dzięki czemu można określić *typeName*.* propertyName* kwalifikowana ciąg nazwy właściwości zależności do <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> konstruktora w kodzie. Kwalifikowana ścieżka do identyfikatora właściwości zależności to pojęcie innego niż złożony ścieżki. Złożone ścieżki <xref:System.Windows.PropertyPath> zamiast tego należy utworzyć z <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> konstruktora.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : string * obj[] -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath (path, pathParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">Ciąg określający <see cref="P:System.Windows.PropertyPath.Path" />, w formacie tokenami.</param>
        <param name="pathParameters">Tablica obiektów, która ustawia <see cref="P:System.Windows.PropertyPath.PathParameters" />.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.PropertyPath" /> klasy pathing podany ciąg tokenu i parametry.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta sygnatura jest zwykle używany wyłącznie dla docelowej trybu <xref:System.Windows.PropertyPath> użycia ze ścieżkami złożony.  
  
 Ten konstruktor obsługuje `params` dla `pathParameters` argument konstruktora. W związku z tym można określić zawartości `pathParameters` jako serię argumenty konstruktora rozdzielaną przecinkami, które wypełnić tablicy, zamiast konieczności wymiaru tablicy, a następnie wypełnij go przy użyciu `pathParameters` elementów. Każdy element, należy określić musi mieć jedną z następujących typów: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.  
  
 Aby uzyskać więcej informacji na wymagania dotyczące parametrów, zobacz <xref:System.Windows.PropertyPath.Path%2A> i <xref:System.Windows.PropertyPath.PathParameters%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Windows.PropertyPath.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg opisujący ścieżkę.</summary>
        <value>Ciąg opisujący ścieżkę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg znajdujący się w tej właściwości ma trzy znaczenie zupełnie inaczej w zależności od tego, czy <xref:System.Windows.PropertyPath> jest używany przez powiązanie, ścieżki właściwości pojedynczy krok tryb obiektu docelowego dla docelowego scenorysu lub złożony ścieżki właściwości tryb źródła Ścieżka dla docelowego scenorysu.  
  
 Jeśli za pomocą tej <xref:System.Windows.PropertyPath> w trybie źródła dla powiązania, <xref:System.Windows.PropertyPath.Path%2A> jest ciąg reprezentujący nazwę właściwości lub może być ciąg opisujący ścieżkę "krokowym" do właściwości w [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] modelu obiektu obiektu, który jest używany jako źródło dla powiązania. Ścieżki właściwości powiązania znaku, który identyfikuje "krok" jest kropkę (.). Odwołania indeksatora (w tym wiele indeksatorów i typ zróżnicowanie) również są obsługiwane. Aby uzyskać więcej informacji o składni, parametrów szczegółowo używanych przez <xref:System.Windows.Data.Binding> obiektów, zobacz <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>. Właściwość używana jako źródło powiązania nie musi być właściwością zależności. Jeśli powiązanie aktualizuje dwukierunkowe, źródła właściwości musi być do odczytu / zapisu. Należy również zauważyć, że cel wiązania musi być właściwością zależności. Aby uzyskać więcej informacji, zobacz [omówienie powiązania danych](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Jeśli za pomocą tej <xref:System.Windows.PropertyPath> w trybie docelowej ścieżce pojedynczy krok dla docelowego scenorysu, <xref:System.Windows.PropertyPath> jest ciągiem, który jest *typeName*.* propertyName* kwalifikowana ciąg nazwy właściwości zależności.  
  
 Jeśli za pomocą tej <xref:System.Windows.PropertyPath> złożony ścieżki dla docelowego scenorysu, <xref:System.Windows.PropertyPath.Path%2A> jest opisujący relacje różnych obiektów, które są podane w formacie ciągu tokenami <xref:System.Windows.PropertyPath.PathParameters%2A>.  
  
-   Każdy element tablicy jest określony w tym formacie przez indeks tablicy dla elementu w nawiasach. Na przykład, aby określić pierwszego elementu w tablicy, token ciągu jest `(0)`.  
  
-   Relacje między elementami ("procedura" w ścieżce) są określane przez pojedynczego znaku kropki (.). Właściwość do przodu kropki (.) jest pierwszym krokiem w ścieżce właściwości po jest drugi etap itd (można określić kroki opisane powyżej dwóch). Ostatni krok w łańcuchu zawsze stanowi animowanej właściwości.  
  
-   Elementy w kolekcji właściwości są dostępne ze składnią indeksatora, z indeksem w nawiasy kwadratowe ([i]). Indeksator jest dodatek do tokenu reprezentujące właściwość. Na przykład następujące jest ścieżką dwuetapowej z kombinacją tokenu w pierwszym kroku określania z drugiego elementu w kolekcji właściwości: `(0)[1].(1)` . Nie można użyć indeksatora dla ostatniego właściwości w łańcuchu; Nie można animować pozycji rzeczywista kolekcja, należy animować właściwości tego obiektu.  
  
 Ciąg ścieżki dla <xref:System.Windows.PropertyPath> zazwyczaj zostanie nawiązane za pomocą konstruktorów: <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> podpis dla powiązania lub miejsc docelowych pojedynczy krok scenorysu, <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> podpisu dla celów wieloetapowych scenorysu.  
  
 **XAML:** korzystając <xref:System.Windows.PropertyPath> do opisywania odwołania do właściwości w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], ponieważ wartość atrybutu ciąg, który określisz najpierw jest obsługiwana przez konwerter typów (<xref:System.Windows.PropertyPathConverter>). Ten konwerter typów następnie przetwarza ciągu i na podstawie wywoła jeden z jego składni <xref:System.Windows.PropertyPath> sygnatury konstruktora. Tego operatora pośredniego za pomocą konwertera typu obsługi wartość atrybutu jest zazwyczaj jak używasz <xref:System.Windows.PropertyPath> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], zamiast deklarowanie <xref:System.Windows.PropertyPath> obiekt elementu, a następnie zostają określone wartości do atrybutów, takich jak <xref:System.Windows.PropertyPath.Path%2A> i <xref:System.Windows.PropertyPath.PathParameters%2A>. Aby uzyskać więcej informacji, zobacz [składnia PropertyPath XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Elementy członkowskie <xref:System.Windows.PropertyPath> typu nie są zwykle ustawić w bezpośrednią [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] składni. Zobacz uwagi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathParameters : System.Collections.ObjectModel.Collection&lt;obj&gt;" Usage="System.Windows.PropertyPath.PathParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę parametrów do użycia podczas ścieżka odwołuje się do parametrów indeksowane.</summary>
        <value>Lista parametrów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Windows.PropertyPath> zwykle są wyznaczane przez konstruktorów. Dla ustawienia <xref:System.Windows.PropertyPath.PathParameters%2A>, <xref:System.Windows.PropertyPath.%23ctor%2A> Konstruktor jest szczególnie przydatna ponieważ `pathParameters` wyznaczony jako argument konstruktora `params`, co oznacza, nie trzeba utworzyć lub wymiaru tablicy dla konstrukcji. Każdy element członkowski tablicy jest po prostu określić jako dodatkowy parametr.  
  
 Jeśli właściwość końcowego, która jest elementem docelowym jest <xref:System.Windows.Freezable> wpisz wartość zostaną sklonowane. Aby uzyskać więcej informacji, zobacz [omówienie Scenorys](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 Rzeczywiste oceny łańcucha właściwości jest wykonywane przez mechanizmy animacji scenorysu. W <xref:System.Windows.PropertyPath> poziomu, weryfikacja nie jest przeprowadzana się upewnić, że na wszystkich połączyć kroki ścieżki. Na przykład można utworzyć ścieżki właściwości, która ma <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> w pierwszym kroku i <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> jako drugi etap. Ścieżka właściwości nie powiedzie się Jeśli faktycznie stosowane jako cel, ponieważ wypełnienia tego typu pędzla, ale <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> nie ma <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> właściwości. Nieprawidłowa właściwość ścieżki dyskretnie zakończyć się niepowodzeniem. Aby uzyskać więcej informacji, zobacz [omówienie Scenorys](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 **XAML:** korzystając <xref:System.Windows.PropertyPath> do opisywania odwołania do właściwości w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], ponieważ wartość atrybutu ciąg, który określisz najpierw jest obsługiwana przez konwerter typów (<xref:System.Windows.PropertyPathConverter>). Ten konwerter typów następnie przetwarza ciągu i na podstawie wywoła jeden z jego składni <xref:System.Windows.PropertyPath> sygnatury konstruktora. Tego operatora pośredniego za pomocą konwertera typu obsługi wartość atrybutu jest zazwyczaj jak używasz <xref:System.Windows.PropertyPath> w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], zamiast deklarowanie <xref:System.Windows.PropertyPath> obiekt elementu, a następnie zostają określone wartości do atrybutów, takich jak <xref:System.Windows.PropertyPath.Path%2A> i <xref:System.Windows.PropertyPath.PathParameters%2A>. Aby uzyskać więcej informacji, zobacz [składnia PropertyPath XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Elementy członkowskie <xref:System.Windows.PropertyPath> typu nie są zwykle ustawić w bezpośrednią [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] składni. Zobacz uwagi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>