<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4329e496700e4e34a463e39da3ce24baafeb38d2" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444295" /></Metadata><TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <TypeSignature Language="F#" Value="type PropertyPath = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementuje strukturę danych do opisywania właściwości jako ścieżki pod inną właściwością lub poniżej typu będącego właścicielem. Ścieżki właściwości są używane w powiązaniu danych z obiektami, a w scenorysach i na osiach czasu dla animacji.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta klasa zawiera ciąg <xref:System.Windows.PropertyPath.Path%2A>i listę właściwości zależności, które <xref:System.Windows.PropertyPath.PathParameters%2A> są w ciągu <xref:System.Windows.PropertyPath.Path%2A>.  
  
 <xref:System.Windows.PropertyPath>obsługuje dwa tryby zachowania:  
  
 **Tryb źródłowy** opisuje ścieżkę do właściwości, która jest używana jako źródło dla innej operacji. Ten tryb jest używany przez <xref:System.Windows.Data.Binding> klasę do obsługi powiązań danych.  
  
 **Tryb docelowy** opisuje ścieżkę do właściwości, która zostanie ustawiona jako właściwość docelowa. Ten tryb jest używany przez animację w celu obsługi metod ustawiających scenorys i oś czasu.  
  
 Na przykład `Background.Opacity` jest ścieżką dwuetapową. Ta ścieżka sugeruje: najpierw Znajdź `Background` właściwość obiektu, Pobierz obiekt wartości, `Background` którego właściwość jest ustawiona na, a następnie `Opacity` Pobierz wartość właściwości dla tego obiektu.  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a>Użycie atrybutu języka XAML  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a>Wartości XAML  
 *propertyPath*  
 Ciąg, który ma być wartością prostą lub złożoną ścieżki właściwości. Składnia służąca do ustawiania <xref:System.Windows.PropertyPath> elementu [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] w jest uniwersalna, ale złożona i jest opisana w osobnym temacie [PropertyPath języka XAML składni](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/056aee79-7cdd-434f-8174-dfc856cad343">x:Static — Rozszerzenie znaczników</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.PropertyPath" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : obj -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath parameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">Ścieżka właściwości opisująca ścieżkę do [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] właściwości lub pojedynczej właściwości zależności.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.PropertyPath" /> klasy.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten konstruktor ma dwa całkowicie różne sposoby użytkowania, w zależności od tego, czy jest używany dla ścieżki właściwości trybu źródłowego dla powiązania, czy dla docelowej ścieżki dla trybu docelowego scenorysu.  
  
 Jeśli jest używany <xref:System.Windows.PropertyPath> w trybie źródłowym dla powiązania, `parameter` jest ciągiem reprezentującym nazwę właściwości lub może być ciągiem opisującym ścieżkę "krok po kroku" [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] do właściwości w modelu obiektów obiektu, który jest używany jako źródło dla powiązania. Dla ścieżki właściwości powiązania znak, który identyfikuje "krok", jest kropką (.). Obsługiwane są również odwołania indeksatora (w tym wiele indeksatorów i rozróżnianie typów). Aby uzyskać więcej informacji na temat składni ciągu, który jest używany przez <xref:System.Windows.Data.Binding> obiekt, zobacz. <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType> Właściwość używana jako źródło powiązania nie może być właściwością zależności. Jeśli powiązanie zostanie zaktualizowane dwukierunkowo, właściwość, do której odwołuje się odwołanie, musi być do odczytu i zapisu. Należy również pamiętać, że obiekt docelowy powiązania musi być właściwością zależności. Aby uzyskać szczegółowe informacje, zobacz temat [powiązanie danych — omówienie](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Jeśli jest używany <xref:System.Windows.PropertyPath> w trybie docelowym dla ścieżki jednoetapowej dla elementu docelowego scenorysu, `parameter` jest on ogólnie dostarczany jako <xref:System.Windows.DependencyProperty>typ. Możesz również określić ciąg, który jest <xref:System.Windows.DependencyProperty.Name%2A>. Każdy z tych wartości jest w tym samym wyniku, ponieważ jest przechowywany wewnętrznie jako ciąg. Dostarczony <xref:System.Windows.DependencyProperty> element jest konwertowany na ciąg za pomocą <xref:System.Windows.Markup.DependencyPropertyConverter>. Obsługuje kwalifikowany format nazewnictwa dla właściwości zależności, aby można było określić *Właściwość TypeName.* <xref:System.Windows.Markup.DependencyPropertyConverter> ** nazwa właściwości zależności kwalifikowanej do <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> konstruktora w kodzie. Kwalifikowana ścieżka do identyfikatora właściwości zależności jest inna koncepcji niż ścieżka złożona. Zamiast tego należy utworzyć <xref:System.Windows.PropertyPath> ścieżkę złożoną <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> przy użyciu konstruktora.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : string * obj[] -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath (path, pathParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">Ciąg określający <see cref="P:System.Windows.PropertyPath.Path" />, w formacie z tokenem.</param>
        <param name="pathParameters">Tablica obiektów, które ustawia <see cref="P:System.Windows.PropertyPath.PathParameters" />.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.PropertyPath" /> klasy przy użyciu podanego ciągu i parametrów tokenu ścieżki.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ten podpis jest zazwyczaj używany tylko w przypadku użycia w <xref:System.Windows.PropertyPath> trybie docelowym ze ścieżkami złożonymi.  
  
 Ten konstruktor obsługuje `params` `pathParameters` argument konstruktora. W związku z tym można określić zawartość `pathParameters` jako serię argumentów konstruktora rozdzielanego przecinkami, które wypełniają tablicę, a nie zbędną do wymiarowania tablicy, a następnie wypełniają ją `pathParameters` elementami. Każdy określony element musi być jednym z następujących typów: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.  
  
 Aby uzyskać więcej informacji na temat wymagań parametrów, zobacz <xref:System.Windows.PropertyPath.Path%2A> i. <xref:System.Windows.PropertyPath.PathParameters%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Windows.PropertyPath.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg opisujący ścieżkę.</summary>
        <value>Ciąg opisujący ścieżkę.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ciąg zawarty w tej właściwości ma trzy całkowicie różne znaczenie w zależności od tego, <xref:System.Windows.PropertyPath> czy jest używany dla ścieżki właściwości trybu źródłowego dla powiązania, dla ścieżki właściwości jednoetapowej dla elementu docelowego scenorysu lub dla złożonej ścieżka dla elementu docelowego scenorysu.  
  
 Jeśli jest używany <xref:System.Windows.PropertyPath> w trybie źródłowym dla powiązania, <xref:System.Windows.PropertyPath.Path%2A> jest ciągiem reprezentującym nazwę właściwości lub może być ciągiem opisującym ścieżkę "krok po kroku" [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] do właściwości w modelu obiektów obiektu, który jest używany jako źródło dla powiązania. Dla ścieżki właściwości powiązania znak, który identyfikuje "krok", jest kropką (.). Obsługiwane są również odwołania indeksatora (w tym wiele indeksatorów i rozróżnianie typów). Aby uzyskać więcej informacji na temat składni ciągu, który jest używany przez <xref:System.Windows.Data.Binding> obiekt, zobacz. <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType> Właściwość używana jako źródło powiązania nie może być właściwością zależności. Jeśli powiązanie zostanie zaktualizowane dwukierunkowo, źródło właściwości musi mieć wartość odczyt i zapis. Należy również pamiętać, że obiekt docelowy powiązania musi być właściwością zależności. Aby uzyskać szczegółowe informacje, zobacz temat [powiązanie danych — omówienie](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Jeśli jest używany <xref:System.Windows.PropertyPath> w trybie docelowym dla ścieżki jednoetapowej dla elementu docelowego scenorysu, <xref:System.Windows.PropertyPath> jest to ciąg, który jest *atrybutem TypeName*.** ciąg nazwy właściwości zależności kwalifikowanej do PropertyName.  
  
 W przypadku użycia <xref:System.Windows.PropertyPath> tej ścieżki złożonej dla <xref:System.Windows.PropertyPath.Path%2A> elementu docelowego scenorysu jest format ciągu z tokenem, który opisuje relacje <xref:System.Windows.PropertyPath.PathParameters%2A>różnych obiektów podaną w.  
  
-   Każdy element w tablicy jest określony w tym formacie przez indeks tablicy dla elementu ujętego w nawiasy. Na przykład, aby określić pierwszy element w tablicy, token ciągu jest `(0)`.  
  
-   Relacje między elementami ("kroki" w ścieżce) są określane przez kropkę (.). Właściwość do przodu kropki jest pierwszym krokiem w ścieżce, właściwość po jest drugim krokiem i tak dalej (można określić kroki więcej niż dwa). Ostatni krok w łańcuchu zawsze reprezentuje animowaną właściwość.  
  
-   Do elementów we właściwościach kolekcji uzyskuje się dostęp przy użyciu składni indeksatora, z indeksem w nawiasach kwadratowych ([i]). Indeksator jest dodatkiem do tokenu reprezentującego właściwość. Na przykład poniżej przedstawiono ścieżkę dwuetapową z kombinacją tokenu w pierwszym kroku określającą drugi element z kolekcji tej właściwości: `(0)[1].(1)` . Nie można użyć indeksatora dla ostatniej właściwości w łańcuchu; nie można animować rzeczywistej pozycji kolekcji, należy animować właściwość dla tego obiektu.  
  
 Ciąg ścieżki dla elementu <xref:System.Windows.PropertyPath> jest zwykle określany za pomocą konstruktorów <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> : podpis dla powiązań lub obiektów docelowych scenorysu <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> jednoetapowego, sygnatura dla wieloetapowych obiektów scenorysów.  
  
 **FORMATU** W przypadku użycia <xref:System.Windows.PropertyPath> do opisywania odwołania do właściwości w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], jako wartość atrybutu, określony ciąg jest najpierw obsługiwany przez konwerter typów (<xref:System.Windows.PropertyPathConverter>). Ten konwerter typu następnie przetwarza ciąg i na podstawie jego składni wywoła jeden z <xref:System.Windows.PropertyPath> podpisów konstruktora. Ten operator pośredni za pośrednictwem konwertera typów <xref:System.Windows.PropertyPath> obsługującego wartość atrybutu jest zwykle używany w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] <xref:System.Windows.PropertyPath> , a nie do deklarowania elementu obiektu, a następnie stosowania określonych wartości do atrybutów takich <xref:System.Windows.PropertyPath.Path%2A> jak i <xref:System.Windows.PropertyPath.PathParameters%2A>. Aby uzyskać więcej informacji, zobacz [PropertyPath języka XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Elementy członkowskie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] typu nie są zwykle ustawiane w składni bezpośredniej. <xref:System.Windows.PropertyPath> Zobacz uwagi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathParameters : System.Collections.ObjectModel.Collection&lt;obj&gt;" Usage="System.Windows.PropertyPath.PathParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera listę parametrów, które mają być używane, gdy ścieżka odwołuje się do indeksowanych parametrów.</summary>
        <value>Lista parametrów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości dla a <xref:System.Windows.PropertyPath> są zwykle określane przez konstruktory. Dla ustawienia <xref:System.Windows.PropertyPath.PathParameters%2A> <xref:System.Windows.PropertyPath.%23ctor%2A> Konstruktor jestszczególnie`params`wygodny, ponieważ argument konstruktorajestwyznaczonojako,cooznacza,żeniemapotrzebytworzenialubwymiarowaniatablicydlakonstrukcji.`pathParameters` Wystarczy określić każdy element członkowski tablicy jako dodatkowy parametr.  
  
 Jeśli Ostatnia Właściwość będąca celem jest <xref:System.Windows.Freezable> typem, ta wartość zostanie sklonowana. Aby uzyskać szczegółowe informacje, zobacz [Omówienie scenorysów](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 Rzeczywista Ocena łańcucha właściwości jest wykonywana przez mechanizmy animacji scenorysu. <xref:System.Windows.PropertyPath> Na poziomie nie jest przeprowadzana Walidacja w celu upewnienia się, że kroki ścieżki łączą się. Na przykład można skonstruować ścieżkę właściwości, która ma <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> pierwszy krok, i <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> jako drugi krok. Jednak taka ścieżka właściwości może zakończyć się niepowodzeniem, jeśli jest faktycznie stosowana jako obiekt docelowy, ponieważ typ <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> pędzla, który <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> wypełniania nie ma właściwości. Nieprawidłowe ścieżki właściwości są w trybie dyskretnym. Aby uzyskać więcej informacji, zobacz [Omówienie scenorysów](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 **FORMATU** W przypadku użycia <xref:System.Windows.PropertyPath> do opisywania odwołania do właściwości w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], jako wartość atrybutu, określony ciąg jest najpierw obsługiwany przez konwerter typów (<xref:System.Windows.PropertyPathConverter>). Ten konwerter typu następnie przetwarza ciąg i na podstawie jego składni wywoła jeden z <xref:System.Windows.PropertyPath> podpisów konstruktora. Ten operator pośredni za pośrednictwem konwertera typów <xref:System.Windows.PropertyPath> obsługującego wartość atrybutu jest zwykle używany w [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] <xref:System.Windows.PropertyPath> , a nie do deklarowania elementu obiektu, a następnie stosowania określonych wartości do atrybutów takich <xref:System.Windows.PropertyPath.Path%2A> jak i <xref:System.Windows.PropertyPath.PathParameters%2A>. Aby uzyskać więcej informacji, zobacz [PropertyPath języka XAML](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Elementy członkowskie [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] typu nie są zwykle ustawiane w składni bezpośredniej. <xref:System.Windows.PropertyPath> Zobacz uwagi.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
