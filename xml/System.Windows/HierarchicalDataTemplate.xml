<Type Name="HierarchicalDataTemplate" FullName="System.Windows.HierarchicalDataTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="abbc954f1cd0c1c9bac20aaf2321cfd336e5b4b3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37549439" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HierarchicalDataTemplate : System.Windows.DataTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HierarchicalDataTemplate extends System.Windows.DataTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.HierarchicalDataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class HierarchicalDataTemplate&#xA;Inherits DataTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataTemplate : System::Windows::DataTemplate" />
  <TypeSignature Language="F#" Value="type HierarchicalDataTemplate = class&#xA;    inherit DataTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DataTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje <see cref="T:System.Windows.DataTemplate" /> , która obsługuje <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, takich jak <see cref="T:System.Windows.Controls.TreeViewItem" /> lub <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie `ListLeagueList` znajduje się lista `League` obiektów. Każdy `League` obiekt ma `Name` i kolekcji `Division` obiektów. Każdy `Division` ma `Name` i kolekcji `Team` obiektów i każdy `Team` obiekt ma `Name`.  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 W przykładzie pokazano, że przy użyciu <xref:System.Windows.HierarchicalDataTemplate>, można łatwo wyświetlić dane z listy, który zawiera inne listy. Poniżej przedstawiono zrzut ekranu przykładu.  
  
 ![Zrzut ekranu przedstawiający przykładowy obiekt HierarchicalDataTemplate przykład](~/add/media/databinding-hierarchicaldatatemplate.png "zrzut ekranu przedstawiający przykładowy obiekt HierarchicalDataTemplate przykład")  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.HierarchicalDataTemplate" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.HierarchicalDataTemplate" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate(System::Object ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Windows.HierarchicalDataTemplate : obj -&gt; System.Windows.HierarchicalDataTemplate" Usage="new System.Windows.HierarchicalDataTemplate dataType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType">Typ, do którego jest przeznaczony ten szablon.</param>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.HierarchicalDataTemplate" /> klasy z określonym typem, dla których przeznaczony jest szablon.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `dataType` Parametr ma wartość [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] obiektu lub ciąg reprezentujący [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] elementu. Aby uzyskać więcej informacji, zobacz [Przegląd wiązanie źródeł](~/docs/framework/wpf/data/binding-sources-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AlternationCount : int with get, set" Usage="System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę kontenerów dla elementów podrzędnych naprzemiennych elementów.</summary>
        <value>Liczba kontenerów do kolejnego poziomu elementów naprzemiennych elementów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> i <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> właściwości umożliwiają określenie wyglądu dla co najmniej dwóch tym kontenerom elementu. Na przykład można określić różne kolory tła dla każdego trzeciego elementu w <xref:System.Windows.Controls.ItemsControl>.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> Jest przypisany do każdego elementu kontenera <xref:System.Windows.Controls.ItemsControl>.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> rozpoczyna się od 0, zwiększa się, dopóki nie zostanie <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> minus 1, a następnie ponownego uruchomienia w lokalizacji 0. Na przykład jeśli <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 3 wiąże się z siedem elementów w <xref:System.Windows.Controls.ItemsControl>, w poniższej tabeli wymieniono <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> dla każdego elementu.  
  
|Położenie elementu <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 Po ustawieniu <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> właściwości, wskazujesz, że elementy podrzędne powinien otrzymywać <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> w tym zakresie, nie element, który ma to <xref:System.Windows.HierarchicalDataTemplate> stosowane do niego. Na przykład jeśli <xref:System.Windows.Controls.HeaderedItemsControl> o nazwie `aHeaderedItemsControl` używa <xref:System.Windows.HierarchicalDataTemplate> z <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> Ustaw kontenerów elementów podrzędnych elementów `aHeaderedItemsControl` będzie miał <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>, nie element kontenera `aHeaderedItemsControl`.  
  
 Istnieje kilka metod, których można użyć, aby określić inny wygląd na tym kontenerom elementu. Jedną z metod jest można powiązać właściwości kontener elementów <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>. Następnie można użyć <xref:System.Windows.Controls.AlternationConverter> określić wartość, która ma zostać zastosowany do kontenera elementu, który ma określony <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> wartość. Umożliwia także wyzwalaczy na zmianę wartości właściwości kontenera elementu w zależności od wartości jego <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.TreeView> , jest powiązana z danymi, które jest trzech poziomów w głąb, a każdy element jest wyświetlany w <xref:System.Windows.Controls.TextBlock>.  <xref:System.Windows.Controls.TextBlock> Obiekty w pierwszy poziom mają takie same wartości właściwości <xref:System.Windows.Controls.TextBlock> obiekty na drugim poziomie używają wartości przemienne <xref:System.Windows.Controls.TextBlock.FontStyle%2A> właściwości i <xref:System.Windows.Controls.TextBlock> obiektów w trzeci poziom użycia przemienne wartości <xref:System.Windows.Controls.TextBlock.Background%2A> właściwości.  
  
 Ponieważ <xref:System.Windows.HierarchicalDataTemplate> dla pierwszego poziomu `Level1Data`, ma <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> właściwość ustawioną na wartość 2, <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> dla <xref:System.Windows.Controls.TreeViewItem> obiektów w drugim zastępców poziomu zakresu od 0 do 1. W <xref:System.Windows.HierarchicalDataTemplate> drugiego poziomu `Level2Data`, <xref:System.Windows.Controls.TextBlock.FontStyle%2A> z <xref:System.Windows.Controls.TextBlock> jest powiązany z <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> i <xref:System.Windows.Controls.AlternationConverter> znajduje się przekonwertować <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> do alternatywnych <xref:System.Windows.Controls.TextBlock.FontStyle%2A>.  Podobne relacja istnieje między `Level2Data` i `Level3Data`: <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> jest ustawiony na 3 na `Level2Data`i <xref:System.Windows.Controls.TextBlock> w `Level3Ddata` ma jego <xref:System.Windows.Controls.TextBlock.Background%2A> właściwość powiązana <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
 [!code-xaml[AlternationIndexSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup ItemBindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemBindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ ItemBindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemBindingGroup : System.Windows.Data.BindingGroup with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Data.BindingGroup" /> kopiowana do każdego elementu podrzędnego.</summary>
        <value>
          <see cref="T:System.Windows.Data.BindingGroup" /> Kopiowana do każdego elementu podrzędnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po ustawieniu <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> pobiera każdego kontenera elementu właściwości <xref:System.Windows.Data.BindingGroup> ma taką samą <xref:System.Windows.Controls.ValidationRule> obiektów jako <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>, ale właściwości, które opisują dane w powiązaniach, takich jak <xref:System.Windows.Data.BindingGroup.Items%2A> i <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>, są specyficzne dla danych dla każdego elementu w <xref:System.Windows.Controls.ItemsControl>.  Należy przejść do kontenera elementu <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> przeprowadzić operacje takie jak weryfikacja danych i sprawdzanie pod kątem błędów elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ItemContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ItemContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ItemContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyle : System.Windows.Style with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Style" /> mający zastosowanie do kontenera elementu dla każdego elementu podrzędnego.</summary>
        <value>
          <see cref="T:System.Windows.Style" /> Mający zastosowanie do kontenera elementu dla każdego elementu podrzędnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość jest używana lub <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> właściwości do ustawienia stylu wpłynie na wygląd elementów, które zawierają elementy danych. Na przykład w przypadku <xref:System.Windows.Controls.TreeView>, wygenerowany kontenery są <xref:System.Windows.Controls.TreeViewItem> kontroluje; dla <xref:System.Windows.Controls.Menu>, są one <xref:System.Windows.Controls.MenuItem> kontrolki.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.TreeView> używającej jednego stylu dla elementów w jej pierwszy poziom i innym stylu dla elementów w jego drugiego poziomu.  Style dla pierwszego poziomu jest ustawiana w <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> właściwość <xref:System.Windows.Controls.TreeView>.  Styl drugiego poziomu jest ustawiana w <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> właściwość <xref:System.Windows.HierarchicalDataTemplate>.  
  
 [!code-xaml[RecycleItemContainerShippets#VirtualizingTreeView](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#virtualizingtreeview)]  
  
 Poniższy przykład tworzy dane, które jest używane w poprzednim przykładzie.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ItemContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ItemContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyleSelector : System.Windows.Controls.StyleSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia logikę zaznaczenie style niestandardowe style, które mogą być stosowane do każdego elementu kontenera.</summary>
        <value>A <see cref="T:System.Windows.Controls.StyleSelector" /> który zdecyduje, którego styl do użycia jako <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Możesz użyć <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> właściwości do ustawienia stylu wpłynie na wygląd elementów, które zawierają elementy danych. Na przykład w przypadku <xref:System.Windows.Controls.TreeView>, wygenerowany kontenery są <xref:System.Windows.Controls.TreeViewItem> kontroluje; dla <xref:System.Windows.Controls.Menu>, są one <xref:System.Windows.Controls.MenuItem> kontrolki. Jeśli masz więcej niż jednego stylu zdefiniowane i, należy podać logiki, aby wybrać, który z nich do zastosowania, a następnie używasz <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> właściwości zamiast <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> właściwości. Należy pamiętać, że ta właściwość jest ignorowana, jeśli <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> właściwość jest ustawiona.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.TreeView> , który używa <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> z <xref:System.Windows.HierarchicalDataTemplate> dokonać wyboru między style dwóch elementów drugiego poziomu <xref:System.Windows.Controls.TreeView>.  
  
 [!code-xaml[RecycleItemContainerShippets#ItemContainerStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#itemcontainerstyleselector)]  
  
 W poniższym przykładzie przedstawiono <xref:System.Windows.Controls.StyleSelector> używany w poprzednim przykładzie.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewitemstyleselector)]
 [!code-vb[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewitemstyleselector)]  
  
 Poniższy przykład tworzy dane, które jest używane w poprzednim przykładzie.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase ItemsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ItemsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemsSource As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ ItemsSource { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemsSource : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia powiązanie dla tego szablonu danych, który wskazuje, gdzie można znaleźć kolekcji, która reprezentuje wyższy poziom w hierarchii danych.</summary>
        <value>Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 To jest stosowany do <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> właściwość wygenerowaną <xref:System.Windows.Controls.HeaderedItemsControl> (takie jak <xref:System.Windows.Controls.MenuItem> lub <xref:System.Windows.Controls.TreeViewItem>) aby wskazać, gdzie można znaleźć kolekcji, która reprezentuje wyższy poziom w hierarchii danych.  
  
<a name="xamlTextUsage_ItemsSource"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Aby uzyskać [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] informacji, zobacz <xref:System.Windows.Data.Binding> typu.  
  
   
  
## Examples  
 W poniższym przykładzie `ListLeagueList` znajduje się lista `League` obiektów. Każdy `League` obiekt ma `Name` i kolekcji `Division` obiektów. Każdy `Division` ma `Name` i kolekcji `Team` obiektów i każdy `Team` obiekt ma `Name`.  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 W przykładzie pokazano, że przy użyciu <xref:System.Windows.HierarchicalDataTemplate>, można łatwo wyświetlić dane z listy, który zawiera inne listy. Poniżej przedstawiono zrzut ekranu przykładu.  
  
 ![Zrzut ekranu przedstawiający przykładowy obiekt HierarchicalDataTemplate przykład](~/add/media/databinding-hierarchicaldatatemplate.png "zrzut ekranu przedstawiający przykładowy obiekt HierarchicalDataTemplate przykład")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormat">
      <MemberSignature Language="C#" Value="public string ItemStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemStringFormat : string with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia złożony ciąg, który określa sposób formatowania elementów na następnym poziomie w hierarchii danych, jeśli są one wyświetlane jako ciągi.</summary>
        <value>Złożony ciąg, który określa sposób formatowania elementów na następnym poziomie hierarchii danych, jeśli są one wyświetlane jako ciągi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ItemTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.DataTemplate" /> dotyczą <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> właściwość wygenerowaną <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (takie jak <see cref="T:System.Windows.Controls.MenuItem" /> lub <see cref="T:System.Windows.Controls.TreeViewItem" />), aby wskazać sposób wyświetlania elementów z następnego poziomu w hierarchii danych.</summary>
        <value>
          <see cref="T:System.Windows.DataTemplate" /> Dotyczą <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> właściwość wygenerowaną <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (takie jak <see cref="T:System.Windows.Controls.MenuItem" /> lub <see cref="T:System.Windows.Controls.TreeViewItem" />), aby wskazać sposób wyświetlania elementów z następnego poziomu w hierarchii danych.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ItemTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ItemTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Controls.DataTemplateSelector" /> dotyczą <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> właściwość wygenerowaną <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (takie jak <see cref="T:System.Windows.Controls.MenuItem" /> lub <see cref="T:System.Windows.Controls.TreeViewItem" />), aby wskazać, jak wybrać szablon do wyświetlania elementów z następnego poziomu w hierarchii danych.</summary>
        <value>
          <see cref="T:System.Windows.Controls.DataTemplateSelector" /> Obiektu do zastosowania do <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> właściwość wygenerowaną <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (takie jak <see cref="T:System.Windows.Controls.MenuItem" /> lub <see cref="T:System.Windows.Controls.TreeViewItem" />), aby wskazać, jak wybrać szablon do wyświetlania elementów z następnego poziomu w hierarchii danych.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>