<Type Name="HierarchicalDataTemplate" FullName="System.Windows.HierarchicalDataTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4aa24009821fd249f77588fd24432dfc8729c4a5" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69444573" /></Metadata><TypeSignature Language="C#" Value="public class HierarchicalDataTemplate : System.Windows.DataTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HierarchicalDataTemplate extends System.Windows.DataTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.HierarchicalDataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class HierarchicalDataTemplate&#xA;Inherits DataTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataTemplate : System::Windows::DataTemplate" />
  <TypeSignature Language="F#" Value="type HierarchicalDataTemplate = class&#xA;    inherit DataTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DataTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reprezentuje program obsługujący <see cref="T:System.Windows.Controls.HeaderedItemsControl" />, taki jak <see cref="T:System.Windows.Controls.TreeViewItem" /> lub <see cref="T:System.Windows.Controls.MenuItem" />. <see cref="T:System.Windows.DataTemplate" /></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 W poniższym przykładzie `ListLeagueList` jest `League` listą obiektów. Każdy `League` obiekt makolekcję`Division` obiektów i. `Name` Każdy `Division` z nich `Name` ma kolekcję `Team` obiektów i każdy `Team` obiekt ma `Name`.  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 W przykładzie pokazano, że przy użyciu programu <xref:System.Windows.HierarchicalDataTemplate>można łatwo wyświetlić dane listy zawierające inne listy. Poniżej znajduje się zrzut ekranu przedstawiający przykład.  
  
 ![Zrzut ekranu przedstawiający przykładowy HierarchicalDataTemplate] (~/add/media/databinding-hierarchicaldatatemplate.png "Zrzut ekranu przedstawiający przykładowy HierarchicalDataTemplate")  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.HierarchicalDataTemplate" /> klasy.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.HierarchicalDataTemplate" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate(System::Object ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Windows.HierarchicalDataTemplate : obj -&gt; System.Windows.HierarchicalDataTemplate" Usage="new System.Windows.HierarchicalDataTemplate dataType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType">Typ, dla którego jest przeznaczony ten szablon.</param>
        <summary>Inicjuje nowe wystąpienie <see cref="T:System.Windows.HierarchicalDataTemplate" /> klasy z określonym typem, dla którego jest przeznaczony szablon.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parametr jest [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] obiektem[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] lub ciągiem reprezentującym element. `dataType` Aby uzyskać więcej informacji, zobacz [Omówienie źródeł powiązań](~/docs/framework/wpf/data/binding-sources-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AlternationCount : int with get, set" Usage="System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia liczbę kontenerów przemiennych elementów dla elementów podrzędnych.</summary>
        <value>Liczba kontenerów przemiennych elementów dla następnego poziomu elementów.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Właściwości <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> i<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> umożliwiają określanie wyglądu dla co najmniej dwóch kontenerów elementów przemiennych. Na przykład można określić przemienne kolory tła dla każdego trzeciego elementu w <xref:System.Windows.Controls.ItemsControl>.  Jest przypisany do każdego kontenera elementów <xref:System.Windows.Controls.ItemsControl>w. <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>rozpoczyna się o 0, zwiększa się, dopóki <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> nie zostanie pomniejszona o 1, a następnie ponownie uruchomi się o 0. Na przykład jeśli <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> jest 3 i zawiera siedem elementów <xref:System.Windows.Controls.ItemsControl>w, w poniższej tabeli wymieniono <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> dla każdego elementu.  
  
|Pozycja elementu w<xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 Po ustawieniu <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> właściwości wskazuje, że elementy podrzędne powinny <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> otrzymać z tego zakresu, a nie do elementu, do którego ma to <xref:System.Windows.HierarchicalDataTemplate> zastosowanie. <xref:System.Windows.Controls.HeaderedItemsControl> Na przykład, jeśli wywołano `aHeaderedItemsControl` użycie <xref:System.Windows.HierarchicalDataTemplate> z <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> zestawem, kontenery elementu elementów `aHeaderedItemsControl` podrzędnych będą mieć obiekt <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>, a nie kontener elementu dla `aHeaderedItemsControl`.  
  
 Istnieje kilka metod, których można użyć do określenia różnych wygląd kontenerów elementów przemiennych. Jedną z metod jest powiązanie właściwości kontenera <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>elementów z. Następnie można użyć, <xref:System.Windows.Controls.AlternationConverter> aby określić, która wartość ma być stosowana do kontenera elementu, który ma określoną <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> wartość. Możesz również użyć wyzwalaczy, aby zmienić wartość właściwości kontenera elementu w zależności od wartości <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Poniższy przykład tworzy obiekt <xref:System.Windows.Controls.TreeView> , który jest powiązany z danymi o trzech poziomach głębokości, a każdy element jest wyświetlany <xref:System.Windows.Controls.TextBlock>w.  Obiekty na pierwszym poziomie mają takie same wartości właściwości <xref:System.Windows.Controls.TextBlock> , obiekty w drugim poziomie <xref:System.Windows.Controls.TextBlock.FontStyle%2A> używają zmiennych wartości dla właściwości, a <xref:System.Windows.Controls.TextBlock> obiekty na trzecim poziomie używają wartości zmiennych dla <xref:System.Windows.Controls.TextBlock> <xref:System.Windows.Controls.TextBlock.Background%2A> właściwość.  
  
 `Level1Data` Ponieważdlapierwszego<xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> poziomu ,<xref:System.Windows.Controls.TreeViewItem> właściwość ma ustawioną wartość 2, dla obiektów na drugim poziomie alternatywy od 0 do 1. <xref:System.Windows.HierarchicalDataTemplate> `Level2Data` <xref:System.Windows.Controls.TextBlock.FontStyle%2A> Wprzypadkudla<xref:System.Windows.Controls.TextBlock> drugiego poziomu, <xref:System.Windows.Controls.TextBlock.FontStyle%2A>obiekt jestpowiązany<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> z i jest udostępniany do konwersji nawartośćprzemienny.<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> <xref:System.Windows.Controls.AlternationConverter> <xref:System.Windows.HierarchicalDataTemplate>  Istnieje podobna relacja między `Level2Data` i `Level3Data`:  `Level2Data` `Level3Ddata` <xref:System.Windows.Controls.TextBlock> <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>Ma ustawioną wartość 3 w ,<xref:System.Windows.Controls.TextBlock.Background%2A> a w elemencie jest powiązana z właściwością. <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A>  
  
 [!code-xaml[AlternationIndexSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup ItemBindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemBindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ ItemBindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemBindingGroup : System.Windows.Data.BindingGroup with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Windows.Data.BindingGroup" /> , która jest kopiowana do każdego elementu podrzędnego.</summary>
        <value><see cref="T:System.Windows.Data.BindingGroup" /> Kopiowany do każdego elementu podrzędnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Po <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> ustawieniu właściwości każdy kontener <xref:System.Windows.Data.BindingGroup.Items%2A> <xref:System.Windows.Controls.ValidationRule> <xref:System.Windows.Data.BindingGroup> elementów ma te same obiekty jak <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>, ale właściwości, które opisują dane w powiązaniach, takich jak i <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>, są specyficzne dla danych dla każdego elementu w <xref:System.Windows.Controls.ItemsControl>.  <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> Aby wykonać operacje, takie jak sprawdzanie poprawności danych i sprawdzanie pod kątem błędów w elemencie, należy uzyskać dostęp do kontenera elementu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ItemContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ItemContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ItemContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyle : System.Windows.Style with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia wartość <see cref="T:System.Windows.Style" /> , która zostanie zastosowana do kontenera elementów dla każdego elementu podrzędnego.</summary>
        <value><see cref="T:System.Windows.Style" /> Który jest stosowany do kontenera elementów dla każdego elementu podrzędnego.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ta właściwość lub <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> właściwość służy do ustawiania stylu, który ma wpływ na wygląd elementów zawierających elementy danych. Na przykład dla <xref:System.Windows.Controls.TreeView>, wygenerowane kontenery to <xref:System.Windows.Controls.TreeViewItem> Controls; <xref:System.Windows.Controls.Menu>dla, są <xref:System.Windows.Controls.MenuItem> one kontrolkami.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.TreeView> , który używa jednego stylu dla elementów z pierwszego poziomu i innego stylu dla elementów na jego drugim poziomie.  Styl pierwszego poziomu jest ustawiany we <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> właściwości. <xref:System.Windows.Controls.TreeView>  Styl dla drugiego poziomu jest ustawiany we <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> właściwości. <xref:System.Windows.HierarchicalDataTemplate>  
  
 [!code-xaml[RecycleItemContainerShippets#VirtualizingTreeView](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#virtualizingtreeview)]  
  
 Poniższy przykład tworzy dane, które są używane w poprzednim przykładzie.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ItemContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ItemContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyleSelector : System.Windows.Controls.StyleSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia logikę wyboru stylu niestandardowego dla stylu, który można zastosować do każdego kontenera elementów.</summary>
        <value>A <see cref="T:System.Windows.Controls.StyleSelector" /> , który wybiera styl, który ma być używany <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />jako. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> Właściwość służy do ustawiania stylu, który ma wpływ na wygląd elementów zawierających elementy danych. Na przykład dla <xref:System.Windows.Controls.TreeView>, wygenerowane kontenery to <xref:System.Windows.Controls.TreeViewItem> Controls; <xref:System.Windows.Controls.Menu>dla, są <xref:System.Windows.Controls.MenuItem> one kontrolkami. Jeśli masz zdefiniowany więcej niż jeden styl i potrzebujesz logiki, aby wybrać jeden do zastosowania, użyj <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> właściwości zamiast <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> właściwości. Należy pamiętać, że ta właściwość jest ignorowana, jeśli <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> właściwość jest ustawiona.  
  
   
  
## Examples  
 Poniższy przykład tworzy <xref:System.Windows.Controls.TreeView> , który <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> używa <xref:System.Windows.HierarchicalDataTemplate> do wyboru między dwoma stylami <xref:System.Windows.Controls.TreeView>dla elementów na drugim poziomie.  
  
 [!code-xaml[RecycleItemContainerShippets#ItemContainerStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#itemcontainerstyleselector)]  
  
 Poniższy przykład pokazuje <xref:System.Windows.Controls.StyleSelector> , który jest używany w poprzednim przykładzie.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewitemstyleselector)]
 [!code-vb[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewitemstyleselector)]  
  
 Poniższy przykład tworzy dane, które są używane w poprzednim przykładzie.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase ItemsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ItemsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemsSource As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ ItemsSource { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemsSource : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia powiązanie dla tego szablonu danych, który wskazuje lokalizację, w której ma znajdować się kolekcja reprezentująca następny poziom w hierarchii danych.</summary>
        <value>Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jest <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> on stosowany do właściwości wygenerowanej <xref:System.Windows.Controls.HeaderedItemsControl> ( <xref:System.Windows.Controls.TreeViewItem>takiej jak <xref:System.Windows.Controls.MenuItem> lub), aby wskazać, gdzie znaleźć kolekcję reprezentującą następny poziom w hierarchii danych.  
  
<a name="xamlTextUsage_ItemsSource"></a>   
## <a name="xaml-text-usage"></a>Użycie tekstu w języku XAML  
 Aby [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] uzyskać więcej informacji, <xref:System.Windows.Data.Binding> Zobacz typ.  
  
   
  
## Examples  
 W poniższym przykładzie `ListLeagueList` jest `League` listą obiektów. Każdy `League` obiekt makolekcję`Division` obiektów i. `Name` Każdy `Division` z nich `Name` ma kolekcję `Team` obiektów i każdy `Team` obiekt ma `Name`.  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 W przykładzie pokazano, że przy użyciu programu <xref:System.Windows.HierarchicalDataTemplate>można łatwo wyświetlić dane listy zawierające inne listy. Poniżej znajduje się zrzut ekranu przedstawiający przykład.  
  
 ![Zrzut ekranu przedstawiający przykładowy HierarchicalDataTemplate] (~/add/media/databinding-hierarchicaldatatemplate.png "Zrzut ekranu przedstawiający przykładowy HierarchicalDataTemplate")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormat">
      <MemberSignature Language="C#" Value="public string ItemStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemStringFormat : string with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia ciąg złożony, który określa sposób formatowania elementów na następnym poziomie w hierarchii danych, jeśli są one wyświetlane jako ciągi.</summary>
        <value>Złożony ciąg, który określa sposób formatowania elementów na następnym poziomie hierarchii danych, jeśli są one wyświetlane jako ciągi.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ItemTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.DataTemplate" /> Pobiera lub ustawia, aby zastosować <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /> do właściwości <see cref="T:System.Windows.Controls.MenuItem" /> wygenerowanej (takiej jak lub <see cref="T:System.Windows.Controls.TreeViewItem" />), aby wskazać sposób wyświetlania elementów z następnego poziomu w hierarchii danych.</summary>
        <value><see cref="T:System.Windows.DataTemplate" /> Do zastosowania <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> do właściwości wygenerowanej (takiej jak <see cref="T:System.Windows.Controls.TreeViewItem" /> lub),abywskazaćsposóbwyświetlaniaelementówznastępnegopoziomuwhierarchiidanych.<see cref="T:System.Windows.Controls.MenuItem" /> <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ItemTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ItemTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Controls.DataTemplateSelector" /> Pobiera lub ustawia, aby zastosować <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> do właściwości <see cref="T:System.Windows.Controls.MenuItem" /> wygenerowanej (takiej jak lub <see cref="T:System.Windows.Controls.TreeViewItem" />), aby wskazać sposób wybierania szablonu w celu wyświetlenia elementów z następnego poziomu w hierarchii danych.</summary>
        <value><see cref="T:System.Windows.Controls.HeaderedItemsControl" /> <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" /> <see cref="T:System.Windows.Controls.TreeViewItem" /> <see cref="T:System.Windows.Controls.MenuItem" /> Obiekt, który ma zostać zastosowany do właściwości wygenerowanej (takiej jak lub), w celu wskazania, jak wybrać szablon w celu wyświetlenia elementów z następnego poziomu w hierarchii danych. <see cref="T:System.Windows.Controls.DataTemplateSelector" /></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
