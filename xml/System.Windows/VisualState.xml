<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="94d52fadbbe5ee0176549400999a58e3ae14fb10" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="pl-PL" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69432781" /></Metadata><TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualState = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Reprezentuje wygląd formantu, gdy jest w określonym stanie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualState> Określa wygląd formantu, gdy jest on w określonym stanie. Na przykład po <xref:System.Windows.Controls.Button> naciśnięciu klawisza jego obramowanie może być kolorem innym niż normalny.  <xref:System.Windows.VisualState> Klasa<xref:System.Windows.VisualState.Storyboard%2A> ma właściwość, która zmienia wygląd formantu. Gdy kontrolka przejdzie do stanu, który jest określony <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> przez właściwość <xref:System.Windows.VisualState.Storyboard%2A> , rozpocznie się. Gdy kontrolka opuszcza stan, <xref:System.Windows.VisualState.Storyboard%2A> zostaje zatrzymana.  
  
 <xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> Właściwość zawiera<xref:System.Windows.VisualState> obiekty. <xref:System.Windows.VisualStateGroup>obiekty są dodawane do <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> dołączonej właściwości, która jest zdefiniowana w. <xref:System.Windows.FrameworkElement> Można dodać <xref:System.Windows.VisualState> obiekty do dowolnego <xref:System.Windows.FrameworkElement>, ale <xref:System.Windows.Controls.ControlTemplate> zazwyczaj są one <xref:System.Windows.Controls.Control>używane w. Aby uzyskać informacje na temat sposobu tworzenia <xref:System.Windows.Controls.ControlTemplate> obiektów <xref:System.Windows.VisualState> i dla istniejących kontrolek, zobacz [Dostosowywanie wyglądu istniejącej kontrolki przez utworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). Aby zapoznać się z przykładem użycia <xref:System.Windows.VisualState> obiektów poza <xref:System.Windows.Controls.ControlTemplate> <xref:System.Windows.VisualStateManager> klasą, zobacz Klasa.  
  
   
  
## Examples  
 Poniższy <xref:System.Windows.VisualStateGroup> przykład tworzy obiekt <xref:System.Windows.Controls.ControlTemplate> w <xref:System.Windows.Controls.Button> obiekcie o nazwie `CommonStates` i dodaje <xref:System.Windows.VisualState> obiekty dla Stanów, `Normal`, `Pressed`i `MouseOver`. Definiuje również stan o `Disabled` nazwie <xref:System.Windows.VisualStateGroup>, który znajduje się w `CommonStates`, ale przykład pomija go dla zwięzłości. <xref:System.Windows.Controls.Button> Dla całego przykładu, zobacz [Dostosowywanie wyglądu istniejącej kontrolki przez utworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicjuje nowe wystąpienie klasy <see cref="T:System.Windows.VisualState" /> klasy.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualState.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia nazwę <see cref="T:System.Windows.VisualState" />.</summary>
        <value>Nazwa <see cref="T:System.Windows.VisualState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Należy określić, który stan wizualny powinien zostać wprowadzony przez przekazanie <xref:System.Windows.VisualState.Name%2A> <xref:System.Windows.VisualState> elementu do <xref:System.Windows.VisualStateManager>.  
  
 Gdy jest <xref:System.Windows.Controls.Control> <xref:System.Windows.TemplateVisualStateAttribute> <xref:System.Windows.VisualState> <xref:System.Windows.Controls.ControlTemplate> używany w <xref:System.Windows.VisualStateManager> <xref:System.Windows.Controls.ControlTemplate>, autor kontrolki powinien określać obiekty, które oczekuje na znalezienie przez formant przez umieszczenie na jego sygnatury klasy. <xref:System.Windows.Controls.ControlTemplate>autorzy definiują nowe <xref:System.Windows.VisualState> obiekty i <xref:System.Windows.VisualState.Name%2A> ustawiają właściwość na wartość określoną przez <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> właściwość.  
  
 Aby znaleźć nazwy stanów wizualnych dla formantów, które są dołączone do [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], zobacz [Style i szablony kontrolek](~/docs/framework/wpf/controls/control-styles-and-templates.md). Aby uzyskać informacje na temat sposobu tworzenia <xref:System.Windows.Controls.ControlTemplate> obiektów <xref:System.Windows.VisualState> i dla istniejących kontrolek, zobacz [Dostosowywanie wyglądu istniejącej kontrolki przez utworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
   
  
## Examples  
 Poniższy <xref:System.Windows.VisualStateGroup> przykład tworzy obiekt <xref:System.Windows.Controls.ControlTemplate> w <xref:System.Windows.Controls.Button> obiekcie o nazwie `CommonStates` i dodaje <xref:System.Windows.VisualState> obiekty dla Stanów, `Normal`, `Pressed`i `MouseOver`. Definiuje również stan o `Disabled` nazwie <xref:System.Windows.VisualStateGroup>, który znajduje się w `CommonStates`, ale przykład pomija go dla zwięzłości. <xref:System.Windows.Controls.Button> Dla całego przykładu, zobacz [Dostosowywanie wyglądu istniejącej kontrolki przez utworzenie ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualState.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Pobiera lub ustawia <see cref="T:System.Windows.Media.Animation.Storyboard" /> , który definiuje wygląd formantu, gdy znajduje się on w stanie, który jest reprezentowany <see cref="T:System.Windows.VisualState" />przez.</summary>
        <value>Scenorys definiujący wygląd formantu, gdy znajduje się on w stanie, który jest reprezentowany przez <see cref="T:System.Windows.VisualState" />. Wartość domyślna to <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gdy kontrolka przejdzie do stanu, który jest określony <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> przez właściwość <xref:System.Windows.VisualState.Storyboard%2A> , rozpocznie się. Gdy kontrolka opuszcza stan, <xref:System.Windows.VisualState.Storyboard%2A> zostaje zatrzymana.  
  
   
  
## Examples  
 Poniższy przykład tworzy prostą <xref:System.Windows.Controls.ControlTemplate> dla elementu <xref:System.Windows.Controls.Button> , który zawiera jeden <xref:System.Windows.Controls.Grid>.  Wywołana ma scenorys, który <xref:System.Windows.Controls.Grid> zmienia kolor z koloru od zielonej na czerwony, <xref:System.Windows.Controls.Button>gdy użytkownik umieści wskaźnik myszy nad. `MouseOver` <xref:System.Windows.VisualState>  <xref:System.Windows.VisualState> Wywołana <xref:System.Windows.Controls.Grid> funkcja jest dołączana, tak że gdy użytkownik przesuwa mysz po przycisku, wraca do zielonego. `Normal`  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
