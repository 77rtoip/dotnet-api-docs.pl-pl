<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LogicalTreeHelper.xml" source-language="en-US" target-language="pl-PL">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f2fd27ad4c537a177069b372af2f1a949e102361.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2fd27ad4c537a177069b372af2f1a949e102361</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.LogicalTreeHelper">
          <source>Provides static helper methods for querying objects in the logical tree.</source>
          <target state="translated">Udostępnia metody statyczne pomocy do wykonywania zapytań obiektów w drzewie logicznym.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>The <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph> class provides methods that you can use to return child collections of objects, or specific objects from within subnodes of the logical tree.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph> Klasa dostarcza metody, które służy do zwracania kolekcje elementów podrzędnych obiektów lub określonych obiektów z następującego źródła w ramach węzły podrzędne drzewa logicznego.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>However, most of the object tree operations that you typically perform are also exposed by similar methods or properties on <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.</source>
          <target state="translated">Jednak większość operacji drzewa obiektów, które należy na ogół wykonać są również widoczne przy użyciu podobnych metod i właściwości na <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> lub <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>For example, try the following:</source>
          <target state="translated">Na przykład spróbować wykonać następujące czynności:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>Instead of calling the static <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.GetChildren%2A&gt;</ph> method, which returns an enumerator for the logical child objects, use the dedicated collection exposed in the content model for that object.</source>
          <target state="translated">Zamiast wywoływania statycznych <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.GetChildren%2A&gt;</ph> metodę, która zwraca moduł wyliczający dla logicznym podrzędnym obiektów, użyć dedykowanego kolekcji w modelu zawartości dla tego obiektu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>Nearly all objects that support a content model expose some property that contains the collection of child objects, and provides collection interface support directly on that collection.</source>
          <target state="translated">Prawie wszystkie obiekty, które obsługują model zawartości ujawnia niektóre właściwości, który zawiera kolekcję obiektów podrzędnych, a także Obsługa interfejsu kolekcji bezpośrednio w tej kolekcji.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>Instead of calling the static <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> method to obtain a child object by specifying its name, call the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType&gt;</ph> method on specific objects.</source>
          <target state="translated">Zamiast wywoływania statycznych <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> metodę, aby uzyskać obiekt podrzędny, określając jej nazwę, wywołanie <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType&gt;</ph> lub <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType&gt;</ph> metody w określonych obiektach.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source><ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph> is most useful for analysis scenarios where you are traveling up or down the logical tree recursively through multiple levels, and want to use a consistent approach for examining the various parent or child objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph> jest najbardziej przydatna dla scenariuszy analizy, gdzie są podróży w górę lub w dół rekursywnie drzewa logicznego za pośrednictwem różnych poziomach i chcesz użyć spójnego podejścia do badania różnych obiektów nadrzędnych i podrzędnych.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LogicalTreeHelper">
          <source>In this case, you might be accessing a mixture of content models, and using the more content-model specific APIs would be too complex.</source>
          <target state="translated">W takim przypadku może korzystać kombinację modeli zawartości określonych i przy użyciu więcej modelu zawartości poszczególnych interfejsów API byłoby zbyt złożone.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
          <source>The UI element to bring into view.</source>
          <target state="translated">Element interfejsu użytkownika, aby przełączyć do widoku.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
          <source>Attempts to bring the requested UI element into view and raises the <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /&gt;</ph> event on the target in order to report the results.</source>
          <target state="translated">Próbuje przełączyć do widoku żądanego elementu interfejsu użytkownika i zgłasza <ph id="ph1">&lt;see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /&gt;</ph> zdarzeń w celu celu raportuje o wynikach.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
          <source>It is typically more convenient to call the instance methods <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType&gt;</ph> rather than this static utility method.</source>
          <target state="translated">Jest to zazwyczaj bardziej wygodne do wywołania metody wystąpienia <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType&gt;</ph> lub <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType&gt;</ph> zamiast tej metody statycznej narzędzia.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
          <source>The behavior of the instance methods is equivalent to the behavior of the static method.</source>
          <target state="translated">Zachowanie metody wystąpienia jest odpowiednikiem zachowanie metody statycznej.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
          <source>Even if the <ph id="ph1">`current`</ph> UI element provided was a <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>, the resulting event is still the same <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType&gt;</ph> event, with the originating <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> identifiable by checking the event data of the event.</source>
          <target state="translated">Nawet wtedy, gdy <ph id="ph1">`current`</ph> został dostarczony element interfejsu użytkownika <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>, wynikowy zdarzeń jest taka sama <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType&gt;</ph> zdarzeń z źródłowym <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> zidentyfikować przez sprawdzenie danych zdarzenia zdarzenia.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The object to start searching from.</source>
          <target state="translated">Obiekt się rozpocząć wyszukiwanie z.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>This object must be either a <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> or a <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>.</source>
          <target state="translated">Ten obiekt musi być równa albo <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> lub <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The name of the object to find.</source>
          <target state="translated">Nazwa obiektu można znaleźć.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>Attempts to find and return an object that has the specified name.</source>
          <target state="translated">Próbuje znaleźć i zwraca obiekt, który ma określoną nazwę.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The search starts from the specified object and continues into subnodes of the logical tree.</source>
          <target state="translated">Wyszukiwanie rozpoczyna się od określonego obiektu i kontynuuje na węzły podrzędne drzewa logicznego.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The object with the matching name, if one is found; returns <ph id="ph1">&lt;see langword="null" /&gt;</ph> if no matching name was found in the logical tree.</source>
          <target state="translated">Obiekt o pasującej nazwie, jeśli został znaleziony; Zwraca <ph id="ph1">&lt;see langword="null" /&gt;</ph> Jeśli nie pasujące znaleziono nazwy w drzewie logicznym.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The methods <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType&gt;</ph> are superficially similar to <ph id="ph3">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph>, but operate by different logic:</source>
          <target state="translated">Metody <ph id="ph1">&lt;xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType&gt;</ph> i <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType&gt;</ph> przypominają pozornie <ph id="ph3">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph>, ale działają przez logikę różnych:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The search direction for <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> is toward child objects (down the tree); the search direction for the <ph id="ph2">`FindName`</ph> methods is towards parent objects (up the tree).</source>
          <target state="translated">Kierunek wyszukiwania dla <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> ku obiektów podrzędnych (niżej na drzewie); kierunek wyszukiwania dla <ph id="ph2">`FindName`</ph> metody jest kierunku obiektów nadrzędnych (w górę drzewa).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>The <ph id="ph1">`FindName`</ph> methods are governed by the concept of a XAML namescope.</source>
          <target state="translated"><ph id="ph1">`FindName`</ph> Metody są regulowane przez pojęcie XAML namescope.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>Using <ph id="ph1">`FindName`</ph> you are guaranteed that only one object of that name exists, because XAML namescopes enforce uniqueness.</source>
          <target state="translated">Przy użyciu <ph id="ph1">`FindName`</ph> ma gwarancji, że tylko jeden obiekt o tej nazwie nie istnieje, ponieważ XAML namescopes wymuszać unikatowość.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>In contrast, <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> ignores XAML namescope and might cross XAML namescope boundaries during the search.</source>
          <target state="translated">Z kolei <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A&gt;</ph> ignoruje XAML namescope i może między granicami namescope XAML podczas wyszukiwania.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>As such, there is no guarantee of uniqueness of the <ph id="ph1">`elementName`</ph> name once boundaries are crossed.</source>
          <target state="translated">Tak, nie ma żadnej gwarancji unikatowości z <ph id="ph1">`elementName`</ph> nazwy po przekroczeniu granic.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
          <source>For more information about XAML namescopes, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
          <target state="translated">Aby uzyskać więcej informacji na temat XAML namescopes, zobacz <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Windows.LogicalTreeHelper">
          <source>Returns the collection of immediate child objects of the specified object by processing the logical tree.</source>
          <target state="translated">Zwraca kolekcję obiektów podrzędnych natychmiastowego określonego obiektu przez przetwarzanie drzewa logicznego.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>The object from which to start processing the logical tree.</source>
          <target state="translated">Obiekt, z którego chcesz uruchomić przetwarzania drzewa logicznego.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>This is expected to be either a <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>.</source>
          <target state="translated">Ma to być albo <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> lub <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>Returns the collection of immediate child objects of the specified object, by processing the logical tree.</source>
          <target state="translated">Zwraca kolekcję obiektów podrzędnych natychmiastowego określonego obiektu przez przetwarzanie drzewa logicznego.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>The enumerable collection of immediate child objects from the logical tree of the specified object.</source>
          <target state="translated">Wyliczalny kolekcja obiektów podrzędnych natychmiastowego z drzewa logicznego określonego obiektu.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>Use this signature and helper method primarily when you are unsure whether <ph id="ph1">`current`</ph> is a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> and are also unsure whether that object's class supports its own content model collection.</source>
          <target state="translated">Ta metoda podpisu i pomocnika głównie w przypadku, gdy wiadomo, czy <ph id="ph1">`current`</ph> jest <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> lub <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> i są również nie wiesz, czy ten obiekt klasy obsługuje swoją własną kolekcję modelu zawartości.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>If you can determine the type of the object you are querying, check the specific content property that you know exists on that type.</source>
          <target state="translated">Jeśli można określić typu obiektu, który jest kwerenda, sprawdź, czy istnieje określonych właściwości zawartości, który znasz tego typu.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
          <source>For example, if you know that the object you are querying is an <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, check the <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt;</ph> property to get a strongly typed collection, which has collection interface support and is probably more useful than an enumerator.</source>
          <target state="translated">Na przykład, jeśli wiadomo, że obiekt wyszukując jest <ph id="ph1">&lt;xref:System.Windows.Controls.ItemsControl&gt;</ph>, sprawdź <ph id="ph2">&lt;xref:System.Windows.Controls.ItemsControl.Items%2A&gt;</ph> właściwości do pobrania silnie typizowaną kolekcją, która obsługuje interfejs kolekcji i jest prawdopodobnie bardziej użyteczne niż moduł wyliczający.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)">
          <source>The object from which to start processing the logical tree.</source>
          <target state="translated">Obiekt, z którego chcesz uruchomić przetwarzania drzewa logicznego.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)">
          <source>Returns the collection of immediate child objects of the specified <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph> by processing the logical tree.</source>
          <target state="translated">Zwraca kolekcję obiektów podrzędnych natychmiastowego określonego <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph> przez przetwarzanie drzewa logicznego.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)">
          <source>The enumerable collection of immediate child objects starting from <ph id="ph1">&lt;paramref name="current" /&gt;</ph> in the logical tree.</source>
          <target state="translated">Wyliczalny kolekcji obiektów podrzędnych natychmiastowego od <ph id="ph1">&lt;paramref name="current" /&gt;</ph> w drzewie logicznym.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)">
          <source>The object from which to start processing the logical tree.</source>
          <target state="translated">Obiekt, z którego chcesz uruchomić przetwarzania drzewa logicznego.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)">
          <source>Returns the collection of immediate child objects of the specified <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> by processing the logical tree.</source>
          <target state="translated">Zwraca kolekcję obiektów podrzędnych natychmiastowego określonego <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> przez przetwarzanie drzewa logicznego.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)">
          <source>The enumerable collection of immediate child objects starting from <ph id="ph1">&lt;paramref name="current" /&gt;</ph> in the logical tree.</source>
          <target state="translated">Wyliczalny kolekcji obiektów podrzędnych natychmiastowego od <ph id="ph1">&lt;paramref name="current" /&gt;</ph> w drzewie logicznym.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>The object to find the parent object for.</source>
          <target state="translated">Można odnaleźć obiektu nadrzędnego dla obiekt.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>This is expected to be either a <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> or a <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>.</source>
          <target state="translated">Ma to być albo <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> lub <ph id="ph2">&lt;see cref="T:System.Windows.FrameworkContentElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>Returns the parent object of the specified object by processing the logical tree.</source>
          <target state="translated">Zwraca obiekt nadrzędny określonego obiektu przez przetwarzanie drzewa logicznego.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>The requested parent object.</source>
          <target state="translated">Żądana nadrzędnego obiektu.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>This method is merely a wrapper that gets the appropriate type version (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>) of the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType&gt;</ph> property; so unless you are unable to determine the <ph id="ph5">`current`</ph> type, you might want to check the respective instance properties instead.</source>
          <target state="translated">Ta metoda jest jedynie otoka, który pobiera wersję odpowiedniego typu (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> lub <ph id="ph2">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>) z <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType&gt;</ph> lub <ph id="ph4">&lt;xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType&gt;</ph> właściwości; chyba że nie można określić <ph id="ph5">`current`</ph> typu, warto sprawdzić odpowiednie Zamiast tego wystąpienia właściwości.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>