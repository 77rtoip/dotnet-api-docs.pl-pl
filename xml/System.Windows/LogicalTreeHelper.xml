<Type Name="LogicalTreeHelper" FullName="System.Windows.LogicalTreeHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62b7945787d0b94dce6ae67c8577e1d895687cda" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="pl-PL" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36458583" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class LogicalTreeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LogicalTreeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LogicalTreeHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class LogicalTreeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogicalTreeHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type LogicalTreeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3f772-101">Udostępnia metody statyczne pomocy do wykonywania zapytań obiektów w drzewie logicznym.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f772-101">Provides static helper methods for querying objects in the logical tree.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f772-102"><xref:System.Windows.LogicalTreeHelper> Klasa dostarcza metody, które służy do zwracania kolekcje elementów podrzędnych obiektów lub określonych obiektów z następującego źródła w ramach węzły podrzędne drzewa logicznego.</span><span class="sxs-lookup"><span data-stu-id="3f772-102">The <xref:System.Windows.LogicalTreeHelper> class provides methods that you can use to return child collections of objects, or specific objects from within subnodes of the logical tree.</span></span> <span data-ttu-id="3f772-103">Jednak większość operacji drzewa obiektów, które należy na ogół wykonać są również widoczne przy użyciu podobnych metod i właściwości na <xref:System.Windows.FrameworkElement> lub <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="3f772-103">However, most of the object tree operations that you typically perform are also exposed by similar methods or properties on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="3f772-104">Na przykład spróbować wykonać następujące czynności:</span><span class="sxs-lookup"><span data-stu-id="3f772-104">For example, try the following:</span></span>  
  
-   <span data-ttu-id="3f772-105">Zamiast wywoływania statycznych <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> metodę, która zwraca moduł wyliczający dla logicznym podrzędnym obiektów, użyć dedykowanego kolekcji w modelu zawartości dla tego obiektu.</span><span class="sxs-lookup"><span data-stu-id="3f772-105">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> method, which returns an enumerator for the logical child objects, use the dedicated collection exposed in the content model for that object.</span></span> <span data-ttu-id="3f772-106">Prawie wszystkie obiekty, które obsługują model zawartości ujawnia niektóre właściwości, który zawiera kolekcję obiektów podrzędnych, a także Obsługa interfejsu kolekcji bezpośrednio w tej kolekcji.</span><span class="sxs-lookup"><span data-stu-id="3f772-106">Nearly all objects that support a content model expose some property that contains the collection of child objects, and provides collection interface support directly on that collection.</span></span>  
  
-   <span data-ttu-id="3f772-107">Zamiast wywoływania statycznych <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> metodę, aby uzyskać obiekt podrzędny, określając jej nazwę, wywołanie <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> lub <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> metody w określonych obiektach.</span><span class="sxs-lookup"><span data-stu-id="3f772-107">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> method to obtain a child object by specifying its name, call the <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> method on specific objects.</span></span>  
  
 <span data-ttu-id="3f772-108"><xref:System.Windows.LogicalTreeHelper> jest najbardziej przydatna dla scenariuszy analizy, gdzie są podróży w górę lub w dół rekursywnie drzewa logicznego za pośrednictwem różnych poziomach i chcesz użyć spójnego podejścia do badania różnych obiektów nadrzędnych i podrzędnych.</span><span class="sxs-lookup"><span data-stu-id="3f772-108"><xref:System.Windows.LogicalTreeHelper> is most useful for analysis scenarios where you are traveling up or down the logical tree recursively through multiple levels, and want to use a consistent approach for examining the various parent or child objects.</span></span> <span data-ttu-id="3f772-109">W takim przypadku może korzystać kombinację modeli zawartości określonych i przy użyciu więcej modelu zawartości poszczególnych interfejsów API byłoby zbyt złożone.</span><span class="sxs-lookup"><span data-stu-id="3f772-109">In this case, you might be accessing a mixture of content models, and using the more content-model specific APIs would be too complex.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public static void BringIntoView (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BringIntoView(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BringIntoView (current As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BringIntoView(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member BringIntoView : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.LogicalTreeHelper.BringIntoView current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="3f772-110">Element interfejsu użytkownika, aby przełączyć do widoku.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-110">The UI element to bring into view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f772-111">Próbuje przełączyć do widoku żądanego elementu interfejsu użytkownika i zgłasza <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> zdarzeń w celu celu raportuje o wynikach.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-111">Attempts to bring the requested UI element into view and raises the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> event on the target in order to report the results.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f772-112">Jest to zazwyczaj bardziej wygodne do wywołania metody wystąpienia <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> lub <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> zamiast tej metody statycznej narzędzia.</span><span class="sxs-lookup"><span data-stu-id="3f772-112">It is typically more convenient to call the instance methods <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> rather than this static utility method.</span></span> <span data-ttu-id="3f772-113">Zachowanie metody wystąpienia jest odpowiednikiem zachowanie metody statycznej.</span><span class="sxs-lookup"><span data-stu-id="3f772-113">The behavior of the instance methods is equivalent to the behavior of the static method.</span></span>  
  
 <span data-ttu-id="3f772-114">Nawet wtedy, gdy `current` został dostarczony element interfejsu użytkownika <xref:System.Windows.FrameworkContentElement>, wynikowy zdarzeń jest taka sama <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> zdarzeń z źródłowym <xref:System.Windows.FrameworkContentElement> zidentyfikować przez sprawdzenie danych zdarzenia zdarzenia.</span><span class="sxs-lookup"><span data-stu-id="3f772-114">Even if the `current` UI element provided was a <xref:System.Windows.FrameworkContentElement>, the resulting event is still the same <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> event, with the originating <xref:System.Windows.FrameworkContentElement> identifiable by checking the event data of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />
      </Docs>
    </Member>
    <Member MemberName="FindLogicalNode">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject FindLogicalNode(class System.Windows.DependencyObject logicalTreeNode, string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLogicalNode (logicalTreeNode As DependencyObject, elementName As String) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ FindLogicalNode(System::Windows::DependencyObject ^ logicalTreeNode, System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="static member FindLogicalNode : System.Windows.DependencyObject * string -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.FindLogicalNode (logicalTreeNode, elementName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalTreeNode" Type="System.Windows.DependencyObject" />
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logicalTreeNode">
          <span data-ttu-id="3f772-115">Obiekt się rozpocząć wyszukiwanie z.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-115">The object to start searching from.</span>
          </span>
          <span data-ttu-id="3f772-116">Ten obiekt musi być równa albo <see cref="T:System.Windows.FrameworkElement" /> lub <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-116">This object must be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          </span>
        </param>
        <param name="elementName">
          <span data-ttu-id="3f772-117">Nazwa obiektu można znaleźć.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-117">The name of the object to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f772-118">Próbuje znaleźć i zwraca obiekt, który ma określoną nazwę.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-118">Attempts to find and return an object that has the specified name.</span>
          </span>
          <span data-ttu-id="3f772-119">Wyszukiwanie rozpoczyna się od określonego obiektu i kontynuuje na węzły podrzędne drzewa logicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-119">The search starts from the specified object and continues into subnodes of the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f772-120">Obiekt o pasującej nazwie, jeśli został znaleziony; Zwraca <see langword="null" /> Jeśli nie pasujące znaleziono nazwy w drzewie logicznym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-120">The object with the matching name, if one is found; returns <see langword="null" /> if no matching name was found in the logical tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f772-121">Metody <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> i <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> przypominają pozornie <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>, ale działają przez logikę różnych:</span><span class="sxs-lookup"><span data-stu-id="3f772-121">The methods <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> and <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> are superficially similar to <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>, but operate by different logic:</span></span>  
  
-   <span data-ttu-id="3f772-122">Kierunek wyszukiwania dla <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> ku obiektów podrzędnych (niżej na drzewie); kierunek wyszukiwania dla `FindName` metody jest kierunku obiektów nadrzędnych (w górę drzewa).</span><span class="sxs-lookup"><span data-stu-id="3f772-122">The search direction for <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> is toward child objects (down the tree); the search direction for the `FindName` methods is towards parent objects (up the tree).</span></span>  
  
-   <span data-ttu-id="3f772-123">`FindName` Metody są regulowane przez pojęcie XAML namescope.</span><span class="sxs-lookup"><span data-stu-id="3f772-123">The `FindName` methods are governed by the concept of a XAML namescope.</span></span> <span data-ttu-id="3f772-124">Przy użyciu `FindName` ma gwarancji, że tylko jeden obiekt o tej nazwie nie istnieje, ponieważ XAML namescopes wymuszać unikatowość.</span><span class="sxs-lookup"><span data-stu-id="3f772-124">Using `FindName` you are guaranteed that only one object of that name exists, because XAML namescopes enforce uniqueness.</span></span> <span data-ttu-id="3f772-125">Z kolei <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> ignoruje XAML namescope i może między granicami namescope XAML podczas wyszukiwania.</span><span class="sxs-lookup"><span data-stu-id="3f772-125">In contrast, <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> ignores XAML namescope and might cross XAML namescope boundaries during the search.</span></span> <span data-ttu-id="3f772-126">Tak, nie ma żadnej gwarancji unikatowości z `elementName` nazwy po przekroczeniu granic.</span><span class="sxs-lookup"><span data-stu-id="3f772-126">As such, there is no guarantee of uniqueness of the `elementName` name once boundaries are crossed.</span></span> <span data-ttu-id="3f772-127">Aby uzyskać więcej informacji na temat XAML namescopes, zobacz [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="3f772-127">For more information about XAML namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildren">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3f772-128">Zwraca kolekcję obiektów podrzędnych natychmiastowego określonego obiektu przez przetwarzanie drzewa logicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-128">Returns the collection of immediate child objects of the specified object by processing the logical tree.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As DependencyObject) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.DependencyObject -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="3f772-129">Obiekt, z którego chcesz uruchomić przetwarzania drzewa logicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-129">The object from which to start processing the logical tree.</span>
          </span>
          <span data-ttu-id="3f772-130">Ma to być albo <see cref="T:System.Windows.FrameworkElement" /> lub <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-130">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f772-131">Zwraca kolekcję obiektów podrzędnych natychmiastowego określonego obiektu przez przetwarzanie drzewa logicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-131">Returns the collection of immediate child objects of the specified object, by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f772-132">Wyliczalny kolekcja obiektów podrzędnych natychmiastowego z drzewa logicznego określonego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-132">The enumerable collection of immediate child objects from the logical tree of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f772-133">Ta metoda podpisu i pomocnika głównie w przypadku, gdy wiadomo, czy `current` jest <xref:System.Windows.FrameworkElement> lub <xref:System.Windows.FrameworkContentElement> i są również nie wiesz, czy ten obiekt klasy obsługuje swoją własną kolekcję modelu zawartości.</span><span class="sxs-lookup"><span data-stu-id="3f772-133">Use this signature and helper method primarily when you are unsure whether `current` is a <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> and are also unsure whether that object's class supports its own content model collection.</span></span> <span data-ttu-id="3f772-134">Jeśli można określić typu obiektu, który jest kwerenda, sprawdź, czy istnieje określonych właściwości zawartości, który znasz tego typu.</span><span class="sxs-lookup"><span data-stu-id="3f772-134">If you can determine the type of the object you are querying, check the specific content property that you know exists on that type.</span></span> <span data-ttu-id="3f772-135">Na przykład, jeśli wiadomo, że obiekt wyszukując jest <xref:System.Windows.Controls.ItemsControl>, sprawdź <xref:System.Windows.Controls.ItemsControl.Items%2A> właściwości do pobrania silnie typizowaną kolekcją, która obsługuje interfejs kolekcji i jest prawdopodobnie bardziej użyteczne niż moduł wyliczający.</span><span class="sxs-lookup"><span data-stu-id="3f772-135">For example, if you know that the object you are querying is an <xref:System.Windows.Controls.ItemsControl>, check the <xref:System.Windows.Controls.ItemsControl.Items%2A> property to get a strongly typed collection, which has collection interface support and is probably more useful than an enumerator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkContentElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkContentElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkContentElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkContentElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="3f772-136">Obiekt, z którego chcesz uruchomić przetwarzania drzewa logicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-136">The object from which to start processing the logical tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f772-137">Zwraca kolekcję obiektów podrzędnych natychmiastowego określonego <see cref="T:System.Windows.FrameworkContentElement" /> przez przetwarzanie drzewa logicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-137">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkContentElement" /> by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f772-138">Wyliczalny kolekcji obiektów podrzędnych natychmiastowego od <paramref name="current" /> w drzewie logicznym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-138">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="3f772-139">Obiekt, z którego chcesz uruchomić przetwarzania drzewa logicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-139">The object from which to start processing the logical tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f772-140">Zwraca kolekcję obiektów podrzędnych natychmiastowego określonego <see cref="T:System.Windows.FrameworkElement" /> przez przetwarzanie drzewa logicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-140">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkElement" /> by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f772-141">Wyliczalny kolekcji obiektów podrzędnych natychmiastowego od <paramref name="current" /> w drzewie logicznym.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-141">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetParent(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParent (current As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetParent(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetParent : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.GetParent current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="3f772-142">Można odnaleźć obiektu nadrzędnego dla obiekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-142">The object to find the parent object for.</span>
          </span>
          <span data-ttu-id="3f772-143">Ma to być albo <see cref="T:System.Windows.FrameworkElement" /> lub <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-143">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f772-144">Zwraca obiekt nadrzędny określonego obiektu przez przetwarzanie drzewa logicznego.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-144">Returns the parent object of the specified object by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f772-145">Żądana nadrzędnego obiektu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f772-145">The requested parent object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f772-146">Ta metoda jest jedynie otoka, który pobiera wersję odpowiedniego typu (<xref:System.Windows.FrameworkElement> lub <xref:System.Windows.FrameworkContentElement>) z <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> lub <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> właściwości; chyba że nie można określić `current` typu, warto sprawdzić odpowiednie Zamiast tego wystąpienia właściwości.</span><span class="sxs-lookup"><span data-stu-id="3f772-146">This method is merely a wrapper that gets the appropriate type version (<xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>) of the <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> property; so unless you are unable to determine the `current` type, you might want to check the respective instance properties instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>